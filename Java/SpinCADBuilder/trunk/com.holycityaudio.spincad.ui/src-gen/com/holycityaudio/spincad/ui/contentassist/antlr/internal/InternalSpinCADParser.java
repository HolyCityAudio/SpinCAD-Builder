package com.holycityaudio.spincad.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.holycityaudio.spincad.services.SpinCADGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalSpinCADParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_SC_COMMENT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'#'", "'^'", "'+'", "'-'", "'@name'", "'@audioInput'", "'@audioOutput'", "'@controlInput'", "'@controlOutput'", "'equ'", "'mem'", "'offset'", "':'", "'@isPinConnected'", "'@else'", "'@endif'", "'@getInputDefault'", "'@getDelayScaleControl'", "'@getBaseAddress'", "'@setOutputPin'", "'rdax'", "','", "'wrlx'", "'wrhx'", "'wrax'", "'maxx'", "'rdfx'", "'mulx'", "'ldax'", "'exp'", "'log'", "'sof'", "'wra'", "'wrap'", "'rda'", "'wlds'", "'wldr'", "'cho rda'", "'cho rdal'", "'cho sof'", "'rmpa'", "'and'", "'or'", "'xor'", "'jam'", "'clr'", "'not'", "'absa'", "'skp'", "'.'", "'|'", "'%'", "'$'"
    };
    public static final int RULE_SC_COMMENT=6;
    public static final int RULE_ID=4;
    public static final int T__64=64;
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__62=62;
    public static final int T__27=27;
    public static final int T__63=63;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int EOF=-1;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__19=19;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__16=16;
    public static final int T__52=52;
    public static final int T__15=15;
    public static final int T__53=53;
    public static final int T__18=18;
    public static final int T__54=54;
    public static final int T__17=17;
    public static final int T__12=12;
    public static final int T__14=14;
    public static final int T__13=13;
    public static final int T__59=59;
    public static final int RULE_INT=5;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_SL_COMMENT=9;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int RULE_STRING=7;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_WS=10;

    // delegates
    // delegators


        public InternalSpinCADParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSpinCADParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSpinCADParser.tokenNames; }
    public String getGrammarFileName() { return "../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g"; }


     
     	private SpinCADGrammarAccess grammarAccess;
     	
        public void setGrammarAccess(SpinCADGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }
        
        @Override
        protected String getValueForTokenName(String tokenName) {
        	return tokenName;
        }




    // $ANTLR start "entryRuleProgram"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:60:1: entryRuleProgram : ruleProgram EOF ;
    public final void entryRuleProgram() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:61:1: ( ruleProgram EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:62:1: ruleProgram EOF
            {
             before(grammarAccess.getProgramRule()); 
            pushFollow(FOLLOW_ruleProgram_in_entryRuleProgram61);
            ruleProgram();

            state._fsp--;

             after(grammarAccess.getProgramRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleProgram68); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProgram"


    // $ANTLR start "ruleProgram"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:69:1: ruleProgram : ( ( rule__Program__Group__0 ) ) ;
    public final void ruleProgram() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:73:2: ( ( ( rule__Program__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:74:1: ( ( rule__Program__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:74:1: ( ( rule__Program__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:75:1: ( rule__Program__Group__0 )
            {
             before(grammarAccess.getProgramAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:76:1: ( rule__Program__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:76:2: rule__Program__Group__0
            {
            pushFollow(FOLLOW_rule__Program__Group__0_in_ruleProgram94);
            rule__Program__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProgram"


    // $ANTLR start "entryRulePin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:88:1: entryRulePin : rulePin EOF ;
    public final void entryRulePin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:89:1: ( rulePin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:90:1: rulePin EOF
            {
             before(grammarAccess.getPinRule()); 
            pushFollow(FOLLOW_rulePin_in_entryRulePin121);
            rulePin();

            state._fsp--;

             after(grammarAccess.getPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePin128); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePin"


    // $ANTLR start "rulePin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:97:1: rulePin : ( ( rule__Pin__Alternatives ) ) ;
    public final void rulePin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:101:2: ( ( ( rule__Pin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:102:1: ( ( rule__Pin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:102:1: ( ( rule__Pin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:103:1: ( rule__Pin__Alternatives )
            {
             before(grammarAccess.getPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:104:1: ( rule__Pin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:104:2: rule__Pin__Alternatives
            {
            pushFollow(FOLLOW_rule__Pin__Alternatives_in_rulePin154);
            rule__Pin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePin"


    // $ANTLR start "entryRuleInputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:116:1: entryRuleInputPin : ruleInputPin EOF ;
    public final void entryRuleInputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:117:1: ( ruleInputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:118:1: ruleInputPin EOF
            {
             before(grammarAccess.getInputPinRule()); 
            pushFollow(FOLLOW_ruleInputPin_in_entryRuleInputPin181);
            ruleInputPin();

            state._fsp--;

             after(grammarAccess.getInputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInputPin188); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInputPin"


    // $ANTLR start "ruleInputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:125:1: ruleInputPin : ( ( rule__InputPin__Alternatives ) ) ;
    public final void ruleInputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:129:2: ( ( ( rule__InputPin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:130:1: ( ( rule__InputPin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:130:1: ( ( rule__InputPin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:131:1: ( rule__InputPin__Alternatives )
            {
             before(grammarAccess.getInputPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:132:1: ( rule__InputPin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:132:2: rule__InputPin__Alternatives
            {
            pushFollow(FOLLOW_rule__InputPin__Alternatives_in_ruleInputPin214);
            rule__InputPin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInputPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInputPin"


    // $ANTLR start "entryRuleOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:144:1: entryRuleOutputPin : ruleOutputPin EOF ;
    public final void entryRuleOutputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:145:1: ( ruleOutputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:146:1: ruleOutputPin EOF
            {
             before(grammarAccess.getOutputPinRule()); 
            pushFollow(FOLLOW_ruleOutputPin_in_entryRuleOutputPin241);
            ruleOutputPin();

            state._fsp--;

             after(grammarAccess.getOutputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOutputPin248); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOutputPin"


    // $ANTLR start "ruleOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:153:1: ruleOutputPin : ( ( rule__OutputPin__Alternatives ) ) ;
    public final void ruleOutputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:157:2: ( ( ( rule__OutputPin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:158:1: ( ( rule__OutputPin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:158:1: ( ( rule__OutputPin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:159:1: ( rule__OutputPin__Alternatives )
            {
             before(grammarAccess.getOutputPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:160:1: ( rule__OutputPin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:160:2: rule__OutputPin__Alternatives
            {
            pushFollow(FOLLOW_rule__OutputPin__Alternatives_in_ruleOutputPin274);
            rule__OutputPin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getOutputPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOutputPin"


    // $ANTLR start "entryRuleAudioInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:172:1: entryRuleAudioInput : ruleAudioInput EOF ;
    public final void entryRuleAudioInput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:173:1: ( ruleAudioInput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:174:1: ruleAudioInput EOF
            {
             before(grammarAccess.getAudioInputRule()); 
            pushFollow(FOLLOW_ruleAudioInput_in_entryRuleAudioInput301);
            ruleAudioInput();

            state._fsp--;

             after(grammarAccess.getAudioInputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAudioInput308); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAudioInput"


    // $ANTLR start "ruleAudioInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:181:1: ruleAudioInput : ( ( rule__AudioInput__Group__0 ) ) ;
    public final void ruleAudioInput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:185:2: ( ( ( rule__AudioInput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:186:1: ( ( rule__AudioInput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:186:1: ( ( rule__AudioInput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:187:1: ( rule__AudioInput__Group__0 )
            {
             before(grammarAccess.getAudioInputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:188:1: ( rule__AudioInput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:188:2: rule__AudioInput__Group__0
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__0_in_ruleAudioInput334);
            rule__AudioInput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAudioInput"


    // $ANTLR start "entryRuleAudioOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:200:1: entryRuleAudioOutput : ruleAudioOutput EOF ;
    public final void entryRuleAudioOutput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:201:1: ( ruleAudioOutput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:202:1: ruleAudioOutput EOF
            {
             before(grammarAccess.getAudioOutputRule()); 
            pushFollow(FOLLOW_ruleAudioOutput_in_entryRuleAudioOutput361);
            ruleAudioOutput();

            state._fsp--;

             after(grammarAccess.getAudioOutputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAudioOutput368); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAudioOutput"


    // $ANTLR start "ruleAudioOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:209:1: ruleAudioOutput : ( ( rule__AudioOutput__Group__0 ) ) ;
    public final void ruleAudioOutput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:213:2: ( ( ( rule__AudioOutput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:214:1: ( ( rule__AudioOutput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:214:1: ( ( rule__AudioOutput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:215:1: ( rule__AudioOutput__Group__0 )
            {
             before(grammarAccess.getAudioOutputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:216:1: ( rule__AudioOutput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:216:2: rule__AudioOutput__Group__0
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__0_in_ruleAudioOutput394);
            rule__AudioOutput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAudioOutput"


    // $ANTLR start "entryRuleControlInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:228:1: entryRuleControlInput : ruleControlInput EOF ;
    public final void entryRuleControlInput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:229:1: ( ruleControlInput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:230:1: ruleControlInput EOF
            {
             before(grammarAccess.getControlInputRule()); 
            pushFollow(FOLLOW_ruleControlInput_in_entryRuleControlInput421);
            ruleControlInput();

            state._fsp--;

             after(grammarAccess.getControlInputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControlInput428); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControlInput"


    // $ANTLR start "ruleControlInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:237:1: ruleControlInput : ( ( rule__ControlInput__Group__0 ) ) ;
    public final void ruleControlInput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:241:2: ( ( ( rule__ControlInput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:242:1: ( ( rule__ControlInput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:242:1: ( ( rule__ControlInput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:243:1: ( rule__ControlInput__Group__0 )
            {
             before(grammarAccess.getControlInputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:244:1: ( rule__ControlInput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:244:2: rule__ControlInput__Group__0
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__0_in_ruleControlInput454);
            rule__ControlInput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControlInput"


    // $ANTLR start "entryRuleControlOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:256:1: entryRuleControlOutput : ruleControlOutput EOF ;
    public final void entryRuleControlOutput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:257:1: ( ruleControlOutput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:258:1: ruleControlOutput EOF
            {
             before(grammarAccess.getControlOutputRule()); 
            pushFollow(FOLLOW_ruleControlOutput_in_entryRuleControlOutput481);
            ruleControlOutput();

            state._fsp--;

             after(grammarAccess.getControlOutputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControlOutput488); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControlOutput"


    // $ANTLR start "ruleControlOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:265:1: ruleControlOutput : ( ( rule__ControlOutput__Group__0 ) ) ;
    public final void ruleControlOutput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:269:2: ( ( ( rule__ControlOutput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:270:1: ( ( rule__ControlOutput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:270:1: ( ( rule__ControlOutput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:271:1: ( rule__ControlOutput__Group__0 )
            {
             before(grammarAccess.getControlOutputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:272:1: ( rule__ControlOutput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:272:2: rule__ControlOutput__Group__0
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__0_in_ruleControlOutput514);
            rule__ControlOutput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControlOutput"


    // $ANTLR start "entryRuleSpinElement"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:284:1: entryRuleSpinElement : ruleSpinElement EOF ;
    public final void entryRuleSpinElement() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:285:1: ( ruleSpinElement EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:286:1: ruleSpinElement EOF
            {
             before(grammarAccess.getSpinElementRule()); 
            pushFollow(FOLLOW_ruleSpinElement_in_entryRuleSpinElement541);
            ruleSpinElement();

            state._fsp--;

             after(grammarAccess.getSpinElementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSpinElement548); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpinElement"


    // $ANTLR start "ruleSpinElement"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:293:1: ruleSpinElement : ( ( rule__SpinElement__Alternatives ) ) ;
    public final void ruleSpinElement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:297:2: ( ( ( rule__SpinElement__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:298:1: ( ( rule__SpinElement__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:298:1: ( ( rule__SpinElement__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:299:1: ( rule__SpinElement__Alternatives )
            {
             before(grammarAccess.getSpinElementAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:300:1: ( rule__SpinElement__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:300:2: rule__SpinElement__Alternatives
            {
            pushFollow(FOLLOW_rule__SpinElement__Alternatives_in_ruleSpinElement574);
            rule__SpinElement__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSpinElementAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpinElement"


    // $ANTLR start "entryRuleEquate"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:312:1: entryRuleEquate : ruleEquate EOF ;
    public final void entryRuleEquate() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:313:1: ( ruleEquate EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:314:1: ruleEquate EOF
            {
             before(grammarAccess.getEquateRule()); 
            pushFollow(FOLLOW_ruleEquate_in_entryRuleEquate601);
            ruleEquate();

            state._fsp--;

             after(grammarAccess.getEquateRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleEquate608); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquate"


    // $ANTLR start "ruleEquate"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:321:1: ruleEquate : ( ( rule__Equate__Group__0 ) ) ;
    public final void ruleEquate() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:325:2: ( ( ( rule__Equate__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:326:1: ( ( rule__Equate__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:326:1: ( ( rule__Equate__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:327:1: ( rule__Equate__Group__0 )
            {
             before(grammarAccess.getEquateAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:328:1: ( rule__Equate__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:328:2: rule__Equate__Group__0
            {
            pushFollow(FOLLOW_rule__Equate__Group__0_in_ruleEquate634);
            rule__Equate__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquate"


    // $ANTLR start "entryRuleMem"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:340:1: entryRuleMem : ruleMem EOF ;
    public final void entryRuleMem() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:341:1: ( ruleMem EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:342:1: ruleMem EOF
            {
             before(grammarAccess.getMemRule()); 
            pushFollow(FOLLOW_ruleMem_in_entryRuleMem661);
            ruleMem();

            state._fsp--;

             after(grammarAccess.getMemRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMem668); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMem"


    // $ANTLR start "ruleMem"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:349:1: ruleMem : ( ( rule__Mem__Group__0 ) ) ;
    public final void ruleMem() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:353:2: ( ( ( rule__Mem__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:354:1: ( ( rule__Mem__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:354:1: ( ( rule__Mem__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:355:1: ( rule__Mem__Group__0 )
            {
             before(grammarAccess.getMemAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:356:1: ( rule__Mem__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:356:2: rule__Mem__Group__0
            {
            pushFollow(FOLLOW_rule__Mem__Group__0_in_ruleMem694);
            rule__Mem__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMem"


    // $ANTLR start "entryRuleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:368:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:369:1: ( ruleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:370:1: ruleOffset EOF
            {
             before(grammarAccess.getOffsetRule()); 
            pushFollow(FOLLOW_ruleOffset_in_entryRuleOffset721);
            ruleOffset();

            state._fsp--;

             after(grammarAccess.getOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOffset728); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:377:1: ruleOffset : ( ( rule__Offset__Group__0 ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:381:2: ( ( ( rule__Offset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:382:1: ( ( rule__Offset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:382:1: ( ( rule__Offset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:383:1: ( rule__Offset__Group__0 )
            {
             before(grammarAccess.getOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:384:1: ( rule__Offset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:384:2: rule__Offset__Group__0
            {
            pushFollow(FOLLOW_rule__Offset__Group__0_in_ruleOffset754);
            rule__Offset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleComment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:396:1: entryRuleComment : ruleComment EOF ;
    public final void entryRuleComment() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:397:1: ( ruleComment EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:398:1: ruleComment EOF
            {
             before(grammarAccess.getCommentRule()); 
            pushFollow(FOLLOW_ruleComment_in_entryRuleComment781);
            ruleComment();

            state._fsp--;

             after(grammarAccess.getCommentRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleComment788); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:405:1: ruleComment : ( ( rule__Comment__RemarkAssignment ) ) ;
    public final void ruleComment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:409:2: ( ( ( rule__Comment__RemarkAssignment ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:410:1: ( ( rule__Comment__RemarkAssignment ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:410:1: ( ( rule__Comment__RemarkAssignment ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:411:1: ( rule__Comment__RemarkAssignment )
            {
             before(grammarAccess.getCommentAccess().getRemarkAssignment()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:412:1: ( rule__Comment__RemarkAssignment )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:412:2: rule__Comment__RemarkAssignment
            {
            pushFollow(FOLLOW_rule__Comment__RemarkAssignment_in_ruleComment814);
            rule__Comment__RemarkAssignment();

            state._fsp--;


            }

             after(grammarAccess.getCommentAccess().getRemarkAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRuleLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:424:1: entryRuleLabel : ruleLabel EOF ;
    public final void entryRuleLabel() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:425:1: ( ruleLabel EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:426:1: ruleLabel EOF
            {
             before(grammarAccess.getLabelRule()); 
            pushFollow(FOLLOW_ruleLabel_in_entryRuleLabel841);
            ruleLabel();

            state._fsp--;

             after(grammarAccess.getLabelRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabel848); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:433:1: ruleLabel : ( ( rule__Label__Group__0 ) ) ;
    public final void ruleLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:437:2: ( ( ( rule__Label__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:438:1: ( ( rule__Label__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:438:1: ( ( rule__Label__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:439:1: ( rule__Label__Group__0 )
            {
             before(grammarAccess.getLabelAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:440:1: ( rule__Label__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:440:2: rule__Label__Group__0
            {
            pushFollow(FOLLOW_rule__Label__Group__0_in_ruleLabel874);
            rule__Label__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleMacro"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:452:1: entryRuleMacro : ruleMacro EOF ;
    public final void entryRuleMacro() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:453:1: ( ruleMacro EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:454:1: ruleMacro EOF
            {
             before(grammarAccess.getMacroRule()); 
            pushFollow(FOLLOW_ruleMacro_in_entryRuleMacro901);
            ruleMacro();

            state._fsp--;

             after(grammarAccess.getMacroRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMacro908); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMacro"


    // $ANTLR start "ruleMacro"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:461:1: ruleMacro : ( ( rule__Macro__Alternatives ) ) ;
    public final void ruleMacro() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:465:2: ( ( ( rule__Macro__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:466:1: ( ( rule__Macro__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:466:1: ( ( rule__Macro__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:467:1: ( rule__Macro__Alternatives )
            {
             before(grammarAccess.getMacroAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:468:1: ( rule__Macro__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:468:2: rule__Macro__Alternatives
            {
            pushFollow(FOLLOW_rule__Macro__Alternatives_in_ruleMacro934);
            rule__Macro__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getMacroAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMacro"


    // $ANTLR start "entryRuleIsPinConnected"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:480:1: entryRuleIsPinConnected : ruleIsPinConnected EOF ;
    public final void entryRuleIsPinConnected() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:481:1: ( ruleIsPinConnected EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:482:1: ruleIsPinConnected EOF
            {
             before(grammarAccess.getIsPinConnectedRule()); 
            pushFollow(FOLLOW_ruleIsPinConnected_in_entryRuleIsPinConnected961);
            ruleIsPinConnected();

            state._fsp--;

             after(grammarAccess.getIsPinConnectedRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsPinConnected968); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsPinConnected"


    // $ANTLR start "ruleIsPinConnected"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:489:1: ruleIsPinConnected : ( ( rule__IsPinConnected__Group__0 ) ) ;
    public final void ruleIsPinConnected() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:493:2: ( ( ( rule__IsPinConnected__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:494:1: ( ( rule__IsPinConnected__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:494:1: ( ( rule__IsPinConnected__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:495:1: ( rule__IsPinConnected__Group__0 )
            {
             before(grammarAccess.getIsPinConnectedAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:496:1: ( rule__IsPinConnected__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:496:2: rule__IsPinConnected__Group__0
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__0_in_ruleIsPinConnected994);
            rule__IsPinConnected__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsPinConnectedAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsPinConnected"


    // $ANTLR start "entryRuleIsElse"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:508:1: entryRuleIsElse : ruleIsElse EOF ;
    public final void entryRuleIsElse() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:509:1: ( ruleIsElse EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:510:1: ruleIsElse EOF
            {
             before(grammarAccess.getIsElseRule()); 
            pushFollow(FOLLOW_ruleIsElse_in_entryRuleIsElse1021);
            ruleIsElse();

            state._fsp--;

             after(grammarAccess.getIsElseRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsElse1028); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsElse"


    // $ANTLR start "ruleIsElse"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:517:1: ruleIsElse : ( ( rule__IsElse__Group__0 ) ) ;
    public final void ruleIsElse() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:521:2: ( ( ( rule__IsElse__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:522:1: ( ( rule__IsElse__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:522:1: ( ( rule__IsElse__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:523:1: ( rule__IsElse__Group__0 )
            {
             before(grammarAccess.getIsElseAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:524:1: ( rule__IsElse__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:524:2: rule__IsElse__Group__0
            {
            pushFollow(FOLLOW_rule__IsElse__Group__0_in_ruleIsElse1054);
            rule__IsElse__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsElseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsElse"


    // $ANTLR start "entryRuleIsEndif"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:536:1: entryRuleIsEndif : ruleIsEndif EOF ;
    public final void entryRuleIsEndif() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:537:1: ( ruleIsEndif EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:538:1: ruleIsEndif EOF
            {
             before(grammarAccess.getIsEndifRule()); 
            pushFollow(FOLLOW_ruleIsEndif_in_entryRuleIsEndif1081);
            ruleIsEndif();

            state._fsp--;

             after(grammarAccess.getIsEndifRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsEndif1088); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsEndif"


    // $ANTLR start "ruleIsEndif"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:545:1: ruleIsEndif : ( ( rule__IsEndif__Group__0 ) ) ;
    public final void ruleIsEndif() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:549:2: ( ( ( rule__IsEndif__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:550:1: ( ( rule__IsEndif__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:550:1: ( ( rule__IsEndif__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:551:1: ( rule__IsEndif__Group__0 )
            {
             before(grammarAccess.getIsEndifAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:552:1: ( rule__IsEndif__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:552:2: rule__IsEndif__Group__0
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__0_in_ruleIsEndif1114);
            rule__IsEndif__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsEndifAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsEndif"


    // $ANTLR start "entryRuleGetInputDefault"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:564:1: entryRuleGetInputDefault : ruleGetInputDefault EOF ;
    public final void entryRuleGetInputDefault() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:565:1: ( ruleGetInputDefault EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:566:1: ruleGetInputDefault EOF
            {
             before(grammarAccess.getGetInputDefaultRule()); 
            pushFollow(FOLLOW_ruleGetInputDefault_in_entryRuleGetInputDefault1141);
            ruleGetInputDefault();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetInputDefault1148); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetInputDefault"


    // $ANTLR start "ruleGetInputDefault"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:573:1: ruleGetInputDefault : ( ( rule__GetInputDefault__Group__0 ) ) ;
    public final void ruleGetInputDefault() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:577:2: ( ( ( rule__GetInputDefault__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:578:1: ( ( rule__GetInputDefault__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:578:1: ( ( rule__GetInputDefault__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:579:1: ( rule__GetInputDefault__Group__0 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:580:1: ( rule__GetInputDefault__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:580:2: rule__GetInputDefault__Group__0
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__0_in_ruleGetInputDefault1174);
            rule__GetInputDefault__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetInputDefault"


    // $ANTLR start "entryRuleGetDelayScaleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:592:1: entryRuleGetDelayScaleControl : ruleGetDelayScaleControl EOF ;
    public final void entryRuleGetDelayScaleControl() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:593:1: ( ruleGetDelayScaleControl EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:594:1: ruleGetDelayScaleControl EOF
            {
             before(grammarAccess.getGetDelayScaleControlRule()); 
            pushFollow(FOLLOW_ruleGetDelayScaleControl_in_entryRuleGetDelayScaleControl1201);
            ruleGetDelayScaleControl();

            state._fsp--;

             after(grammarAccess.getGetDelayScaleControlRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetDelayScaleControl1208); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetDelayScaleControl"


    // $ANTLR start "ruleGetDelayScaleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:601:1: ruleGetDelayScaleControl : ( ( rule__GetDelayScaleControl__Group__0 ) ) ;
    public final void ruleGetDelayScaleControl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:605:2: ( ( ( rule__GetDelayScaleControl__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:606:1: ( ( rule__GetDelayScaleControl__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:606:1: ( ( rule__GetDelayScaleControl__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:607:1: ( rule__GetDelayScaleControl__Group__0 )
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:608:1: ( rule__GetDelayScaleControl__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:608:2: rule__GetDelayScaleControl__Group__0
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__0_in_ruleGetDelayScaleControl1234);
            rule__GetDelayScaleControl__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleControlAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetDelayScaleControl"


    // $ANTLR start "entryRuleGetBaseAddress"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:620:1: entryRuleGetBaseAddress : ruleGetBaseAddress EOF ;
    public final void entryRuleGetBaseAddress() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:621:1: ( ruleGetBaseAddress EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:622:1: ruleGetBaseAddress EOF
            {
             before(grammarAccess.getGetBaseAddressRule()); 
            pushFollow(FOLLOW_ruleGetBaseAddress_in_entryRuleGetBaseAddress1261);
            ruleGetBaseAddress();

            state._fsp--;

             after(grammarAccess.getGetBaseAddressRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetBaseAddress1268); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetBaseAddress"


    // $ANTLR start "ruleGetBaseAddress"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:629:1: ruleGetBaseAddress : ( ( rule__GetBaseAddress__Group__0 ) ) ;
    public final void ruleGetBaseAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:633:2: ( ( ( rule__GetBaseAddress__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:634:1: ( ( rule__GetBaseAddress__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:634:1: ( ( rule__GetBaseAddress__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:635:1: ( rule__GetBaseAddress__Group__0 )
            {
             before(grammarAccess.getGetBaseAddressAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:636:1: ( rule__GetBaseAddress__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:636:2: rule__GetBaseAddress__Group__0
            {
            pushFollow(FOLLOW_rule__GetBaseAddress__Group__0_in_ruleGetBaseAddress1294);
            rule__GetBaseAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetBaseAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetBaseAddress"


    // $ANTLR start "entryRuleSetOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:648:1: entryRuleSetOutputPin : ruleSetOutputPin EOF ;
    public final void entryRuleSetOutputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:649:1: ( ruleSetOutputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:650:1: ruleSetOutputPin EOF
            {
             before(grammarAccess.getSetOutputPinRule()); 
            pushFollow(FOLLOW_ruleSetOutputPin_in_entryRuleSetOutputPin1321);
            ruleSetOutputPin();

            state._fsp--;

             after(grammarAccess.getSetOutputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSetOutputPin1328); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSetOutputPin"


    // $ANTLR start "ruleSetOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:657:1: ruleSetOutputPin : ( ( rule__SetOutputPin__Group__0 ) ) ;
    public final void ruleSetOutputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:661:2: ( ( ( rule__SetOutputPin__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:662:1: ( ( rule__SetOutputPin__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:662:1: ( ( rule__SetOutputPin__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:663:1: ( rule__SetOutputPin__Group__0 )
            {
             before(grammarAccess.getSetOutputPinAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:664:1: ( rule__SetOutputPin__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:664:2: rule__SetOutputPin__Group__0
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__0_in_ruleSetOutputPin1354);
            rule__SetOutputPin__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSetOutputPinAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSetOutputPin"


    // $ANTLR start "entryRuleInstruction"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:676:1: entryRuleInstruction : ruleInstruction EOF ;
    public final void entryRuleInstruction() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:677:1: ( ruleInstruction EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:678:1: ruleInstruction EOF
            {
             before(grammarAccess.getInstructionRule()); 
            pushFollow(FOLLOW_ruleInstruction_in_entryRuleInstruction1381);
            ruleInstruction();

            state._fsp--;

             after(grammarAccess.getInstructionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInstruction1388); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInstruction"


    // $ANTLR start "ruleInstruction"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:685:1: ruleInstruction : ( ( rule__Instruction__Alternatives ) ) ;
    public final void ruleInstruction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:689:2: ( ( ( rule__Instruction__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:690:1: ( ( rule__Instruction__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:690:1: ( ( rule__Instruction__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:691:1: ( rule__Instruction__Alternatives )
            {
             before(grammarAccess.getInstructionAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:692:1: ( rule__Instruction__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:692:2: rule__Instruction__Alternatives
            {
            pushFollow(FOLLOW_rule__Instruction__Alternatives_in_ruleInstruction1414);
            rule__Instruction__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInstructionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInstruction"


    // $ANTLR start "entryRuleInst_B6_S1_14"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:704:1: entryRuleInst_B6_S1_14 : ruleInst_B6_S1_14 EOF ;
    public final void entryRuleInst_B6_S1_14() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:705:1: ( ruleInst_B6_S1_14 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:706:1: ruleInst_B6_S1_14 EOF
            {
             before(grammarAccess.getInst_B6_S1_14Rule()); 
            pushFollow(FOLLOW_ruleInst_B6_S1_14_in_entryRuleInst_B6_S1_141441);
            ruleInst_B6_S1_14();

            state._fsp--;

             after(grammarAccess.getInst_B6_S1_14Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B6_S1_141448); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B6_S1_14"


    // $ANTLR start "ruleInst_B6_S1_14"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:713:1: ruleInst_B6_S1_14 : ( ( rule__Inst_B6_S1_14__Alternatives ) ) ;
    public final void ruleInst_B6_S1_14() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:717:2: ( ( ( rule__Inst_B6_S1_14__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:718:1: ( ( rule__Inst_B6_S1_14__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:718:1: ( ( rule__Inst_B6_S1_14__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:719:1: ( rule__Inst_B6_S1_14__Alternatives )
            {
             before(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:720:1: ( rule__Inst_B6_S1_14__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:720:2: rule__Inst_B6_S1_14__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B6_S1_14__Alternatives_in_ruleInst_B6_S1_141474);
            rule__Inst_B6_S1_14__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B6_S1_14"


    // $ANTLR start "entryRuleInst_B15_S1_9"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:732:1: entryRuleInst_B15_S1_9 : ruleInst_B15_S1_9 EOF ;
    public final void entryRuleInst_B15_S1_9() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:733:1: ( ruleInst_B15_S1_9 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:734:1: ruleInst_B15_S1_9 EOF
            {
             before(grammarAccess.getInst_B15_S1_9Rule()); 
            pushFollow(FOLLOW_ruleInst_B15_S1_9_in_entryRuleInst_B15_S1_91501);
            ruleInst_B15_S1_9();

            state._fsp--;

             after(grammarAccess.getInst_B15_S1_9Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B15_S1_91508); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B15_S1_9"


    // $ANTLR start "ruleInst_B15_S1_9"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:741:1: ruleInst_B15_S1_9 : ( ( rule__Inst_B15_S1_9__Alternatives ) ) ;
    public final void ruleInst_B15_S1_9() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:745:2: ( ( ( rule__Inst_B15_S1_9__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:746:1: ( ( rule__Inst_B15_S1_9__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:746:1: ( ( rule__Inst_B15_S1_9__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:747:1: ( rule__Inst_B15_S1_9__Alternatives )
            {
             before(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:748:1: ( rule__Inst_B15_S1_9__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:748:2: rule__Inst_B15_S1_9__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B15_S1_9__Alternatives_in_ruleInst_B15_S1_91534);
            rule__Inst_B15_S1_9__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B15_S1_9"


    // $ANTLR start "entryRuleInst_B6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:760:1: entryRuleInst_B6 : ruleInst_B6 EOF ;
    public final void entryRuleInst_B6() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:761:1: ( ruleInst_B6 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:762:1: ruleInst_B6 EOF
            {
             before(grammarAccess.getInst_B6Rule()); 
            pushFollow(FOLLOW_ruleInst_B6_in_entryRuleInst_B61561);
            ruleInst_B6();

            state._fsp--;

             after(grammarAccess.getInst_B6Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B61568); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B6"


    // $ANTLR start "ruleInst_B6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:769:1: ruleInst_B6 : ( ( rule__Inst_B6__Alternatives ) ) ;
    public final void ruleInst_B6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:773:2: ( ( ( rule__Inst_B6__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:774:1: ( ( rule__Inst_B6__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:774:1: ( ( rule__Inst_B6__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:775:1: ( rule__Inst_B6__Alternatives )
            {
             before(grammarAccess.getInst_B6Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:776:1: ( rule__Inst_B6__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:776:2: rule__Inst_B6__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B6__Alternatives_in_ruleInst_B61594);
            rule__Inst_B6__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B6Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B6"


    // $ANTLR start "entryRuleInst_B24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:788:1: entryRuleInst_B24 : ruleInst_B24 EOF ;
    public final void entryRuleInst_B24() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:789:1: ( ruleInst_B24 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:790:1: ruleInst_B24 EOF
            {
             before(grammarAccess.getInst_B24Rule()); 
            pushFollow(FOLLOW_ruleInst_B24_in_entryRuleInst_B241621);
            ruleInst_B24();

            state._fsp--;

             after(grammarAccess.getInst_B24Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B241628); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B24"


    // $ANTLR start "ruleInst_B24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:797:1: ruleInst_B24 : ( ( rule__Inst_B24__Alternatives ) ) ;
    public final void ruleInst_B24() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:801:2: ( ( ( rule__Inst_B24__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:802:1: ( ( rule__Inst_B24__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:802:1: ( ( rule__Inst_B24__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:803:1: ( rule__Inst_B24__Alternatives )
            {
             before(grammarAccess.getInst_B24Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:804:1: ( rule__Inst_B24__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:804:2: rule__Inst_B24__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B24__Alternatives_in_ruleInst_B241654);
            rule__Inst_B24__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B24Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B24"


    // $ANTLR start "entryRuleInst_X0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:816:1: entryRuleInst_X0 : ruleInst_X0 EOF ;
    public final void entryRuleInst_X0() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:817:1: ( ruleInst_X0 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:818:1: ruleInst_X0 EOF
            {
             before(grammarAccess.getInst_X0Rule()); 
            pushFollow(FOLLOW_ruleInst_X0_in_entryRuleInst_X01681);
            ruleInst_X0();

            state._fsp--;

             after(grammarAccess.getInst_X0Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_X01688); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_X0"


    // $ANTLR start "ruleInst_X0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:825:1: ruleInst_X0 : ( ( rule__Inst_X0__Alternatives ) ) ;
    public final void ruleInst_X0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:829:2: ( ( ( rule__Inst_X0__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:830:1: ( ( rule__Inst_X0__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:830:1: ( ( rule__Inst_X0__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:831:1: ( rule__Inst_X0__Alternatives )
            {
             before(grammarAccess.getInst_X0Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:832:1: ( rule__Inst_X0__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:832:2: rule__Inst_X0__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_X0__Alternatives_in_ruleInst_X01714);
            rule__Inst_X0__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_X0Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_X0"


    // $ANTLR start "entryRuleInst_S1_14_S1_10"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:844:1: entryRuleInst_S1_14_S1_10 : ruleInst_S1_14_S1_10 EOF ;
    public final void entryRuleInst_S1_14_S1_10() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:845:1: ( ruleInst_S1_14_S1_10 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:846:1: ruleInst_S1_14_S1_10 EOF
            {
             before(grammarAccess.getInst_S1_14_S1_10Rule()); 
            pushFollow(FOLLOW_ruleInst_S1_14_S1_10_in_entryRuleInst_S1_14_S1_101741);
            ruleInst_S1_14_S1_10();

            state._fsp--;

             after(grammarAccess.getInst_S1_14_S1_10Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_S1_14_S1_101748); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_S1_14_S1_10"


    // $ANTLR start "ruleInst_S1_14_S1_10"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:853:1: ruleInst_S1_14_S1_10 : ( ( rule__Inst_S1_14_S1_10__Alternatives ) ) ;
    public final void ruleInst_S1_14_S1_10() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:857:2: ( ( ( rule__Inst_S1_14_S1_10__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:858:1: ( ( rule__Inst_S1_14_S1_10__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:858:1: ( ( rule__Inst_S1_14_S1_10__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:859:1: ( rule__Inst_S1_14_S1_10__Alternatives )
            {
             before(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:860:1: ( rule__Inst_S1_14_S1_10__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:860:2: rule__Inst_S1_14_S1_10__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_S1_14_S1_10__Alternatives_in_ruleInst_S1_14_S1_101774);
            rule__Inst_S1_14_S1_10__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_S1_14_S1_10"


    // $ANTLR start "entryRuleReadRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:872:1: entryRuleReadRegister : ruleReadRegister EOF ;
    public final void entryRuleReadRegister() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:873:1: ( ruleReadRegister EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:874:1: ruleReadRegister EOF
            {
             before(grammarAccess.getReadRegisterRule()); 
            pushFollow(FOLLOW_ruleReadRegister_in_entryRuleReadRegister1801);
            ruleReadRegister();

            state._fsp--;

             after(grammarAccess.getReadRegisterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadRegister1808); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadRegister"


    // $ANTLR start "ruleReadRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:881:1: ruleReadRegister : ( ( rule__ReadRegister__Group__0 ) ) ;
    public final void ruleReadRegister() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:885:2: ( ( ( rule__ReadRegister__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:886:1: ( ( rule__ReadRegister__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:886:1: ( ( rule__ReadRegister__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:887:1: ( rule__ReadRegister__Group__0 )
            {
             before(grammarAccess.getReadRegisterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:888:1: ( rule__ReadRegister__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:888:2: rule__ReadRegister__Group__0
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__0_in_ruleReadRegister1834);
            rule__ReadRegister__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadRegister"


    // $ANTLR start "entryRuleWriteRegisterLowshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:900:1: entryRuleWriteRegisterLowshelf : ruleWriteRegisterLowshelf EOF ;
    public final void entryRuleWriteRegisterLowshelf() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:901:1: ( ruleWriteRegisterLowshelf EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:902:1: ruleWriteRegisterLowshelf EOF
            {
             before(grammarAccess.getWriteRegisterLowshelfRule()); 
            pushFollow(FOLLOW_ruleWriteRegisterLowshelf_in_entryRuleWriteRegisterLowshelf1861);
            ruleWriteRegisterLowshelf();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegisterLowshelf1868); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegisterLowshelf"


    // $ANTLR start "ruleWriteRegisterLowshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:909:1: ruleWriteRegisterLowshelf : ( ( rule__WriteRegisterLowshelf__Group__0 ) ) ;
    public final void ruleWriteRegisterLowshelf() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:913:2: ( ( ( rule__WriteRegisterLowshelf__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:914:1: ( ( rule__WriteRegisterLowshelf__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:914:1: ( ( rule__WriteRegisterLowshelf__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:915:1: ( rule__WriteRegisterLowshelf__Group__0 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:916:1: ( rule__WriteRegisterLowshelf__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:916:2: rule__WriteRegisterLowshelf__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__0_in_ruleWriteRegisterLowshelf1894);
            rule__WriteRegisterLowshelf__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegisterLowshelf"


    // $ANTLR start "entryRuleWriteRegisterHighshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:928:1: entryRuleWriteRegisterHighshelf : ruleWriteRegisterHighshelf EOF ;
    public final void entryRuleWriteRegisterHighshelf() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:929:1: ( ruleWriteRegisterHighshelf EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:930:1: ruleWriteRegisterHighshelf EOF
            {
             before(grammarAccess.getWriteRegisterHighshelfRule()); 
            pushFollow(FOLLOW_ruleWriteRegisterHighshelf_in_entryRuleWriteRegisterHighshelf1921);
            ruleWriteRegisterHighshelf();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegisterHighshelf1928); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegisterHighshelf"


    // $ANTLR start "ruleWriteRegisterHighshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:937:1: ruleWriteRegisterHighshelf : ( ( rule__WriteRegisterHighshelf__Group__0 ) ) ;
    public final void ruleWriteRegisterHighshelf() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:941:2: ( ( ( rule__WriteRegisterHighshelf__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:942:1: ( ( rule__WriteRegisterHighshelf__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:942:1: ( ( rule__WriteRegisterHighshelf__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:943:1: ( rule__WriteRegisterHighshelf__Group__0 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:944:1: ( rule__WriteRegisterHighshelf__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:944:2: rule__WriteRegisterHighshelf__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__0_in_ruleWriteRegisterHighshelf1954);
            rule__WriteRegisterHighshelf__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegisterHighshelf"


    // $ANTLR start "entryRuleWriteRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:956:1: entryRuleWriteRegister : ruleWriteRegister EOF ;
    public final void entryRuleWriteRegister() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:957:1: ( ruleWriteRegister EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:958:1: ruleWriteRegister EOF
            {
             before(grammarAccess.getWriteRegisterRule()); 
            pushFollow(FOLLOW_ruleWriteRegister_in_entryRuleWriteRegister1981);
            ruleWriteRegister();

            state._fsp--;

             after(grammarAccess.getWriteRegisterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegister1988); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegister"


    // $ANTLR start "ruleWriteRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:965:1: ruleWriteRegister : ( ( rule__WriteRegister__Group__0 ) ) ;
    public final void ruleWriteRegister() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:969:2: ( ( ( rule__WriteRegister__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:970:1: ( ( rule__WriteRegister__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:970:1: ( ( rule__WriteRegister__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:971:1: ( rule__WriteRegister__Group__0 )
            {
             before(grammarAccess.getWriteRegisterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:972:1: ( rule__WriteRegister__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:972:2: rule__WriteRegister__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__0_in_ruleWriteRegister2014);
            rule__WriteRegister__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegister"


    // $ANTLR start "entryRuleMaxx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:984:1: entryRuleMaxx : ruleMaxx EOF ;
    public final void entryRuleMaxx() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:985:1: ( ruleMaxx EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:986:1: ruleMaxx EOF
            {
             before(grammarAccess.getMaxxRule()); 
            pushFollow(FOLLOW_ruleMaxx_in_entryRuleMaxx2041);
            ruleMaxx();

            state._fsp--;

             after(grammarAccess.getMaxxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMaxx2048); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMaxx"


    // $ANTLR start "ruleMaxx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:993:1: ruleMaxx : ( ( rule__Maxx__Group__0 ) ) ;
    public final void ruleMaxx() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:997:2: ( ( ( rule__Maxx__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:998:1: ( ( rule__Maxx__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:998:1: ( ( rule__Maxx__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:999:1: ( rule__Maxx__Group__0 )
            {
             before(grammarAccess.getMaxxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1000:1: ( rule__Maxx__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1000:2: rule__Maxx__Group__0
            {
            pushFollow(FOLLOW_rule__Maxx__Group__0_in_ruleMaxx2074);
            rule__Maxx__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMaxx"


    // $ANTLR start "entryRuleReadRegisterFilter"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1012:1: entryRuleReadRegisterFilter : ruleReadRegisterFilter EOF ;
    public final void entryRuleReadRegisterFilter() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1013:1: ( ruleReadRegisterFilter EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1014:1: ruleReadRegisterFilter EOF
            {
             before(grammarAccess.getReadRegisterFilterRule()); 
            pushFollow(FOLLOW_ruleReadRegisterFilter_in_entryRuleReadRegisterFilter2101);
            ruleReadRegisterFilter();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadRegisterFilter2108); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadRegisterFilter"


    // $ANTLR start "ruleReadRegisterFilter"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1021:1: ruleReadRegisterFilter : ( ( rule__ReadRegisterFilter__Group__0 ) ) ;
    public final void ruleReadRegisterFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1025:2: ( ( ( rule__ReadRegisterFilter__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1026:1: ( ( rule__ReadRegisterFilter__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1026:1: ( ( rule__ReadRegisterFilter__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1027:1: ( rule__ReadRegisterFilter__Group__0 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1028:1: ( rule__ReadRegisterFilter__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1028:2: rule__ReadRegisterFilter__Group__0
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__0_in_ruleReadRegisterFilter2134);
            rule__ReadRegisterFilter__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadRegisterFilter"


    // $ANTLR start "entryRuleMulx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1040:1: entryRuleMulx : ruleMulx EOF ;
    public final void entryRuleMulx() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1041:1: ( ruleMulx EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1042:1: ruleMulx EOF
            {
             before(grammarAccess.getMulxRule()); 
            pushFollow(FOLLOW_ruleMulx_in_entryRuleMulx2161);
            ruleMulx();

            state._fsp--;

             after(grammarAccess.getMulxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMulx2168); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMulx"


    // $ANTLR start "ruleMulx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1049:1: ruleMulx : ( ( rule__Mulx__Group__0 ) ) ;
    public final void ruleMulx() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1053:2: ( ( ( rule__Mulx__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1054:1: ( ( rule__Mulx__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1054:1: ( ( rule__Mulx__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1055:1: ( rule__Mulx__Group__0 )
            {
             before(grammarAccess.getMulxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1056:1: ( rule__Mulx__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1056:2: rule__Mulx__Group__0
            {
            pushFollow(FOLLOW_rule__Mulx__Group__0_in_ruleMulx2194);
            rule__Mulx__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMulxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulx"


    // $ANTLR start "entryRuleLdax"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1068:1: entryRuleLdax : ruleLdax EOF ;
    public final void entryRuleLdax() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1069:1: ( ruleLdax EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1070:1: ruleLdax EOF
            {
             before(grammarAccess.getLdaxRule()); 
            pushFollow(FOLLOW_ruleLdax_in_entryRuleLdax2221);
            ruleLdax();

            state._fsp--;

             after(grammarAccess.getLdaxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLdax2228); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLdax"


    // $ANTLR start "ruleLdax"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1077:1: ruleLdax : ( ( rule__Ldax__Group__0 ) ) ;
    public final void ruleLdax() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1081:2: ( ( ( rule__Ldax__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1082:1: ( ( rule__Ldax__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1082:1: ( ( rule__Ldax__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1083:1: ( rule__Ldax__Group__0 )
            {
             before(grammarAccess.getLdaxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1084:1: ( rule__Ldax__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1084:2: rule__Ldax__Group__0
            {
            pushFollow(FOLLOW_rule__Ldax__Group__0_in_ruleLdax2254);
            rule__Ldax__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLdaxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLdax"


    // $ANTLR start "entryRuleExp"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1096:1: entryRuleExp : ruleExp EOF ;
    public final void entryRuleExp() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1097:1: ( ruleExp EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1098:1: ruleExp EOF
            {
             before(grammarAccess.getExpRule()); 
            pushFollow(FOLLOW_ruleExp_in_entryRuleExp2281);
            ruleExp();

            state._fsp--;

             after(grammarAccess.getExpRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExp2288); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExp"


    // $ANTLR start "ruleExp"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1105:1: ruleExp : ( ( rule__Exp__Group__0 ) ) ;
    public final void ruleExp() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1109:2: ( ( ( rule__Exp__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1110:1: ( ( rule__Exp__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1110:1: ( ( rule__Exp__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1111:1: ( rule__Exp__Group__0 )
            {
             before(grammarAccess.getExpAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1112:1: ( rule__Exp__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1112:2: rule__Exp__Group__0
            {
            pushFollow(FOLLOW_rule__Exp__Group__0_in_ruleExp2314);
            rule__Exp__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExp"


    // $ANTLR start "entryRuleLog"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1124:1: entryRuleLog : ruleLog EOF ;
    public final void entryRuleLog() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1125:1: ( ruleLog EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1126:1: ruleLog EOF
            {
             before(grammarAccess.getLogRule()); 
            pushFollow(FOLLOW_ruleLog_in_entryRuleLog2341);
            ruleLog();

            state._fsp--;

             after(grammarAccess.getLogRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLog2348); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLog"


    // $ANTLR start "ruleLog"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1133:1: ruleLog : ( ( rule__Log__Group__0 ) ) ;
    public final void ruleLog() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1137:2: ( ( ( rule__Log__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1138:1: ( ( rule__Log__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1138:1: ( ( rule__Log__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1139:1: ( rule__Log__Group__0 )
            {
             before(grammarAccess.getLogAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1140:1: ( rule__Log__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1140:2: rule__Log__Group__0
            {
            pushFollow(FOLLOW_rule__Log__Group__0_in_ruleLog2374);
            rule__Log__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLog"


    // $ANTLR start "entryRuleScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1152:1: entryRuleScaleOffset : ruleScaleOffset EOF ;
    public final void entryRuleScaleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1153:1: ( ruleScaleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1154:1: ruleScaleOffset EOF
            {
             before(grammarAccess.getScaleOffsetRule()); 
            pushFollow(FOLLOW_ruleScaleOffset_in_entryRuleScaleOffset2401);
            ruleScaleOffset();

            state._fsp--;

             after(grammarAccess.getScaleOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleScaleOffset2408); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScaleOffset"


    // $ANTLR start "ruleScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1161:1: ruleScaleOffset : ( ( rule__ScaleOffset__Group__0 ) ) ;
    public final void ruleScaleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1165:2: ( ( ( rule__ScaleOffset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1166:1: ( ( rule__ScaleOffset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1166:1: ( ( rule__ScaleOffset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1167:1: ( rule__ScaleOffset__Group__0 )
            {
             before(grammarAccess.getScaleOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1168:1: ( rule__ScaleOffset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1168:2: rule__ScaleOffset__Group__0
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__0_in_ruleScaleOffset2434);
            rule__ScaleOffset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScaleOffset"


    // $ANTLR start "entryRuleWriteDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1180:1: entryRuleWriteDelay : ruleWriteDelay EOF ;
    public final void entryRuleWriteDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1181:1: ( ruleWriteDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1182:1: ruleWriteDelay EOF
            {
             before(grammarAccess.getWriteDelayRule()); 
            pushFollow(FOLLOW_ruleWriteDelay_in_entryRuleWriteDelay2461);
            ruleWriteDelay();

            state._fsp--;

             after(grammarAccess.getWriteDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteDelay2468); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteDelay"


    // $ANTLR start "ruleWriteDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1189:1: ruleWriteDelay : ( ( rule__WriteDelay__Group__0 ) ) ;
    public final void ruleWriteDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1193:2: ( ( ( rule__WriteDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1194:1: ( ( rule__WriteDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1194:1: ( ( rule__WriteDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1195:1: ( rule__WriteDelay__Group__0 )
            {
             before(grammarAccess.getWriteDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1196:1: ( rule__WriteDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1196:2: rule__WriteDelay__Group__0
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__0_in_ruleWriteDelay2494);
            rule__WriteDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteDelay"


    // $ANTLR start "entryRuleWriteAllpass"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1208:1: entryRuleWriteAllpass : ruleWriteAllpass EOF ;
    public final void entryRuleWriteAllpass() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1209:1: ( ruleWriteAllpass EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1210:1: ruleWriteAllpass EOF
            {
             before(grammarAccess.getWriteAllpassRule()); 
            pushFollow(FOLLOW_ruleWriteAllpass_in_entryRuleWriteAllpass2521);
            ruleWriteAllpass();

            state._fsp--;

             after(grammarAccess.getWriteAllpassRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteAllpass2528); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteAllpass"


    // $ANTLR start "ruleWriteAllpass"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1217:1: ruleWriteAllpass : ( ( rule__WriteAllpass__Group__0 ) ) ;
    public final void ruleWriteAllpass() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1221:2: ( ( ( rule__WriteAllpass__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1222:1: ( ( rule__WriteAllpass__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1222:1: ( ( rule__WriteAllpass__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1223:1: ( rule__WriteAllpass__Group__0 )
            {
             before(grammarAccess.getWriteAllpassAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1224:1: ( rule__WriteAllpass__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1224:2: rule__WriteAllpass__Group__0
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__0_in_ruleWriteAllpass2554);
            rule__WriteAllpass__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteAllpass"


    // $ANTLR start "entryRuleReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1236:1: entryRuleReadDelay : ruleReadDelay EOF ;
    public final void entryRuleReadDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1237:1: ( ruleReadDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1238:1: ruleReadDelay EOF
            {
             before(grammarAccess.getReadDelayRule()); 
            pushFollow(FOLLOW_ruleReadDelay_in_entryRuleReadDelay2581);
            ruleReadDelay();

            state._fsp--;

             after(grammarAccess.getReadDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadDelay2588); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadDelay"


    // $ANTLR start "ruleReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1245:1: ruleReadDelay : ( ( rule__ReadDelay__Group__0 ) ) ;
    public final void ruleReadDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1249:2: ( ( ( rule__ReadDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1250:1: ( ( rule__ReadDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1250:1: ( ( rule__ReadDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1251:1: ( rule__ReadDelay__Group__0 )
            {
             before(grammarAccess.getReadDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1252:1: ( rule__ReadDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1252:2: rule__ReadDelay__Group__0
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__0_in_ruleReadDelay2614);
            rule__ReadDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadDelay"


    // $ANTLR start "entryRuleLoadSinLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1264:1: entryRuleLoadSinLFO : ruleLoadSinLFO EOF ;
    public final void entryRuleLoadSinLFO() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1265:1: ( ruleLoadSinLFO EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1266:1: ruleLoadSinLFO EOF
            {
             before(grammarAccess.getLoadSinLFORule()); 
            pushFollow(FOLLOW_ruleLoadSinLFO_in_entryRuleLoadSinLFO2641);
            ruleLoadSinLFO();

            state._fsp--;

             after(grammarAccess.getLoadSinLFORule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLoadSinLFO2648); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLoadSinLFO"


    // $ANTLR start "ruleLoadSinLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1273:1: ruleLoadSinLFO : ( ( rule__LoadSinLFO__Group__0 ) ) ;
    public final void ruleLoadSinLFO() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1277:2: ( ( ( rule__LoadSinLFO__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1278:1: ( ( rule__LoadSinLFO__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1278:1: ( ( rule__LoadSinLFO__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1279:1: ( rule__LoadSinLFO__Group__0 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1280:1: ( rule__LoadSinLFO__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1280:2: rule__LoadSinLFO__Group__0
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__0_in_ruleLoadSinLFO2674);
            rule__LoadSinLFO__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLoadSinLFO"


    // $ANTLR start "entryRuleLoadRampLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1292:1: entryRuleLoadRampLFO : ruleLoadRampLFO EOF ;
    public final void entryRuleLoadRampLFO() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1293:1: ( ruleLoadRampLFO EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1294:1: ruleLoadRampLFO EOF
            {
             before(grammarAccess.getLoadRampLFORule()); 
            pushFollow(FOLLOW_ruleLoadRampLFO_in_entryRuleLoadRampLFO2701);
            ruleLoadRampLFO();

            state._fsp--;

             after(grammarAccess.getLoadRampLFORule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLoadRampLFO2708); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLoadRampLFO"


    // $ANTLR start "ruleLoadRampLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1301:1: ruleLoadRampLFO : ( ( rule__LoadRampLFO__Group__0 ) ) ;
    public final void ruleLoadRampLFO() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1305:2: ( ( ( rule__LoadRampLFO__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1306:1: ( ( rule__LoadRampLFO__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1306:1: ( ( rule__LoadRampLFO__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1307:1: ( rule__LoadRampLFO__Group__0 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1308:1: ( rule__LoadRampLFO__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1308:2: rule__LoadRampLFO__Group__0
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__0_in_ruleLoadRampLFO2734);
            rule__LoadRampLFO__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLoadRampLFO"


    // $ANTLR start "entryRuleChorusReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1320:1: entryRuleChorusReadDelay : ruleChorusReadDelay EOF ;
    public final void entryRuleChorusReadDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1321:1: ( ruleChorusReadDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1322:1: ruleChorusReadDelay EOF
            {
             before(grammarAccess.getChorusReadDelayRule()); 
            pushFollow(FOLLOW_ruleChorusReadDelay_in_entryRuleChorusReadDelay2761);
            ruleChorusReadDelay();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusReadDelay2768); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusReadDelay"


    // $ANTLR start "ruleChorusReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1329:1: ruleChorusReadDelay : ( ( rule__ChorusReadDelay__Group__0 ) ) ;
    public final void ruleChorusReadDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1333:2: ( ( ( rule__ChorusReadDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1334:1: ( ( rule__ChorusReadDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1334:1: ( ( rule__ChorusReadDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1335:1: ( rule__ChorusReadDelay__Group__0 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1336:1: ( rule__ChorusReadDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1336:2: rule__ChorusReadDelay__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__0_in_ruleChorusReadDelay2794);
            rule__ChorusReadDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusReadDelay"


    // $ANTLR start "entryRuleChorusReadValue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1348:1: entryRuleChorusReadValue : ruleChorusReadValue EOF ;
    public final void entryRuleChorusReadValue() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1349:1: ( ruleChorusReadValue EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1350:1: ruleChorusReadValue EOF
            {
             before(grammarAccess.getChorusReadValueRule()); 
            pushFollow(FOLLOW_ruleChorusReadValue_in_entryRuleChorusReadValue2821);
            ruleChorusReadValue();

            state._fsp--;

             after(grammarAccess.getChorusReadValueRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusReadValue2828); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusReadValue"


    // $ANTLR start "ruleChorusReadValue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1357:1: ruleChorusReadValue : ( ( rule__ChorusReadValue__Group__0 ) ) ;
    public final void ruleChorusReadValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1361:2: ( ( ( rule__ChorusReadValue__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1362:1: ( ( rule__ChorusReadValue__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1362:1: ( ( rule__ChorusReadValue__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1363:1: ( rule__ChorusReadValue__Group__0 )
            {
             before(grammarAccess.getChorusReadValueAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1364:1: ( rule__ChorusReadValue__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1364:2: rule__ChorusReadValue__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__0_in_ruleChorusReadValue2854);
            rule__ChorusReadValue__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadValueAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusReadValue"


    // $ANTLR start "entryRuleChorusScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1376:1: entryRuleChorusScaleOffset : ruleChorusScaleOffset EOF ;
    public final void entryRuleChorusScaleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1377:1: ( ruleChorusScaleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1378:1: ruleChorusScaleOffset EOF
            {
             before(grammarAccess.getChorusScaleOffsetRule()); 
            pushFollow(FOLLOW_ruleChorusScaleOffset_in_entryRuleChorusScaleOffset2881);
            ruleChorusScaleOffset();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusScaleOffset2888); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusScaleOffset"


    // $ANTLR start "ruleChorusScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1385:1: ruleChorusScaleOffset : ( ( rule__ChorusScaleOffset__Group__0 ) ) ;
    public final void ruleChorusScaleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1389:2: ( ( ( rule__ChorusScaleOffset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1390:1: ( ( rule__ChorusScaleOffset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1390:1: ( ( rule__ChorusScaleOffset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1391:1: ( rule__ChorusScaleOffset__Group__0 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1392:1: ( rule__ChorusScaleOffset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1392:2: rule__ChorusScaleOffset__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__0_in_ruleChorusScaleOffset2914);
            rule__ChorusScaleOffset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusScaleOffset"


    // $ANTLR start "entryRuleReadDelayPointer"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1404:1: entryRuleReadDelayPointer : ruleReadDelayPointer EOF ;
    public final void entryRuleReadDelayPointer() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1405:1: ( ruleReadDelayPointer EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1406:1: ruleReadDelayPointer EOF
            {
             before(grammarAccess.getReadDelayPointerRule()); 
            pushFollow(FOLLOW_ruleReadDelayPointer_in_entryRuleReadDelayPointer2941);
            ruleReadDelayPointer();

            state._fsp--;

             after(grammarAccess.getReadDelayPointerRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadDelayPointer2948); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadDelayPointer"


    // $ANTLR start "ruleReadDelayPointer"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1413:1: ruleReadDelayPointer : ( ( rule__ReadDelayPointer__Group__0 ) ) ;
    public final void ruleReadDelayPointer() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1417:2: ( ( ( rule__ReadDelayPointer__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1418:1: ( ( rule__ReadDelayPointer__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1418:1: ( ( rule__ReadDelayPointer__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1419:1: ( rule__ReadDelayPointer__Group__0 )
            {
             before(grammarAccess.getReadDelayPointerAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1420:1: ( rule__ReadDelayPointer__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1420:2: rule__ReadDelayPointer__Group__0
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__0_in_ruleReadDelayPointer2974);
            rule__ReadDelayPointer__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayPointerAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadDelayPointer"


    // $ANTLR start "entryRuleAnd"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1432:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1433:1: ( ruleAnd EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1434:1: ruleAnd EOF
            {
             before(grammarAccess.getAndRule()); 
            pushFollow(FOLLOW_ruleAnd_in_entryRuleAnd3001);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getAndRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAnd3008); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1441:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1445:2: ( ( ( rule__And__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1446:1: ( ( rule__And__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1446:1: ( ( rule__And__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1447:1: ( rule__And__Group__0 )
            {
             before(grammarAccess.getAndAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1448:1: ( rule__And__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1448:2: rule__And__Group__0
            {
            pushFollow(FOLLOW_rule__And__Group__0_in_ruleAnd3034);
            rule__And__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleOr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1460:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1461:1: ( ruleOr EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1462:1: ruleOr EOF
            {
             before(grammarAccess.getOrRule()); 
            pushFollow(FOLLOW_ruleOr_in_entryRuleOr3061);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getOrRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOr3068); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1469:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1473:2: ( ( ( rule__Or__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1474:1: ( ( rule__Or__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1474:1: ( ( rule__Or__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1475:1: ( rule__Or__Group__0 )
            {
             before(grammarAccess.getOrAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1476:1: ( rule__Or__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1476:2: rule__Or__Group__0
            {
            pushFollow(FOLLOW_rule__Or__Group__0_in_ruleOr3094);
            rule__Or__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleXor"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1488:1: entryRuleXor : ruleXor EOF ;
    public final void entryRuleXor() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1489:1: ( ruleXor EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1490:1: ruleXor EOF
            {
             before(grammarAccess.getXorRule()); 
            pushFollow(FOLLOW_ruleXor_in_entryRuleXor3121);
            ruleXor();

            state._fsp--;

             after(grammarAccess.getXorRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleXor3128); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXor"


    // $ANTLR start "ruleXor"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1497:1: ruleXor : ( ( rule__Xor__Group__0 ) ) ;
    public final void ruleXor() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1501:2: ( ( ( rule__Xor__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1502:1: ( ( rule__Xor__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1502:1: ( ( rule__Xor__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1503:1: ( rule__Xor__Group__0 )
            {
             before(grammarAccess.getXorAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1504:1: ( rule__Xor__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1504:2: rule__Xor__Group__0
            {
            pushFollow(FOLLOW_rule__Xor__Group__0_in_ruleXor3154);
            rule__Xor__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXor"


    // $ANTLR start "entryRuleJam"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1516:1: entryRuleJam : ruleJam EOF ;
    public final void entryRuleJam() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1517:1: ( ruleJam EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1518:1: ruleJam EOF
            {
             before(grammarAccess.getJamRule()); 
            pushFollow(FOLLOW_ruleJam_in_entryRuleJam3181);
            ruleJam();

            state._fsp--;

             after(grammarAccess.getJamRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleJam3188); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJam"


    // $ANTLR start "ruleJam"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1525:1: ruleJam : ( ( rule__Jam__Group__0 ) ) ;
    public final void ruleJam() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1529:2: ( ( ( rule__Jam__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1530:1: ( ( rule__Jam__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1530:1: ( ( rule__Jam__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1531:1: ( rule__Jam__Group__0 )
            {
             before(grammarAccess.getJamAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1532:1: ( rule__Jam__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1532:2: rule__Jam__Group__0
            {
            pushFollow(FOLLOW_rule__Jam__Group__0_in_ruleJam3214);
            rule__Jam__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getJamAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJam"


    // $ANTLR start "entryRuleClr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1544:1: entryRuleClr : ruleClr EOF ;
    public final void entryRuleClr() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1545:1: ( ruleClr EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1546:1: ruleClr EOF
            {
             before(grammarAccess.getClrRule()); 
            pushFollow(FOLLOW_ruleClr_in_entryRuleClr3241);
            ruleClr();

            state._fsp--;

             after(grammarAccess.getClrRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleClr3248); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleClr"


    // $ANTLR start "ruleClr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1553:1: ruleClr : ( ( rule__Clr__Group__0 ) ) ;
    public final void ruleClr() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1557:2: ( ( ( rule__Clr__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1558:1: ( ( rule__Clr__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1558:1: ( ( rule__Clr__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1559:1: ( rule__Clr__Group__0 )
            {
             before(grammarAccess.getClrAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1560:1: ( rule__Clr__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1560:2: rule__Clr__Group__0
            {
            pushFollow(FOLLOW_rule__Clr__Group__0_in_ruleClr3274);
            rule__Clr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getClrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClr"


    // $ANTLR start "entryRuleNot"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1572:1: entryRuleNot : ruleNot EOF ;
    public final void entryRuleNot() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1573:1: ( ruleNot EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1574:1: ruleNot EOF
            {
             before(grammarAccess.getNotRule()); 
            pushFollow(FOLLOW_ruleNot_in_entryRuleNot3301);
            ruleNot();

            state._fsp--;

             after(grammarAccess.getNotRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNot3308); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNot"


    // $ANTLR start "ruleNot"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1581:1: ruleNot : ( ( rule__Not__Group__0 ) ) ;
    public final void ruleNot() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1585:2: ( ( ( rule__Not__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1586:1: ( ( rule__Not__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1586:1: ( ( rule__Not__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1587:1: ( rule__Not__Group__0 )
            {
             before(grammarAccess.getNotAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1588:1: ( rule__Not__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1588:2: rule__Not__Group__0
            {
            pushFollow(FOLLOW_rule__Not__Group__0_in_ruleNot3334);
            rule__Not__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNotAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNot"


    // $ANTLR start "entryRuleAbsa"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1600:1: entryRuleAbsa : ruleAbsa EOF ;
    public final void entryRuleAbsa() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1601:1: ( ruleAbsa EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1602:1: ruleAbsa EOF
            {
             before(grammarAccess.getAbsaRule()); 
            pushFollow(FOLLOW_ruleAbsa_in_entryRuleAbsa3361);
            ruleAbsa();

            state._fsp--;

             after(grammarAccess.getAbsaRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbsa3368); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAbsa"


    // $ANTLR start "ruleAbsa"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1609:1: ruleAbsa : ( ( rule__Absa__Group__0 ) ) ;
    public final void ruleAbsa() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1613:2: ( ( ( rule__Absa__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1614:1: ( ( rule__Absa__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1614:1: ( ( rule__Absa__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1615:1: ( rule__Absa__Group__0 )
            {
             before(grammarAccess.getAbsaAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1616:1: ( rule__Absa__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1616:2: rule__Absa__Group__0
            {
            pushFollow(FOLLOW_rule__Absa__Group__0_in_ruleAbsa3394);
            rule__Absa__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAbsaAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAbsa"


    // $ANTLR start "entryRuleSkip"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1628:1: entryRuleSkip : ruleSkip EOF ;
    public final void entryRuleSkip() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1629:1: ( ruleSkip EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1630:1: ruleSkip EOF
            {
             before(grammarAccess.getSkipRule()); 
            pushFollow(FOLLOW_ruleSkip_in_entryRuleSkip3421);
            ruleSkip();

            state._fsp--;

             after(grammarAccess.getSkipRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSkip3428); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSkip"


    // $ANTLR start "ruleSkip"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1637:1: ruleSkip : ( ( rule__Skip__Group__0 ) ) ;
    public final void ruleSkip() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1641:2: ( ( ( rule__Skip__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1642:1: ( ( rule__Skip__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1642:1: ( ( rule__Skip__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1643:1: ( rule__Skip__Group__0 )
            {
             before(grammarAccess.getSkipAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1644:1: ( rule__Skip__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1644:2: rule__Skip__Group__0
            {
            pushFollow(FOLLOW_rule__Skip__Group__0_in_ruleSkip3454);
            rule__Skip__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSkip"


    // $ANTLR start "entryRuleSPINDOUBLE"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1656:1: entryRuleSPINDOUBLE : ruleSPINDOUBLE EOF ;
    public final void entryRuleSPINDOUBLE() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1657:1: ( ruleSPINDOUBLE EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1658:1: ruleSPINDOUBLE EOF
            {
             before(grammarAccess.getSPINDOUBLERule()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_entryRuleSPINDOUBLE3481);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getSPINDOUBLERule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINDOUBLE3488); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINDOUBLE"


    // $ANTLR start "ruleSPINDOUBLE"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1665:1: ruleSPINDOUBLE : ( ( rule__SPINDOUBLE__Group__0 ) ) ;
    public final void ruleSPINDOUBLE() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1669:2: ( ( ( rule__SPINDOUBLE__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1670:1: ( ( rule__SPINDOUBLE__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1670:1: ( ( rule__SPINDOUBLE__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1671:1: ( rule__SPINDOUBLE__Group__0 )
            {
             before(grammarAccess.getSPINDOUBLEAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1672:1: ( rule__SPINDOUBLE__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1672:2: rule__SPINDOUBLE__Group__0
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__0_in_ruleSPINDOUBLE3514);
            rule__SPINDOUBLE__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINDOUBLEAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINDOUBLE"


    // $ANTLR start "entryRuleSPINREGISTER"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1684:1: entryRuleSPINREGISTER : ruleSPINREGISTER EOF ;
    public final void entryRuleSPINREGISTER() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1685:1: ( ruleSPINREGISTER EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1686:1: ruleSPINREGISTER EOF
            {
             before(grammarAccess.getSPINREGISTERRule()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_entryRuleSPINREGISTER3541);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getSPINREGISTERRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINREGISTER3548); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINREGISTER"


    // $ANTLR start "ruleSPINREGISTER"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1693:1: ruleSPINREGISTER : ( ( rule__SPINREGISTER__Alternatives ) ) ;
    public final void ruleSPINREGISTER() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1697:2: ( ( ( rule__SPINREGISTER__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1698:1: ( ( rule__SPINREGISTER__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1698:1: ( ( rule__SPINREGISTER__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1699:1: ( rule__SPINREGISTER__Alternatives )
            {
             before(grammarAccess.getSPINREGISTERAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1700:1: ( rule__SPINREGISTER__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1700:2: rule__SPINREGISTER__Alternatives
            {
            pushFollow(FOLLOW_rule__SPINREGISTER__Alternatives_in_ruleSPINREGISTER3574);
            rule__SPINREGISTER__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSPINREGISTERAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINREGISTER"


    // $ANTLR start "entryRuleSPINCHOREGFLAGS"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1712:1: entryRuleSPINCHOREGFLAGS : ruleSPINCHOREGFLAGS EOF ;
    public final void entryRuleSPINCHOREGFLAGS() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1713:1: ( ruleSPINCHOREGFLAGS EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1714:1: ruleSPINCHOREGFLAGS EOF
            {
             before(grammarAccess.getSPINCHOREGFLAGSRule()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_entryRuleSPINCHOREGFLAGS3601);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getSPINCHOREGFLAGSRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINCHOREGFLAGS3608); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINCHOREGFLAGS"


    // $ANTLR start "ruleSPINCHOREGFLAGS"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1721:1: ruleSPINCHOREGFLAGS : ( ( rule__SPINCHOREGFLAGS__Alternatives ) ) ;
    public final void ruleSPINCHOREGFLAGS() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1725:2: ( ( ( rule__SPINCHOREGFLAGS__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1726:1: ( ( rule__SPINCHOREGFLAGS__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1726:1: ( ( rule__SPINCHOREGFLAGS__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1727:1: ( rule__SPINCHOREGFLAGS__Alternatives )
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1728:1: ( rule__SPINCHOREGFLAGS__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1728:2: rule__SPINCHOREGFLAGS__Alternatives
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Alternatives_in_ruleSPINCHOREGFLAGS3634);
            rule__SPINCHOREGFLAGS__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINCHOREGFLAGS"


    // $ANTLR start "entryRuleSPINMEM"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1740:1: entryRuleSPINMEM : ruleSPINMEM EOF ;
    public final void entryRuleSPINMEM() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1741:1: ( ruleSPINMEM EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1742:1: ruleSPINMEM EOF
            {
             before(grammarAccess.getSPINMEMRule()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_entryRuleSPINMEM3661);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getSPINMEMRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINMEM3668); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINMEM"


    // $ANTLR start "ruleSPINMEM"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1749:1: ruleSPINMEM : ( ( rule__SPINMEM__Group__0 ) ) ;
    public final void ruleSPINMEM() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1753:2: ( ( ( rule__SPINMEM__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1754:1: ( ( rule__SPINMEM__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1754:1: ( ( rule__SPINMEM__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1755:1: ( rule__SPINMEM__Group__0 )
            {
             before(grammarAccess.getSPINMEMAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1756:1: ( rule__SPINMEM__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1756:2: rule__SPINMEM__Group__0
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__0_in_ruleSPINMEM3694);
            rule__SPINMEM__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINMEMAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINMEM"


    // $ANTLR start "entryRuleSPINBUF"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1768:1: entryRuleSPINBUF : ruleSPINBUF EOF ;
    public final void entryRuleSPINBUF() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1769:1: ( ruleSPINBUF EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1770:1: ruleSPINBUF EOF
            {
             before(grammarAccess.getSPINBUFRule()); 
            pushFollow(FOLLOW_ruleSPINBUF_in_entryRuleSPINBUF3721);
            ruleSPINBUF();

            state._fsp--;

             after(grammarAccess.getSPINBUFRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINBUF3728); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINBUF"


    // $ANTLR start "ruleSPINBUF"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1777:1: ruleSPINBUF : ( ( rule__SPINBUF__Group__0 ) ) ;
    public final void ruleSPINBUF() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1781:2: ( ( ( rule__SPINBUF__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1782:1: ( ( rule__SPINBUF__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1782:1: ( ( rule__SPINBUF__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1783:1: ( rule__SPINBUF__Group__0 )
            {
             before(grammarAccess.getSPINBUFAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1784:1: ( rule__SPINBUF__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1784:2: rule__SPINBUF__Group__0
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__0_in_ruleSPINBUF3754);
            rule__SPINBUF__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINBUFAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINBUF"


    // $ANTLR start "entryRuleBINARY24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1796:1: entryRuleBINARY24 : ruleBINARY24 EOF ;
    public final void entryRuleBINARY24() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1797:1: ( ruleBINARY24 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1798:1: ruleBINARY24 EOF
            {
             before(grammarAccess.getBINARY24Rule()); 
            pushFollow(FOLLOW_ruleBINARY24_in_entryRuleBINARY243781);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getBINARY24Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBINARY243788); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBINARY24"


    // $ANTLR start "ruleBINARY24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1805:1: ruleBINARY24 : ( ( rule__BINARY24__Alternatives ) ) ;
    public final void ruleBINARY24() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1809:2: ( ( ( rule__BINARY24__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1810:1: ( ( rule__BINARY24__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1810:1: ( ( rule__BINARY24__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1811:1: ( rule__BINARY24__Alternatives )
            {
             before(grammarAccess.getBINARY24Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1812:1: ( rule__BINARY24__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1812:2: rule__BINARY24__Alternatives
            {
            pushFollow(FOLLOW_rule__BINARY24__Alternatives_in_ruleBINARY243814);
            rule__BINARY24__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBINARY24Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBINARY24"


    // $ANTLR start "rule__Pin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1824:1: rule__Pin__Alternatives : ( ( ruleInputPin ) | ( ruleOutputPin ) );
    public final void rule__Pin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1828:1: ( ( ruleInputPin ) | ( ruleOutputPin ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==17||LA1_0==19) ) {
                alt1=1;
            }
            else if ( (LA1_0==18||LA1_0==20) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1829:1: ( ruleInputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1829:1: ( ruleInputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1830:1: ruleInputPin
                    {
                     before(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleInputPin_in_rule__Pin__Alternatives3850);
                    ruleInputPin();

                    state._fsp--;

                     after(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1835:6: ( ruleOutputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1835:6: ( ruleOutputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1836:1: ruleOutputPin
                    {
                     before(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleOutputPin_in_rule__Pin__Alternatives3867);
                    ruleOutputPin();

                    state._fsp--;

                     after(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pin__Alternatives"


    // $ANTLR start "rule__InputPin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1846:1: rule__InputPin__Alternatives : ( ( ruleAudioInput ) | ( ruleControlInput ) );
    public final void rule__InputPin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1850:1: ( ( ruleAudioInput ) | ( ruleControlInput ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==17) ) {
                alt2=1;
            }
            else if ( (LA2_0==19) ) {
                alt2=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1851:1: ( ruleAudioInput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1851:1: ( ruleAudioInput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1852:1: ruleAudioInput
                    {
                     before(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAudioInput_in_rule__InputPin__Alternatives3899);
                    ruleAudioInput();

                    state._fsp--;

                     after(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1857:6: ( ruleControlInput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1857:6: ( ruleControlInput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1858:1: ruleControlInput
                    {
                     before(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleControlInput_in_rule__InputPin__Alternatives3916);
                    ruleControlInput();

                    state._fsp--;

                     after(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InputPin__Alternatives"


    // $ANTLR start "rule__OutputPin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1868:1: rule__OutputPin__Alternatives : ( ( ruleAudioOutput ) | ( ruleControlOutput ) );
    public final void rule__OutputPin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1872:1: ( ( ruleAudioOutput ) | ( ruleControlOutput ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==18) ) {
                alt3=1;
            }
            else if ( (LA3_0==20) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1873:1: ( ruleAudioOutput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1873:1: ( ruleAudioOutput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1874:1: ruleAudioOutput
                    {
                     before(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAudioOutput_in_rule__OutputPin__Alternatives3948);
                    ruleAudioOutput();

                    state._fsp--;

                     after(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1879:6: ( ruleControlOutput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1879:6: ( ruleControlOutput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1880:1: ruleControlOutput
                    {
                     before(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleControlOutput_in_rule__OutputPin__Alternatives3965);
                    ruleControlOutput();

                    state._fsp--;

                     after(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OutputPin__Alternatives"


    // $ANTLR start "rule__SpinElement__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1890:1: rule__SpinElement__Alternatives : ( ( ruleEquate ) | ( ruleMem ) | ( ruleInstruction ) | ( ruleLabel ) | ( ruleComment ) | ( ruleMacro ) | ( ruleOffset ) );
    public final void rule__SpinElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1894:1: ( ( ruleEquate ) | ( ruleMem ) | ( ruleInstruction ) | ( ruleLabel ) | ( ruleComment ) | ( ruleMacro ) | ( ruleOffset ) )
            int alt4=7;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt4=1;
                }
                break;
            case 22:
                {
                alt4=2;
                }
                break;
            case 32:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
                {
                alt4=3;
                }
                break;
            case RULE_ID:
                {
                alt4=4;
                }
                break;
            case RULE_SC_COMMENT:
                {
                alt4=5;
                }
                break;
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
                {
                alt4=6;
                }
                break;
            case 23:
                {
                alt4=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1895:1: ( ruleEquate )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1895:1: ( ruleEquate )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1896:1: ruleEquate
                    {
                     before(grammarAccess.getSpinElementAccess().getEquateParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleEquate_in_rule__SpinElement__Alternatives3997);
                    ruleEquate();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getEquateParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1901:6: ( ruleMem )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1901:6: ( ruleMem )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1902:1: ruleMem
                    {
                     before(grammarAccess.getSpinElementAccess().getMemParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleMem_in_rule__SpinElement__Alternatives4014);
                    ruleMem();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getMemParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1907:6: ( ruleInstruction )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1907:6: ( ruleInstruction )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1908:1: ruleInstruction
                    {
                     before(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleInstruction_in_rule__SpinElement__Alternatives4031);
                    ruleInstruction();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1913:6: ( ruleLabel )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1913:6: ( ruleLabel )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1914:1: ruleLabel
                    {
                     before(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleLabel_in_rule__SpinElement__Alternatives4048);
                    ruleLabel();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1919:6: ( ruleComment )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1919:6: ( ruleComment )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1920:1: ruleComment
                    {
                     before(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleComment_in_rule__SpinElement__Alternatives4065);
                    ruleComment();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1925:6: ( ruleMacro )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1925:6: ( ruleMacro )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1926:1: ruleMacro
                    {
                     before(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleMacro_in_rule__SpinElement__Alternatives4082);
                    ruleMacro();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1931:6: ( ruleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1931:6: ( ruleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1932:1: ruleOffset
                    {
                     before(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleOffset_in_rule__SpinElement__Alternatives4099);
                    ruleOffset();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_6()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinElement__Alternatives"


    // $ANTLR start "rule__Macro__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1942:1: rule__Macro__Alternatives : ( ( ruleIsPinConnected ) | ( ruleIsElse ) | ( ruleIsEndif ) | ( ruleGetInputDefault ) | ( ruleGetDelayScaleControl ) | ( ruleSetOutputPin ) | ( ruleGetBaseAddress ) );
    public final void rule__Macro__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1946:1: ( ( ruleIsPinConnected ) | ( ruleIsElse ) | ( ruleIsEndif ) | ( ruleGetInputDefault ) | ( ruleGetDelayScaleControl ) | ( ruleSetOutputPin ) | ( ruleGetBaseAddress ) )
            int alt5=7;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt5=1;
                }
                break;
            case 26:
                {
                alt5=2;
                }
                break;
            case 27:
                {
                alt5=3;
                }
                break;
            case 28:
                {
                alt5=4;
                }
                break;
            case 29:
                {
                alt5=5;
                }
                break;
            case 31:
                {
                alt5=6;
                }
                break;
            case 30:
                {
                alt5=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1947:1: ( ruleIsPinConnected )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1947:1: ( ruleIsPinConnected )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1948:1: ruleIsPinConnected
                    {
                     before(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleIsPinConnected_in_rule__Macro__Alternatives4131);
                    ruleIsPinConnected();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1953:6: ( ruleIsElse )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1953:6: ( ruleIsElse )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1954:1: ruleIsElse
                    {
                     before(grammarAccess.getMacroAccess().getIsElseParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleIsElse_in_rule__Macro__Alternatives4148);
                    ruleIsElse();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsElseParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1959:6: ( ruleIsEndif )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1959:6: ( ruleIsEndif )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1960:1: ruleIsEndif
                    {
                     before(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleIsEndif_in_rule__Macro__Alternatives4165);
                    ruleIsEndif();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1965:6: ( ruleGetInputDefault )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1965:6: ( ruleGetInputDefault )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1966:1: ruleGetInputDefault
                    {
                     before(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleGetInputDefault_in_rule__Macro__Alternatives4182);
                    ruleGetInputDefault();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1971:6: ( ruleGetDelayScaleControl )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1971:6: ( ruleGetDelayScaleControl )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1972:1: ruleGetDelayScaleControl
                    {
                     before(grammarAccess.getMacroAccess().getGetDelayScaleControlParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleGetDelayScaleControl_in_rule__Macro__Alternatives4199);
                    ruleGetDelayScaleControl();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetDelayScaleControlParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1977:6: ( ruleSetOutputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1977:6: ( ruleSetOutputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1978:1: ruleSetOutputPin
                    {
                     before(grammarAccess.getMacroAccess().getSetOutputPinParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleSetOutputPin_in_rule__Macro__Alternatives4216);
                    ruleSetOutputPin();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getSetOutputPinParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1983:6: ( ruleGetBaseAddress )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1983:6: ( ruleGetBaseAddress )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1984:1: ruleGetBaseAddress
                    {
                     before(grammarAccess.getMacroAccess().getGetBaseAddressParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleGetBaseAddress_in_rule__Macro__Alternatives4233);
                    ruleGetBaseAddress();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetBaseAddressParserRuleCall_6()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Macro__Alternatives"


    // $ANTLR start "rule__Instruction__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1994:1: rule__Instruction__Alternatives : ( ( ruleInst_B15_S1_9 ) | ( ruleInst_B6_S1_14 ) | ( ruleInst_S1_14_S1_10 ) | ( ruleInst_B6 ) | ( ruleInst_B24 ) | ( ruleSkip ) | ( ruleJam ) | ( ruleInst_X0 ) | ( ruleLoadSinLFO ) | ( ruleLoadRampLFO ) | ( ruleChorusReadDelay ) | ( ruleChorusReadValue ) | ( ruleChorusScaleOffset ) | ( ruleLog ) | ( ruleReadDelayPointer ) );
    public final void rule__Instruction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1998:1: ( ( ruleInst_B15_S1_9 ) | ( ruleInst_B6_S1_14 ) | ( ruleInst_S1_14_S1_10 ) | ( ruleInst_B6 ) | ( ruleInst_B24 ) | ( ruleSkip ) | ( ruleJam ) | ( ruleInst_X0 ) | ( ruleLoadSinLFO ) | ( ruleLoadRampLFO ) | ( ruleChorusReadDelay ) | ( ruleChorusReadValue ) | ( ruleChorusScaleOffset ) | ( ruleLog ) | ( ruleReadDelayPointer ) )
            int alt6=15;
            switch ( input.LA(1) ) {
            case 44:
            case 45:
            case 46:
                {
                alt6=1;
                }
                break;
            case 32:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
                {
                alt6=2;
                }
                break;
            case 41:
            case 43:
                {
                alt6=3;
                }
                break;
            case 39:
            case 40:
                {
                alt6=4;
                }
                break;
            case 53:
            case 54:
            case 55:
                {
                alt6=5;
                }
                break;
            case 60:
                {
                alt6=6;
                }
                break;
            case 56:
                {
                alt6=7;
                }
                break;
            case 57:
            case 58:
            case 59:
                {
                alt6=8;
                }
                break;
            case 47:
                {
                alt6=9;
                }
                break;
            case 48:
                {
                alt6=10;
                }
                break;
            case 49:
                {
                alt6=11;
                }
                break;
            case 50:
                {
                alt6=12;
                }
                break;
            case 51:
                {
                alt6=13;
                }
                break;
            case 42:
                {
                alt6=14;
                }
                break;
            case 52:
                {
                alt6=15;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1999:1: ( ruleInst_B15_S1_9 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1999:1: ( ruleInst_B15_S1_9 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2000:1: ruleInst_B15_S1_9
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleInst_B15_S1_9_in_rule__Instruction__Alternatives4265);
                    ruleInst_B15_S1_9();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2005:6: ( ruleInst_B6_S1_14 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2005:6: ( ruleInst_B6_S1_14 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2006:1: ruleInst_B6_S1_14
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleInst_B6_S1_14_in_rule__Instruction__Alternatives4282);
                    ruleInst_B6_S1_14();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2011:6: ( ruleInst_S1_14_S1_10 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2011:6: ( ruleInst_S1_14_S1_10 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2012:1: ruleInst_S1_14_S1_10
                    {
                     before(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleInst_S1_14_S1_10_in_rule__Instruction__Alternatives4299);
                    ruleInst_S1_14_S1_10();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2017:6: ( ruleInst_B6 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2017:6: ( ruleInst_B6 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2018:1: ruleInst_B6
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleInst_B6_in_rule__Instruction__Alternatives4316);
                    ruleInst_B6();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2023:6: ( ruleInst_B24 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2023:6: ( ruleInst_B24 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2024:1: ruleInst_B24
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleInst_B24_in_rule__Instruction__Alternatives4333);
                    ruleInst_B24();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2029:6: ( ruleSkip )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2029:6: ( ruleSkip )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2030:1: ruleSkip
                    {
                     before(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleSkip_in_rule__Instruction__Alternatives4350);
                    ruleSkip();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2035:6: ( ruleJam )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2035:6: ( ruleJam )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2036:1: ruleJam
                    {
                     before(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleJam_in_rule__Instruction__Alternatives4367);
                    ruleJam();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); 

                    }


                    }
                    break;
                case 8 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2041:6: ( ruleInst_X0 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2041:6: ( ruleInst_X0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2042:1: ruleInst_X0
                    {
                     before(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); 
                    pushFollow(FOLLOW_ruleInst_X0_in_rule__Instruction__Alternatives4384);
                    ruleInst_X0();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); 

                    }


                    }
                    break;
                case 9 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2047:6: ( ruleLoadSinLFO )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2047:6: ( ruleLoadSinLFO )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2048:1: ruleLoadSinLFO
                    {
                     before(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); 
                    pushFollow(FOLLOW_ruleLoadSinLFO_in_rule__Instruction__Alternatives4401);
                    ruleLoadSinLFO();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); 

                    }


                    }
                    break;
                case 10 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2053:6: ( ruleLoadRampLFO )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2053:6: ( ruleLoadRampLFO )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2054:1: ruleLoadRampLFO
                    {
                     before(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); 
                    pushFollow(FOLLOW_ruleLoadRampLFO_in_rule__Instruction__Alternatives4418);
                    ruleLoadRampLFO();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); 

                    }


                    }
                    break;
                case 11 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2059:6: ( ruleChorusReadDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2059:6: ( ruleChorusReadDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2060:1: ruleChorusReadDelay
                    {
                     before(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); 
                    pushFollow(FOLLOW_ruleChorusReadDelay_in_rule__Instruction__Alternatives4435);
                    ruleChorusReadDelay();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); 

                    }


                    }
                    break;
                case 12 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2065:6: ( ruleChorusReadValue )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2065:6: ( ruleChorusReadValue )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2066:1: ruleChorusReadValue
                    {
                     before(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); 
                    pushFollow(FOLLOW_ruleChorusReadValue_in_rule__Instruction__Alternatives4452);
                    ruleChorusReadValue();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); 

                    }


                    }
                    break;
                case 13 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2071:6: ( ruleChorusScaleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2071:6: ( ruleChorusScaleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2072:1: ruleChorusScaleOffset
                    {
                     before(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); 
                    pushFollow(FOLLOW_ruleChorusScaleOffset_in_rule__Instruction__Alternatives4469);
                    ruleChorusScaleOffset();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); 

                    }


                    }
                    break;
                case 14 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2077:6: ( ruleLog )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2077:6: ( ruleLog )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2078:1: ruleLog
                    {
                     before(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); 
                    pushFollow(FOLLOW_ruleLog_in_rule__Instruction__Alternatives4486);
                    ruleLog();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); 

                    }


                    }
                    break;
                case 15 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2083:6: ( ruleReadDelayPointer )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2083:6: ( ruleReadDelayPointer )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2084:1: ruleReadDelayPointer
                    {
                     before(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); 
                    pushFollow(FOLLOW_ruleReadDelayPointer_in_rule__Instruction__Alternatives4503);
                    ruleReadDelayPointer();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Alternatives"


    // $ANTLR start "rule__Inst_B6_S1_14__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2094:1: rule__Inst_B6_S1_14__Alternatives : ( ( ruleReadRegister ) | ( ruleWriteRegister ) | ( ruleReadRegisterFilter ) | ( ruleMaxx ) | ( ruleWriteRegisterHighshelf ) | ( ruleWriteRegisterLowshelf ) );
    public final void rule__Inst_B6_S1_14__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2098:1: ( ( ruleReadRegister ) | ( ruleWriteRegister ) | ( ruleReadRegisterFilter ) | ( ruleMaxx ) | ( ruleWriteRegisterHighshelf ) | ( ruleWriteRegisterLowshelf ) )
            int alt7=6;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt7=1;
                }
                break;
            case 36:
                {
                alt7=2;
                }
                break;
            case 38:
                {
                alt7=3;
                }
                break;
            case 37:
                {
                alt7=4;
                }
                break;
            case 35:
                {
                alt7=5;
                }
                break;
            case 34:
                {
                alt7=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2099:1: ( ruleReadRegister )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2099:1: ( ruleReadRegister )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2100:1: ruleReadRegister
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleReadRegister_in_rule__Inst_B6_S1_14__Alternatives4535);
                    ruleReadRegister();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2105:6: ( ruleWriteRegister )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2105:6: ( ruleWriteRegister )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2106:1: ruleWriteRegister
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleWriteRegister_in_rule__Inst_B6_S1_14__Alternatives4552);
                    ruleWriteRegister();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2111:6: ( ruleReadRegisterFilter )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2111:6: ( ruleReadRegisterFilter )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2112:1: ruleReadRegisterFilter
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleReadRegisterFilter_in_rule__Inst_B6_S1_14__Alternatives4569);
                    ruleReadRegisterFilter();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2117:6: ( ruleMaxx )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2117:6: ( ruleMaxx )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2118:1: ruleMaxx
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleMaxx_in_rule__Inst_B6_S1_14__Alternatives4586);
                    ruleMaxx();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2123:6: ( ruleWriteRegisterHighshelf )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2123:6: ( ruleWriteRegisterHighshelf )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2124:1: ruleWriteRegisterHighshelf
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleWriteRegisterHighshelf_in_rule__Inst_B6_S1_14__Alternatives4603);
                    ruleWriteRegisterHighshelf();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2129:6: ( ruleWriteRegisterLowshelf )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2129:6: ( ruleWriteRegisterLowshelf )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2130:1: ruleWriteRegisterLowshelf
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleWriteRegisterLowshelf_in_rule__Inst_B6_S1_14__Alternatives4620);
                    ruleWriteRegisterLowshelf();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B6_S1_14__Alternatives"


    // $ANTLR start "rule__Inst_B15_S1_9__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2140:1: rule__Inst_B15_S1_9__Alternatives : ( ( ruleReadDelay ) | ( ruleWriteDelay ) | ( ruleWriteAllpass ) );
    public final void rule__Inst_B15_S1_9__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2144:1: ( ( ruleReadDelay ) | ( ruleWriteDelay ) | ( ruleWriteAllpass ) )
            int alt8=3;
            switch ( input.LA(1) ) {
            case 46:
                {
                alt8=1;
                }
                break;
            case 44:
                {
                alt8=2;
                }
                break;
            case 45:
                {
                alt8=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2145:1: ( ruleReadDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2145:1: ( ruleReadDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2146:1: ruleReadDelay
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleReadDelay_in_rule__Inst_B15_S1_9__Alternatives4652);
                    ruleReadDelay();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2151:6: ( ruleWriteDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2151:6: ( ruleWriteDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2152:1: ruleWriteDelay
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleWriteDelay_in_rule__Inst_B15_S1_9__Alternatives4669);
                    ruleWriteDelay();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2157:6: ( ruleWriteAllpass )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2157:6: ( ruleWriteAllpass )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2158:1: ruleWriteAllpass
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleWriteAllpass_in_rule__Inst_B15_S1_9__Alternatives4686);
                    ruleWriteAllpass();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B15_S1_9__Alternatives"


    // $ANTLR start "rule__Inst_B6__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2168:1: rule__Inst_B6__Alternatives : ( ( ruleMulx ) | ( ruleLdax ) );
    public final void rule__Inst_B6__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2172:1: ( ( ruleMulx ) | ( ruleLdax ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==39) ) {
                alt9=1;
            }
            else if ( (LA9_0==40) ) {
                alt9=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2173:1: ( ruleMulx )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2173:1: ( ruleMulx )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2174:1: ruleMulx
                    {
                     before(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleMulx_in_rule__Inst_B6__Alternatives4718);
                    ruleMulx();

                    state._fsp--;

                     after(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2179:6: ( ruleLdax )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2179:6: ( ruleLdax )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2180:1: ruleLdax
                    {
                     before(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleLdax_in_rule__Inst_B6__Alternatives4735);
                    ruleLdax();

                    state._fsp--;

                     after(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B6__Alternatives"


    // $ANTLR start "rule__Inst_B24__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2190:1: rule__Inst_B24__Alternatives : ( ( ruleAnd ) | ( ruleOr ) | ( ruleXor ) );
    public final void rule__Inst_B24__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2194:1: ( ( ruleAnd ) | ( ruleOr ) | ( ruleXor ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case 53:
                {
                alt10=1;
                }
                break;
            case 54:
                {
                alt10=2;
                }
                break;
            case 55:
                {
                alt10=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2195:1: ( ruleAnd )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2195:1: ( ruleAnd )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2196:1: ruleAnd
                    {
                     before(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAnd_in_rule__Inst_B24__Alternatives4767);
                    ruleAnd();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2201:6: ( ruleOr )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2201:6: ( ruleOr )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2202:1: ruleOr
                    {
                     before(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleOr_in_rule__Inst_B24__Alternatives4784);
                    ruleOr();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2207:6: ( ruleXor )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2207:6: ( ruleXor )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2208:1: ruleXor
                    {
                     before(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleXor_in_rule__Inst_B24__Alternatives4801);
                    ruleXor();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B24__Alternatives"


    // $ANTLR start "rule__Inst_X0__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2218:1: rule__Inst_X0__Alternatives : ( ( ruleClr ) | ( ruleNot ) | ( ruleAbsa ) );
    public final void rule__Inst_X0__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2222:1: ( ( ruleClr ) | ( ruleNot ) | ( ruleAbsa ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case 57:
                {
                alt11=1;
                }
                break;
            case 58:
                {
                alt11=2;
                }
                break;
            case 59:
                {
                alt11=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2223:1: ( ruleClr )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2223:1: ( ruleClr )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2224:1: ruleClr
                    {
                     before(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleClr_in_rule__Inst_X0__Alternatives4833);
                    ruleClr();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2229:6: ( ruleNot )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2229:6: ( ruleNot )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2230:1: ruleNot
                    {
                     before(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleNot_in_rule__Inst_X0__Alternatives4850);
                    ruleNot();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2235:6: ( ruleAbsa )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2235:6: ( ruleAbsa )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2236:1: ruleAbsa
                    {
                     before(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleAbsa_in_rule__Inst_X0__Alternatives4867);
                    ruleAbsa();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_X0__Alternatives"


    // $ANTLR start "rule__Inst_S1_14_S1_10__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2246:1: rule__Inst_S1_14_S1_10__Alternatives : ( ( ruleExp ) | ( ruleScaleOffset ) );
    public final void rule__Inst_S1_14_S1_10__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2250:1: ( ( ruleExp ) | ( ruleScaleOffset ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==41) ) {
                alt12=1;
            }
            else if ( (LA12_0==43) ) {
                alt12=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2251:1: ( ruleExp )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2251:1: ( ruleExp )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2252:1: ruleExp
                    {
                     before(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleExp_in_rule__Inst_S1_14_S1_10__Alternatives4899);
                    ruleExp();

                    state._fsp--;

                     after(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2257:6: ( ruleScaleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2257:6: ( ruleScaleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2258:1: ruleScaleOffset
                    {
                     before(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleScaleOffset_in_rule__Inst_S1_14_S1_10__Alternatives4916);
                    ruleScaleOffset();

                    state._fsp--;

                     after(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_S1_14_S1_10__Alternatives"


    // $ANTLR start "rule__SPINDOUBLE__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2268:1: rule__SPINDOUBLE__Alternatives_1 : ( ( RULE_ID ) | ( ( rule__SPINDOUBLE__Group_1_1__0 ) ) );
    public final void rule__SPINDOUBLE__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2272:1: ( ( RULE_ID ) | ( ( rule__SPINDOUBLE__Group_1_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_ID) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_INT) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2273:1: ( RULE_ID )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2273:1: ( RULE_ID )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2274:1: RULE_ID
                    {
                     before(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); 
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINDOUBLE__Alternatives_14948); 
                     after(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2279:6: ( ( rule__SPINDOUBLE__Group_1_1__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2279:6: ( ( rule__SPINDOUBLE__Group_1_1__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2280:1: ( rule__SPINDOUBLE__Group_1_1__0 )
                    {
                     before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2281:1: ( rule__SPINDOUBLE__Group_1_1__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2281:2: rule__SPINDOUBLE__Group_1_1__0
                    {
                    pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__0_in_rule__SPINDOUBLE__Alternatives_14965);
                    rule__SPINDOUBLE__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Alternatives_1"


    // $ANTLR start "rule__SPINREGISTER__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2290:1: rule__SPINREGISTER__Alternatives : ( ( RULE_ID ) | ( RULE_INT ) );
    public final void rule__SPINREGISTER__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2294:1: ( ( RULE_ID ) | ( RULE_INT ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_ID) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_INT) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2295:1: ( RULE_ID )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2295:1: ( RULE_ID )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2296:1: RULE_ID
                    {
                     before(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); 
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINREGISTER__Alternatives4998); 
                     after(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2301:6: ( RULE_INT )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2301:6: ( RULE_INT )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2302:1: RULE_INT
                    {
                     before(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); 
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINREGISTER__Alternatives5015); 
                     after(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINREGISTER__Alternatives"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2312:1: rule__SPINCHOREGFLAGS__Alternatives : ( ( RULE_INT ) | ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? ) );
    public final void rule__SPINCHOREGFLAGS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2316:1: ( ( RULE_INT ) | ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_INT) ) {
                alt16=1;
            }
            else if ( (LA16_0==EOF||LA16_0==RULE_ID||LA16_0==33) ) {
                alt16=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2317:1: ( RULE_INT )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2317:1: ( RULE_INT )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2318:1: RULE_INT
                    {
                     before(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); 
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINCHOREGFLAGS__Alternatives5047); 
                     after(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2323:6: ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2323:6: ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2324:1: ( rule__SPINCHOREGFLAGS__Group_1__0 )?
                    {
                     before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2325:1: ( rule__SPINCHOREGFLAGS__Group_1__0 )?
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( (LA15_0==RULE_ID) ) {
                        alt15=1;
                    }
                    switch (alt15) {
                        case 1 :
                            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2325:2: rule__SPINCHOREGFLAGS__Group_1__0
                            {
                            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0_in_rule__SPINCHOREGFLAGS__Alternatives5064);
                            rule__SPINCHOREGFLAGS__Group_1__0();

                            state._fsp--;


                            }
                            break;

                    }

                     after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Alternatives"


    // $ANTLR start "rule__SPINMEM__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2334:1: rule__SPINMEM__Alternatives_1 : ( ( ( rule__SPINMEM__ValueAssignment_1_0 ) ) | ( ( rule__SPINMEM__OffsetAssignment_1_1 ) ) );
    public final void rule__SPINMEM__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2338:1: ( ( ( rule__SPINMEM__ValueAssignment_1_0 ) ) | ( ( rule__SPINMEM__OffsetAssignment_1_1 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_INT) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_ID) ) {
                alt17=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2339:1: ( ( rule__SPINMEM__ValueAssignment_1_0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2339:1: ( ( rule__SPINMEM__ValueAssignment_1_0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2340:1: ( rule__SPINMEM__ValueAssignment_1_0 )
                    {
                     before(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2341:1: ( rule__SPINMEM__ValueAssignment_1_0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2341:2: rule__SPINMEM__ValueAssignment_1_0
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__ValueAssignment_1_0_in_rule__SPINMEM__Alternatives_15098);
                    rule__SPINMEM__ValueAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2345:6: ( ( rule__SPINMEM__OffsetAssignment_1_1 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2345:6: ( ( rule__SPINMEM__OffsetAssignment_1_1 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2346:1: ( rule__SPINMEM__OffsetAssignment_1_1 )
                    {
                     before(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2347:1: ( rule__SPINMEM__OffsetAssignment_1_1 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2347:2: rule__SPINMEM__OffsetAssignment_1_1
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__OffsetAssignment_1_1_in_rule__SPINMEM__Alternatives_15116);
                    rule__SPINMEM__OffsetAssignment_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Alternatives_1"


    // $ANTLR start "rule__SPINBUF__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2356:1: rule__SPINBUF__Alternatives_1 : ( ( '#' ) | ( '^' ) );
    public final void rule__SPINBUF__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2360:1: ( ( '#' ) | ( '^' ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==12) ) {
                alt18=1;
            }
            else if ( (LA18_0==13) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2361:1: ( '#' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2361:1: ( '#' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2362:1: '#'
                    {
                     before(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); 
                    match(input,12,FOLLOW_12_in_rule__SPINBUF__Alternatives_15150); 
                     after(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2369:6: ( '^' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2369:6: ( '^' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2370:1: '^'
                    {
                     before(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); 
                    match(input,13,FOLLOW_13_in_rule__SPINBUF__Alternatives_15170); 
                     after(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Alternatives_1"


    // $ANTLR start "rule__SPINBUF__Alternatives_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2382:1: rule__SPINBUF__Alternatives_2 : ( ( '+' ) | ( '-' ) );
    public final void rule__SPINBUF__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2386:1: ( ( '+' ) | ( '-' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==14) ) {
                alt19=1;
            }
            else if ( (LA19_0==15) ) {
                alt19=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2387:1: ( '+' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2387:1: ( '+' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2388:1: '+'
                    {
                     before(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); 
                    match(input,14,FOLLOW_14_in_rule__SPINBUF__Alternatives_25205); 
                     after(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2395:6: ( '-' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2395:6: ( '-' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2396:1: '-'
                    {
                     before(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); 
                    match(input,15,FOLLOW_15_in_rule__SPINBUF__Alternatives_25225); 
                     after(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Alternatives_2"


    // $ANTLR start "rule__BINARY24__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2408:1: rule__BINARY24__Alternatives : ( ( ( rule__BINARY24__Group_0__0 ) ) | ( ( rule__BINARY24__Group_1__0 ) ) );
    public final void rule__BINARY24__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2412:1: ( ( ( rule__BINARY24__Group_0__0 ) ) | ( ( rule__BINARY24__Group_1__0 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==63) ) {
                alt20=1;
            }
            else if ( (LA20_0==64) ) {
                alt20=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2413:1: ( ( rule__BINARY24__Group_0__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2413:1: ( ( rule__BINARY24__Group_0__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2414:1: ( rule__BINARY24__Group_0__0 )
                    {
                     before(grammarAccess.getBINARY24Access().getGroup_0()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2415:1: ( rule__BINARY24__Group_0__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2415:2: rule__BINARY24__Group_0__0
                    {
                    pushFollow(FOLLOW_rule__BINARY24__Group_0__0_in_rule__BINARY24__Alternatives5259);
                    rule__BINARY24__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBINARY24Access().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2419:6: ( ( rule__BINARY24__Group_1__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2419:6: ( ( rule__BINARY24__Group_1__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2420:1: ( rule__BINARY24__Group_1__0 )
                    {
                     before(grammarAccess.getBINARY24Access().getGroup_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2421:1: ( rule__BINARY24__Group_1__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2421:2: rule__BINARY24__Group_1__0
                    {
                    pushFollow(FOLLOW_rule__BINARY24__Group_1__0_in_rule__BINARY24__Alternatives5277);
                    rule__BINARY24__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBINARY24Access().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Alternatives"


    // $ANTLR start "rule__Program__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2432:1: rule__Program__Group__0 : rule__Program__Group__0__Impl rule__Program__Group__1 ;
    public final void rule__Program__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2436:1: ( rule__Program__Group__0__Impl rule__Program__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2437:2: rule__Program__Group__0__Impl rule__Program__Group__1
            {
            pushFollow(FOLLOW_rule__Program__Group__0__Impl_in_rule__Program__Group__05308);
            rule__Program__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__1_in_rule__Program__Group__05311);
            rule__Program__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0"


    // $ANTLR start "rule__Program__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2444:1: rule__Program__Group__0__Impl : ( '@name' ) ;
    public final void rule__Program__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2448:1: ( ( '@name' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2449:1: ( '@name' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2449:1: ( '@name' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2450:1: '@name'
            {
             before(grammarAccess.getProgramAccess().getNameKeyword_0()); 
            match(input,16,FOLLOW_16_in_rule__Program__Group__0__Impl5339); 
             after(grammarAccess.getProgramAccess().getNameKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0__Impl"


    // $ANTLR start "rule__Program__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2463:1: rule__Program__Group__1 : rule__Program__Group__1__Impl rule__Program__Group__2 ;
    public final void rule__Program__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2467:1: ( rule__Program__Group__1__Impl rule__Program__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2468:2: rule__Program__Group__1__Impl rule__Program__Group__2
            {
            pushFollow(FOLLOW_rule__Program__Group__1__Impl_in_rule__Program__Group__15370);
            rule__Program__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__2_in_rule__Program__Group__15373);
            rule__Program__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1"


    // $ANTLR start "rule__Program__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2475:1: rule__Program__Group__1__Impl : ( ( rule__Program__NameAssignment_1 ) ) ;
    public final void rule__Program__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2479:1: ( ( ( rule__Program__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2480:1: ( ( rule__Program__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2480:1: ( ( rule__Program__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2481:1: ( rule__Program__NameAssignment_1 )
            {
             before(grammarAccess.getProgramAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2482:1: ( rule__Program__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2482:2: rule__Program__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__Program__NameAssignment_1_in_rule__Program__Group__1__Impl5400);
            rule__Program__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1__Impl"


    // $ANTLR start "rule__Program__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2492:1: rule__Program__Group__2 : rule__Program__Group__2__Impl rule__Program__Group__3 ;
    public final void rule__Program__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2496:1: ( rule__Program__Group__2__Impl rule__Program__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2497:2: rule__Program__Group__2__Impl rule__Program__Group__3
            {
            pushFollow(FOLLOW_rule__Program__Group__2__Impl_in_rule__Program__Group__25430);
            rule__Program__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__3_in_rule__Program__Group__25433);
            rule__Program__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2"


    // $ANTLR start "rule__Program__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2504:1: rule__Program__Group__2__Impl : ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) ) ;
    public final void rule__Program__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2508:1: ( ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2509:1: ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2509:1: ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2510:1: ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2510:1: ( ( rule__Program__PinsAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2511:1: ( rule__Program__PinsAssignment_2 )
            {
             before(grammarAccess.getProgramAccess().getPinsAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2512:1: ( rule__Program__PinsAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2512:2: rule__Program__PinsAssignment_2
            {
            pushFollow(FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5462);
            rule__Program__PinsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getPinsAssignment_2()); 

            }

            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2515:1: ( ( rule__Program__PinsAssignment_2 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2516:1: ( rule__Program__PinsAssignment_2 )*
            {
             before(grammarAccess.getProgramAccess().getPinsAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2517:1: ( rule__Program__PinsAssignment_2 )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( ((LA21_0>=17 && LA21_0<=20)) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2517:2: rule__Program__PinsAssignment_2
            	    {
            	    pushFollow(FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5474);
            	    rule__Program__PinsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getPinsAssignment_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2__Impl"


    // $ANTLR start "rule__Program__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2528:1: rule__Program__Group__3 : rule__Program__Group__3__Impl ;
    public final void rule__Program__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2532:1: ( rule__Program__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2533:2: rule__Program__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Program__Group__3__Impl_in_rule__Program__Group__35507);
            rule__Program__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3"


    // $ANTLR start "rule__Program__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2539:1: rule__Program__Group__3__Impl : ( ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* ) ) ;
    public final void rule__Program__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2543:1: ( ( ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2544:1: ( ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2544:1: ( ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2545:1: ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2545:1: ( ( rule__Program__ElementsAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2546:1: ( rule__Program__ElementsAssignment_3 )
            {
             before(grammarAccess.getProgramAccess().getElementsAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2547:1: ( rule__Program__ElementsAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2547:2: rule__Program__ElementsAssignment_3
            {
            pushFollow(FOLLOW_rule__Program__ElementsAssignment_3_in_rule__Program__Group__3__Impl5536);
            rule__Program__ElementsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getElementsAssignment_3()); 

            }

            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2550:1: ( ( rule__Program__ElementsAssignment_3 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2551:1: ( rule__Program__ElementsAssignment_3 )*
            {
             before(grammarAccess.getProgramAccess().getElementsAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2552:1: ( rule__Program__ElementsAssignment_3 )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==RULE_ID||LA22_0==RULE_SC_COMMENT||(LA22_0>=21 && LA22_0<=23)||(LA22_0>=25 && LA22_0<=32)||(LA22_0>=34 && LA22_0<=60)) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2552:2: rule__Program__ElementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_rule__Program__ElementsAssignment_3_in_rule__Program__Group__3__Impl5548);
            	    rule__Program__ElementsAssignment_3();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getElementsAssignment_3()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3__Impl"


    // $ANTLR start "rule__AudioInput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2571:1: rule__AudioInput__Group__0 : rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1 ;
    public final void rule__AudioInput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2575:1: ( rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2576:2: rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__0__Impl_in_rule__AudioInput__Group__05589);
            rule__AudioInput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioInput__Group__1_in_rule__AudioInput__Group__05592);
            rule__AudioInput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__0"


    // $ANTLR start "rule__AudioInput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2583:1: rule__AudioInput__Group__0__Impl : ( '@audioInput' ) ;
    public final void rule__AudioInput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2587:1: ( ( '@audioInput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2588:1: ( '@audioInput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2588:1: ( '@audioInput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2589:1: '@audioInput'
            {
             before(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); 
            match(input,17,FOLLOW_17_in_rule__AudioInput__Group__0__Impl5620); 
             after(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__0__Impl"


    // $ANTLR start "rule__AudioInput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2602:1: rule__AudioInput__Group__1 : rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2 ;
    public final void rule__AudioInput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2606:1: ( rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2607:2: rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__1__Impl_in_rule__AudioInput__Group__15651);
            rule__AudioInput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioInput__Group__2_in_rule__AudioInput__Group__15654);
            rule__AudioInput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__1"


    // $ANTLR start "rule__AudioInput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2614:1: rule__AudioInput__Group__1__Impl : ( ( rule__AudioInput__VarNameAssignment_1 ) ) ;
    public final void rule__AudioInput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2618:1: ( ( ( rule__AudioInput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2619:1: ( ( rule__AudioInput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2619:1: ( ( rule__AudioInput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2620:1: ( rule__AudioInput__VarNameAssignment_1 )
            {
             before(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2621:1: ( rule__AudioInput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2621:2: rule__AudioInput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__AudioInput__VarNameAssignment_1_in_rule__AudioInput__Group__1__Impl5681);
            rule__AudioInput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__1__Impl"


    // $ANTLR start "rule__AudioInput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2631:1: rule__AudioInput__Group__2 : rule__AudioInput__Group__2__Impl ;
    public final void rule__AudioInput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2635:1: ( rule__AudioInput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2636:2: rule__AudioInput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__2__Impl_in_rule__AudioInput__Group__25711);
            rule__AudioInput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__2"


    // $ANTLR start "rule__AudioInput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2642:1: rule__AudioInput__Group__2__Impl : ( ( rule__AudioInput__NameAssignment_2 ) ) ;
    public final void rule__AudioInput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2646:1: ( ( ( rule__AudioInput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2647:1: ( ( rule__AudioInput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2647:1: ( ( rule__AudioInput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2648:1: ( rule__AudioInput__NameAssignment_2 )
            {
             before(grammarAccess.getAudioInputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2649:1: ( rule__AudioInput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2649:2: rule__AudioInput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__AudioInput__NameAssignment_2_in_rule__AudioInput__Group__2__Impl5738);
            rule__AudioInput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__2__Impl"


    // $ANTLR start "rule__AudioOutput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2665:1: rule__AudioOutput__Group__0 : rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1 ;
    public final void rule__AudioOutput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2669:1: ( rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2670:2: rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__0__Impl_in_rule__AudioOutput__Group__05774);
            rule__AudioOutput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioOutput__Group__1_in_rule__AudioOutput__Group__05777);
            rule__AudioOutput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__0"


    // $ANTLR start "rule__AudioOutput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2677:1: rule__AudioOutput__Group__0__Impl : ( '@audioOutput' ) ;
    public final void rule__AudioOutput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2681:1: ( ( '@audioOutput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2682:1: ( '@audioOutput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2682:1: ( '@audioOutput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2683:1: '@audioOutput'
            {
             before(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); 
            match(input,18,FOLLOW_18_in_rule__AudioOutput__Group__0__Impl5805); 
             after(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__0__Impl"


    // $ANTLR start "rule__AudioOutput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2696:1: rule__AudioOutput__Group__1 : rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2 ;
    public final void rule__AudioOutput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2700:1: ( rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2701:2: rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__1__Impl_in_rule__AudioOutput__Group__15836);
            rule__AudioOutput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioOutput__Group__2_in_rule__AudioOutput__Group__15839);
            rule__AudioOutput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__1"


    // $ANTLR start "rule__AudioOutput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2708:1: rule__AudioOutput__Group__1__Impl : ( ( rule__AudioOutput__VarNameAssignment_1 ) ) ;
    public final void rule__AudioOutput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2712:1: ( ( ( rule__AudioOutput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2713:1: ( ( rule__AudioOutput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2713:1: ( ( rule__AudioOutput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2714:1: ( rule__AudioOutput__VarNameAssignment_1 )
            {
             before(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2715:1: ( rule__AudioOutput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2715:2: rule__AudioOutput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__AudioOutput__VarNameAssignment_1_in_rule__AudioOutput__Group__1__Impl5866);
            rule__AudioOutput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__1__Impl"


    // $ANTLR start "rule__AudioOutput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2725:1: rule__AudioOutput__Group__2 : rule__AudioOutput__Group__2__Impl ;
    public final void rule__AudioOutput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2729:1: ( rule__AudioOutput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2730:2: rule__AudioOutput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__2__Impl_in_rule__AudioOutput__Group__25896);
            rule__AudioOutput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__2"


    // $ANTLR start "rule__AudioOutput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2736:1: rule__AudioOutput__Group__2__Impl : ( ( rule__AudioOutput__NameAssignment_2 ) ) ;
    public final void rule__AudioOutput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2740:1: ( ( ( rule__AudioOutput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2741:1: ( ( rule__AudioOutput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2741:1: ( ( rule__AudioOutput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2742:1: ( rule__AudioOutput__NameAssignment_2 )
            {
             before(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2743:1: ( rule__AudioOutput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2743:2: rule__AudioOutput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__AudioOutput__NameAssignment_2_in_rule__AudioOutput__Group__2__Impl5923);
            rule__AudioOutput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__2__Impl"


    // $ANTLR start "rule__ControlInput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2759:1: rule__ControlInput__Group__0 : rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1 ;
    public final void rule__ControlInput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2763:1: ( rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2764:2: rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__0__Impl_in_rule__ControlInput__Group__05959);
            rule__ControlInput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlInput__Group__1_in_rule__ControlInput__Group__05962);
            rule__ControlInput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__0"


    // $ANTLR start "rule__ControlInput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2771:1: rule__ControlInput__Group__0__Impl : ( '@controlInput' ) ;
    public final void rule__ControlInput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2775:1: ( ( '@controlInput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2776:1: ( '@controlInput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2776:1: ( '@controlInput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2777:1: '@controlInput'
            {
             before(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); 
            match(input,19,FOLLOW_19_in_rule__ControlInput__Group__0__Impl5990); 
             after(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__0__Impl"


    // $ANTLR start "rule__ControlInput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2790:1: rule__ControlInput__Group__1 : rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2 ;
    public final void rule__ControlInput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2794:1: ( rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2795:2: rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__1__Impl_in_rule__ControlInput__Group__16021);
            rule__ControlInput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlInput__Group__2_in_rule__ControlInput__Group__16024);
            rule__ControlInput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__1"


    // $ANTLR start "rule__ControlInput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2802:1: rule__ControlInput__Group__1__Impl : ( ( rule__ControlInput__VarNameAssignment_1 ) ) ;
    public final void rule__ControlInput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2806:1: ( ( ( rule__ControlInput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2807:1: ( ( rule__ControlInput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2807:1: ( ( rule__ControlInput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2808:1: ( rule__ControlInput__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2809:1: ( rule__ControlInput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2809:2: rule__ControlInput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlInput__VarNameAssignment_1_in_rule__ControlInput__Group__1__Impl6051);
            rule__ControlInput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__1__Impl"


    // $ANTLR start "rule__ControlInput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2819:1: rule__ControlInput__Group__2 : rule__ControlInput__Group__2__Impl ;
    public final void rule__ControlInput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2823:1: ( rule__ControlInput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2824:2: rule__ControlInput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__2__Impl_in_rule__ControlInput__Group__26081);
            rule__ControlInput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__2"


    // $ANTLR start "rule__ControlInput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2830:1: rule__ControlInput__Group__2__Impl : ( ( rule__ControlInput__NameAssignment_2 ) ) ;
    public final void rule__ControlInput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2834:1: ( ( ( rule__ControlInput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2835:1: ( ( rule__ControlInput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2835:1: ( ( rule__ControlInput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2836:1: ( rule__ControlInput__NameAssignment_2 )
            {
             before(grammarAccess.getControlInputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2837:1: ( rule__ControlInput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2837:2: rule__ControlInput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlInput__NameAssignment_2_in_rule__ControlInput__Group__2__Impl6108);
            rule__ControlInput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__2__Impl"


    // $ANTLR start "rule__ControlOutput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2853:1: rule__ControlOutput__Group__0 : rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1 ;
    public final void rule__ControlOutput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2857:1: ( rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2858:2: rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__0__Impl_in_rule__ControlOutput__Group__06144);
            rule__ControlOutput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlOutput__Group__1_in_rule__ControlOutput__Group__06147);
            rule__ControlOutput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__0"


    // $ANTLR start "rule__ControlOutput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2865:1: rule__ControlOutput__Group__0__Impl : ( '@controlOutput' ) ;
    public final void rule__ControlOutput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2869:1: ( ( '@controlOutput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2870:1: ( '@controlOutput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2870:1: ( '@controlOutput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2871:1: '@controlOutput'
            {
             before(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); 
            match(input,20,FOLLOW_20_in_rule__ControlOutput__Group__0__Impl6175); 
             after(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__0__Impl"


    // $ANTLR start "rule__ControlOutput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2884:1: rule__ControlOutput__Group__1 : rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2 ;
    public final void rule__ControlOutput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2888:1: ( rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2889:2: rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__1__Impl_in_rule__ControlOutput__Group__16206);
            rule__ControlOutput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlOutput__Group__2_in_rule__ControlOutput__Group__16209);
            rule__ControlOutput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__1"


    // $ANTLR start "rule__ControlOutput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2896:1: rule__ControlOutput__Group__1__Impl : ( ( rule__ControlOutput__VarNameAssignment_1 ) ) ;
    public final void rule__ControlOutput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2900:1: ( ( ( rule__ControlOutput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2901:1: ( ( rule__ControlOutput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2901:1: ( ( rule__ControlOutput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2902:1: ( rule__ControlOutput__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2903:1: ( rule__ControlOutput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2903:2: rule__ControlOutput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlOutput__VarNameAssignment_1_in_rule__ControlOutput__Group__1__Impl6236);
            rule__ControlOutput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__1__Impl"


    // $ANTLR start "rule__ControlOutput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2913:1: rule__ControlOutput__Group__2 : rule__ControlOutput__Group__2__Impl ;
    public final void rule__ControlOutput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2917:1: ( rule__ControlOutput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2918:2: rule__ControlOutput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__2__Impl_in_rule__ControlOutput__Group__26266);
            rule__ControlOutput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__2"


    // $ANTLR start "rule__ControlOutput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2924:1: rule__ControlOutput__Group__2__Impl : ( ( rule__ControlOutput__NameAssignment_2 ) ) ;
    public final void rule__ControlOutput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2928:1: ( ( ( rule__ControlOutput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2929:1: ( ( rule__ControlOutput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2929:1: ( ( rule__ControlOutput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2930:1: ( rule__ControlOutput__NameAssignment_2 )
            {
             before(grammarAccess.getControlOutputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2931:1: ( rule__ControlOutput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2931:2: rule__ControlOutput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlOutput__NameAssignment_2_in_rule__ControlOutput__Group__2__Impl6293);
            rule__ControlOutput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__2__Impl"


    // $ANTLR start "rule__Equate__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2947:1: rule__Equate__Group__0 : rule__Equate__Group__0__Impl rule__Equate__Group__1 ;
    public final void rule__Equate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2951:1: ( rule__Equate__Group__0__Impl rule__Equate__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2952:2: rule__Equate__Group__0__Impl rule__Equate__Group__1
            {
            pushFollow(FOLLOW_rule__Equate__Group__0__Impl_in_rule__Equate__Group__06329);
            rule__Equate__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group__1_in_rule__Equate__Group__06332);
            rule__Equate__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__0"


    // $ANTLR start "rule__Equate__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2959:1: rule__Equate__Group__0__Impl : ( 'equ' ) ;
    public final void rule__Equate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2963:1: ( ( 'equ' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2964:1: ( 'equ' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2964:1: ( 'equ' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2965:1: 'equ'
            {
             before(grammarAccess.getEquateAccess().getEquKeyword_0()); 
            match(input,21,FOLLOW_21_in_rule__Equate__Group__0__Impl6360); 
             after(grammarAccess.getEquateAccess().getEquKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__0__Impl"


    // $ANTLR start "rule__Equate__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2978:1: rule__Equate__Group__1 : rule__Equate__Group__1__Impl rule__Equate__Group__2 ;
    public final void rule__Equate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2982:1: ( rule__Equate__Group__1__Impl rule__Equate__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2983:2: rule__Equate__Group__1__Impl rule__Equate__Group__2
            {
            pushFollow(FOLLOW_rule__Equate__Group__1__Impl_in_rule__Equate__Group__16391);
            rule__Equate__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group__2_in_rule__Equate__Group__16394);
            rule__Equate__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__1"


    // $ANTLR start "rule__Equate__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2990:1: rule__Equate__Group__1__Impl : ( ( rule__Equate__EnameAssignment_1 ) ) ;
    public final void rule__Equate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2994:1: ( ( ( rule__Equate__EnameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2995:1: ( ( rule__Equate__EnameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2995:1: ( ( rule__Equate__EnameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2996:1: ( rule__Equate__EnameAssignment_1 )
            {
             before(grammarAccess.getEquateAccess().getEnameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2997:1: ( rule__Equate__EnameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2997:2: rule__Equate__EnameAssignment_1
            {
            pushFollow(FOLLOW_rule__Equate__EnameAssignment_1_in_rule__Equate__Group__1__Impl6421);
            rule__Equate__EnameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getEnameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__1__Impl"


    // $ANTLR start "rule__Equate__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3007:1: rule__Equate__Group__2 : rule__Equate__Group__2__Impl rule__Equate__Group__3 ;
    public final void rule__Equate__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3011:1: ( rule__Equate__Group__2__Impl rule__Equate__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3012:2: rule__Equate__Group__2__Impl rule__Equate__Group__3
            {
            pushFollow(FOLLOW_rule__Equate__Group__2__Impl_in_rule__Equate__Group__26451);
            rule__Equate__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group__3_in_rule__Equate__Group__26454);
            rule__Equate__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__2"


    // $ANTLR start "rule__Equate__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3019:1: rule__Equate__Group__2__Impl : ( ( rule__Equate__ValueAssignment_2 ) ) ;
    public final void rule__Equate__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3023:1: ( ( ( rule__Equate__ValueAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3024:1: ( ( rule__Equate__ValueAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3024:1: ( ( rule__Equate__ValueAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3025:1: ( rule__Equate__ValueAssignment_2 )
            {
             before(grammarAccess.getEquateAccess().getValueAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3026:1: ( rule__Equate__ValueAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3026:2: rule__Equate__ValueAssignment_2
            {
            pushFollow(FOLLOW_rule__Equate__ValueAssignment_2_in_rule__Equate__Group__2__Impl6481);
            rule__Equate__ValueAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getValueAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__2__Impl"


    // $ANTLR start "rule__Equate__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3036:1: rule__Equate__Group__3 : rule__Equate__Group__3__Impl ;
    public final void rule__Equate__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3040:1: ( rule__Equate__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3041:2: rule__Equate__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Equate__Group__3__Impl_in_rule__Equate__Group__36511);
            rule__Equate__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__3"


    // $ANTLR start "rule__Equate__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3047:1: rule__Equate__Group__3__Impl : ( ( rule__Equate__Group_3__0 )? ) ;
    public final void rule__Equate__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3051:1: ( ( ( rule__Equate__Group_3__0 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3052:1: ( ( rule__Equate__Group_3__0 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3052:1: ( ( rule__Equate__Group_3__0 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3053:1: ( rule__Equate__Group_3__0 )?
            {
             before(grammarAccess.getEquateAccess().getGroup_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3054:1: ( rule__Equate__Group_3__0 )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                int LA23_1 = input.LA(2);

                if ( (LA23_1==RULE_ID) ) {
                    alt23=1;
                }
            }
            switch (alt23) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3054:2: rule__Equate__Group_3__0
                    {
                    pushFollow(FOLLOW_rule__Equate__Group_3__0_in_rule__Equate__Group__3__Impl6538);
                    rule__Equate__Group_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getEquateAccess().getGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__3__Impl"


    // $ANTLR start "rule__Equate__Group_3__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3072:1: rule__Equate__Group_3__0 : rule__Equate__Group_3__0__Impl rule__Equate__Group_3__1 ;
    public final void rule__Equate__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3076:1: ( rule__Equate__Group_3__0__Impl rule__Equate__Group_3__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3077:2: rule__Equate__Group_3__0__Impl rule__Equate__Group_3__1
            {
            pushFollow(FOLLOW_rule__Equate__Group_3__0__Impl_in_rule__Equate__Group_3__06577);
            rule__Equate__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group_3__1_in_rule__Equate__Group_3__06580);
            rule__Equate__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group_3__0"


    // $ANTLR start "rule__Equate__Group_3__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3084:1: rule__Equate__Group_3__0__Impl : ( ( rule__Equate__ControlTypeAssignment_3_0 ) ) ;
    public final void rule__Equate__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3088:1: ( ( ( rule__Equate__ControlTypeAssignment_3_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3089:1: ( ( rule__Equate__ControlTypeAssignment_3_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3089:1: ( ( rule__Equate__ControlTypeAssignment_3_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3090:1: ( rule__Equate__ControlTypeAssignment_3_0 )
            {
             before(grammarAccess.getEquateAccess().getControlTypeAssignment_3_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3091:1: ( rule__Equate__ControlTypeAssignment_3_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3091:2: rule__Equate__ControlTypeAssignment_3_0
            {
            pushFollow(FOLLOW_rule__Equate__ControlTypeAssignment_3_0_in_rule__Equate__Group_3__0__Impl6607);
            rule__Equate__ControlTypeAssignment_3_0();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getControlTypeAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group_3__0__Impl"


    // $ANTLR start "rule__Equate__Group_3__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3101:1: rule__Equate__Group_3__1 : rule__Equate__Group_3__1__Impl rule__Equate__Group_3__2 ;
    public final void rule__Equate__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3105:1: ( rule__Equate__Group_3__1__Impl rule__Equate__Group_3__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3106:2: rule__Equate__Group_3__1__Impl rule__Equate__Group_3__2
            {
            pushFollow(FOLLOW_rule__Equate__Group_3__1__Impl_in_rule__Equate__Group_3__16637);
            rule__Equate__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group_3__2_in_rule__Equate__Group_3__16640);
            rule__Equate__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group_3__1"


    // $ANTLR start "rule__Equate__Group_3__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3113:1: rule__Equate__Group_3__1__Impl : ( ( rule__Equate__ControlNameAssignment_3_1 ) ) ;
    public final void rule__Equate__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3117:1: ( ( ( rule__Equate__ControlNameAssignment_3_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3118:1: ( ( rule__Equate__ControlNameAssignment_3_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3118:1: ( ( rule__Equate__ControlNameAssignment_3_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3119:1: ( rule__Equate__ControlNameAssignment_3_1 )
            {
             before(grammarAccess.getEquateAccess().getControlNameAssignment_3_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3120:1: ( rule__Equate__ControlNameAssignment_3_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3120:2: rule__Equate__ControlNameAssignment_3_1
            {
            pushFollow(FOLLOW_rule__Equate__ControlNameAssignment_3_1_in_rule__Equate__Group_3__1__Impl6667);
            rule__Equate__ControlNameAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getControlNameAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group_3__1__Impl"


    // $ANTLR start "rule__Equate__Group_3__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3130:1: rule__Equate__Group_3__2 : rule__Equate__Group_3__2__Impl rule__Equate__Group_3__3 ;
    public final void rule__Equate__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3134:1: ( rule__Equate__Group_3__2__Impl rule__Equate__Group_3__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3135:2: rule__Equate__Group_3__2__Impl rule__Equate__Group_3__3
            {
            pushFollow(FOLLOW_rule__Equate__Group_3__2__Impl_in_rule__Equate__Group_3__26697);
            rule__Equate__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group_3__3_in_rule__Equate__Group_3__26700);
            rule__Equate__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group_3__2"


    // $ANTLR start "rule__Equate__Group_3__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3142:1: rule__Equate__Group_3__2__Impl : ( ( rule__Equate__MaxAssignment_3_2 ) ) ;
    public final void rule__Equate__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3146:1: ( ( ( rule__Equate__MaxAssignment_3_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3147:1: ( ( rule__Equate__MaxAssignment_3_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3147:1: ( ( rule__Equate__MaxAssignment_3_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3148:1: ( rule__Equate__MaxAssignment_3_2 )
            {
             before(grammarAccess.getEquateAccess().getMaxAssignment_3_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3149:1: ( rule__Equate__MaxAssignment_3_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3149:2: rule__Equate__MaxAssignment_3_2
            {
            pushFollow(FOLLOW_rule__Equate__MaxAssignment_3_2_in_rule__Equate__Group_3__2__Impl6727);
            rule__Equate__MaxAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getMaxAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group_3__2__Impl"


    // $ANTLR start "rule__Equate__Group_3__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3159:1: rule__Equate__Group_3__3 : rule__Equate__Group_3__3__Impl ;
    public final void rule__Equate__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3163:1: ( rule__Equate__Group_3__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3164:2: rule__Equate__Group_3__3__Impl
            {
            pushFollow(FOLLOW_rule__Equate__Group_3__3__Impl_in_rule__Equate__Group_3__36757);
            rule__Equate__Group_3__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group_3__3"


    // $ANTLR start "rule__Equate__Group_3__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3170:1: rule__Equate__Group_3__3__Impl : ( ( rule__Equate__MultiplierAssignment_3_3 ) ) ;
    public final void rule__Equate__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3174:1: ( ( ( rule__Equate__MultiplierAssignment_3_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3175:1: ( ( rule__Equate__MultiplierAssignment_3_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3175:1: ( ( rule__Equate__MultiplierAssignment_3_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3176:1: ( rule__Equate__MultiplierAssignment_3_3 )
            {
             before(grammarAccess.getEquateAccess().getMultiplierAssignment_3_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3177:1: ( rule__Equate__MultiplierAssignment_3_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3177:2: rule__Equate__MultiplierAssignment_3_3
            {
            pushFollow(FOLLOW_rule__Equate__MultiplierAssignment_3_3_in_rule__Equate__Group_3__3__Impl6784);
            rule__Equate__MultiplierAssignment_3_3();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getMultiplierAssignment_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group_3__3__Impl"


    // $ANTLR start "rule__Mem__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3195:1: rule__Mem__Group__0 : rule__Mem__Group__0__Impl rule__Mem__Group__1 ;
    public final void rule__Mem__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3199:1: ( rule__Mem__Group__0__Impl rule__Mem__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3200:2: rule__Mem__Group__0__Impl rule__Mem__Group__1
            {
            pushFollow(FOLLOW_rule__Mem__Group__0__Impl_in_rule__Mem__Group__06822);
            rule__Mem__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mem__Group__1_in_rule__Mem__Group__06825);
            rule__Mem__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__0"


    // $ANTLR start "rule__Mem__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3207:1: rule__Mem__Group__0__Impl : ( 'mem' ) ;
    public final void rule__Mem__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3211:1: ( ( 'mem' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3212:1: ( 'mem' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3212:1: ( 'mem' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3213:1: 'mem'
            {
             before(grammarAccess.getMemAccess().getMemKeyword_0()); 
            match(input,22,FOLLOW_22_in_rule__Mem__Group__0__Impl6853); 
             after(grammarAccess.getMemAccess().getMemKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__0__Impl"


    // $ANTLR start "rule__Mem__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3226:1: rule__Mem__Group__1 : rule__Mem__Group__1__Impl rule__Mem__Group__2 ;
    public final void rule__Mem__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3230:1: ( rule__Mem__Group__1__Impl rule__Mem__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3231:2: rule__Mem__Group__1__Impl rule__Mem__Group__2
            {
            pushFollow(FOLLOW_rule__Mem__Group__1__Impl_in_rule__Mem__Group__16884);
            rule__Mem__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mem__Group__2_in_rule__Mem__Group__16887);
            rule__Mem__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__1"


    // $ANTLR start "rule__Mem__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3238:1: rule__Mem__Group__1__Impl : ( ( rule__Mem__BufferAssignment_1 ) ) ;
    public final void rule__Mem__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3242:1: ( ( ( rule__Mem__BufferAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3243:1: ( ( rule__Mem__BufferAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3243:1: ( ( rule__Mem__BufferAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3244:1: ( rule__Mem__BufferAssignment_1 )
            {
             before(grammarAccess.getMemAccess().getBufferAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3245:1: ( rule__Mem__BufferAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3245:2: rule__Mem__BufferAssignment_1
            {
            pushFollow(FOLLOW_rule__Mem__BufferAssignment_1_in_rule__Mem__Group__1__Impl6914);
            rule__Mem__BufferAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getBufferAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__1__Impl"


    // $ANTLR start "rule__Mem__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3255:1: rule__Mem__Group__2 : rule__Mem__Group__2__Impl ;
    public final void rule__Mem__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3259:1: ( rule__Mem__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3260:2: rule__Mem__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Mem__Group__2__Impl_in_rule__Mem__Group__26944);
            rule__Mem__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__2"


    // $ANTLR start "rule__Mem__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3266:1: rule__Mem__Group__2__Impl : ( ( rule__Mem__LengthAssignment_2 ) ) ;
    public final void rule__Mem__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3270:1: ( ( ( rule__Mem__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3271:1: ( ( rule__Mem__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3271:1: ( ( rule__Mem__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3272:1: ( rule__Mem__LengthAssignment_2 )
            {
             before(grammarAccess.getMemAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3273:1: ( rule__Mem__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3273:2: rule__Mem__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__Mem__LengthAssignment_2_in_rule__Mem__Group__2__Impl6971);
            rule__Mem__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__2__Impl"


    // $ANTLR start "rule__Offset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3289:1: rule__Offset__Group__0 : rule__Offset__Group__0__Impl rule__Offset__Group__1 ;
    public final void rule__Offset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3293:1: ( rule__Offset__Group__0__Impl rule__Offset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3294:2: rule__Offset__Group__0__Impl rule__Offset__Group__1
            {
            pushFollow(FOLLOW_rule__Offset__Group__0__Impl_in_rule__Offset__Group__07007);
            rule__Offset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Offset__Group__1_in_rule__Offset__Group__07010);
            rule__Offset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__0"


    // $ANTLR start "rule__Offset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3301:1: rule__Offset__Group__0__Impl : ( 'offset' ) ;
    public final void rule__Offset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3305:1: ( ( 'offset' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3306:1: ( 'offset' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3306:1: ( 'offset' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3307:1: 'offset'
            {
             before(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); 
            match(input,23,FOLLOW_23_in_rule__Offset__Group__0__Impl7038); 
             after(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__0__Impl"


    // $ANTLR start "rule__Offset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3320:1: rule__Offset__Group__1 : rule__Offset__Group__1__Impl rule__Offset__Group__2 ;
    public final void rule__Offset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3324:1: ( rule__Offset__Group__1__Impl rule__Offset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3325:2: rule__Offset__Group__1__Impl rule__Offset__Group__2
            {
            pushFollow(FOLLOW_rule__Offset__Group__1__Impl_in_rule__Offset__Group__17069);
            rule__Offset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Offset__Group__2_in_rule__Offset__Group__17072);
            rule__Offset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__1"


    // $ANTLR start "rule__Offset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3332:1: rule__Offset__Group__1__Impl : ( ( rule__Offset__NameAssignment_1 ) ) ;
    public final void rule__Offset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3336:1: ( ( ( rule__Offset__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3337:1: ( ( rule__Offset__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3337:1: ( ( rule__Offset__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3338:1: ( rule__Offset__NameAssignment_1 )
            {
             before(grammarAccess.getOffsetAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3339:1: ( rule__Offset__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3339:2: rule__Offset__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__Offset__NameAssignment_1_in_rule__Offset__Group__1__Impl7099);
            rule__Offset__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__1__Impl"


    // $ANTLR start "rule__Offset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3349:1: rule__Offset__Group__2 : rule__Offset__Group__2__Impl ;
    public final void rule__Offset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3353:1: ( rule__Offset__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3354:2: rule__Offset__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Offset__Group__2__Impl_in_rule__Offset__Group__27129);
            rule__Offset__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__2"


    // $ANTLR start "rule__Offset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3360:1: rule__Offset__Group__2__Impl : ( ( rule__Offset__LengthAssignment_2 ) ) ;
    public final void rule__Offset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3364:1: ( ( ( rule__Offset__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3365:1: ( ( rule__Offset__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3365:1: ( ( rule__Offset__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3366:1: ( rule__Offset__LengthAssignment_2 )
            {
             before(grammarAccess.getOffsetAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3367:1: ( rule__Offset__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3367:2: rule__Offset__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__Offset__LengthAssignment_2_in_rule__Offset__Group__2__Impl7156);
            rule__Offset__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__2__Impl"


    // $ANTLR start "rule__Label__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3383:1: rule__Label__Group__0 : rule__Label__Group__0__Impl rule__Label__Group__1 ;
    public final void rule__Label__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3387:1: ( rule__Label__Group__0__Impl rule__Label__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3388:2: rule__Label__Group__0__Impl rule__Label__Group__1
            {
            pushFollow(FOLLOW_rule__Label__Group__0__Impl_in_rule__Label__Group__07192);
            rule__Label__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Label__Group__1_in_rule__Label__Group__07195);
            rule__Label__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__0"


    // $ANTLR start "rule__Label__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3395:1: rule__Label__Group__0__Impl : ( ( rule__Label__NameAssignment_0 ) ) ;
    public final void rule__Label__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3399:1: ( ( ( rule__Label__NameAssignment_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3400:1: ( ( rule__Label__NameAssignment_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3400:1: ( ( rule__Label__NameAssignment_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3401:1: ( rule__Label__NameAssignment_0 )
            {
             before(grammarAccess.getLabelAccess().getNameAssignment_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3402:1: ( rule__Label__NameAssignment_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3402:2: rule__Label__NameAssignment_0
            {
            pushFollow(FOLLOW_rule__Label__NameAssignment_0_in_rule__Label__Group__0__Impl7222);
            rule__Label__NameAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getLabelAccess().getNameAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__0__Impl"


    // $ANTLR start "rule__Label__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3412:1: rule__Label__Group__1 : rule__Label__Group__1__Impl ;
    public final void rule__Label__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3416:1: ( rule__Label__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3417:2: rule__Label__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Label__Group__1__Impl_in_rule__Label__Group__17252);
            rule__Label__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__1"


    // $ANTLR start "rule__Label__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3423:1: rule__Label__Group__1__Impl : ( ':' ) ;
    public final void rule__Label__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3427:1: ( ( ':' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3428:1: ( ':' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3428:1: ( ':' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3429:1: ':'
            {
             before(grammarAccess.getLabelAccess().getColonKeyword_1()); 
            match(input,24,FOLLOW_24_in_rule__Label__Group__1__Impl7280); 
             after(grammarAccess.getLabelAccess().getColonKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__1__Impl"


    // $ANTLR start "rule__IsPinConnected__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3446:1: rule__IsPinConnected__Group__0 : rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1 ;
    public final void rule__IsPinConnected__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3450:1: ( rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3451:2: rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__0__Impl_in_rule__IsPinConnected__Group__07315);
            rule__IsPinConnected__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsPinConnected__Group__1_in_rule__IsPinConnected__Group__07318);
            rule__IsPinConnected__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__0"


    // $ANTLR start "rule__IsPinConnected__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3458:1: rule__IsPinConnected__Group__0__Impl : ( '@isPinConnected' ) ;
    public final void rule__IsPinConnected__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3462:1: ( ( '@isPinConnected' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3463:1: ( '@isPinConnected' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3463:1: ( '@isPinConnected' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3464:1: '@isPinConnected'
            {
             before(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); 
            match(input,25,FOLLOW_25_in_rule__IsPinConnected__Group__0__Impl7346); 
             after(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__0__Impl"


    // $ANTLR start "rule__IsPinConnected__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3477:1: rule__IsPinConnected__Group__1 : rule__IsPinConnected__Group__1__Impl ;
    public final void rule__IsPinConnected__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3481:1: ( rule__IsPinConnected__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3482:2: rule__IsPinConnected__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__1__Impl_in_rule__IsPinConnected__Group__17377);
            rule__IsPinConnected__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__1"


    // $ANTLR start "rule__IsPinConnected__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3488:1: rule__IsPinConnected__Group__1__Impl : ( ( rule__IsPinConnected__Arg1Assignment_1 ) ) ;
    public final void rule__IsPinConnected__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3492:1: ( ( ( rule__IsPinConnected__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3493:1: ( ( rule__IsPinConnected__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3493:1: ( ( rule__IsPinConnected__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3494:1: ( rule__IsPinConnected__Arg1Assignment_1 )
            {
             before(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3495:1: ( rule__IsPinConnected__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3495:2: rule__IsPinConnected__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Arg1Assignment_1_in_rule__IsPinConnected__Group__1__Impl7404);
            rule__IsPinConnected__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__1__Impl"


    // $ANTLR start "rule__IsElse__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3509:1: rule__IsElse__Group__0 : rule__IsElse__Group__0__Impl rule__IsElse__Group__1 ;
    public final void rule__IsElse__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3513:1: ( rule__IsElse__Group__0__Impl rule__IsElse__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3514:2: rule__IsElse__Group__0__Impl rule__IsElse__Group__1
            {
            pushFollow(FOLLOW_rule__IsElse__Group__0__Impl_in_rule__IsElse__Group__07438);
            rule__IsElse__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsElse__Group__1_in_rule__IsElse__Group__07441);
            rule__IsElse__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__0"


    // $ANTLR start "rule__IsElse__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3521:1: rule__IsElse__Group__0__Impl : ( () ) ;
    public final void rule__IsElse__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3525:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3526:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3526:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3527:1: ()
            {
             before(grammarAccess.getIsElseAccess().getIsElseAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3528:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3530:1: 
            {
            }

             after(grammarAccess.getIsElseAccess().getIsElseAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__0__Impl"


    // $ANTLR start "rule__IsElse__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3540:1: rule__IsElse__Group__1 : rule__IsElse__Group__1__Impl ;
    public final void rule__IsElse__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3544:1: ( rule__IsElse__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3545:2: rule__IsElse__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsElse__Group__1__Impl_in_rule__IsElse__Group__17499);
            rule__IsElse__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__1"


    // $ANTLR start "rule__IsElse__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3551:1: rule__IsElse__Group__1__Impl : ( '@else' ) ;
    public final void rule__IsElse__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3555:1: ( ( '@else' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3556:1: ( '@else' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3556:1: ( '@else' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3557:1: '@else'
            {
             before(grammarAccess.getIsElseAccess().getElseKeyword_1()); 
            match(input,26,FOLLOW_26_in_rule__IsElse__Group__1__Impl7527); 
             after(grammarAccess.getIsElseAccess().getElseKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__1__Impl"


    // $ANTLR start "rule__IsEndif__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3574:1: rule__IsEndif__Group__0 : rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1 ;
    public final void rule__IsEndif__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3578:1: ( rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3579:2: rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__0__Impl_in_rule__IsEndif__Group__07562);
            rule__IsEndif__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsEndif__Group__1_in_rule__IsEndif__Group__07565);
            rule__IsEndif__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__0"


    // $ANTLR start "rule__IsEndif__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3586:1: rule__IsEndif__Group__0__Impl : ( () ) ;
    public final void rule__IsEndif__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3590:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3591:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3591:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3592:1: ()
            {
             before(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3593:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3595:1: 
            {
            }

             after(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__0__Impl"


    // $ANTLR start "rule__IsEndif__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3605:1: rule__IsEndif__Group__1 : rule__IsEndif__Group__1__Impl ;
    public final void rule__IsEndif__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3609:1: ( rule__IsEndif__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3610:2: rule__IsEndif__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__1__Impl_in_rule__IsEndif__Group__17623);
            rule__IsEndif__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__1"


    // $ANTLR start "rule__IsEndif__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3616:1: rule__IsEndif__Group__1__Impl : ( '@endif' ) ;
    public final void rule__IsEndif__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3620:1: ( ( '@endif' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3621:1: ( '@endif' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3621:1: ( '@endif' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3622:1: '@endif'
            {
             before(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); 
            match(input,27,FOLLOW_27_in_rule__IsEndif__Group__1__Impl7651); 
             after(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__1__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3639:1: rule__GetInputDefault__Group__0 : rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1 ;
    public final void rule__GetInputDefault__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3643:1: ( rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3644:2: rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__0__Impl_in_rule__GetInputDefault__Group__07686);
            rule__GetInputDefault__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__1_in_rule__GetInputDefault__Group__07689);
            rule__GetInputDefault__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__0"


    // $ANTLR start "rule__GetInputDefault__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3651:1: rule__GetInputDefault__Group__0__Impl : ( '@getInputDefault' ) ;
    public final void rule__GetInputDefault__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3655:1: ( ( '@getInputDefault' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3656:1: ( '@getInputDefault' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3656:1: ( '@getInputDefault' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3657:1: '@getInputDefault'
            {
             before(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); 
            match(input,28,FOLLOW_28_in_rule__GetInputDefault__Group__0__Impl7717); 
             after(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__0__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3670:1: rule__GetInputDefault__Group__1 : rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2 ;
    public final void rule__GetInputDefault__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3674:1: ( rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3675:2: rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__1__Impl_in_rule__GetInputDefault__Group__17748);
            rule__GetInputDefault__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__2_in_rule__GetInputDefault__Group__17751);
            rule__GetInputDefault__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__1"


    // $ANTLR start "rule__GetInputDefault__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3682:1: rule__GetInputDefault__Group__1__Impl : ( ( rule__GetInputDefault__NameAssignment_1 ) ) ;
    public final void rule__GetInputDefault__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3686:1: ( ( ( rule__GetInputDefault__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3687:1: ( ( rule__GetInputDefault__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3687:1: ( ( rule__GetInputDefault__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3688:1: ( rule__GetInputDefault__NameAssignment_1 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3689:1: ( rule__GetInputDefault__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3689:2: rule__GetInputDefault__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__GetInputDefault__NameAssignment_1_in_rule__GetInputDefault__Group__1__Impl7778);
            rule__GetInputDefault__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__1__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3699:1: rule__GetInputDefault__Group__2 : rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3 ;
    public final void rule__GetInputDefault__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3703:1: ( rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3704:2: rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__2__Impl_in_rule__GetInputDefault__Group__27808);
            rule__GetInputDefault__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__3_in_rule__GetInputDefault__Group__27811);
            rule__GetInputDefault__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__2"


    // $ANTLR start "rule__GetInputDefault__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3711:1: rule__GetInputDefault__Group__2__Impl : ( ( rule__GetInputDefault__VariableAssignment_2 ) ) ;
    public final void rule__GetInputDefault__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3715:1: ( ( ( rule__GetInputDefault__VariableAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3716:1: ( ( rule__GetInputDefault__VariableAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3716:1: ( ( rule__GetInputDefault__VariableAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3717:1: ( rule__GetInputDefault__VariableAssignment_2 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3718:1: ( rule__GetInputDefault__VariableAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3718:2: rule__GetInputDefault__VariableAssignment_2
            {
            pushFollow(FOLLOW_rule__GetInputDefault__VariableAssignment_2_in_rule__GetInputDefault__Group__2__Impl7838);
            rule__GetInputDefault__VariableAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__2__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3728:1: rule__GetInputDefault__Group__3 : rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4 ;
    public final void rule__GetInputDefault__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3732:1: ( rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3733:2: rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__3__Impl_in_rule__GetInputDefault__Group__37868);
            rule__GetInputDefault__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__4_in_rule__GetInputDefault__Group__37871);
            rule__GetInputDefault__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__3"


    // $ANTLR start "rule__GetInputDefault__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3740:1: rule__GetInputDefault__Group__3__Impl : ( ( rule__GetInputDefault__ScaleAssignment_3 ) ) ;
    public final void rule__GetInputDefault__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3744:1: ( ( ( rule__GetInputDefault__ScaleAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3745:1: ( ( rule__GetInputDefault__ScaleAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3745:1: ( ( rule__GetInputDefault__ScaleAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3746:1: ( rule__GetInputDefault__ScaleAssignment_3 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3747:1: ( rule__GetInputDefault__ScaleAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3747:2: rule__GetInputDefault__ScaleAssignment_3
            {
            pushFollow(FOLLOW_rule__GetInputDefault__ScaleAssignment_3_in_rule__GetInputDefault__Group__3__Impl7898);
            rule__GetInputDefault__ScaleAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__3__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3757:1: rule__GetInputDefault__Group__4 : rule__GetInputDefault__Group__4__Impl ;
    public final void rule__GetInputDefault__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3761:1: ( rule__GetInputDefault__Group__4__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3762:2: rule__GetInputDefault__Group__4__Impl
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__4__Impl_in_rule__GetInputDefault__Group__47928);
            rule__GetInputDefault__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__4"


    // $ANTLR start "rule__GetInputDefault__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3768:1: rule__GetInputDefault__Group__4__Impl : ( ( rule__GetInputDefault__DefaultValAssignment_4 ) ) ;
    public final void rule__GetInputDefault__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3772:1: ( ( ( rule__GetInputDefault__DefaultValAssignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3773:1: ( ( rule__GetInputDefault__DefaultValAssignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3773:1: ( ( rule__GetInputDefault__DefaultValAssignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3774:1: ( rule__GetInputDefault__DefaultValAssignment_4 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3775:1: ( rule__GetInputDefault__DefaultValAssignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3775:2: rule__GetInputDefault__DefaultValAssignment_4
            {
            pushFollow(FOLLOW_rule__GetInputDefault__DefaultValAssignment_4_in_rule__GetInputDefault__Group__4__Impl7955);
            rule__GetInputDefault__DefaultValAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__4__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3795:1: rule__GetDelayScaleControl__Group__0 : rule__GetDelayScaleControl__Group__0__Impl rule__GetDelayScaleControl__Group__1 ;
    public final void rule__GetDelayScaleControl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3799:1: ( rule__GetDelayScaleControl__Group__0__Impl rule__GetDelayScaleControl__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3800:2: rule__GetDelayScaleControl__Group__0__Impl rule__GetDelayScaleControl__Group__1
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__0__Impl_in_rule__GetDelayScaleControl__Group__07995);
            rule__GetDelayScaleControl__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__1_in_rule__GetDelayScaleControl__Group__07998);
            rule__GetDelayScaleControl__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__0"


    // $ANTLR start "rule__GetDelayScaleControl__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3807:1: rule__GetDelayScaleControl__Group__0__Impl : ( '@getDelayScaleControl' ) ;
    public final void rule__GetDelayScaleControl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3811:1: ( ( '@getDelayScaleControl' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3812:1: ( '@getDelayScaleControl' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3812:1: ( '@getDelayScaleControl' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3813:1: '@getDelayScaleControl'
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getGetDelayScaleControlKeyword_0()); 
            match(input,29,FOLLOW_29_in_rule__GetDelayScaleControl__Group__0__Impl8026); 
             after(grammarAccess.getGetDelayScaleControlAccess().getGetDelayScaleControlKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__0__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3826:1: rule__GetDelayScaleControl__Group__1 : rule__GetDelayScaleControl__Group__1__Impl rule__GetDelayScaleControl__Group__2 ;
    public final void rule__GetDelayScaleControl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3830:1: ( rule__GetDelayScaleControl__Group__1__Impl rule__GetDelayScaleControl__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3831:2: rule__GetDelayScaleControl__Group__1__Impl rule__GetDelayScaleControl__Group__2
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__1__Impl_in_rule__GetDelayScaleControl__Group__18057);
            rule__GetDelayScaleControl__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__2_in_rule__GetDelayScaleControl__Group__18060);
            rule__GetDelayScaleControl__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__1"


    // $ANTLR start "rule__GetDelayScaleControl__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3838:1: rule__GetDelayScaleControl__Group__1__Impl : ( ( rule__GetDelayScaleControl__RatioAssignment_1 ) ) ;
    public final void rule__GetDelayScaleControl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3842:1: ( ( ( rule__GetDelayScaleControl__RatioAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3843:1: ( ( rule__GetDelayScaleControl__RatioAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3843:1: ( ( rule__GetDelayScaleControl__RatioAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3844:1: ( rule__GetDelayScaleControl__RatioAssignment_1 )
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getRatioAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3845:1: ( rule__GetDelayScaleControl__RatioAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3845:2: rule__GetDelayScaleControl__RatioAssignment_1
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__RatioAssignment_1_in_rule__GetDelayScaleControl__Group__1__Impl8087);
            rule__GetDelayScaleControl__RatioAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleControlAccess().getRatioAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__1__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3855:1: rule__GetDelayScaleControl__Group__2 : rule__GetDelayScaleControl__Group__2__Impl rule__GetDelayScaleControl__Group__3 ;
    public final void rule__GetDelayScaleControl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3859:1: ( rule__GetDelayScaleControl__Group__2__Impl rule__GetDelayScaleControl__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3860:2: rule__GetDelayScaleControl__Group__2__Impl rule__GetDelayScaleControl__Group__3
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__2__Impl_in_rule__GetDelayScaleControl__Group__28117);
            rule__GetDelayScaleControl__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__3_in_rule__GetDelayScaleControl__Group__28120);
            rule__GetDelayScaleControl__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__2"


    // $ANTLR start "rule__GetDelayScaleControl__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3867:1: rule__GetDelayScaleControl__Group__2__Impl : ( ( rule__GetDelayScaleControl__LengthAssignment_2 ) ) ;
    public final void rule__GetDelayScaleControl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3871:1: ( ( ( rule__GetDelayScaleControl__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3872:1: ( ( rule__GetDelayScaleControl__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3872:1: ( ( rule__GetDelayScaleControl__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3873:1: ( rule__GetDelayScaleControl__LengthAssignment_2 )
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3874:1: ( rule__GetDelayScaleControl__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3874:2: rule__GetDelayScaleControl__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__LengthAssignment_2_in_rule__GetDelayScaleControl__Group__2__Impl8147);
            rule__GetDelayScaleControl__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleControlAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__2__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3884:1: rule__GetDelayScaleControl__Group__3 : rule__GetDelayScaleControl__Group__3__Impl rule__GetDelayScaleControl__Group__4 ;
    public final void rule__GetDelayScaleControl__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3888:1: ( rule__GetDelayScaleControl__Group__3__Impl rule__GetDelayScaleControl__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3889:2: rule__GetDelayScaleControl__Group__3__Impl rule__GetDelayScaleControl__Group__4
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__3__Impl_in_rule__GetDelayScaleControl__Group__38177);
            rule__GetDelayScaleControl__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__4_in_rule__GetDelayScaleControl__Group__38180);
            rule__GetDelayScaleControl__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__3"


    // $ANTLR start "rule__GetDelayScaleControl__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3896:1: rule__GetDelayScaleControl__Group__3__Impl : ( ( rule__GetDelayScaleControl__OffsetAssignment_3 ) ) ;
    public final void rule__GetDelayScaleControl__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3900:1: ( ( ( rule__GetDelayScaleControl__OffsetAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3901:1: ( ( rule__GetDelayScaleControl__OffsetAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3901:1: ( ( rule__GetDelayScaleControl__OffsetAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3902:1: ( rule__GetDelayScaleControl__OffsetAssignment_3 )
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getOffsetAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3903:1: ( rule__GetDelayScaleControl__OffsetAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3903:2: rule__GetDelayScaleControl__OffsetAssignment_3
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__OffsetAssignment_3_in_rule__GetDelayScaleControl__Group__3__Impl8207);
            rule__GetDelayScaleControl__OffsetAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleControlAccess().getOffsetAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__3__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3913:1: rule__GetDelayScaleControl__Group__4 : rule__GetDelayScaleControl__Group__4__Impl ;
    public final void rule__GetDelayScaleControl__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3917:1: ( rule__GetDelayScaleControl__Group__4__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3918:2: rule__GetDelayScaleControl__Group__4__Impl
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__4__Impl_in_rule__GetDelayScaleControl__Group__48237);
            rule__GetDelayScaleControl__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__4"


    // $ANTLR start "rule__GetDelayScaleControl__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3924:1: rule__GetDelayScaleControl__Group__4__Impl : ( ( rule__GetDelayScaleControl__ControlAssignment_4 )? ) ;
    public final void rule__GetDelayScaleControl__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3928:1: ( ( ( rule__GetDelayScaleControl__ControlAssignment_4 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3929:1: ( ( rule__GetDelayScaleControl__ControlAssignment_4 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3929:1: ( ( rule__GetDelayScaleControl__ControlAssignment_4 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3930:1: ( rule__GetDelayScaleControl__ControlAssignment_4 )?
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getControlAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3931:1: ( rule__GetDelayScaleControl__ControlAssignment_4 )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_ID) ) {
                int LA24_1 = input.LA(2);

                if ( (LA24_1==EOF||LA24_1==RULE_ID||LA24_1==RULE_SC_COMMENT||(LA24_1>=21 && LA24_1<=23)||(LA24_1>=25 && LA24_1<=32)||(LA24_1>=34 && LA24_1<=60)) ) {
                    alt24=1;
                }
            }
            switch (alt24) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3931:2: rule__GetDelayScaleControl__ControlAssignment_4
                    {
                    pushFollow(FOLLOW_rule__GetDelayScaleControl__ControlAssignment_4_in_rule__GetDelayScaleControl__Group__4__Impl8264);
                    rule__GetDelayScaleControl__ControlAssignment_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getGetDelayScaleControlAccess().getControlAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__4__Impl"


    // $ANTLR start "rule__GetBaseAddress__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3951:1: rule__GetBaseAddress__Group__0 : rule__GetBaseAddress__Group__0__Impl rule__GetBaseAddress__Group__1 ;
    public final void rule__GetBaseAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3955:1: ( rule__GetBaseAddress__Group__0__Impl rule__GetBaseAddress__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3956:2: rule__GetBaseAddress__Group__0__Impl rule__GetBaseAddress__Group__1
            {
            pushFollow(FOLLOW_rule__GetBaseAddress__Group__0__Impl_in_rule__GetBaseAddress__Group__08305);
            rule__GetBaseAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetBaseAddress__Group__1_in_rule__GetBaseAddress__Group__08308);
            rule__GetBaseAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetBaseAddress__Group__0"


    // $ANTLR start "rule__GetBaseAddress__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3963:1: rule__GetBaseAddress__Group__0__Impl : ( () ) ;
    public final void rule__GetBaseAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3967:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3968:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3968:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3969:1: ()
            {
             before(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3970:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3972:1: 
            {
            }

             after(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetBaseAddress__Group__0__Impl"


    // $ANTLR start "rule__GetBaseAddress__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3982:1: rule__GetBaseAddress__Group__1 : rule__GetBaseAddress__Group__1__Impl ;
    public final void rule__GetBaseAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3986:1: ( rule__GetBaseAddress__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3987:2: rule__GetBaseAddress__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__GetBaseAddress__Group__1__Impl_in_rule__GetBaseAddress__Group__18366);
            rule__GetBaseAddress__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetBaseAddress__Group__1"


    // $ANTLR start "rule__GetBaseAddress__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3993:1: rule__GetBaseAddress__Group__1__Impl : ( '@getBaseAddress' ) ;
    public final void rule__GetBaseAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3997:1: ( ( '@getBaseAddress' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3998:1: ( '@getBaseAddress' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3998:1: ( '@getBaseAddress' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3999:1: '@getBaseAddress'
            {
             before(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressKeyword_1()); 
            match(input,30,FOLLOW_30_in_rule__GetBaseAddress__Group__1__Impl8394); 
             after(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetBaseAddress__Group__1__Impl"


    // $ANTLR start "rule__SetOutputPin__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4016:1: rule__SetOutputPin__Group__0 : rule__SetOutputPin__Group__0__Impl rule__SetOutputPin__Group__1 ;
    public final void rule__SetOutputPin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4020:1: ( rule__SetOutputPin__Group__0__Impl rule__SetOutputPin__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4021:2: rule__SetOutputPin__Group__0__Impl rule__SetOutputPin__Group__1
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__0__Impl_in_rule__SetOutputPin__Group__08429);
            rule__SetOutputPin__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SetOutputPin__Group__1_in_rule__SetOutputPin__Group__08432);
            rule__SetOutputPin__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__0"


    // $ANTLR start "rule__SetOutputPin__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4028:1: rule__SetOutputPin__Group__0__Impl : ( '@setOutputPin' ) ;
    public final void rule__SetOutputPin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4032:1: ( ( '@setOutputPin' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4033:1: ( '@setOutputPin' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4033:1: ( '@setOutputPin' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4034:1: '@setOutputPin'
            {
             before(grammarAccess.getSetOutputPinAccess().getSetOutputPinKeyword_0()); 
            match(input,31,FOLLOW_31_in_rule__SetOutputPin__Group__0__Impl8460); 
             after(grammarAccess.getSetOutputPinAccess().getSetOutputPinKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__0__Impl"


    // $ANTLR start "rule__SetOutputPin__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4047:1: rule__SetOutputPin__Group__1 : rule__SetOutputPin__Group__1__Impl rule__SetOutputPin__Group__2 ;
    public final void rule__SetOutputPin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4051:1: ( rule__SetOutputPin__Group__1__Impl rule__SetOutputPin__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4052:2: rule__SetOutputPin__Group__1__Impl rule__SetOutputPin__Group__2
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__1__Impl_in_rule__SetOutputPin__Group__18491);
            rule__SetOutputPin__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SetOutputPin__Group__2_in_rule__SetOutputPin__Group__18494);
            rule__SetOutputPin__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__1"


    // $ANTLR start "rule__SetOutputPin__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4059:1: rule__SetOutputPin__Group__1__Impl : ( ( rule__SetOutputPin__PinNameAssignment_1 ) ) ;
    public final void rule__SetOutputPin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4063:1: ( ( ( rule__SetOutputPin__PinNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4064:1: ( ( rule__SetOutputPin__PinNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4064:1: ( ( rule__SetOutputPin__PinNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4065:1: ( rule__SetOutputPin__PinNameAssignment_1 )
            {
             before(grammarAccess.getSetOutputPinAccess().getPinNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4066:1: ( rule__SetOutputPin__PinNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4066:2: rule__SetOutputPin__PinNameAssignment_1
            {
            pushFollow(FOLLOW_rule__SetOutputPin__PinNameAssignment_1_in_rule__SetOutputPin__Group__1__Impl8521);
            rule__SetOutputPin__PinNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSetOutputPinAccess().getPinNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__1__Impl"


    // $ANTLR start "rule__SetOutputPin__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4076:1: rule__SetOutputPin__Group__2 : rule__SetOutputPin__Group__2__Impl ;
    public final void rule__SetOutputPin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4080:1: ( rule__SetOutputPin__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4081:2: rule__SetOutputPin__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__2__Impl_in_rule__SetOutputPin__Group__28551);
            rule__SetOutputPin__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__2"


    // $ANTLR start "rule__SetOutputPin__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4087:1: rule__SetOutputPin__Group__2__Impl : ( ( rule__SetOutputPin__VarNameAssignment_2 ) ) ;
    public final void rule__SetOutputPin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4091:1: ( ( ( rule__SetOutputPin__VarNameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4092:1: ( ( rule__SetOutputPin__VarNameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4092:1: ( ( rule__SetOutputPin__VarNameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4093:1: ( rule__SetOutputPin__VarNameAssignment_2 )
            {
             before(grammarAccess.getSetOutputPinAccess().getVarNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4094:1: ( rule__SetOutputPin__VarNameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4094:2: rule__SetOutputPin__VarNameAssignment_2
            {
            pushFollow(FOLLOW_rule__SetOutputPin__VarNameAssignment_2_in_rule__SetOutputPin__Group__2__Impl8578);
            rule__SetOutputPin__VarNameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSetOutputPinAccess().getVarNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__2__Impl"


    // $ANTLR start "rule__ReadRegister__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4110:1: rule__ReadRegister__Group__0 : rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1 ;
    public final void rule__ReadRegister__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4114:1: ( rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4115:2: rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__0__Impl_in_rule__ReadRegister__Group__08614);
            rule__ReadRegister__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__1_in_rule__ReadRegister__Group__08617);
            rule__ReadRegister__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__0"


    // $ANTLR start "rule__ReadRegister__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4122:1: rule__ReadRegister__Group__0__Impl : ( 'rdax' ) ;
    public final void rule__ReadRegister__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4126:1: ( ( 'rdax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4127:1: ( 'rdax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4127:1: ( 'rdax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4128:1: 'rdax'
            {
             before(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); 
            match(input,32,FOLLOW_32_in_rule__ReadRegister__Group__0__Impl8645); 
             after(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__0__Impl"


    // $ANTLR start "rule__ReadRegister__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4141:1: rule__ReadRegister__Group__1 : rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2 ;
    public final void rule__ReadRegister__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4145:1: ( rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4146:2: rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__1__Impl_in_rule__ReadRegister__Group__18676);
            rule__ReadRegister__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__2_in_rule__ReadRegister__Group__18679);
            rule__ReadRegister__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__1"


    // $ANTLR start "rule__ReadRegister__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4153:1: rule__ReadRegister__Group__1__Impl : ( ( rule__ReadRegister__Arg1Assignment_1 ) ) ;
    public final void rule__ReadRegister__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4157:1: ( ( ( rule__ReadRegister__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4158:1: ( ( rule__ReadRegister__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4158:1: ( ( rule__ReadRegister__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4159:1: ( rule__ReadRegister__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4160:1: ( rule__ReadRegister__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4160:2: rule__ReadRegister__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadRegister__Arg1Assignment_1_in_rule__ReadRegister__Group__1__Impl8706);
            rule__ReadRegister__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__1__Impl"


    // $ANTLR start "rule__ReadRegister__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4170:1: rule__ReadRegister__Group__2 : rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3 ;
    public final void rule__ReadRegister__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4174:1: ( rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4175:2: rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__2__Impl_in_rule__ReadRegister__Group__28736);
            rule__ReadRegister__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__3_in_rule__ReadRegister__Group__28739);
            rule__ReadRegister__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__2"


    // $ANTLR start "rule__ReadRegister__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4182:1: rule__ReadRegister__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadRegister__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4186:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4187:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4187:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4188:1: ','
            {
             before(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__ReadRegister__Group__2__Impl8767); 
             after(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__2__Impl"


    // $ANTLR start "rule__ReadRegister__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4201:1: rule__ReadRegister__Group__3 : rule__ReadRegister__Group__3__Impl ;
    public final void rule__ReadRegister__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4205:1: ( rule__ReadRegister__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4206:2: rule__ReadRegister__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__3__Impl_in_rule__ReadRegister__Group__38798);
            rule__ReadRegister__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__3"


    // $ANTLR start "rule__ReadRegister__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4212:1: rule__ReadRegister__Group__3__Impl : ( ( rule__ReadRegister__Arg2Assignment_3 ) ) ;
    public final void rule__ReadRegister__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4216:1: ( ( ( rule__ReadRegister__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4217:1: ( ( rule__ReadRegister__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4217:1: ( ( rule__ReadRegister__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4218:1: ( rule__ReadRegister__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4219:1: ( rule__ReadRegister__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4219:2: rule__ReadRegister__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadRegister__Arg2Assignment_3_in_rule__ReadRegister__Group__3__Impl8825);
            rule__ReadRegister__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__3__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4237:1: rule__WriteRegisterLowshelf__Group__0 : rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1 ;
    public final void rule__WriteRegisterLowshelf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4241:1: ( rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4242:2: rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__0__Impl_in_rule__WriteRegisterLowshelf__Group__08863);
            rule__WriteRegisterLowshelf__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__1_in_rule__WriteRegisterLowshelf__Group__08866);
            rule__WriteRegisterLowshelf__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__0"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4249:1: rule__WriteRegisterLowshelf__Group__0__Impl : ( 'wrlx' ) ;
    public final void rule__WriteRegisterLowshelf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4253:1: ( ( 'wrlx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4254:1: ( 'wrlx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4254:1: ( 'wrlx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4255:1: 'wrlx'
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); 
            match(input,34,FOLLOW_34_in_rule__WriteRegisterLowshelf__Group__0__Impl8894); 
             after(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__0__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4268:1: rule__WriteRegisterLowshelf__Group__1 : rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2 ;
    public final void rule__WriteRegisterLowshelf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4272:1: ( rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4273:2: rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__1__Impl_in_rule__WriteRegisterLowshelf__Group__18925);
            rule__WriteRegisterLowshelf__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__2_in_rule__WriteRegisterLowshelf__Group__18928);
            rule__WriteRegisterLowshelf__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__1"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4280:1: rule__WriteRegisterLowshelf__Group__1__Impl : ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegisterLowshelf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4284:1: ( ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4285:1: ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4285:1: ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4286:1: ( rule__WriteRegisterLowshelf__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4287:1: ( rule__WriteRegisterLowshelf__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4287:2: rule__WriteRegisterLowshelf__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Arg1Assignment_1_in_rule__WriteRegisterLowshelf__Group__1__Impl8955);
            rule__WriteRegisterLowshelf__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__1__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4297:1: rule__WriteRegisterLowshelf__Group__2 : rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3 ;
    public final void rule__WriteRegisterLowshelf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4301:1: ( rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4302:2: rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__2__Impl_in_rule__WriteRegisterLowshelf__Group__28985);
            rule__WriteRegisterLowshelf__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__3_in_rule__WriteRegisterLowshelf__Group__28988);
            rule__WriteRegisterLowshelf__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__2"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4309:1: rule__WriteRegisterLowshelf__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegisterLowshelf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4313:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4314:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4314:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4315:1: ','
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__WriteRegisterLowshelf__Group__2__Impl9016); 
             after(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__2__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4328:1: rule__WriteRegisterLowshelf__Group__3 : rule__WriteRegisterLowshelf__Group__3__Impl ;
    public final void rule__WriteRegisterLowshelf__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4332:1: ( rule__WriteRegisterLowshelf__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4333:2: rule__WriteRegisterLowshelf__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__3__Impl_in_rule__WriteRegisterLowshelf__Group__39047);
            rule__WriteRegisterLowshelf__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__3"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4339:1: rule__WriteRegisterLowshelf__Group__3__Impl : ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegisterLowshelf__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4343:1: ( ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4344:1: ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4344:1: ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4345:1: ( rule__WriteRegisterLowshelf__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4346:1: ( rule__WriteRegisterLowshelf__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4346:2: rule__WriteRegisterLowshelf__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Arg2Assignment_3_in_rule__WriteRegisterLowshelf__Group__3__Impl9074);
            rule__WriteRegisterLowshelf__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__3__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4364:1: rule__WriteRegisterHighshelf__Group__0 : rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1 ;
    public final void rule__WriteRegisterHighshelf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4368:1: ( rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4369:2: rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__0__Impl_in_rule__WriteRegisterHighshelf__Group__09112);
            rule__WriteRegisterHighshelf__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__1_in_rule__WriteRegisterHighshelf__Group__09115);
            rule__WriteRegisterHighshelf__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__0"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4376:1: rule__WriteRegisterHighshelf__Group__0__Impl : ( 'wrhx' ) ;
    public final void rule__WriteRegisterHighshelf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4380:1: ( ( 'wrhx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4381:1: ( 'wrhx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4381:1: ( 'wrhx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4382:1: 'wrhx'
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); 
            match(input,35,FOLLOW_35_in_rule__WriteRegisterHighshelf__Group__0__Impl9143); 
             after(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__0__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4395:1: rule__WriteRegisterHighshelf__Group__1 : rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2 ;
    public final void rule__WriteRegisterHighshelf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4399:1: ( rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4400:2: rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__1__Impl_in_rule__WriteRegisterHighshelf__Group__19174);
            rule__WriteRegisterHighshelf__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__2_in_rule__WriteRegisterHighshelf__Group__19177);
            rule__WriteRegisterHighshelf__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__1"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4407:1: rule__WriteRegisterHighshelf__Group__1__Impl : ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegisterHighshelf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4411:1: ( ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4412:1: ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4412:1: ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4413:1: ( rule__WriteRegisterHighshelf__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4414:1: ( rule__WriteRegisterHighshelf__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4414:2: rule__WriteRegisterHighshelf__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Arg1Assignment_1_in_rule__WriteRegisterHighshelf__Group__1__Impl9204);
            rule__WriteRegisterHighshelf__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__1__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4424:1: rule__WriteRegisterHighshelf__Group__2 : rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3 ;
    public final void rule__WriteRegisterHighshelf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4428:1: ( rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4429:2: rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__2__Impl_in_rule__WriteRegisterHighshelf__Group__29234);
            rule__WriteRegisterHighshelf__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__3_in_rule__WriteRegisterHighshelf__Group__29237);
            rule__WriteRegisterHighshelf__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__2"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4436:1: rule__WriteRegisterHighshelf__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegisterHighshelf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4440:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4441:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4441:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4442:1: ','
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__WriteRegisterHighshelf__Group__2__Impl9265); 
             after(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__2__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4455:1: rule__WriteRegisterHighshelf__Group__3 : rule__WriteRegisterHighshelf__Group__3__Impl ;
    public final void rule__WriteRegisterHighshelf__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4459:1: ( rule__WriteRegisterHighshelf__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4460:2: rule__WriteRegisterHighshelf__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__3__Impl_in_rule__WriteRegisterHighshelf__Group__39296);
            rule__WriteRegisterHighshelf__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__3"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4466:1: rule__WriteRegisterHighshelf__Group__3__Impl : ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegisterHighshelf__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4470:1: ( ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4471:1: ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4471:1: ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4472:1: ( rule__WriteRegisterHighshelf__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4473:1: ( rule__WriteRegisterHighshelf__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4473:2: rule__WriteRegisterHighshelf__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Arg2Assignment_3_in_rule__WriteRegisterHighshelf__Group__3__Impl9323);
            rule__WriteRegisterHighshelf__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__3__Impl"


    // $ANTLR start "rule__WriteRegister__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4491:1: rule__WriteRegister__Group__0 : rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1 ;
    public final void rule__WriteRegister__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4495:1: ( rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4496:2: rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__0__Impl_in_rule__WriteRegister__Group__09361);
            rule__WriteRegister__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__1_in_rule__WriteRegister__Group__09364);
            rule__WriteRegister__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__0"


    // $ANTLR start "rule__WriteRegister__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4503:1: rule__WriteRegister__Group__0__Impl : ( 'wrax' ) ;
    public final void rule__WriteRegister__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4507:1: ( ( 'wrax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4508:1: ( 'wrax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4508:1: ( 'wrax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4509:1: 'wrax'
            {
             before(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); 
            match(input,36,FOLLOW_36_in_rule__WriteRegister__Group__0__Impl9392); 
             after(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__0__Impl"


    // $ANTLR start "rule__WriteRegister__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4522:1: rule__WriteRegister__Group__1 : rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2 ;
    public final void rule__WriteRegister__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4526:1: ( rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4527:2: rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__1__Impl_in_rule__WriteRegister__Group__19423);
            rule__WriteRegister__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__2_in_rule__WriteRegister__Group__19426);
            rule__WriteRegister__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__1"


    // $ANTLR start "rule__WriteRegister__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4534:1: rule__WriteRegister__Group__1__Impl : ( ( rule__WriteRegister__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegister__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4538:1: ( ( ( rule__WriteRegister__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4539:1: ( ( rule__WriteRegister__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4539:1: ( ( rule__WriteRegister__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4540:1: ( rule__WriteRegister__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4541:1: ( rule__WriteRegister__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4541:2: rule__WriteRegister__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegister__Arg1Assignment_1_in_rule__WriteRegister__Group__1__Impl9453);
            rule__WriteRegister__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__1__Impl"


    // $ANTLR start "rule__WriteRegister__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4551:1: rule__WriteRegister__Group__2 : rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3 ;
    public final void rule__WriteRegister__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4555:1: ( rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4556:2: rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__2__Impl_in_rule__WriteRegister__Group__29483);
            rule__WriteRegister__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__3_in_rule__WriteRegister__Group__29486);
            rule__WriteRegister__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__2"


    // $ANTLR start "rule__WriteRegister__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4563:1: rule__WriteRegister__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegister__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4567:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4568:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4568:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4569:1: ','
            {
             before(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__WriteRegister__Group__2__Impl9514); 
             after(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__2__Impl"


    // $ANTLR start "rule__WriteRegister__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4582:1: rule__WriteRegister__Group__3 : rule__WriteRegister__Group__3__Impl ;
    public final void rule__WriteRegister__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4586:1: ( rule__WriteRegister__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4587:2: rule__WriteRegister__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__3__Impl_in_rule__WriteRegister__Group__39545);
            rule__WriteRegister__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__3"


    // $ANTLR start "rule__WriteRegister__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4593:1: rule__WriteRegister__Group__3__Impl : ( ( rule__WriteRegister__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegister__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4597:1: ( ( ( rule__WriteRegister__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4598:1: ( ( rule__WriteRegister__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4598:1: ( ( rule__WriteRegister__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4599:1: ( rule__WriteRegister__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4600:1: ( rule__WriteRegister__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4600:2: rule__WriteRegister__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegister__Arg2Assignment_3_in_rule__WriteRegister__Group__3__Impl9572);
            rule__WriteRegister__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__3__Impl"


    // $ANTLR start "rule__Maxx__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4618:1: rule__Maxx__Group__0 : rule__Maxx__Group__0__Impl rule__Maxx__Group__1 ;
    public final void rule__Maxx__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4622:1: ( rule__Maxx__Group__0__Impl rule__Maxx__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4623:2: rule__Maxx__Group__0__Impl rule__Maxx__Group__1
            {
            pushFollow(FOLLOW_rule__Maxx__Group__0__Impl_in_rule__Maxx__Group__09610);
            rule__Maxx__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__1_in_rule__Maxx__Group__09613);
            rule__Maxx__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__0"


    // $ANTLR start "rule__Maxx__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4630:1: rule__Maxx__Group__0__Impl : ( 'maxx' ) ;
    public final void rule__Maxx__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4634:1: ( ( 'maxx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4635:1: ( 'maxx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4635:1: ( 'maxx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4636:1: 'maxx'
            {
             before(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); 
            match(input,37,FOLLOW_37_in_rule__Maxx__Group__0__Impl9641); 
             after(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__0__Impl"


    // $ANTLR start "rule__Maxx__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4649:1: rule__Maxx__Group__1 : rule__Maxx__Group__1__Impl rule__Maxx__Group__2 ;
    public final void rule__Maxx__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4653:1: ( rule__Maxx__Group__1__Impl rule__Maxx__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4654:2: rule__Maxx__Group__1__Impl rule__Maxx__Group__2
            {
            pushFollow(FOLLOW_rule__Maxx__Group__1__Impl_in_rule__Maxx__Group__19672);
            rule__Maxx__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__2_in_rule__Maxx__Group__19675);
            rule__Maxx__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__1"


    // $ANTLR start "rule__Maxx__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4661:1: rule__Maxx__Group__1__Impl : ( ( rule__Maxx__Arg1Assignment_1 ) ) ;
    public final void rule__Maxx__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4665:1: ( ( ( rule__Maxx__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4666:1: ( ( rule__Maxx__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4666:1: ( ( rule__Maxx__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4667:1: ( rule__Maxx__Arg1Assignment_1 )
            {
             before(grammarAccess.getMaxxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4668:1: ( rule__Maxx__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4668:2: rule__Maxx__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Maxx__Arg1Assignment_1_in_rule__Maxx__Group__1__Impl9702);
            rule__Maxx__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__1__Impl"


    // $ANTLR start "rule__Maxx__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4678:1: rule__Maxx__Group__2 : rule__Maxx__Group__2__Impl rule__Maxx__Group__3 ;
    public final void rule__Maxx__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4682:1: ( rule__Maxx__Group__2__Impl rule__Maxx__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4683:2: rule__Maxx__Group__2__Impl rule__Maxx__Group__3
            {
            pushFollow(FOLLOW_rule__Maxx__Group__2__Impl_in_rule__Maxx__Group__29732);
            rule__Maxx__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__3_in_rule__Maxx__Group__29735);
            rule__Maxx__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__2"


    // $ANTLR start "rule__Maxx__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4690:1: rule__Maxx__Group__2__Impl : ( ',' ) ;
    public final void rule__Maxx__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4694:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4695:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4695:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4696:1: ','
            {
             before(grammarAccess.getMaxxAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__Maxx__Group__2__Impl9763); 
             after(grammarAccess.getMaxxAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__2__Impl"


    // $ANTLR start "rule__Maxx__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4709:1: rule__Maxx__Group__3 : rule__Maxx__Group__3__Impl ;
    public final void rule__Maxx__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4713:1: ( rule__Maxx__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4714:2: rule__Maxx__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Maxx__Group__3__Impl_in_rule__Maxx__Group__39794);
            rule__Maxx__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__3"


    // $ANTLR start "rule__Maxx__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4720:1: rule__Maxx__Group__3__Impl : ( ( rule__Maxx__Arg2Assignment_3 ) ) ;
    public final void rule__Maxx__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4724:1: ( ( ( rule__Maxx__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4725:1: ( ( rule__Maxx__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4725:1: ( ( rule__Maxx__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4726:1: ( rule__Maxx__Arg2Assignment_3 )
            {
             before(grammarAccess.getMaxxAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4727:1: ( rule__Maxx__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4727:2: rule__Maxx__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Maxx__Arg2Assignment_3_in_rule__Maxx__Group__3__Impl9821);
            rule__Maxx__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__3__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4745:1: rule__ReadRegisterFilter__Group__0 : rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1 ;
    public final void rule__ReadRegisterFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4749:1: ( rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4750:2: rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__0__Impl_in_rule__ReadRegisterFilter__Group__09859);
            rule__ReadRegisterFilter__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__1_in_rule__ReadRegisterFilter__Group__09862);
            rule__ReadRegisterFilter__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__0"


    // $ANTLR start "rule__ReadRegisterFilter__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4757:1: rule__ReadRegisterFilter__Group__0__Impl : ( 'rdfx' ) ;
    public final void rule__ReadRegisterFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4761:1: ( ( 'rdfx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4762:1: ( 'rdfx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4762:1: ( 'rdfx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4763:1: 'rdfx'
            {
             before(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); 
            match(input,38,FOLLOW_38_in_rule__ReadRegisterFilter__Group__0__Impl9890); 
             after(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__0__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4776:1: rule__ReadRegisterFilter__Group__1 : rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2 ;
    public final void rule__ReadRegisterFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4780:1: ( rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4781:2: rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__1__Impl_in_rule__ReadRegisterFilter__Group__19921);
            rule__ReadRegisterFilter__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__2_in_rule__ReadRegisterFilter__Group__19924);
            rule__ReadRegisterFilter__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__1"


    // $ANTLR start "rule__ReadRegisterFilter__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4788:1: rule__ReadRegisterFilter__Group__1__Impl : ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) ) ;
    public final void rule__ReadRegisterFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4792:1: ( ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4793:1: ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4793:1: ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4794:1: ( rule__ReadRegisterFilter__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4795:1: ( rule__ReadRegisterFilter__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4795:2: rule__ReadRegisterFilter__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Arg1Assignment_1_in_rule__ReadRegisterFilter__Group__1__Impl9951);
            rule__ReadRegisterFilter__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__1__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4805:1: rule__ReadRegisterFilter__Group__2 : rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3 ;
    public final void rule__ReadRegisterFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4809:1: ( rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4810:2: rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__2__Impl_in_rule__ReadRegisterFilter__Group__29981);
            rule__ReadRegisterFilter__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__3_in_rule__ReadRegisterFilter__Group__29984);
            rule__ReadRegisterFilter__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__2"


    // $ANTLR start "rule__ReadRegisterFilter__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4817:1: rule__ReadRegisterFilter__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadRegisterFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4821:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4822:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4822:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4823:1: ','
            {
             before(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__ReadRegisterFilter__Group__2__Impl10012); 
             after(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__2__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4836:1: rule__ReadRegisterFilter__Group__3 : rule__ReadRegisterFilter__Group__3__Impl ;
    public final void rule__ReadRegisterFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4840:1: ( rule__ReadRegisterFilter__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4841:2: rule__ReadRegisterFilter__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__3__Impl_in_rule__ReadRegisterFilter__Group__310043);
            rule__ReadRegisterFilter__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__3"


    // $ANTLR start "rule__ReadRegisterFilter__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4847:1: rule__ReadRegisterFilter__Group__3__Impl : ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) ) ;
    public final void rule__ReadRegisterFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4851:1: ( ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4852:1: ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4852:1: ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4853:1: ( rule__ReadRegisterFilter__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4854:1: ( rule__ReadRegisterFilter__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4854:2: rule__ReadRegisterFilter__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Arg2Assignment_3_in_rule__ReadRegisterFilter__Group__3__Impl10070);
            rule__ReadRegisterFilter__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__3__Impl"


    // $ANTLR start "rule__Mulx__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4872:1: rule__Mulx__Group__0 : rule__Mulx__Group__0__Impl rule__Mulx__Group__1 ;
    public final void rule__Mulx__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4876:1: ( rule__Mulx__Group__0__Impl rule__Mulx__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4877:2: rule__Mulx__Group__0__Impl rule__Mulx__Group__1
            {
            pushFollow(FOLLOW_rule__Mulx__Group__0__Impl_in_rule__Mulx__Group__010108);
            rule__Mulx__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mulx__Group__1_in_rule__Mulx__Group__010111);
            rule__Mulx__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__0"


    // $ANTLR start "rule__Mulx__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4884:1: rule__Mulx__Group__0__Impl : ( 'mulx' ) ;
    public final void rule__Mulx__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4888:1: ( ( 'mulx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4889:1: ( 'mulx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4889:1: ( 'mulx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4890:1: 'mulx'
            {
             before(grammarAccess.getMulxAccess().getMulxKeyword_0()); 
            match(input,39,FOLLOW_39_in_rule__Mulx__Group__0__Impl10139); 
             after(grammarAccess.getMulxAccess().getMulxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__0__Impl"


    // $ANTLR start "rule__Mulx__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4903:1: rule__Mulx__Group__1 : rule__Mulx__Group__1__Impl ;
    public final void rule__Mulx__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4907:1: ( rule__Mulx__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4908:2: rule__Mulx__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Mulx__Group__1__Impl_in_rule__Mulx__Group__110170);
            rule__Mulx__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__1"


    // $ANTLR start "rule__Mulx__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4914:1: rule__Mulx__Group__1__Impl : ( ( rule__Mulx__Arg1Assignment_1 ) ) ;
    public final void rule__Mulx__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4918:1: ( ( ( rule__Mulx__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4919:1: ( ( rule__Mulx__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4919:1: ( ( rule__Mulx__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4920:1: ( rule__Mulx__Arg1Assignment_1 )
            {
             before(grammarAccess.getMulxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4921:1: ( rule__Mulx__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4921:2: rule__Mulx__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Mulx__Arg1Assignment_1_in_rule__Mulx__Group__1__Impl10197);
            rule__Mulx__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMulxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__1__Impl"


    // $ANTLR start "rule__Ldax__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4935:1: rule__Ldax__Group__0 : rule__Ldax__Group__0__Impl rule__Ldax__Group__1 ;
    public final void rule__Ldax__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4939:1: ( rule__Ldax__Group__0__Impl rule__Ldax__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4940:2: rule__Ldax__Group__0__Impl rule__Ldax__Group__1
            {
            pushFollow(FOLLOW_rule__Ldax__Group__0__Impl_in_rule__Ldax__Group__010231);
            rule__Ldax__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Ldax__Group__1_in_rule__Ldax__Group__010234);
            rule__Ldax__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__0"


    // $ANTLR start "rule__Ldax__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4947:1: rule__Ldax__Group__0__Impl : ( 'ldax' ) ;
    public final void rule__Ldax__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4951:1: ( ( 'ldax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4952:1: ( 'ldax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4952:1: ( 'ldax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4953:1: 'ldax'
            {
             before(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); 
            match(input,40,FOLLOW_40_in_rule__Ldax__Group__0__Impl10262); 
             after(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__0__Impl"


    // $ANTLR start "rule__Ldax__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4966:1: rule__Ldax__Group__1 : rule__Ldax__Group__1__Impl ;
    public final void rule__Ldax__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4970:1: ( rule__Ldax__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4971:2: rule__Ldax__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Ldax__Group__1__Impl_in_rule__Ldax__Group__110293);
            rule__Ldax__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__1"


    // $ANTLR start "rule__Ldax__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4977:1: rule__Ldax__Group__1__Impl : ( ( rule__Ldax__Arg1Assignment_1 ) ) ;
    public final void rule__Ldax__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4981:1: ( ( ( rule__Ldax__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4982:1: ( ( rule__Ldax__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4982:1: ( ( rule__Ldax__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4983:1: ( rule__Ldax__Arg1Assignment_1 )
            {
             before(grammarAccess.getLdaxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4984:1: ( rule__Ldax__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4984:2: rule__Ldax__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Ldax__Arg1Assignment_1_in_rule__Ldax__Group__1__Impl10320);
            rule__Ldax__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLdaxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__1__Impl"


    // $ANTLR start "rule__Exp__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4998:1: rule__Exp__Group__0 : rule__Exp__Group__0__Impl rule__Exp__Group__1 ;
    public final void rule__Exp__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5002:1: ( rule__Exp__Group__0__Impl rule__Exp__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5003:2: rule__Exp__Group__0__Impl rule__Exp__Group__1
            {
            pushFollow(FOLLOW_rule__Exp__Group__0__Impl_in_rule__Exp__Group__010354);
            rule__Exp__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__1_in_rule__Exp__Group__010357);
            rule__Exp__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__0"


    // $ANTLR start "rule__Exp__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5010:1: rule__Exp__Group__0__Impl : ( 'exp' ) ;
    public final void rule__Exp__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5014:1: ( ( 'exp' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5015:1: ( 'exp' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5015:1: ( 'exp' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5016:1: 'exp'
            {
             before(grammarAccess.getExpAccess().getExpKeyword_0()); 
            match(input,41,FOLLOW_41_in_rule__Exp__Group__0__Impl10385); 
             after(grammarAccess.getExpAccess().getExpKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__0__Impl"


    // $ANTLR start "rule__Exp__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5029:1: rule__Exp__Group__1 : rule__Exp__Group__1__Impl rule__Exp__Group__2 ;
    public final void rule__Exp__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5033:1: ( rule__Exp__Group__1__Impl rule__Exp__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5034:2: rule__Exp__Group__1__Impl rule__Exp__Group__2
            {
            pushFollow(FOLLOW_rule__Exp__Group__1__Impl_in_rule__Exp__Group__110416);
            rule__Exp__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__2_in_rule__Exp__Group__110419);
            rule__Exp__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__1"


    // $ANTLR start "rule__Exp__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5041:1: rule__Exp__Group__1__Impl : ( ( rule__Exp__Arg1Assignment_1 ) ) ;
    public final void rule__Exp__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5045:1: ( ( ( rule__Exp__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5046:1: ( ( rule__Exp__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5046:1: ( ( rule__Exp__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5047:1: ( rule__Exp__Arg1Assignment_1 )
            {
             before(grammarAccess.getExpAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5048:1: ( rule__Exp__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5048:2: rule__Exp__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Exp__Arg1Assignment_1_in_rule__Exp__Group__1__Impl10446);
            rule__Exp__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__1__Impl"


    // $ANTLR start "rule__Exp__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5058:1: rule__Exp__Group__2 : rule__Exp__Group__2__Impl rule__Exp__Group__3 ;
    public final void rule__Exp__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5062:1: ( rule__Exp__Group__2__Impl rule__Exp__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5063:2: rule__Exp__Group__2__Impl rule__Exp__Group__3
            {
            pushFollow(FOLLOW_rule__Exp__Group__2__Impl_in_rule__Exp__Group__210476);
            rule__Exp__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__3_in_rule__Exp__Group__210479);
            rule__Exp__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__2"


    // $ANTLR start "rule__Exp__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5070:1: rule__Exp__Group__2__Impl : ( ',' ) ;
    public final void rule__Exp__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5074:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5075:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5075:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5076:1: ','
            {
             before(grammarAccess.getExpAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__Exp__Group__2__Impl10507); 
             after(grammarAccess.getExpAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__2__Impl"


    // $ANTLR start "rule__Exp__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5089:1: rule__Exp__Group__3 : rule__Exp__Group__3__Impl ;
    public final void rule__Exp__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5093:1: ( rule__Exp__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5094:2: rule__Exp__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Exp__Group__3__Impl_in_rule__Exp__Group__310538);
            rule__Exp__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__3"


    // $ANTLR start "rule__Exp__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5100:1: rule__Exp__Group__3__Impl : ( ( rule__Exp__Arg2Assignment_3 ) ) ;
    public final void rule__Exp__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5104:1: ( ( ( rule__Exp__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5105:1: ( ( rule__Exp__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5105:1: ( ( rule__Exp__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5106:1: ( rule__Exp__Arg2Assignment_3 )
            {
             before(grammarAccess.getExpAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5107:1: ( rule__Exp__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5107:2: rule__Exp__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Exp__Arg2Assignment_3_in_rule__Exp__Group__3__Impl10565);
            rule__Exp__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__3__Impl"


    // $ANTLR start "rule__Log__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5125:1: rule__Log__Group__0 : rule__Log__Group__0__Impl rule__Log__Group__1 ;
    public final void rule__Log__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5129:1: ( rule__Log__Group__0__Impl rule__Log__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5130:2: rule__Log__Group__0__Impl rule__Log__Group__1
            {
            pushFollow(FOLLOW_rule__Log__Group__0__Impl_in_rule__Log__Group__010603);
            rule__Log__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__1_in_rule__Log__Group__010606);
            rule__Log__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__0"


    // $ANTLR start "rule__Log__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5137:1: rule__Log__Group__0__Impl : ( 'log' ) ;
    public final void rule__Log__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5141:1: ( ( 'log' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5142:1: ( 'log' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5142:1: ( 'log' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5143:1: 'log'
            {
             before(grammarAccess.getLogAccess().getLogKeyword_0()); 
            match(input,42,FOLLOW_42_in_rule__Log__Group__0__Impl10634); 
             after(grammarAccess.getLogAccess().getLogKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__0__Impl"


    // $ANTLR start "rule__Log__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5156:1: rule__Log__Group__1 : rule__Log__Group__1__Impl rule__Log__Group__2 ;
    public final void rule__Log__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5160:1: ( rule__Log__Group__1__Impl rule__Log__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5161:2: rule__Log__Group__1__Impl rule__Log__Group__2
            {
            pushFollow(FOLLOW_rule__Log__Group__1__Impl_in_rule__Log__Group__110665);
            rule__Log__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__2_in_rule__Log__Group__110668);
            rule__Log__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__1"


    // $ANTLR start "rule__Log__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5168:1: rule__Log__Group__1__Impl : ( ( rule__Log__Arg1Assignment_1 ) ) ;
    public final void rule__Log__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5172:1: ( ( ( rule__Log__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5173:1: ( ( rule__Log__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5173:1: ( ( rule__Log__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5174:1: ( rule__Log__Arg1Assignment_1 )
            {
             before(grammarAccess.getLogAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5175:1: ( rule__Log__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5175:2: rule__Log__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Log__Arg1Assignment_1_in_rule__Log__Group__1__Impl10695);
            rule__Log__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__1__Impl"


    // $ANTLR start "rule__Log__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5185:1: rule__Log__Group__2 : rule__Log__Group__2__Impl rule__Log__Group__3 ;
    public final void rule__Log__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5189:1: ( rule__Log__Group__2__Impl rule__Log__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5190:2: rule__Log__Group__2__Impl rule__Log__Group__3
            {
            pushFollow(FOLLOW_rule__Log__Group__2__Impl_in_rule__Log__Group__210725);
            rule__Log__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__3_in_rule__Log__Group__210728);
            rule__Log__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__2"


    // $ANTLR start "rule__Log__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5197:1: rule__Log__Group__2__Impl : ( ',' ) ;
    public final void rule__Log__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5201:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5202:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5202:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5203:1: ','
            {
             before(grammarAccess.getLogAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__Log__Group__2__Impl10756); 
             after(grammarAccess.getLogAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__2__Impl"


    // $ANTLR start "rule__Log__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5216:1: rule__Log__Group__3 : rule__Log__Group__3__Impl ;
    public final void rule__Log__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5220:1: ( rule__Log__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5221:2: rule__Log__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Log__Group__3__Impl_in_rule__Log__Group__310787);
            rule__Log__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__3"


    // $ANTLR start "rule__Log__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5227:1: rule__Log__Group__3__Impl : ( ( rule__Log__Arg2Assignment_3 ) ) ;
    public final void rule__Log__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5231:1: ( ( ( rule__Log__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5232:1: ( ( rule__Log__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5232:1: ( ( rule__Log__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5233:1: ( rule__Log__Arg2Assignment_3 )
            {
             before(grammarAccess.getLogAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5234:1: ( rule__Log__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5234:2: rule__Log__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Log__Arg2Assignment_3_in_rule__Log__Group__3__Impl10814);
            rule__Log__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__3__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5252:1: rule__ScaleOffset__Group__0 : rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1 ;
    public final void rule__ScaleOffset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5256:1: ( rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5257:2: rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__0__Impl_in_rule__ScaleOffset__Group__010852);
            rule__ScaleOffset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__1_in_rule__ScaleOffset__Group__010855);
            rule__ScaleOffset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__0"


    // $ANTLR start "rule__ScaleOffset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5264:1: rule__ScaleOffset__Group__0__Impl : ( 'sof' ) ;
    public final void rule__ScaleOffset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5268:1: ( ( 'sof' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5269:1: ( 'sof' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5269:1: ( 'sof' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5270:1: 'sof'
            {
             before(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); 
            match(input,43,FOLLOW_43_in_rule__ScaleOffset__Group__0__Impl10883); 
             after(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__0__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5283:1: rule__ScaleOffset__Group__1 : rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2 ;
    public final void rule__ScaleOffset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5287:1: ( rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5288:2: rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__1__Impl_in_rule__ScaleOffset__Group__110914);
            rule__ScaleOffset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__2_in_rule__ScaleOffset__Group__110917);
            rule__ScaleOffset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__1"


    // $ANTLR start "rule__ScaleOffset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5295:1: rule__ScaleOffset__Group__1__Impl : ( ( rule__ScaleOffset__Arg1Assignment_1 ) ) ;
    public final void rule__ScaleOffset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5299:1: ( ( ( rule__ScaleOffset__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5300:1: ( ( rule__ScaleOffset__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5300:1: ( ( rule__ScaleOffset__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5301:1: ( rule__ScaleOffset__Arg1Assignment_1 )
            {
             before(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5302:1: ( rule__ScaleOffset__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5302:2: rule__ScaleOffset__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Arg1Assignment_1_in_rule__ScaleOffset__Group__1__Impl10944);
            rule__ScaleOffset__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__1__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5312:1: rule__ScaleOffset__Group__2 : rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3 ;
    public final void rule__ScaleOffset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5316:1: ( rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5317:2: rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__2__Impl_in_rule__ScaleOffset__Group__210974);
            rule__ScaleOffset__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__3_in_rule__ScaleOffset__Group__210977);
            rule__ScaleOffset__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__2"


    // $ANTLR start "rule__ScaleOffset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5324:1: rule__ScaleOffset__Group__2__Impl : ( ',' ) ;
    public final void rule__ScaleOffset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5328:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5329:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5329:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5330:1: ','
            {
             before(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__ScaleOffset__Group__2__Impl11005); 
             after(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__2__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5343:1: rule__ScaleOffset__Group__3 : rule__ScaleOffset__Group__3__Impl ;
    public final void rule__ScaleOffset__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5347:1: ( rule__ScaleOffset__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5348:2: rule__ScaleOffset__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__3__Impl_in_rule__ScaleOffset__Group__311036);
            rule__ScaleOffset__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__3"


    // $ANTLR start "rule__ScaleOffset__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5354:1: rule__ScaleOffset__Group__3__Impl : ( ( rule__ScaleOffset__Arg2Assignment_3 ) ) ;
    public final void rule__ScaleOffset__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5358:1: ( ( ( rule__ScaleOffset__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5359:1: ( ( rule__ScaleOffset__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5359:1: ( ( rule__ScaleOffset__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5360:1: ( rule__ScaleOffset__Arg2Assignment_3 )
            {
             before(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5361:1: ( rule__ScaleOffset__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5361:2: rule__ScaleOffset__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Arg2Assignment_3_in_rule__ScaleOffset__Group__3__Impl11063);
            rule__ScaleOffset__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__3__Impl"


    // $ANTLR start "rule__WriteDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5379:1: rule__WriteDelay__Group__0 : rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1 ;
    public final void rule__WriteDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5383:1: ( rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5384:2: rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__0__Impl_in_rule__WriteDelay__Group__011101);
            rule__WriteDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__1_in_rule__WriteDelay__Group__011104);
            rule__WriteDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__0"


    // $ANTLR start "rule__WriteDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5391:1: rule__WriteDelay__Group__0__Impl : ( 'wra' ) ;
    public final void rule__WriteDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5395:1: ( ( 'wra' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5396:1: ( 'wra' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5396:1: ( 'wra' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5397:1: 'wra'
            {
             before(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); 
            match(input,44,FOLLOW_44_in_rule__WriteDelay__Group__0__Impl11132); 
             after(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__0__Impl"


    // $ANTLR start "rule__WriteDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5410:1: rule__WriteDelay__Group__1 : rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2 ;
    public final void rule__WriteDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5414:1: ( rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5415:2: rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__1__Impl_in_rule__WriteDelay__Group__111163);
            rule__WriteDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__2_in_rule__WriteDelay__Group__111166);
            rule__WriteDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__1"


    // $ANTLR start "rule__WriteDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5422:1: rule__WriteDelay__Group__1__Impl : ( ( rule__WriteDelay__Arg1Assignment_1 ) ) ;
    public final void rule__WriteDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5426:1: ( ( ( rule__WriteDelay__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5427:1: ( ( rule__WriteDelay__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5427:1: ( ( rule__WriteDelay__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5428:1: ( rule__WriteDelay__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5429:1: ( rule__WriteDelay__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5429:2: rule__WriteDelay__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteDelay__Arg1Assignment_1_in_rule__WriteDelay__Group__1__Impl11193);
            rule__WriteDelay__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__1__Impl"


    // $ANTLR start "rule__WriteDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5439:1: rule__WriteDelay__Group__2 : rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3 ;
    public final void rule__WriteDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5443:1: ( rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5444:2: rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__2__Impl_in_rule__WriteDelay__Group__211223);
            rule__WriteDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__3_in_rule__WriteDelay__Group__211226);
            rule__WriteDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__2"


    // $ANTLR start "rule__WriteDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5451:1: rule__WriteDelay__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5455:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5456:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5456:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5457:1: ','
            {
             before(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__WriteDelay__Group__2__Impl11254); 
             after(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__2__Impl"


    // $ANTLR start "rule__WriteDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5470:1: rule__WriteDelay__Group__3 : rule__WriteDelay__Group__3__Impl ;
    public final void rule__WriteDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5474:1: ( rule__WriteDelay__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5475:2: rule__WriteDelay__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__3__Impl_in_rule__WriteDelay__Group__311285);
            rule__WriteDelay__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__3"


    // $ANTLR start "rule__WriteDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5481:1: rule__WriteDelay__Group__3__Impl : ( ( rule__WriteDelay__Arg2Assignment_3 ) ) ;
    public final void rule__WriteDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5485:1: ( ( ( rule__WriteDelay__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5486:1: ( ( rule__WriteDelay__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5486:1: ( ( rule__WriteDelay__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5487:1: ( rule__WriteDelay__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5488:1: ( rule__WriteDelay__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5488:2: rule__WriteDelay__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteDelay__Arg2Assignment_3_in_rule__WriteDelay__Group__3__Impl11312);
            rule__WriteDelay__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__3__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5506:1: rule__WriteAllpass__Group__0 : rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1 ;
    public final void rule__WriteAllpass__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5510:1: ( rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5511:2: rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__0__Impl_in_rule__WriteAllpass__Group__011350);
            rule__WriteAllpass__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__1_in_rule__WriteAllpass__Group__011353);
            rule__WriteAllpass__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__0"


    // $ANTLR start "rule__WriteAllpass__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5518:1: rule__WriteAllpass__Group__0__Impl : ( 'wrap' ) ;
    public final void rule__WriteAllpass__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5522:1: ( ( 'wrap' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5523:1: ( 'wrap' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5523:1: ( 'wrap' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5524:1: 'wrap'
            {
             before(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); 
            match(input,45,FOLLOW_45_in_rule__WriteAllpass__Group__0__Impl11381); 
             after(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__0__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5537:1: rule__WriteAllpass__Group__1 : rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2 ;
    public final void rule__WriteAllpass__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5541:1: ( rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5542:2: rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__1__Impl_in_rule__WriteAllpass__Group__111412);
            rule__WriteAllpass__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__2_in_rule__WriteAllpass__Group__111415);
            rule__WriteAllpass__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__1"


    // $ANTLR start "rule__WriteAllpass__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5549:1: rule__WriteAllpass__Group__1__Impl : ( ( rule__WriteAllpass__Arg1Assignment_1 ) ) ;
    public final void rule__WriteAllpass__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5553:1: ( ( ( rule__WriteAllpass__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5554:1: ( ( rule__WriteAllpass__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5554:1: ( ( rule__WriteAllpass__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5555:1: ( rule__WriteAllpass__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5556:1: ( rule__WriteAllpass__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5556:2: rule__WriteAllpass__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Arg1Assignment_1_in_rule__WriteAllpass__Group__1__Impl11442);
            rule__WriteAllpass__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__1__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5566:1: rule__WriteAllpass__Group__2 : rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3 ;
    public final void rule__WriteAllpass__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5570:1: ( rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5571:2: rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__2__Impl_in_rule__WriteAllpass__Group__211472);
            rule__WriteAllpass__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__3_in_rule__WriteAllpass__Group__211475);
            rule__WriteAllpass__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__2"


    // $ANTLR start "rule__WriteAllpass__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5578:1: rule__WriteAllpass__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteAllpass__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5582:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5583:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5583:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5584:1: ','
            {
             before(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__WriteAllpass__Group__2__Impl11503); 
             after(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__2__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5597:1: rule__WriteAllpass__Group__3 : rule__WriteAllpass__Group__3__Impl ;
    public final void rule__WriteAllpass__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5601:1: ( rule__WriteAllpass__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5602:2: rule__WriteAllpass__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__3__Impl_in_rule__WriteAllpass__Group__311534);
            rule__WriteAllpass__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__3"


    // $ANTLR start "rule__WriteAllpass__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5608:1: rule__WriteAllpass__Group__3__Impl : ( ( rule__WriteAllpass__Arg2Assignment_3 ) ) ;
    public final void rule__WriteAllpass__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5612:1: ( ( ( rule__WriteAllpass__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5613:1: ( ( rule__WriteAllpass__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5613:1: ( ( rule__WriteAllpass__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5614:1: ( rule__WriteAllpass__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5615:1: ( rule__WriteAllpass__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5615:2: rule__WriteAllpass__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Arg2Assignment_3_in_rule__WriteAllpass__Group__3__Impl11561);
            rule__WriteAllpass__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__3__Impl"


    // $ANTLR start "rule__ReadDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5633:1: rule__ReadDelay__Group__0 : rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1 ;
    public final void rule__ReadDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5637:1: ( rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5638:2: rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__0__Impl_in_rule__ReadDelay__Group__011599);
            rule__ReadDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__1_in_rule__ReadDelay__Group__011602);
            rule__ReadDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__0"


    // $ANTLR start "rule__ReadDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5645:1: rule__ReadDelay__Group__0__Impl : ( 'rda' ) ;
    public final void rule__ReadDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5649:1: ( ( 'rda' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5650:1: ( 'rda' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5650:1: ( 'rda' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5651:1: 'rda'
            {
             before(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); 
            match(input,46,FOLLOW_46_in_rule__ReadDelay__Group__0__Impl11630); 
             after(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__0__Impl"


    // $ANTLR start "rule__ReadDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5664:1: rule__ReadDelay__Group__1 : rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2 ;
    public final void rule__ReadDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5668:1: ( rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5669:2: rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__1__Impl_in_rule__ReadDelay__Group__111661);
            rule__ReadDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__2_in_rule__ReadDelay__Group__111664);
            rule__ReadDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__1"


    // $ANTLR start "rule__ReadDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5676:1: rule__ReadDelay__Group__1__Impl : ( ( rule__ReadDelay__Arg1Assignment_1 ) ) ;
    public final void rule__ReadDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5680:1: ( ( ( rule__ReadDelay__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5681:1: ( ( rule__ReadDelay__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5681:1: ( ( rule__ReadDelay__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5682:1: ( rule__ReadDelay__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5683:1: ( rule__ReadDelay__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5683:2: rule__ReadDelay__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadDelay__Arg1Assignment_1_in_rule__ReadDelay__Group__1__Impl11691);
            rule__ReadDelay__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__1__Impl"


    // $ANTLR start "rule__ReadDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5693:1: rule__ReadDelay__Group__2 : rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3 ;
    public final void rule__ReadDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5697:1: ( rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5698:2: rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__2__Impl_in_rule__ReadDelay__Group__211721);
            rule__ReadDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__3_in_rule__ReadDelay__Group__211724);
            rule__ReadDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__2"


    // $ANTLR start "rule__ReadDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5705:1: rule__ReadDelay__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5709:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5710:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5710:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5711:1: ','
            {
             before(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__ReadDelay__Group__2__Impl11752); 
             after(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__2__Impl"


    // $ANTLR start "rule__ReadDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5724:1: rule__ReadDelay__Group__3 : rule__ReadDelay__Group__3__Impl ;
    public final void rule__ReadDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5728:1: ( rule__ReadDelay__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5729:2: rule__ReadDelay__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__3__Impl_in_rule__ReadDelay__Group__311783);
            rule__ReadDelay__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__3"


    // $ANTLR start "rule__ReadDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5735:1: rule__ReadDelay__Group__3__Impl : ( ( rule__ReadDelay__Arg2Assignment_3 ) ) ;
    public final void rule__ReadDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5739:1: ( ( ( rule__ReadDelay__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5740:1: ( ( rule__ReadDelay__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5740:1: ( ( rule__ReadDelay__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5741:1: ( rule__ReadDelay__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5742:1: ( rule__ReadDelay__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5742:2: rule__ReadDelay__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadDelay__Arg2Assignment_3_in_rule__ReadDelay__Group__3__Impl11810);
            rule__ReadDelay__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__3__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5760:1: rule__LoadSinLFO__Group__0 : rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1 ;
    public final void rule__LoadSinLFO__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5764:1: ( rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5765:2: rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__0__Impl_in_rule__LoadSinLFO__Group__011848);
            rule__LoadSinLFO__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__1_in_rule__LoadSinLFO__Group__011851);
            rule__LoadSinLFO__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__0"


    // $ANTLR start "rule__LoadSinLFO__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5772:1: rule__LoadSinLFO__Group__0__Impl : ( 'wlds' ) ;
    public final void rule__LoadSinLFO__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5776:1: ( ( 'wlds' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5777:1: ( 'wlds' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5777:1: ( 'wlds' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5778:1: 'wlds'
            {
             before(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); 
            match(input,47,FOLLOW_47_in_rule__LoadSinLFO__Group__0__Impl11879); 
             after(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__0__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5791:1: rule__LoadSinLFO__Group__1 : rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2 ;
    public final void rule__LoadSinLFO__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5795:1: ( rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5796:2: rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__1__Impl_in_rule__LoadSinLFO__Group__111910);
            rule__LoadSinLFO__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__2_in_rule__LoadSinLFO__Group__111913);
            rule__LoadSinLFO__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__1"


    // $ANTLR start "rule__LoadSinLFO__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5803:1: rule__LoadSinLFO__Group__1__Impl : ( ( rule__LoadSinLFO__Arg1Assignment_1 ) ) ;
    public final void rule__LoadSinLFO__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5807:1: ( ( ( rule__LoadSinLFO__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5808:1: ( ( rule__LoadSinLFO__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5808:1: ( ( rule__LoadSinLFO__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5809:1: ( rule__LoadSinLFO__Arg1Assignment_1 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5810:1: ( rule__LoadSinLFO__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5810:2: rule__LoadSinLFO__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg1Assignment_1_in_rule__LoadSinLFO__Group__1__Impl11940);
            rule__LoadSinLFO__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__1__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5820:1: rule__LoadSinLFO__Group__2 : rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3 ;
    public final void rule__LoadSinLFO__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5824:1: ( rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5825:2: rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__2__Impl_in_rule__LoadSinLFO__Group__211970);
            rule__LoadSinLFO__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__3_in_rule__LoadSinLFO__Group__211973);
            rule__LoadSinLFO__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__2"


    // $ANTLR start "rule__LoadSinLFO__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5832:1: rule__LoadSinLFO__Group__2__Impl : ( ',' ) ;
    public final void rule__LoadSinLFO__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5836:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5837:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5837:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5838:1: ','
            {
             before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__LoadSinLFO__Group__2__Impl12001); 
             after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__2__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5851:1: rule__LoadSinLFO__Group__3 : rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4 ;
    public final void rule__LoadSinLFO__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5855:1: ( rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5856:2: rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__3__Impl_in_rule__LoadSinLFO__Group__312032);
            rule__LoadSinLFO__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__4_in_rule__LoadSinLFO__Group__312035);
            rule__LoadSinLFO__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__3"


    // $ANTLR start "rule__LoadSinLFO__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5863:1: rule__LoadSinLFO__Group__3__Impl : ( ( rule__LoadSinLFO__Arg2Assignment_3 ) ) ;
    public final void rule__LoadSinLFO__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5867:1: ( ( ( rule__LoadSinLFO__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5868:1: ( ( rule__LoadSinLFO__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5868:1: ( ( rule__LoadSinLFO__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5869:1: ( rule__LoadSinLFO__Arg2Assignment_3 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5870:1: ( rule__LoadSinLFO__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5870:2: rule__LoadSinLFO__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg2Assignment_3_in_rule__LoadSinLFO__Group__3__Impl12062);
            rule__LoadSinLFO__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__3__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5880:1: rule__LoadSinLFO__Group__4 : rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5 ;
    public final void rule__LoadSinLFO__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5884:1: ( rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5885:2: rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__4__Impl_in_rule__LoadSinLFO__Group__412092);
            rule__LoadSinLFO__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__5_in_rule__LoadSinLFO__Group__412095);
            rule__LoadSinLFO__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__4"


    // $ANTLR start "rule__LoadSinLFO__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5892:1: rule__LoadSinLFO__Group__4__Impl : ( ',' ) ;
    public final void rule__LoadSinLFO__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5896:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5897:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5897:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5898:1: ','
            {
             before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); 
            match(input,33,FOLLOW_33_in_rule__LoadSinLFO__Group__4__Impl12123); 
             after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__4__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5911:1: rule__LoadSinLFO__Group__5 : rule__LoadSinLFO__Group__5__Impl ;
    public final void rule__LoadSinLFO__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5915:1: ( rule__LoadSinLFO__Group__5__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5916:2: rule__LoadSinLFO__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__5__Impl_in_rule__LoadSinLFO__Group__512154);
            rule__LoadSinLFO__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__5"


    // $ANTLR start "rule__LoadSinLFO__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5922:1: rule__LoadSinLFO__Group__5__Impl : ( ( rule__LoadSinLFO__Arg3Assignment_5 ) ) ;
    public final void rule__LoadSinLFO__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5926:1: ( ( ( rule__LoadSinLFO__Arg3Assignment_5 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5927:1: ( ( rule__LoadSinLFO__Arg3Assignment_5 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5927:1: ( ( rule__LoadSinLFO__Arg3Assignment_5 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5928:1: ( rule__LoadSinLFO__Arg3Assignment_5 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5929:1: ( rule__LoadSinLFO__Arg3Assignment_5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5929:2: rule__LoadSinLFO__Arg3Assignment_5
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg3Assignment_5_in_rule__LoadSinLFO__Group__5__Impl12181);
            rule__LoadSinLFO__Arg3Assignment_5();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__5__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5951:1: rule__LoadRampLFO__Group__0 : rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1 ;
    public final void rule__LoadRampLFO__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5955:1: ( rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5956:2: rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__0__Impl_in_rule__LoadRampLFO__Group__012223);
            rule__LoadRampLFO__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__1_in_rule__LoadRampLFO__Group__012226);
            rule__LoadRampLFO__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__0"


    // $ANTLR start "rule__LoadRampLFO__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5963:1: rule__LoadRampLFO__Group__0__Impl : ( 'wldr' ) ;
    public final void rule__LoadRampLFO__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5967:1: ( ( 'wldr' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5968:1: ( 'wldr' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5968:1: ( 'wldr' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5969:1: 'wldr'
            {
             before(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); 
            match(input,48,FOLLOW_48_in_rule__LoadRampLFO__Group__0__Impl12254); 
             after(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__0__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5982:1: rule__LoadRampLFO__Group__1 : rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2 ;
    public final void rule__LoadRampLFO__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5986:1: ( rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5987:2: rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__1__Impl_in_rule__LoadRampLFO__Group__112285);
            rule__LoadRampLFO__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__2_in_rule__LoadRampLFO__Group__112288);
            rule__LoadRampLFO__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__1"


    // $ANTLR start "rule__LoadRampLFO__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5994:1: rule__LoadRampLFO__Group__1__Impl : ( ( rule__LoadRampLFO__Arg1Assignment_1 ) ) ;
    public final void rule__LoadRampLFO__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5998:1: ( ( ( rule__LoadRampLFO__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5999:1: ( ( rule__LoadRampLFO__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5999:1: ( ( rule__LoadRampLFO__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6000:1: ( rule__LoadRampLFO__Arg1Assignment_1 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6001:1: ( rule__LoadRampLFO__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6001:2: rule__LoadRampLFO__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg1Assignment_1_in_rule__LoadRampLFO__Group__1__Impl12315);
            rule__LoadRampLFO__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__1__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6011:1: rule__LoadRampLFO__Group__2 : rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3 ;
    public final void rule__LoadRampLFO__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6015:1: ( rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6016:2: rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__2__Impl_in_rule__LoadRampLFO__Group__212345);
            rule__LoadRampLFO__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__3_in_rule__LoadRampLFO__Group__212348);
            rule__LoadRampLFO__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__2"


    // $ANTLR start "rule__LoadRampLFO__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6023:1: rule__LoadRampLFO__Group__2__Impl : ( ',' ) ;
    public final void rule__LoadRampLFO__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6027:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6028:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6028:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6029:1: ','
            {
             before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__LoadRampLFO__Group__2__Impl12376); 
             after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__2__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6042:1: rule__LoadRampLFO__Group__3 : rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4 ;
    public final void rule__LoadRampLFO__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6046:1: ( rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6047:2: rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__3__Impl_in_rule__LoadRampLFO__Group__312407);
            rule__LoadRampLFO__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__4_in_rule__LoadRampLFO__Group__312410);
            rule__LoadRampLFO__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__3"


    // $ANTLR start "rule__LoadRampLFO__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6054:1: rule__LoadRampLFO__Group__3__Impl : ( ( rule__LoadRampLFO__Arg2Assignment_3 ) ) ;
    public final void rule__LoadRampLFO__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6058:1: ( ( ( rule__LoadRampLFO__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6059:1: ( ( rule__LoadRampLFO__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6059:1: ( ( rule__LoadRampLFO__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6060:1: ( rule__LoadRampLFO__Arg2Assignment_3 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6061:1: ( rule__LoadRampLFO__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6061:2: rule__LoadRampLFO__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg2Assignment_3_in_rule__LoadRampLFO__Group__3__Impl12437);
            rule__LoadRampLFO__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__3__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6071:1: rule__LoadRampLFO__Group__4 : rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5 ;
    public final void rule__LoadRampLFO__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6075:1: ( rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6076:2: rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__4__Impl_in_rule__LoadRampLFO__Group__412467);
            rule__LoadRampLFO__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__5_in_rule__LoadRampLFO__Group__412470);
            rule__LoadRampLFO__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__4"


    // $ANTLR start "rule__LoadRampLFO__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6083:1: rule__LoadRampLFO__Group__4__Impl : ( ',' ) ;
    public final void rule__LoadRampLFO__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6087:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6088:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6088:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6089:1: ','
            {
             before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); 
            match(input,33,FOLLOW_33_in_rule__LoadRampLFO__Group__4__Impl12498); 
             after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__4__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6102:1: rule__LoadRampLFO__Group__5 : rule__LoadRampLFO__Group__5__Impl ;
    public final void rule__LoadRampLFO__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6106:1: ( rule__LoadRampLFO__Group__5__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6107:2: rule__LoadRampLFO__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__5__Impl_in_rule__LoadRampLFO__Group__512529);
            rule__LoadRampLFO__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__5"


    // $ANTLR start "rule__LoadRampLFO__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6113:1: rule__LoadRampLFO__Group__5__Impl : ( ( rule__LoadRampLFO__Arg3Assignment_5 ) ) ;
    public final void rule__LoadRampLFO__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6117:1: ( ( ( rule__LoadRampLFO__Arg3Assignment_5 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6118:1: ( ( rule__LoadRampLFO__Arg3Assignment_5 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6118:1: ( ( rule__LoadRampLFO__Arg3Assignment_5 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6119:1: ( rule__LoadRampLFO__Arg3Assignment_5 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6120:1: ( rule__LoadRampLFO__Arg3Assignment_5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6120:2: rule__LoadRampLFO__Arg3Assignment_5
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg3Assignment_5_in_rule__LoadRampLFO__Group__5__Impl12556);
            rule__LoadRampLFO__Arg3Assignment_5();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__5__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6142:1: rule__ChorusReadDelay__Group__0 : rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1 ;
    public final void rule__ChorusReadDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6146:1: ( rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6147:2: rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__0__Impl_in_rule__ChorusReadDelay__Group__012598);
            rule__ChorusReadDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__1_in_rule__ChorusReadDelay__Group__012601);
            rule__ChorusReadDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__0"


    // $ANTLR start "rule__ChorusReadDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6154:1: rule__ChorusReadDelay__Group__0__Impl : ( 'cho rda' ) ;
    public final void rule__ChorusReadDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6158:1: ( ( 'cho rda' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6159:1: ( 'cho rda' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6159:1: ( 'cho rda' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6160:1: 'cho rda'
            {
             before(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); 
            match(input,49,FOLLOW_49_in_rule__ChorusReadDelay__Group__0__Impl12629); 
             after(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__0__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6173:1: rule__ChorusReadDelay__Group__1 : rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2 ;
    public final void rule__ChorusReadDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6177:1: ( rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6178:2: rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__1__Impl_in_rule__ChorusReadDelay__Group__112660);
            rule__ChorusReadDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__2_in_rule__ChorusReadDelay__Group__112663);
            rule__ChorusReadDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__1"


    // $ANTLR start "rule__ChorusReadDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6185:1: rule__ChorusReadDelay__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6189:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6190:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6190:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6191:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); 
            match(input,33,FOLLOW_33_in_rule__ChorusReadDelay__Group__1__Impl12691); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__1__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6204:1: rule__ChorusReadDelay__Group__2 : rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3 ;
    public final void rule__ChorusReadDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6208:1: ( rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6209:2: rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__2__Impl_in_rule__ChorusReadDelay__Group__212722);
            rule__ChorusReadDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__3_in_rule__ChorusReadDelay__Group__212725);
            rule__ChorusReadDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__2"


    // $ANTLR start "rule__ChorusReadDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6216:1: rule__ChorusReadDelay__Group__2__Impl : ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusReadDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6220:1: ( ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6221:1: ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6221:1: ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6222:1: ( rule__ChorusReadDelay__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6223:1: ( rule__ChorusReadDelay__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6223:2: rule__ChorusReadDelay__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg1Assignment_2_in_rule__ChorusReadDelay__Group__2__Impl12752);
            rule__ChorusReadDelay__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__2__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6233:1: rule__ChorusReadDelay__Group__3 : rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4 ;
    public final void rule__ChorusReadDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6237:1: ( rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6238:2: rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__3__Impl_in_rule__ChorusReadDelay__Group__312782);
            rule__ChorusReadDelay__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__4_in_rule__ChorusReadDelay__Group__312785);
            rule__ChorusReadDelay__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__3"


    // $ANTLR start "rule__ChorusReadDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6245:1: rule__ChorusReadDelay__Group__3__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6249:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6250:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6250:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6251:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); 
            match(input,33,FOLLOW_33_in_rule__ChorusReadDelay__Group__3__Impl12813); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__3__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6264:1: rule__ChorusReadDelay__Group__4 : rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5 ;
    public final void rule__ChorusReadDelay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6268:1: ( rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6269:2: rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__4__Impl_in_rule__ChorusReadDelay__Group__412844);
            rule__ChorusReadDelay__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__5_in_rule__ChorusReadDelay__Group__412847);
            rule__ChorusReadDelay__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__4"


    // $ANTLR start "rule__ChorusReadDelay__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6276:1: rule__ChorusReadDelay__Group__4__Impl : ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) ) ;
    public final void rule__ChorusReadDelay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6280:1: ( ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6281:1: ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6281:1: ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6282:1: ( rule__ChorusReadDelay__Arg2Assignment_4 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6283:1: ( rule__ChorusReadDelay__Arg2Assignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6283:2: rule__ChorusReadDelay__Arg2Assignment_4
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg2Assignment_4_in_rule__ChorusReadDelay__Group__4__Impl12874);
            rule__ChorusReadDelay__Arg2Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__4__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6293:1: rule__ChorusReadDelay__Group__5 : rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6 ;
    public final void rule__ChorusReadDelay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6297:1: ( rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6298:2: rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__5__Impl_in_rule__ChorusReadDelay__Group__512904);
            rule__ChorusReadDelay__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__6_in_rule__ChorusReadDelay__Group__512907);
            rule__ChorusReadDelay__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__5"


    // $ANTLR start "rule__ChorusReadDelay__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6305:1: rule__ChorusReadDelay__Group__5__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6309:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6310:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6310:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6311:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); 
            match(input,33,FOLLOW_33_in_rule__ChorusReadDelay__Group__5__Impl12935); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__5__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6324:1: rule__ChorusReadDelay__Group__6 : rule__ChorusReadDelay__Group__6__Impl ;
    public final void rule__ChorusReadDelay__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6328:1: ( rule__ChorusReadDelay__Group__6__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6329:2: rule__ChorusReadDelay__Group__6__Impl
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__6__Impl_in_rule__ChorusReadDelay__Group__612966);
            rule__ChorusReadDelay__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__6"


    // $ANTLR start "rule__ChorusReadDelay__Group__6__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6335:1: rule__ChorusReadDelay__Group__6__Impl : ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) ) ;
    public final void rule__ChorusReadDelay__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6339:1: ( ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6340:1: ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6340:1: ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6341:1: ( rule__ChorusReadDelay__Arg3Assignment_6 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6342:1: ( rule__ChorusReadDelay__Arg3Assignment_6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6342:2: rule__ChorusReadDelay__Arg3Assignment_6
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg3Assignment_6_in_rule__ChorusReadDelay__Group__6__Impl12993);
            rule__ChorusReadDelay__Arg3Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__6__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6366:1: rule__ChorusReadValue__Group__0 : rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1 ;
    public final void rule__ChorusReadValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6370:1: ( rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6371:2: rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__0__Impl_in_rule__ChorusReadValue__Group__013037);
            rule__ChorusReadValue__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadValue__Group__1_in_rule__ChorusReadValue__Group__013040);
            rule__ChorusReadValue__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__0"


    // $ANTLR start "rule__ChorusReadValue__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6378:1: rule__ChorusReadValue__Group__0__Impl : ( 'cho rdal' ) ;
    public final void rule__ChorusReadValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6382:1: ( ( 'cho rdal' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6383:1: ( 'cho rdal' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6383:1: ( 'cho rdal' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6384:1: 'cho rdal'
            {
             before(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); 
            match(input,50,FOLLOW_50_in_rule__ChorusReadValue__Group__0__Impl13068); 
             after(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__0__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6397:1: rule__ChorusReadValue__Group__1 : rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2 ;
    public final void rule__ChorusReadValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6401:1: ( rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6402:2: rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__1__Impl_in_rule__ChorusReadValue__Group__113099);
            rule__ChorusReadValue__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadValue__Group__2_in_rule__ChorusReadValue__Group__113102);
            rule__ChorusReadValue__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__1"


    // $ANTLR start "rule__ChorusReadValue__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6409:1: rule__ChorusReadValue__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusReadValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6413:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6414:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6414:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6415:1: ','
            {
             before(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); 
            match(input,33,FOLLOW_33_in_rule__ChorusReadValue__Group__1__Impl13130); 
             after(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__1__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6428:1: rule__ChorusReadValue__Group__2 : rule__ChorusReadValue__Group__2__Impl ;
    public final void rule__ChorusReadValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6432:1: ( rule__ChorusReadValue__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6433:2: rule__ChorusReadValue__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__2__Impl_in_rule__ChorusReadValue__Group__213161);
            rule__ChorusReadValue__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__2"


    // $ANTLR start "rule__ChorusReadValue__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6439:1: rule__ChorusReadValue__Group__2__Impl : ( ( rule__ChorusReadValue__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusReadValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6443:1: ( ( ( rule__ChorusReadValue__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6444:1: ( ( rule__ChorusReadValue__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6444:1: ( ( rule__ChorusReadValue__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6445:1: ( rule__ChorusReadValue__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6446:1: ( rule__ChorusReadValue__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6446:2: rule__ChorusReadValue__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Arg1Assignment_2_in_rule__ChorusReadValue__Group__2__Impl13188);
            rule__ChorusReadValue__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__2__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6462:1: rule__ChorusScaleOffset__Group__0 : rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1 ;
    public final void rule__ChorusScaleOffset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6466:1: ( rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6467:2: rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__0__Impl_in_rule__ChorusScaleOffset__Group__013224);
            rule__ChorusScaleOffset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__1_in_rule__ChorusScaleOffset__Group__013227);
            rule__ChorusScaleOffset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__0"


    // $ANTLR start "rule__ChorusScaleOffset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6474:1: rule__ChorusScaleOffset__Group__0__Impl : ( 'cho sof' ) ;
    public final void rule__ChorusScaleOffset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6478:1: ( ( 'cho sof' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6479:1: ( 'cho sof' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6479:1: ( 'cho sof' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6480:1: 'cho sof'
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); 
            match(input,51,FOLLOW_51_in_rule__ChorusScaleOffset__Group__0__Impl13255); 
             after(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__0__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6493:1: rule__ChorusScaleOffset__Group__1 : rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2 ;
    public final void rule__ChorusScaleOffset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6497:1: ( rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6498:2: rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__1__Impl_in_rule__ChorusScaleOffset__Group__113286);
            rule__ChorusScaleOffset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__2_in_rule__ChorusScaleOffset__Group__113289);
            rule__ChorusScaleOffset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__1"


    // $ANTLR start "rule__ChorusScaleOffset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6505:1: rule__ChorusScaleOffset__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6509:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6510:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6510:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6511:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); 
            match(input,33,FOLLOW_33_in_rule__ChorusScaleOffset__Group__1__Impl13317); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__1__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6524:1: rule__ChorusScaleOffset__Group__2 : rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3 ;
    public final void rule__ChorusScaleOffset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6528:1: ( rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6529:2: rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__2__Impl_in_rule__ChorusScaleOffset__Group__213348);
            rule__ChorusScaleOffset__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__3_in_rule__ChorusScaleOffset__Group__213351);
            rule__ChorusScaleOffset__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__2"


    // $ANTLR start "rule__ChorusScaleOffset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6536:1: rule__ChorusScaleOffset__Group__2__Impl : ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusScaleOffset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6540:1: ( ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6541:1: ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6541:1: ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6542:1: ( rule__ChorusScaleOffset__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6543:1: ( rule__ChorusScaleOffset__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6543:2: rule__ChorusScaleOffset__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg1Assignment_2_in_rule__ChorusScaleOffset__Group__2__Impl13378);
            rule__ChorusScaleOffset__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__2__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6553:1: rule__ChorusScaleOffset__Group__3 : rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4 ;
    public final void rule__ChorusScaleOffset__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6557:1: ( rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6558:2: rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__3__Impl_in_rule__ChorusScaleOffset__Group__313408);
            rule__ChorusScaleOffset__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__4_in_rule__ChorusScaleOffset__Group__313411);
            rule__ChorusScaleOffset__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__3"


    // $ANTLR start "rule__ChorusScaleOffset__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6565:1: rule__ChorusScaleOffset__Group__3__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6569:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6570:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6570:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6571:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); 
            match(input,33,FOLLOW_33_in_rule__ChorusScaleOffset__Group__3__Impl13439); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__3__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6584:1: rule__ChorusScaleOffset__Group__4 : rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5 ;
    public final void rule__ChorusScaleOffset__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6588:1: ( rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6589:2: rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__4__Impl_in_rule__ChorusScaleOffset__Group__413470);
            rule__ChorusScaleOffset__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__5_in_rule__ChorusScaleOffset__Group__413473);
            rule__ChorusScaleOffset__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__4"


    // $ANTLR start "rule__ChorusScaleOffset__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6596:1: rule__ChorusScaleOffset__Group__4__Impl : ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) ) ;
    public final void rule__ChorusScaleOffset__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6600:1: ( ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6601:1: ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6601:1: ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6602:1: ( rule__ChorusScaleOffset__Arg2Assignment_4 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6603:1: ( rule__ChorusScaleOffset__Arg2Assignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6603:2: rule__ChorusScaleOffset__Arg2Assignment_4
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg2Assignment_4_in_rule__ChorusScaleOffset__Group__4__Impl13500);
            rule__ChorusScaleOffset__Arg2Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__4__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6613:1: rule__ChorusScaleOffset__Group__5 : rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6 ;
    public final void rule__ChorusScaleOffset__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6617:1: ( rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6618:2: rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__5__Impl_in_rule__ChorusScaleOffset__Group__513530);
            rule__ChorusScaleOffset__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__6_in_rule__ChorusScaleOffset__Group__513533);
            rule__ChorusScaleOffset__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__5"


    // $ANTLR start "rule__ChorusScaleOffset__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6625:1: rule__ChorusScaleOffset__Group__5__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6629:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6630:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6630:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6631:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); 
            match(input,33,FOLLOW_33_in_rule__ChorusScaleOffset__Group__5__Impl13561); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__5__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6644:1: rule__ChorusScaleOffset__Group__6 : rule__ChorusScaleOffset__Group__6__Impl ;
    public final void rule__ChorusScaleOffset__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6648:1: ( rule__ChorusScaleOffset__Group__6__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6649:2: rule__ChorusScaleOffset__Group__6__Impl
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__6__Impl_in_rule__ChorusScaleOffset__Group__613592);
            rule__ChorusScaleOffset__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__6"


    // $ANTLR start "rule__ChorusScaleOffset__Group__6__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6655:1: rule__ChorusScaleOffset__Group__6__Impl : ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) ) ;
    public final void rule__ChorusScaleOffset__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6659:1: ( ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6660:1: ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6660:1: ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6661:1: ( rule__ChorusScaleOffset__Arg3Assignment_6 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6662:1: ( rule__ChorusScaleOffset__Arg3Assignment_6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6662:2: rule__ChorusScaleOffset__Arg3Assignment_6
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg3Assignment_6_in_rule__ChorusScaleOffset__Group__6__Impl13619);
            rule__ChorusScaleOffset__Arg3Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__6__Impl"


    // $ANTLR start "rule__ReadDelayPointer__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6686:1: rule__ReadDelayPointer__Group__0 : rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1 ;
    public final void rule__ReadDelayPointer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6690:1: ( rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6691:2: rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__0__Impl_in_rule__ReadDelayPointer__Group__013663);
            rule__ReadDelayPointer__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__1_in_rule__ReadDelayPointer__Group__013666);
            rule__ReadDelayPointer__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__0"


    // $ANTLR start "rule__ReadDelayPointer__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6698:1: rule__ReadDelayPointer__Group__0__Impl : ( 'rmpa' ) ;
    public final void rule__ReadDelayPointer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6702:1: ( ( 'rmpa' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6703:1: ( 'rmpa' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6703:1: ( 'rmpa' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6704:1: 'rmpa'
            {
             before(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); 
            match(input,52,FOLLOW_52_in_rule__ReadDelayPointer__Group__0__Impl13694); 
             after(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__0__Impl"


    // $ANTLR start "rule__ReadDelayPointer__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6717:1: rule__ReadDelayPointer__Group__1 : rule__ReadDelayPointer__Group__1__Impl ;
    public final void rule__ReadDelayPointer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6721:1: ( rule__ReadDelayPointer__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6722:2: rule__ReadDelayPointer__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__1__Impl_in_rule__ReadDelayPointer__Group__113725);
            rule__ReadDelayPointer__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__1"


    // $ANTLR start "rule__ReadDelayPointer__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6728:1: rule__ReadDelayPointer__Group__1__Impl : ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) ) ;
    public final void rule__ReadDelayPointer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6732:1: ( ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6733:1: ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6733:1: ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6734:1: ( rule__ReadDelayPointer__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6735:1: ( rule__ReadDelayPointer__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6735:2: rule__ReadDelayPointer__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Arg1Assignment_1_in_rule__ReadDelayPointer__Group__1__Impl13752);
            rule__ReadDelayPointer__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__1__Impl"


    // $ANTLR start "rule__And__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6749:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6753:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6754:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_rule__And__Group__0__Impl_in_rule__And__Group__013786);
            rule__And__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__And__Group__1_in_rule__And__Group__013789);
            rule__And__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6761:1: rule__And__Group__0__Impl : ( 'and' ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6765:1: ( ( 'and' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6766:1: ( 'and' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6766:1: ( 'and' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6767:1: 'and'
            {
             before(grammarAccess.getAndAccess().getAndKeyword_0()); 
            match(input,53,FOLLOW_53_in_rule__And__Group__0__Impl13817); 
             after(grammarAccess.getAndAccess().getAndKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6780:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6784:1: ( rule__And__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6785:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__And__Group__1__Impl_in_rule__And__Group__113848);
            rule__And__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6791:1: rule__And__Group__1__Impl : ( ( rule__And__Arg1Assignment_1 ) ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6795:1: ( ( ( rule__And__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6796:1: ( ( rule__And__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6796:1: ( ( rule__And__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6797:1: ( rule__And__Arg1Assignment_1 )
            {
             before(grammarAccess.getAndAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6798:1: ( rule__And__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6798:2: rule__And__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__And__Arg1Assignment_1_in_rule__And__Group__1__Impl13875);
            rule__And__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6812:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6816:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6817:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_rule__Or__Group__0__Impl_in_rule__Or__Group__013909);
            rule__Or__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Or__Group__1_in_rule__Or__Group__013912);
            rule__Or__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6824:1: rule__Or__Group__0__Impl : ( 'or' ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6828:1: ( ( 'or' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6829:1: ( 'or' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6829:1: ( 'or' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6830:1: 'or'
            {
             before(grammarAccess.getOrAccess().getOrKeyword_0()); 
            match(input,54,FOLLOW_54_in_rule__Or__Group__0__Impl13940); 
             after(grammarAccess.getOrAccess().getOrKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6843:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6847:1: ( rule__Or__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6848:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Or__Group__1__Impl_in_rule__Or__Group__113971);
            rule__Or__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6854:1: rule__Or__Group__1__Impl : ( ( rule__Or__Arg1Assignment_1 ) ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6858:1: ( ( ( rule__Or__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6859:1: ( ( rule__Or__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6859:1: ( ( rule__Or__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6860:1: ( rule__Or__Arg1Assignment_1 )
            {
             before(grammarAccess.getOrAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6861:1: ( rule__Or__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6861:2: rule__Or__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Or__Arg1Assignment_1_in_rule__Or__Group__1__Impl13998);
            rule__Or__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Xor__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6875:1: rule__Xor__Group__0 : rule__Xor__Group__0__Impl rule__Xor__Group__1 ;
    public final void rule__Xor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6879:1: ( rule__Xor__Group__0__Impl rule__Xor__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6880:2: rule__Xor__Group__0__Impl rule__Xor__Group__1
            {
            pushFollow(FOLLOW_rule__Xor__Group__0__Impl_in_rule__Xor__Group__014032);
            rule__Xor__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Xor__Group__1_in_rule__Xor__Group__014035);
            rule__Xor__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__0"


    // $ANTLR start "rule__Xor__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6887:1: rule__Xor__Group__0__Impl : ( 'xor' ) ;
    public final void rule__Xor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6891:1: ( ( 'xor' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6892:1: ( 'xor' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6892:1: ( 'xor' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6893:1: 'xor'
            {
             before(grammarAccess.getXorAccess().getXorKeyword_0()); 
            match(input,55,FOLLOW_55_in_rule__Xor__Group__0__Impl14063); 
             after(grammarAccess.getXorAccess().getXorKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__0__Impl"


    // $ANTLR start "rule__Xor__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6906:1: rule__Xor__Group__1 : rule__Xor__Group__1__Impl ;
    public final void rule__Xor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6910:1: ( rule__Xor__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6911:2: rule__Xor__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Xor__Group__1__Impl_in_rule__Xor__Group__114094);
            rule__Xor__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__1"


    // $ANTLR start "rule__Xor__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6917:1: rule__Xor__Group__1__Impl : ( ( rule__Xor__Arg1Assignment_1 ) ) ;
    public final void rule__Xor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6921:1: ( ( ( rule__Xor__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6922:1: ( ( rule__Xor__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6922:1: ( ( rule__Xor__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6923:1: ( rule__Xor__Arg1Assignment_1 )
            {
             before(grammarAccess.getXorAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6924:1: ( rule__Xor__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6924:2: rule__Xor__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Xor__Arg1Assignment_1_in_rule__Xor__Group__1__Impl14121);
            rule__Xor__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getXorAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__1__Impl"


    // $ANTLR start "rule__Jam__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6938:1: rule__Jam__Group__0 : rule__Jam__Group__0__Impl rule__Jam__Group__1 ;
    public final void rule__Jam__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6942:1: ( rule__Jam__Group__0__Impl rule__Jam__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6943:2: rule__Jam__Group__0__Impl rule__Jam__Group__1
            {
            pushFollow(FOLLOW_rule__Jam__Group__0__Impl_in_rule__Jam__Group__014155);
            rule__Jam__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Jam__Group__1_in_rule__Jam__Group__014158);
            rule__Jam__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__0"


    // $ANTLR start "rule__Jam__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6950:1: rule__Jam__Group__0__Impl : ( 'jam' ) ;
    public final void rule__Jam__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6954:1: ( ( 'jam' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6955:1: ( 'jam' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6955:1: ( 'jam' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6956:1: 'jam'
            {
             before(grammarAccess.getJamAccess().getJamKeyword_0()); 
            match(input,56,FOLLOW_56_in_rule__Jam__Group__0__Impl14186); 
             after(grammarAccess.getJamAccess().getJamKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__0__Impl"


    // $ANTLR start "rule__Jam__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6969:1: rule__Jam__Group__1 : rule__Jam__Group__1__Impl ;
    public final void rule__Jam__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6973:1: ( rule__Jam__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6974:2: rule__Jam__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Jam__Group__1__Impl_in_rule__Jam__Group__114217);
            rule__Jam__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__1"


    // $ANTLR start "rule__Jam__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6980:1: rule__Jam__Group__1__Impl : ( ( rule__Jam__Arg1Assignment_1 ) ) ;
    public final void rule__Jam__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6984:1: ( ( ( rule__Jam__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6985:1: ( ( rule__Jam__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6985:1: ( ( rule__Jam__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6986:1: ( rule__Jam__Arg1Assignment_1 )
            {
             before(grammarAccess.getJamAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6987:1: ( rule__Jam__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6987:2: rule__Jam__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Jam__Arg1Assignment_1_in_rule__Jam__Group__1__Impl14244);
            rule__Jam__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getJamAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__1__Impl"


    // $ANTLR start "rule__Clr__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7001:1: rule__Clr__Group__0 : rule__Clr__Group__0__Impl rule__Clr__Group__1 ;
    public final void rule__Clr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7005:1: ( rule__Clr__Group__0__Impl rule__Clr__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7006:2: rule__Clr__Group__0__Impl rule__Clr__Group__1
            {
            pushFollow(FOLLOW_rule__Clr__Group__0__Impl_in_rule__Clr__Group__014278);
            rule__Clr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Clr__Group__1_in_rule__Clr__Group__014281);
            rule__Clr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__0"


    // $ANTLR start "rule__Clr__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7013:1: rule__Clr__Group__0__Impl : ( () ) ;
    public final void rule__Clr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7017:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7018:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7018:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7019:1: ()
            {
             before(grammarAccess.getClrAccess().getClrAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7020:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7022:1: 
            {
            }

             after(grammarAccess.getClrAccess().getClrAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__0__Impl"


    // $ANTLR start "rule__Clr__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7032:1: rule__Clr__Group__1 : rule__Clr__Group__1__Impl ;
    public final void rule__Clr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7036:1: ( rule__Clr__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7037:2: rule__Clr__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Clr__Group__1__Impl_in_rule__Clr__Group__114339);
            rule__Clr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__1"


    // $ANTLR start "rule__Clr__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7043:1: rule__Clr__Group__1__Impl : ( 'clr' ) ;
    public final void rule__Clr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7047:1: ( ( 'clr' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7048:1: ( 'clr' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7048:1: ( 'clr' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7049:1: 'clr'
            {
             before(grammarAccess.getClrAccess().getClrKeyword_1()); 
            match(input,57,FOLLOW_57_in_rule__Clr__Group__1__Impl14367); 
             after(grammarAccess.getClrAccess().getClrKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__1__Impl"


    // $ANTLR start "rule__Not__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7066:1: rule__Not__Group__0 : rule__Not__Group__0__Impl rule__Not__Group__1 ;
    public final void rule__Not__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7070:1: ( rule__Not__Group__0__Impl rule__Not__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7071:2: rule__Not__Group__0__Impl rule__Not__Group__1
            {
            pushFollow(FOLLOW_rule__Not__Group__0__Impl_in_rule__Not__Group__014402);
            rule__Not__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Not__Group__1_in_rule__Not__Group__014405);
            rule__Not__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__0"


    // $ANTLR start "rule__Not__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7078:1: rule__Not__Group__0__Impl : ( () ) ;
    public final void rule__Not__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7082:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7083:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7083:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7084:1: ()
            {
             before(grammarAccess.getNotAccess().getNotAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7085:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7087:1: 
            {
            }

             after(grammarAccess.getNotAccess().getNotAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__0__Impl"


    // $ANTLR start "rule__Not__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7097:1: rule__Not__Group__1 : rule__Not__Group__1__Impl ;
    public final void rule__Not__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7101:1: ( rule__Not__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7102:2: rule__Not__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Not__Group__1__Impl_in_rule__Not__Group__114463);
            rule__Not__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__1"


    // $ANTLR start "rule__Not__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7108:1: rule__Not__Group__1__Impl : ( 'not' ) ;
    public final void rule__Not__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7112:1: ( ( 'not' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7113:1: ( 'not' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7113:1: ( 'not' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7114:1: 'not'
            {
             before(grammarAccess.getNotAccess().getNotKeyword_1()); 
            match(input,58,FOLLOW_58_in_rule__Not__Group__1__Impl14491); 
             after(grammarAccess.getNotAccess().getNotKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__1__Impl"


    // $ANTLR start "rule__Absa__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7131:1: rule__Absa__Group__0 : rule__Absa__Group__0__Impl rule__Absa__Group__1 ;
    public final void rule__Absa__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7135:1: ( rule__Absa__Group__0__Impl rule__Absa__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7136:2: rule__Absa__Group__0__Impl rule__Absa__Group__1
            {
            pushFollow(FOLLOW_rule__Absa__Group__0__Impl_in_rule__Absa__Group__014526);
            rule__Absa__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Absa__Group__1_in_rule__Absa__Group__014529);
            rule__Absa__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__0"


    // $ANTLR start "rule__Absa__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7143:1: rule__Absa__Group__0__Impl : ( () ) ;
    public final void rule__Absa__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7147:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7148:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7148:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7149:1: ()
            {
             before(grammarAccess.getAbsaAccess().getAbsaAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7150:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7152:1: 
            {
            }

             after(grammarAccess.getAbsaAccess().getAbsaAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__0__Impl"


    // $ANTLR start "rule__Absa__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7162:1: rule__Absa__Group__1 : rule__Absa__Group__1__Impl ;
    public final void rule__Absa__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7166:1: ( rule__Absa__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7167:2: rule__Absa__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Absa__Group__1__Impl_in_rule__Absa__Group__114587);
            rule__Absa__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__1"


    // $ANTLR start "rule__Absa__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7173:1: rule__Absa__Group__1__Impl : ( 'absa' ) ;
    public final void rule__Absa__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7177:1: ( ( 'absa' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7178:1: ( 'absa' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7178:1: ( 'absa' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7179:1: 'absa'
            {
             before(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); 
            match(input,59,FOLLOW_59_in_rule__Absa__Group__1__Impl14615); 
             after(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__1__Impl"


    // $ANTLR start "rule__Skip__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7196:1: rule__Skip__Group__0 : rule__Skip__Group__0__Impl rule__Skip__Group__1 ;
    public final void rule__Skip__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7200:1: ( rule__Skip__Group__0__Impl rule__Skip__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7201:2: rule__Skip__Group__0__Impl rule__Skip__Group__1
            {
            pushFollow(FOLLOW_rule__Skip__Group__0__Impl_in_rule__Skip__Group__014650);
            rule__Skip__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__1_in_rule__Skip__Group__014653);
            rule__Skip__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__0"


    // $ANTLR start "rule__Skip__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7208:1: rule__Skip__Group__0__Impl : ( 'skp' ) ;
    public final void rule__Skip__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7212:1: ( ( 'skp' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7213:1: ( 'skp' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7213:1: ( 'skp' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7214:1: 'skp'
            {
             before(grammarAccess.getSkipAccess().getSkpKeyword_0()); 
            match(input,60,FOLLOW_60_in_rule__Skip__Group__0__Impl14681); 
             after(grammarAccess.getSkipAccess().getSkpKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__0__Impl"


    // $ANTLR start "rule__Skip__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7227:1: rule__Skip__Group__1 : rule__Skip__Group__1__Impl rule__Skip__Group__2 ;
    public final void rule__Skip__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7231:1: ( rule__Skip__Group__1__Impl rule__Skip__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7232:2: rule__Skip__Group__1__Impl rule__Skip__Group__2
            {
            pushFollow(FOLLOW_rule__Skip__Group__1__Impl_in_rule__Skip__Group__114712);
            rule__Skip__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__2_in_rule__Skip__Group__114715);
            rule__Skip__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__1"


    // $ANTLR start "rule__Skip__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7239:1: rule__Skip__Group__1__Impl : ( ( rule__Skip__FlagsAssignment_1 ) ) ;
    public final void rule__Skip__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7243:1: ( ( ( rule__Skip__FlagsAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7244:1: ( ( rule__Skip__FlagsAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7244:1: ( ( rule__Skip__FlagsAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7245:1: ( rule__Skip__FlagsAssignment_1 )
            {
             before(grammarAccess.getSkipAccess().getFlagsAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7246:1: ( rule__Skip__FlagsAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7246:2: rule__Skip__FlagsAssignment_1
            {
            pushFollow(FOLLOW_rule__Skip__FlagsAssignment_1_in_rule__Skip__Group__1__Impl14742);
            rule__Skip__FlagsAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getFlagsAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__1__Impl"


    // $ANTLR start "rule__Skip__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7256:1: rule__Skip__Group__2 : rule__Skip__Group__2__Impl rule__Skip__Group__3 ;
    public final void rule__Skip__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7260:1: ( rule__Skip__Group__2__Impl rule__Skip__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7261:2: rule__Skip__Group__2__Impl rule__Skip__Group__3
            {
            pushFollow(FOLLOW_rule__Skip__Group__2__Impl_in_rule__Skip__Group__214772);
            rule__Skip__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__3_in_rule__Skip__Group__214775);
            rule__Skip__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__2"


    // $ANTLR start "rule__Skip__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7268:1: rule__Skip__Group__2__Impl : ( ',' ) ;
    public final void rule__Skip__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7272:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7273:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7273:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7274:1: ','
            {
             before(grammarAccess.getSkipAccess().getCommaKeyword_2()); 
            match(input,33,FOLLOW_33_in_rule__Skip__Group__2__Impl14803); 
             after(grammarAccess.getSkipAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__2__Impl"


    // $ANTLR start "rule__Skip__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7287:1: rule__Skip__Group__3 : rule__Skip__Group__3__Impl ;
    public final void rule__Skip__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7291:1: ( rule__Skip__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7292:2: rule__Skip__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Skip__Group__3__Impl_in_rule__Skip__Group__314834);
            rule__Skip__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__3"


    // $ANTLR start "rule__Skip__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7298:1: rule__Skip__Group__3__Impl : ( ( rule__Skip__LabelAssignment_3 ) ) ;
    public final void rule__Skip__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7302:1: ( ( ( rule__Skip__LabelAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7303:1: ( ( rule__Skip__LabelAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7303:1: ( ( rule__Skip__LabelAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7304:1: ( rule__Skip__LabelAssignment_3 )
            {
             before(grammarAccess.getSkipAccess().getLabelAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7305:1: ( rule__Skip__LabelAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7305:2: rule__Skip__LabelAssignment_3
            {
            pushFollow(FOLLOW_rule__Skip__LabelAssignment_3_in_rule__Skip__Group__3__Impl14861);
            rule__Skip__LabelAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getLabelAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__3__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7323:1: rule__SPINDOUBLE__Group__0 : rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1 ;
    public final void rule__SPINDOUBLE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7327:1: ( rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7328:2: rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__0__Impl_in_rule__SPINDOUBLE__Group__014899);
            rule__SPINDOUBLE__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__1_in_rule__SPINDOUBLE__Group__014902);
            rule__SPINDOUBLE__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__0"


    // $ANTLR start "rule__SPINDOUBLE__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7335:1: rule__SPINDOUBLE__Group__0__Impl : ( ( '-' )? ) ;
    public final void rule__SPINDOUBLE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7339:1: ( ( ( '-' )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7340:1: ( ( '-' )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7340:1: ( ( '-' )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7341:1: ( '-' )?
            {
             before(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7342:1: ( '-' )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==15) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7343:2: '-'
                    {
                    match(input,15,FOLLOW_15_in_rule__SPINDOUBLE__Group__0__Impl14931); 

                    }
                    break;

            }

             after(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7354:1: rule__SPINDOUBLE__Group__1 : rule__SPINDOUBLE__Group__1__Impl ;
    public final void rule__SPINDOUBLE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7358:1: ( rule__SPINDOUBLE__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7359:2: rule__SPINDOUBLE__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__1__Impl_in_rule__SPINDOUBLE__Group__114964);
            rule__SPINDOUBLE__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__1"


    // $ANTLR start "rule__SPINDOUBLE__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7365:1: rule__SPINDOUBLE__Group__1__Impl : ( ( rule__SPINDOUBLE__Alternatives_1 ) ) ;
    public final void rule__SPINDOUBLE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7369:1: ( ( ( rule__SPINDOUBLE__Alternatives_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7370:1: ( ( rule__SPINDOUBLE__Alternatives_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7370:1: ( ( rule__SPINDOUBLE__Alternatives_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7371:1: ( rule__SPINDOUBLE__Alternatives_1 )
            {
             before(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7372:1: ( rule__SPINDOUBLE__Alternatives_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7372:2: rule__SPINDOUBLE__Alternatives_1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Alternatives_1_in_rule__SPINDOUBLE__Group__1__Impl14991);
            rule__SPINDOUBLE__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__1__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7386:1: rule__SPINDOUBLE__Group_1_1__0 : rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1 ;
    public final void rule__SPINDOUBLE__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7390:1: ( rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7391:2: rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1__015025);
            rule__SPINDOUBLE__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__1_in_rule__SPINDOUBLE__Group_1_1__015028);
            rule__SPINDOUBLE__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__0"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7398:1: rule__SPINDOUBLE__Group_1_1__0__Impl : ( RULE_INT ) ;
    public final void rule__SPINDOUBLE__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7402:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7403:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7403:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7404:1: RULE_INT
            {
             before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1__0__Impl15055); 
             after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7415:1: rule__SPINDOUBLE__Group_1_1__1 : rule__SPINDOUBLE__Group_1_1__1__Impl ;
    public final void rule__SPINDOUBLE__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7419:1: ( rule__SPINDOUBLE__Group_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7420:2: rule__SPINDOUBLE__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1__115084);
            rule__SPINDOUBLE__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__1"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7426:1: rule__SPINDOUBLE__Group_1_1__1__Impl : ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? ) ;
    public final void rule__SPINDOUBLE__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7430:1: ( ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7431:1: ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7431:1: ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7432:1: ( rule__SPINDOUBLE__Group_1_1_1__0 )?
            {
             before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7433:1: ( rule__SPINDOUBLE__Group_1_1_1__0 )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==61) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7433:2: rule__SPINDOUBLE__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0_in_rule__SPINDOUBLE__Group_1_1__1__Impl15111);
                    rule__SPINDOUBLE__Group_1_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__1__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7447:1: rule__SPINDOUBLE__Group_1_1_1__0 : rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1 ;
    public final void rule__SPINDOUBLE__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7451:1: ( rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7452:2: rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1_1__015146);
            rule__SPINDOUBLE__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1_in_rule__SPINDOUBLE__Group_1_1_1__015149);
            rule__SPINDOUBLE__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__0"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7459:1: rule__SPINDOUBLE__Group_1_1_1__0__Impl : ( '.' ) ;
    public final void rule__SPINDOUBLE__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7463:1: ( ( '.' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7464:1: ( '.' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7464:1: ( '.' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7465:1: '.'
            {
             before(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); 
            match(input,61,FOLLOW_61_in_rule__SPINDOUBLE__Group_1_1_1__0__Impl15177); 
             after(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7478:1: rule__SPINDOUBLE__Group_1_1_1__1 : rule__SPINDOUBLE__Group_1_1_1__1__Impl ;
    public final void rule__SPINDOUBLE__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7482:1: ( rule__SPINDOUBLE__Group_1_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7483:2: rule__SPINDOUBLE__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1_1__115208);
            rule__SPINDOUBLE__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__1"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7489:1: rule__SPINDOUBLE__Group_1_1_1__1__Impl : ( RULE_INT ) ;
    public final void rule__SPINDOUBLE__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7493:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7494:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7494:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7495:1: RULE_INT
            {
             before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1_1__1__Impl15235); 
             after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7510:1: rule__SPINCHOREGFLAGS__Group_1__0 : rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1 ;
    public final void rule__SPINCHOREGFLAGS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7514:1: ( rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7515:2: rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1__015268);
            rule__SPINCHOREGFLAGS__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1_in_rule__SPINCHOREGFLAGS__Group_1__015271);
            rule__SPINCHOREGFLAGS__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__0"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7522:1: rule__SPINCHOREGFLAGS__Group_1__0__Impl : ( RULE_ID ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7526:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7527:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7527:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7528:1: RULE_ID
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1__0__Impl15298); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__0__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7539:1: rule__SPINCHOREGFLAGS__Group_1__1 : rule__SPINCHOREGFLAGS__Group_1__1__Impl ;
    public final void rule__SPINCHOREGFLAGS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7543:1: ( rule__SPINCHOREGFLAGS__Group_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7544:2: rule__SPINCHOREGFLAGS__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1__115327);
            rule__SPINCHOREGFLAGS__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__1"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7550:1: rule__SPINCHOREGFLAGS__Group_1__1__Impl : ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7554:1: ( ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7555:1: ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7555:1: ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7556:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0 )*
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7557:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0 )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==62) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7557:2: rule__SPINCHOREGFLAGS__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0_in_rule__SPINCHOREGFLAGS__Group_1__1__Impl15354);
            	    rule__SPINCHOREGFLAGS__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

             after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__1__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7571:1: rule__SPINCHOREGFLAGS__Group_1_1__0 : rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1 ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7575:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7576:2: rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__015389);
            rule__SPINCHOREGFLAGS__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1_in_rule__SPINCHOREGFLAGS__Group_1_1__015392);
            rule__SPINCHOREGFLAGS__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__0"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7583:1: rule__SPINCHOREGFLAGS__Group_1_1__0__Impl : ( '|' ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7587:1: ( ( '|' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7588:1: ( '|' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7588:1: ( '|' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7589:1: '|'
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); 
            match(input,62,FOLLOW_62_in_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl15420); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__0__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7602:1: rule__SPINCHOREGFLAGS__Group_1_1__1 : rule__SPINCHOREGFLAGS__Group_1_1__1__Impl ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7606:1: ( rule__SPINCHOREGFLAGS__Group_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7607:2: rule__SPINCHOREGFLAGS__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__115451);
            rule__SPINCHOREGFLAGS__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__1"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7613:1: rule__SPINCHOREGFLAGS__Group_1_1__1__Impl : ( RULE_ID ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7617:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7618:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7618:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7619:1: RULE_ID
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl15478); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__1__Impl"


    // $ANTLR start "rule__SPINMEM__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7634:1: rule__SPINMEM__Group__0 : rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1 ;
    public final void rule__SPINMEM__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7638:1: ( rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7639:2: rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__0__Impl_in_rule__SPINMEM__Group__015511);
            rule__SPINMEM__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINMEM__Group__1_in_rule__SPINMEM__Group__015514);
            rule__SPINMEM__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__0"


    // $ANTLR start "rule__SPINMEM__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7646:1: rule__SPINMEM__Group__0__Impl : ( ( rule__SPINMEM__BufferAssignment_0 ) ) ;
    public final void rule__SPINMEM__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7650:1: ( ( ( rule__SPINMEM__BufferAssignment_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7651:1: ( ( rule__SPINMEM__BufferAssignment_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7651:1: ( ( rule__SPINMEM__BufferAssignment_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7652:1: ( rule__SPINMEM__BufferAssignment_0 )
            {
             before(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7653:1: ( rule__SPINMEM__BufferAssignment_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7653:2: rule__SPINMEM__BufferAssignment_0
            {
            pushFollow(FOLLOW_rule__SPINMEM__BufferAssignment_0_in_rule__SPINMEM__Group__0__Impl15541);
            rule__SPINMEM__BufferAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__0__Impl"


    // $ANTLR start "rule__SPINMEM__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7663:1: rule__SPINMEM__Group__1 : rule__SPINMEM__Group__1__Impl ;
    public final void rule__SPINMEM__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7667:1: ( rule__SPINMEM__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7668:2: rule__SPINMEM__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__1__Impl_in_rule__SPINMEM__Group__115571);
            rule__SPINMEM__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__1"


    // $ANTLR start "rule__SPINMEM__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7674:1: rule__SPINMEM__Group__1__Impl : ( ( rule__SPINMEM__Alternatives_1 )? ) ;
    public final void rule__SPINMEM__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7678:1: ( ( ( rule__SPINMEM__Alternatives_1 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7679:1: ( ( rule__SPINMEM__Alternatives_1 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7679:1: ( ( rule__SPINMEM__Alternatives_1 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7680:1: ( rule__SPINMEM__Alternatives_1 )?
            {
             before(grammarAccess.getSPINMEMAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7681:1: ( rule__SPINMEM__Alternatives_1 )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_INT) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_ID) ) {
                int LA28_2 = input.LA(2);

                if ( (LA28_2==EOF||LA28_2==RULE_ID||LA28_2==RULE_SC_COMMENT||(LA28_2>=21 && LA28_2<=23)||(LA28_2>=25 && LA28_2<=60)) ) {
                    alt28=1;
                }
            }
            switch (alt28) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7681:2: rule__SPINMEM__Alternatives_1
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__Alternatives_1_in_rule__SPINMEM__Group__1__Impl15598);
                    rule__SPINMEM__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINMEMAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__1__Impl"


    // $ANTLR start "rule__SPINBUF__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7695:1: rule__SPINBUF__Group__0 : rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1 ;
    public final void rule__SPINBUF__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7699:1: ( rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7700:2: rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__0__Impl_in_rule__SPINBUF__Group__015633);
            rule__SPINBUF__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINBUF__Group__1_in_rule__SPINBUF__Group__015636);
            rule__SPINBUF__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__0"


    // $ANTLR start "rule__SPINBUF__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7707:1: rule__SPINBUF__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__SPINBUF__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7711:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7712:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7712:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7713:1: RULE_ID
            {
             before(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINBUF__Group__0__Impl15663); 
             after(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__0__Impl"


    // $ANTLR start "rule__SPINBUF__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7724:1: rule__SPINBUF__Group__1 : rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2 ;
    public final void rule__SPINBUF__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7728:1: ( rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7729:2: rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__1__Impl_in_rule__SPINBUF__Group__115692);
            rule__SPINBUF__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINBUF__Group__2_in_rule__SPINBUF__Group__115695);
            rule__SPINBUF__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__1"


    // $ANTLR start "rule__SPINBUF__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7736:1: rule__SPINBUF__Group__1__Impl : ( ( rule__SPINBUF__Alternatives_1 )? ) ;
    public final void rule__SPINBUF__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7740:1: ( ( ( rule__SPINBUF__Alternatives_1 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7741:1: ( ( rule__SPINBUF__Alternatives_1 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7741:1: ( ( rule__SPINBUF__Alternatives_1 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7742:1: ( rule__SPINBUF__Alternatives_1 )?
            {
             before(grammarAccess.getSPINBUFAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7743:1: ( rule__SPINBUF__Alternatives_1 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=12 && LA29_0<=13)) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7743:2: rule__SPINBUF__Alternatives_1
                    {
                    pushFollow(FOLLOW_rule__SPINBUF__Alternatives_1_in_rule__SPINBUF__Group__1__Impl15722);
                    rule__SPINBUF__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINBUFAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__1__Impl"


    // $ANTLR start "rule__SPINBUF__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7753:1: rule__SPINBUF__Group__2 : rule__SPINBUF__Group__2__Impl ;
    public final void rule__SPINBUF__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7757:1: ( rule__SPINBUF__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7758:2: rule__SPINBUF__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__2__Impl_in_rule__SPINBUF__Group__215753);
            rule__SPINBUF__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__2"


    // $ANTLR start "rule__SPINBUF__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7764:1: rule__SPINBUF__Group__2__Impl : ( ( rule__SPINBUF__Alternatives_2 )? ) ;
    public final void rule__SPINBUF__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7768:1: ( ( ( rule__SPINBUF__Alternatives_2 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7769:1: ( ( rule__SPINBUF__Alternatives_2 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7769:1: ( ( rule__SPINBUF__Alternatives_2 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7770:1: ( rule__SPINBUF__Alternatives_2 )?
            {
             before(grammarAccess.getSPINBUFAccess().getAlternatives_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7771:1: ( rule__SPINBUF__Alternatives_2 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=14 && LA30_0<=15)) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7771:2: rule__SPINBUF__Alternatives_2
                    {
                    pushFollow(FOLLOW_rule__SPINBUF__Alternatives_2_in_rule__SPINBUF__Group__2__Impl15780);
                    rule__SPINBUF__Alternatives_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINBUFAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__2__Impl"


    // $ANTLR start "rule__BINARY24__Group_0__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7787:1: rule__BINARY24__Group_0__0 : rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1 ;
    public final void rule__BINARY24__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7791:1: ( rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7792:2: rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0__0__Impl_in_rule__BINARY24__Group_0__015817);
            rule__BINARY24__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_0__1_in_rule__BINARY24__Group_0__015820);
            rule__BINARY24__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__0"


    // $ANTLR start "rule__BINARY24__Group_0__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7799:1: rule__BINARY24__Group_0__0__Impl : ( ( rule__BINARY24__Group_0_0__0 ) ) ;
    public final void rule__BINARY24__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7803:1: ( ( ( rule__BINARY24__Group_0_0__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7804:1: ( ( rule__BINARY24__Group_0_0__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7804:1: ( ( rule__BINARY24__Group_0_0__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7805:1: ( rule__BINARY24__Group_0_0__0 )
            {
             before(grammarAccess.getBINARY24Access().getGroup_0_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7806:1: ( rule__BINARY24__Group_0_0__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7806:2: rule__BINARY24__Group_0_0__0
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__0_in_rule__BINARY24__Group_0__0__Impl15847);
            rule__BINARY24__Group_0_0__0();

            state._fsp--;


            }

             after(grammarAccess.getBINARY24Access().getGroup_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_0__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7816:1: rule__BINARY24__Group_0__1 : rule__BINARY24__Group_0__1__Impl ;
    public final void rule__BINARY24__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7820:1: ( rule__BINARY24__Group_0__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7821:2: rule__BINARY24__Group_0__1__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0__1__Impl_in_rule__BINARY24__Group_0__115877);
            rule__BINARY24__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__1"


    // $ANTLR start "rule__BINARY24__Group_0__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7827:1: rule__BINARY24__Group_0__1__Impl : ( ( RULE_ID )* ) ;
    public final void rule__BINARY24__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7831:1: ( ( ( RULE_ID )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7832:1: ( ( RULE_ID )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7832:1: ( ( RULE_ID )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7833:1: ( RULE_ID )*
            {
             before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7834:1: ( RULE_ID )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_ID) ) {
                    int LA31_2 = input.LA(2);

                    if ( (LA31_2==EOF||LA31_2==RULE_ID||LA31_2==RULE_SC_COMMENT||(LA31_2>=21 && LA31_2<=23)||(LA31_2>=25 && LA31_2<=32)||(LA31_2>=34 && LA31_2<=60)) ) {
                        alt31=1;
                    }


                }


                switch (alt31) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7834:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__BINARY24__Group_0__1__Impl15905); 

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_0_0__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7848:1: rule__BINARY24__Group_0_0__0 : rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1 ;
    public final void rule__BINARY24__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7852:1: ( rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7853:2: rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__0__Impl_in_rule__BINARY24__Group_0_0__015940);
            rule__BINARY24__Group_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__1_in_rule__BINARY24__Group_0_0__015943);
            rule__BINARY24__Group_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__0"


    // $ANTLR start "rule__BINARY24__Group_0_0__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7860:1: rule__BINARY24__Group_0_0__0__Impl : ( '%' ) ;
    public final void rule__BINARY24__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7864:1: ( ( '%' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7865:1: ( '%' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7865:1: ( '%' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7866:1: '%'
            {
             before(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); 
            match(input,63,FOLLOW_63_in_rule__BINARY24__Group_0_0__0__Impl15971); 
             after(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_0_0__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7879:1: rule__BINARY24__Group_0_0__1 : rule__BINARY24__Group_0_0__1__Impl ;
    public final void rule__BINARY24__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7883:1: ( rule__BINARY24__Group_0_0__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7884:2: rule__BINARY24__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__1__Impl_in_rule__BINARY24__Group_0_0__116002);
            rule__BINARY24__Group_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__1"


    // $ANTLR start "rule__BINARY24__Group_0_0__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7890:1: rule__BINARY24__Group_0_0__1__Impl : ( RULE_INT ) ;
    public final void rule__BINARY24__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7894:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7895:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7895:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7896:1: RULE_INT
            {
             before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__BINARY24__Group_0_0__1__Impl16029); 
             after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7911:1: rule__BINARY24__Group_1__0 : rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1 ;
    public final void rule__BINARY24__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7915:1: ( rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7916:2: rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__0__Impl_in_rule__BINARY24__Group_1__016062);
            rule__BINARY24__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_1__1_in_rule__BINARY24__Group_1__016065);
            rule__BINARY24__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__0"


    // $ANTLR start "rule__BINARY24__Group_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7923:1: rule__BINARY24__Group_1__0__Impl : ( '$' ) ;
    public final void rule__BINARY24__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7927:1: ( ( '$' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7928:1: ( '$' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7928:1: ( '$' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7929:1: '$'
            {
             before(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); 
            match(input,64,FOLLOW_64_in_rule__BINARY24__Group_1__0__Impl16093); 
             after(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7942:1: rule__BINARY24__Group_1__1 : rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2 ;
    public final void rule__BINARY24__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7946:1: ( rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7947:2: rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__1__Impl_in_rule__BINARY24__Group_1__116124);
            rule__BINARY24__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_1__2_in_rule__BINARY24__Group_1__116127);
            rule__BINARY24__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__1"


    // $ANTLR start "rule__BINARY24__Group_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7954:1: rule__BINARY24__Group_1__1__Impl : ( ( RULE_INT )* ) ;
    public final void rule__BINARY24__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7958:1: ( ( ( RULE_INT )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7959:1: ( ( RULE_INT )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7959:1: ( ( RULE_INT )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7960:1: ( RULE_INT )*
            {
             before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7961:1: ( RULE_INT )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==RULE_INT) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7961:3: RULE_INT
            	    {
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__BINARY24__Group_1__1__Impl16155); 

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7971:1: rule__BINARY24__Group_1__2 : rule__BINARY24__Group_1__2__Impl ;
    public final void rule__BINARY24__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7975:1: ( rule__BINARY24__Group_1__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7976:2: rule__BINARY24__Group_1__2__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__2__Impl_in_rule__BINARY24__Group_1__216186);
            rule__BINARY24__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__2"


    // $ANTLR start "rule__BINARY24__Group_1__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7982:1: rule__BINARY24__Group_1__2__Impl : ( ( RULE_ID )* ) ;
    public final void rule__BINARY24__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7986:1: ( ( ( RULE_ID )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7987:1: ( ( RULE_ID )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7987:1: ( ( RULE_ID )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7988:1: ( RULE_ID )*
            {
             before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7989:1: ( RULE_ID )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==RULE_ID) ) {
                    int LA33_2 = input.LA(2);

                    if ( (LA33_2==EOF||LA33_2==RULE_ID||LA33_2==RULE_SC_COMMENT||(LA33_2>=21 && LA33_2<=23)||(LA33_2>=25 && LA33_2<=32)||(LA33_2>=34 && LA33_2<=60)) ) {
                        alt33=1;
                    }


                }


                switch (alt33) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7989:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__BINARY24__Group_1__2__Impl16214); 

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__2__Impl"


    // $ANTLR start "rule__Program__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8006:1: rule__Program__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Program__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8010:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8011:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8011:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8012:1: RULE_ID
            {
             before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Program__NameAssignment_116256); 
             after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__NameAssignment_1"


    // $ANTLR start "rule__Program__PinsAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8021:1: rule__Program__PinsAssignment_2 : ( rulePin ) ;
    public final void rule__Program__PinsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8025:1: ( ( rulePin ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8026:1: ( rulePin )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8026:1: ( rulePin )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8027:1: rulePin
            {
             before(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); 
            pushFollow(FOLLOW_rulePin_in_rule__Program__PinsAssignment_216287);
            rulePin();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__PinsAssignment_2"


    // $ANTLR start "rule__Program__ElementsAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8036:1: rule__Program__ElementsAssignment_3 : ( ruleSpinElement ) ;
    public final void rule__Program__ElementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8040:1: ( ( ruleSpinElement ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8041:1: ( ruleSpinElement )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8041:1: ( ruleSpinElement )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8042:1: ruleSpinElement
            {
             before(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSpinElement_in_rule__Program__ElementsAssignment_316318);
            ruleSpinElement();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__ElementsAssignment_3"


    // $ANTLR start "rule__AudioInput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8051:1: rule__AudioInput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AudioInput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8055:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8056:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8056:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8057:1: RULE_ID
            {
             before(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioInput__VarNameAssignment_116349); 
             after(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__VarNameAssignment_1"


    // $ANTLR start "rule__AudioInput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8066:1: rule__AudioInput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__AudioInput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8070:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8071:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8071:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8072:1: RULE_ID
            {
             before(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioInput__NameAssignment_216380); 
             after(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__NameAssignment_2"


    // $ANTLR start "rule__AudioOutput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8081:1: rule__AudioOutput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AudioOutput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8085:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8086:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8086:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8087:1: RULE_ID
            {
             before(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioOutput__VarNameAssignment_116411); 
             after(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__VarNameAssignment_1"


    // $ANTLR start "rule__AudioOutput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8096:1: rule__AudioOutput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__AudioOutput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8100:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8101:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8101:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8102:1: RULE_ID
            {
             before(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioOutput__NameAssignment_216442); 
             after(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__NameAssignment_2"


    // $ANTLR start "rule__ControlInput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8111:1: rule__ControlInput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlInput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8115:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8116:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8116:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8117:1: RULE_ID
            {
             before(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlInput__VarNameAssignment_116473); 
             after(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__VarNameAssignment_1"


    // $ANTLR start "rule__ControlInput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8126:1: rule__ControlInput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlInput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8130:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8131:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8131:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8132:1: RULE_ID
            {
             before(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlInput__NameAssignment_216504); 
             after(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__NameAssignment_2"


    // $ANTLR start "rule__ControlOutput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8141:1: rule__ControlOutput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlOutput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8145:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8146:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8146:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8147:1: RULE_ID
            {
             before(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlOutput__VarNameAssignment_116535); 
             after(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__VarNameAssignment_1"


    // $ANTLR start "rule__ControlOutput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8156:1: rule__ControlOutput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlOutput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8160:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8161:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8161:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8162:1: RULE_ID
            {
             before(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlOutput__NameAssignment_216566); 
             after(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__NameAssignment_2"


    // $ANTLR start "rule__Equate__EnameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8171:1: rule__Equate__EnameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Equate__EnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8175:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8176:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8176:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8177:1: RULE_ID
            {
             before(grammarAccess.getEquateAccess().getEnameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Equate__EnameAssignment_116597); 
             after(grammarAccess.getEquateAccess().getEnameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__EnameAssignment_1"


    // $ANTLR start "rule__Equate__ValueAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8186:1: rule__Equate__ValueAssignment_2 : ( ruleSPINDOUBLE ) ;
    public final void rule__Equate__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8190:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8191:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8191:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8192:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Equate__ValueAssignment_216628);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__ValueAssignment_2"


    // $ANTLR start "rule__Equate__ControlTypeAssignment_3_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8201:1: rule__Equate__ControlTypeAssignment_3_0 : ( RULE_ID ) ;
    public final void rule__Equate__ControlTypeAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8205:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8206:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8206:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8207:1: RULE_ID
            {
             before(grammarAccess.getEquateAccess().getControlTypeIDTerminalRuleCall_3_0_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Equate__ControlTypeAssignment_3_016659); 
             after(grammarAccess.getEquateAccess().getControlTypeIDTerminalRuleCall_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__ControlTypeAssignment_3_0"


    // $ANTLR start "rule__Equate__ControlNameAssignment_3_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8216:1: rule__Equate__ControlNameAssignment_3_1 : ( RULE_ID ) ;
    public final void rule__Equate__ControlNameAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8220:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8221:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8221:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8222:1: RULE_ID
            {
             before(grammarAccess.getEquateAccess().getControlNameIDTerminalRuleCall_3_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Equate__ControlNameAssignment_3_116690); 
             after(grammarAccess.getEquateAccess().getControlNameIDTerminalRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__ControlNameAssignment_3_1"


    // $ANTLR start "rule__Equate__MaxAssignment_3_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8231:1: rule__Equate__MaxAssignment_3_2 : ( ruleSPINDOUBLE ) ;
    public final void rule__Equate__MaxAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8235:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8236:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8236:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8237:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getEquateAccess().getMaxSPINDOUBLEParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Equate__MaxAssignment_3_216721);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getEquateAccess().getMaxSPINDOUBLEParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__MaxAssignment_3_2"


    // $ANTLR start "rule__Equate__MultiplierAssignment_3_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8246:1: rule__Equate__MultiplierAssignment_3_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Equate__MultiplierAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8250:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8251:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8251:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8252:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getEquateAccess().getMultiplierSPINDOUBLEParserRuleCall_3_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Equate__MultiplierAssignment_3_316752);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getEquateAccess().getMultiplierSPINDOUBLEParserRuleCall_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__MultiplierAssignment_3_3"


    // $ANTLR start "rule__Mem__BufferAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8261:1: rule__Mem__BufferAssignment_1 : ( RULE_ID ) ;
    public final void rule__Mem__BufferAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8265:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8266:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8266:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8267:1: RULE_ID
            {
             before(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Mem__BufferAssignment_116783); 
             after(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__BufferAssignment_1"


    // $ANTLR start "rule__Mem__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8276:1: rule__Mem__LengthAssignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__Mem__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8280:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8281:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8281:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8282:1: ruleSPINREGISTER
            {
             before(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__Mem__LengthAssignment_216814);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__LengthAssignment_2"


    // $ANTLR start "rule__Offset__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8291:1: rule__Offset__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Offset__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8295:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8296:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8296:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8297:1: RULE_ID
            {
             before(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Offset__NameAssignment_116845); 
             after(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__NameAssignment_1"


    // $ANTLR start "rule__Offset__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8306:1: rule__Offset__LengthAssignment_2 : ( RULE_INT ) ;
    public final void rule__Offset__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8310:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8311:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8311:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8312:1: RULE_INT
            {
             before(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__Offset__LengthAssignment_216876); 
             after(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__LengthAssignment_2"


    // $ANTLR start "rule__Comment__RemarkAssignment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8321:1: rule__Comment__RemarkAssignment : ( RULE_SC_COMMENT ) ;
    public final void rule__Comment__RemarkAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8325:1: ( ( RULE_SC_COMMENT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8326:1: ( RULE_SC_COMMENT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8326:1: ( RULE_SC_COMMENT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8327:1: RULE_SC_COMMENT
            {
             before(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); 
            match(input,RULE_SC_COMMENT,FOLLOW_RULE_SC_COMMENT_in_rule__Comment__RemarkAssignment16907); 
             after(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__RemarkAssignment"


    // $ANTLR start "rule__Label__NameAssignment_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8336:1: rule__Label__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Label__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8340:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8341:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8341:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8342:1: RULE_ID
            {
             before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Label__NameAssignment_016938); 
             after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__NameAssignment_0"


    // $ANTLR start "rule__IsPinConnected__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8351:1: rule__IsPinConnected__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__IsPinConnected__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8355:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8356:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8356:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8357:1: RULE_ID
            {
             before(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__IsPinConnected__Arg1Assignment_116969); 
             after(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Arg1Assignment_1"


    // $ANTLR start "rule__GetInputDefault__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8366:1: rule__GetInputDefault__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__GetInputDefault__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8370:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8371:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8371:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8372:1: RULE_ID
            {
             before(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetInputDefault__NameAssignment_117000); 
             after(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__NameAssignment_1"


    // $ANTLR start "rule__GetInputDefault__VariableAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8381:1: rule__GetInputDefault__VariableAssignment_2 : ( RULE_ID ) ;
    public final void rule__GetInputDefault__VariableAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8385:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8386:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8386:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8387:1: RULE_ID
            {
             before(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetInputDefault__VariableAssignment_217031); 
             after(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__VariableAssignment_2"


    // $ANTLR start "rule__GetInputDefault__ScaleAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8396:1: rule__GetInputDefault__ScaleAssignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__GetInputDefault__ScaleAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8400:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8401:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8401:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8402:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__ScaleAssignment_317062);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__ScaleAssignment_3"


    // $ANTLR start "rule__GetInputDefault__DefaultValAssignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8411:1: rule__GetInputDefault__DefaultValAssignment_4 : ( ruleSPINDOUBLE ) ;
    public final void rule__GetInputDefault__DefaultValAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8415:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8416:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8416:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8417:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__DefaultValAssignment_417093);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__DefaultValAssignment_4"


    // $ANTLR start "rule__GetDelayScaleControl__RatioAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8426:1: rule__GetDelayScaleControl__RatioAssignment_1 : ( RULE_ID ) ;
    public final void rule__GetDelayScaleControl__RatioAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8430:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8431:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8431:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8432:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getRatioIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__RatioAssignment_117124); 
             after(grammarAccess.getGetDelayScaleControlAccess().getRatioIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__RatioAssignment_1"


    // $ANTLR start "rule__GetDelayScaleControl__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8441:1: rule__GetDelayScaleControl__LengthAssignment_2 : ( RULE_ID ) ;
    public final void rule__GetDelayScaleControl__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8445:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8446:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8446:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8447:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getLengthIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__LengthAssignment_217155); 
             after(grammarAccess.getGetDelayScaleControlAccess().getLengthIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__LengthAssignment_2"


    // $ANTLR start "rule__GetDelayScaleControl__OffsetAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8456:1: rule__GetDelayScaleControl__OffsetAssignment_3 : ( RULE_ID ) ;
    public final void rule__GetDelayScaleControl__OffsetAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8460:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8461:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8461:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8462:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getOffsetIDTerminalRuleCall_3_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__OffsetAssignment_317186); 
             after(grammarAccess.getGetDelayScaleControlAccess().getOffsetIDTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__OffsetAssignment_3"


    // $ANTLR start "rule__GetDelayScaleControl__ControlAssignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8471:1: rule__GetDelayScaleControl__ControlAssignment_4 : ( RULE_ID ) ;
    public final void rule__GetDelayScaleControl__ControlAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8475:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8476:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8476:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8477:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getControlIDTerminalRuleCall_4_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__ControlAssignment_417217); 
             after(grammarAccess.getGetDelayScaleControlAccess().getControlIDTerminalRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__ControlAssignment_4"


    // $ANTLR start "rule__SetOutputPin__PinNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8486:1: rule__SetOutputPin__PinNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__SetOutputPin__PinNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8490:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8491:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8491:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8492:1: RULE_ID
            {
             before(grammarAccess.getSetOutputPinAccess().getPinNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SetOutputPin__PinNameAssignment_117248); 
             after(grammarAccess.getSetOutputPinAccess().getPinNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__PinNameAssignment_1"


    // $ANTLR start "rule__SetOutputPin__VarNameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8501:1: rule__SetOutputPin__VarNameAssignment_2 : ( RULE_ID ) ;
    public final void rule__SetOutputPin__VarNameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8505:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8506:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8506:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8507:1: RULE_ID
            {
             before(grammarAccess.getSetOutputPinAccess().getVarNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SetOutputPin__VarNameAssignment_217279); 
             after(grammarAccess.getSetOutputPinAccess().getVarNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__VarNameAssignment_2"


    // $ANTLR start "rule__ReadRegister__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8516:1: rule__ReadRegister__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__ReadRegister__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8520:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8521:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8521:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8522:1: ruleSPINREGISTER
            {
             before(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ReadRegister__Arg1Assignment_117310);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Arg1Assignment_1"


    // $ANTLR start "rule__ReadRegister__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8531:1: rule__ReadRegister__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadRegister__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8535:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8536:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8536:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8537:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegister__Arg2Assignment_317341);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegisterLowshelf__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8546:1: rule__WriteRegisterLowshelf__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegisterLowshelf__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8550:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8551:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8551:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8552:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterLowshelf__Arg1Assignment_117372);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegisterLowshelf__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8561:1: rule__WriteRegisterLowshelf__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegisterLowshelf__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8565:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8566:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8566:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8567:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterLowshelf__Arg2Assignment_317403);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegisterHighshelf__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8576:1: rule__WriteRegisterHighshelf__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegisterHighshelf__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8580:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8581:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8581:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8582:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterHighshelf__Arg1Assignment_117434);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegisterHighshelf__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8591:1: rule__WriteRegisterHighshelf__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegisterHighshelf__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8595:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8596:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8596:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8597:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterHighshelf__Arg2Assignment_317465);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegister__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8606:1: rule__WriteRegister__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegister__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8610:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8611:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8611:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8612:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegister__Arg1Assignment_117496);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegister__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8621:1: rule__WriteRegister__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegister__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8625:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8626:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8626:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8627:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegister__Arg2Assignment_317527);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Arg2Assignment_3"


    // $ANTLR start "rule__Maxx__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8636:1: rule__Maxx__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__Maxx__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8640:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8641:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8641:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8642:1: ruleSPINREGISTER
            {
             before(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__Maxx__Arg1Assignment_117558);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Arg1Assignment_1"


    // $ANTLR start "rule__Maxx__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8651:1: rule__Maxx__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Maxx__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8655:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8656:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8656:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8657:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Maxx__Arg2Assignment_317589);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Arg2Assignment_3"


    // $ANTLR start "rule__ReadRegisterFilter__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8666:1: rule__ReadRegisterFilter__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__ReadRegisterFilter__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8670:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8671:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8671:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8672:1: ruleSPINREGISTER
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ReadRegisterFilter__Arg1Assignment_117620);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Arg1Assignment_1"


    // $ANTLR start "rule__ReadRegisterFilter__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8681:1: rule__ReadRegisterFilter__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadRegisterFilter__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8685:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8686:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8686:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8687:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegisterFilter__Arg2Assignment_317651);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Arg2Assignment_3"


    // $ANTLR start "rule__Mulx__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8696:1: rule__Mulx__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Mulx__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8700:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8701:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8701:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8702:1: RULE_ID
            {
             before(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Mulx__Arg1Assignment_117682); 
             after(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Arg1Assignment_1"


    // $ANTLR start "rule__Ldax__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8711:1: rule__Ldax__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Ldax__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8715:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8716:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8716:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8717:1: RULE_ID
            {
             before(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Ldax__Arg1Assignment_117713); 
             after(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Arg1Assignment_1"


    // $ANTLR start "rule__Exp__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8726:1: rule__Exp__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__Exp__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8730:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8731:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8731:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8732:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg1Assignment_117744);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Arg1Assignment_1"


    // $ANTLR start "rule__Exp__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8741:1: rule__Exp__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Exp__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8745:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8746:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8746:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8747:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg2Assignment_317775);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Arg2Assignment_3"


    // $ANTLR start "rule__Log__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8756:1: rule__Log__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__Log__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8760:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8761:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8761:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8762:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg1Assignment_117806);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Arg1Assignment_1"


    // $ANTLR start "rule__Log__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8771:1: rule__Log__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Log__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8775:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8776:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8776:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8777:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg2Assignment_317837);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Arg2Assignment_3"


    // $ANTLR start "rule__ScaleOffset__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8786:1: rule__ScaleOffset__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__ScaleOffset__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8790:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8791:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8791:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8792:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg1Assignment_117868);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Arg1Assignment_1"


    // $ANTLR start "rule__ScaleOffset__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8801:1: rule__ScaleOffset__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ScaleOffset__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8805:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8806:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8806:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8807:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg2Assignment_317899);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Arg2Assignment_3"


    // $ANTLR start "rule__WriteDelay__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8816:1: rule__WriteDelay__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__WriteDelay__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8820:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8821:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8821:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8822:1: ruleSPINMEM
            {
             before(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__WriteDelay__Arg1Assignment_117930);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Arg1Assignment_1"


    // $ANTLR start "rule__WriteDelay__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8831:1: rule__WriteDelay__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteDelay__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8835:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8836:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8836:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8837:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteDelay__Arg2Assignment_317961);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Arg2Assignment_3"


    // $ANTLR start "rule__WriteAllpass__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8846:1: rule__WriteAllpass__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__WriteAllpass__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8850:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8851:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8851:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8852:1: ruleSPINMEM
            {
             before(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__WriteAllpass__Arg1Assignment_117992);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Arg1Assignment_1"


    // $ANTLR start "rule__WriteAllpass__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8861:1: rule__WriteAllpass__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteAllpass__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8865:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8866:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8866:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8867:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteAllpass__Arg2Assignment_318023);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Arg2Assignment_3"


    // $ANTLR start "rule__ReadDelay__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8876:1: rule__ReadDelay__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__ReadDelay__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8880:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8881:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8881:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8882:1: ruleSPINMEM
            {
             before(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__ReadDelay__Arg1Assignment_118054);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Arg1Assignment_1"


    // $ANTLR start "rule__ReadDelay__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8891:1: rule__ReadDelay__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadDelay__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8895:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8896:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8896:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8897:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelay__Arg2Assignment_318085);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Arg2Assignment_3"


    // $ANTLR start "rule__LoadSinLFO__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8906:1: rule__LoadSinLFO__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__LoadSinLFO__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8910:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8911:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8911:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8912:1: ruleSPINREGISTER
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__LoadSinLFO__Arg1Assignment_118116);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg1Assignment_1"


    // $ANTLR start "rule__LoadSinLFO__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8921:1: rule__LoadSinLFO__Arg2Assignment_3 : ( RULE_INT ) ;
    public final void rule__LoadSinLFO__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8925:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8926:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8926:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8927:1: RULE_INT
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg2Assignment_318147); 
             after(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg2Assignment_3"


    // $ANTLR start "rule__LoadSinLFO__Arg3Assignment_5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8936:1: rule__LoadSinLFO__Arg3Assignment_5 : ( RULE_INT ) ;
    public final void rule__LoadSinLFO__Arg3Assignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8940:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8941:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8941:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8942:1: RULE_INT
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg3Assignment_518178); 
             after(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg3Assignment_5"


    // $ANTLR start "rule__LoadRampLFO__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8951:1: rule__LoadRampLFO__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__LoadRampLFO__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8955:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8956:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8956:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8957:1: ruleSPINREGISTER
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__LoadRampLFO__Arg1Assignment_118209);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg1Assignment_1"


    // $ANTLR start "rule__LoadRampLFO__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8966:1: rule__LoadRampLFO__Arg2Assignment_3 : ( RULE_INT ) ;
    public final void rule__LoadRampLFO__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8970:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8971:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8971:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8972:1: RULE_INT
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg2Assignment_318240); 
             after(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg2Assignment_3"


    // $ANTLR start "rule__LoadRampLFO__Arg3Assignment_5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8981:1: rule__LoadRampLFO__Arg3Assignment_5 : ( RULE_INT ) ;
    public final void rule__LoadRampLFO__Arg3Assignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8985:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8986:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8986:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8987:1: RULE_INT
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg3Assignment_518271); 
             after(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg3Assignment_5"


    // $ANTLR start "rule__ChorusReadDelay__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8996:1: rule__ChorusReadDelay__Arg1Assignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__ChorusReadDelay__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9000:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9001:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9001:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9002:1: ruleSPINREGISTER
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadDelay__Arg1Assignment_218302);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusReadDelay__Arg2Assignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9011:1: rule__ChorusReadDelay__Arg2Assignment_4 : ( ruleSPINCHOREGFLAGS ) ;
    public final void rule__ChorusReadDelay__Arg2Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9015:1: ( ( ruleSPINCHOREGFLAGS ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9016:1: ( ruleSPINCHOREGFLAGS )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9016:1: ( ruleSPINCHOREGFLAGS )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9017:1: ruleSPINCHOREGFLAGS
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusReadDelay__Arg2Assignment_418333);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg2Assignment_4"


    // $ANTLR start "rule__ChorusReadDelay__Arg3Assignment_6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9026:1: rule__ChorusReadDelay__Arg3Assignment_6 : ( ruleSPINMEM ) ;
    public final void rule__ChorusReadDelay__Arg3Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9030:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9031:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9031:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9032:1: ruleSPINMEM
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__ChorusReadDelay__Arg3Assignment_618364);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg3Assignment_6"


    // $ANTLR start "rule__ChorusReadValue__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9041:1: rule__ChorusReadValue__Arg1Assignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__ChorusReadValue__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9045:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9046:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9046:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9047:1: ruleSPINREGISTER
            {
             before(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadValue__Arg1Assignment_218395);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusScaleOffset__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9056:1: rule__ChorusScaleOffset__Arg1Assignment_2 : ( RULE_ID ) ;
    public final void rule__ChorusScaleOffset__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9060:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9061:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9061:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9062:1: RULE_ID
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ChorusScaleOffset__Arg1Assignment_218426); 
             after(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusScaleOffset__Arg2Assignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9071:1: rule__ChorusScaleOffset__Arg2Assignment_4 : ( ruleSPINCHOREGFLAGS ) ;
    public final void rule__ChorusScaleOffset__Arg2Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9075:1: ( ( ruleSPINCHOREGFLAGS ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9076:1: ( ruleSPINCHOREGFLAGS )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9076:1: ( ruleSPINCHOREGFLAGS )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9077:1: ruleSPINCHOREGFLAGS
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusScaleOffset__Arg2Assignment_418457);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg2Assignment_4"


    // $ANTLR start "rule__ChorusScaleOffset__Arg3Assignment_6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9086:1: rule__ChorusScaleOffset__Arg3Assignment_6 : ( ruleSPINDOUBLE ) ;
    public final void rule__ChorusScaleOffset__Arg3Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9090:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9091:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9091:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9092:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ChorusScaleOffset__Arg3Assignment_618488);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg3Assignment_6"


    // $ANTLR start "rule__ReadDelayPointer__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9101:1: rule__ReadDelayPointer__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadDelayPointer__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9105:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9106:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9106:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9107:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelayPointer__Arg1Assignment_118519);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Arg1Assignment_1"


    // $ANTLR start "rule__And__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9116:1: rule__And__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__And__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9120:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9121:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9121:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9122:1: ruleBINARY24
            {
             before(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__And__Arg1Assignment_118550);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Arg1Assignment_1"


    // $ANTLR start "rule__Or__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9131:1: rule__Or__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__Or__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9135:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9136:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9136:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9137:1: ruleBINARY24
            {
             before(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__Or__Arg1Assignment_118581);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Arg1Assignment_1"


    // $ANTLR start "rule__Xor__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9146:1: rule__Xor__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__Xor__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9150:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9151:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9151:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9152:1: ruleBINARY24
            {
             before(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__Xor__Arg1Assignment_118612);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Arg1Assignment_1"


    // $ANTLR start "rule__Jam__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9161:1: rule__Jam__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Jam__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9165:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9166:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9166:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9167:1: RULE_ID
            {
             before(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Jam__Arg1Assignment_118643); 
             after(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Arg1Assignment_1"


    // $ANTLR start "rule__Skip__FlagsAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9176:1: rule__Skip__FlagsAssignment_1 : ( RULE_ID ) ;
    public final void rule__Skip__FlagsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9180:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9181:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9181:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9182:1: RULE_ID
            {
             before(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Skip__FlagsAssignment_118674); 
             after(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__FlagsAssignment_1"


    // $ANTLR start "rule__Skip__LabelAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9191:1: rule__Skip__LabelAssignment_3 : ( ( RULE_ID ) ) ;
    public final void rule__Skip__LabelAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9195:1: ( ( ( RULE_ID ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9196:1: ( ( RULE_ID ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9196:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9197:1: ( RULE_ID )
            {
             before(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9198:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9199:1: RULE_ID
            {
             before(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Skip__LabelAssignment_318709); 
             after(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); 

            }

             after(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__LabelAssignment_3"


    // $ANTLR start "rule__SPINMEM__BufferAssignment_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9210:1: rule__SPINMEM__BufferAssignment_0 : ( ruleSPINBUF ) ;
    public final void rule__SPINMEM__BufferAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9214:1: ( ( ruleSPINBUF ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9215:1: ( ruleSPINBUF )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9215:1: ( ruleSPINBUF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9216:1: ruleSPINBUF
            {
             before(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); 
            pushFollow(FOLLOW_ruleSPINBUF_in_rule__SPINMEM__BufferAssignment_018744);
            ruleSPINBUF();

            state._fsp--;

             after(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__BufferAssignment_0"


    // $ANTLR start "rule__SPINMEM__ValueAssignment_1_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9225:1: rule__SPINMEM__ValueAssignment_1_0 : ( RULE_INT ) ;
    public final void rule__SPINMEM__ValueAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9229:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9230:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9230:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9231:1: RULE_INT
            {
             before(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINMEM__ValueAssignment_1_018775); 
             after(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__ValueAssignment_1_0"


    // $ANTLR start "rule__SPINMEM__OffsetAssignment_1_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9240:1: rule__SPINMEM__OffsetAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__SPINMEM__OffsetAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9244:1: ( ( ( RULE_ID ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9245:1: ( ( RULE_ID ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9245:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9246:1: ( RULE_ID )
            {
             before(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9247:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9248:1: RULE_ID
            {
             before(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINMEM__OffsetAssignment_1_118810); 
             after(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); 

            }

             after(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__OffsetAssignment_1_1"

    // Delegated rules


 

    public static final BitSet FOLLOW_ruleProgram_in_entryRuleProgram61 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProgram68 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__0_in_ruleProgram94 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePin_in_entryRulePin121 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePin128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Pin__Alternatives_in_rulePin154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInputPin_in_entryRuleInputPin181 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInputPin188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__InputPin__Alternatives_in_ruleInputPin214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutputPin_in_entryRuleOutputPin241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOutputPin248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__OutputPin__Alternatives_in_ruleOutputPin274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioInput_in_entryRuleAudioInput301 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAudioInput308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__0_in_ruleAudioInput334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioOutput_in_entryRuleAudioOutput361 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAudioOutput368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__0_in_ruleAudioOutput394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlInput_in_entryRuleControlInput421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControlInput428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__0_in_ruleControlInput454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlOutput_in_entryRuleControlOutput481 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControlOutput488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__0_in_ruleControlOutput514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinElement_in_entryRuleSpinElement541 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSpinElement548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinElement__Alternatives_in_ruleSpinElement574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEquate_in_entryRuleEquate601 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEquate608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__0_in_ruleEquate634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMem_in_entryRuleMem661 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMem668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__0_in_ruleMem694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOffset_in_entryRuleOffset721 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOffset728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__0_in_ruleOffset754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_entryRuleComment781 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComment788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comment__RemarkAssignment_in_ruleComment814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_entryRuleLabel841 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabel848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__0_in_ruleLabel874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMacro_in_entryRuleMacro901 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMacro908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Macro__Alternatives_in_ruleMacro934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsPinConnected_in_entryRuleIsPinConnected961 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsPinConnected968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__0_in_ruleIsPinConnected994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsElse_in_entryRuleIsElse1021 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsElse1028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__0_in_ruleIsElse1054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsEndif_in_entryRuleIsEndif1081 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsEndif1088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__0_in_ruleIsEndif1114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetInputDefault_in_entryRuleGetInputDefault1141 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetInputDefault1148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__0_in_ruleGetInputDefault1174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetDelayScaleControl_in_entryRuleGetDelayScaleControl1201 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetDelayScaleControl1208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__0_in_ruleGetDelayScaleControl1234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetBaseAddress_in_entryRuleGetBaseAddress1261 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetBaseAddress1268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetBaseAddress__Group__0_in_ruleGetBaseAddress1294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetOutputPin_in_entryRuleSetOutputPin1321 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSetOutputPin1328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__0_in_ruleSetOutputPin1354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstruction_in_entryRuleInstruction1381 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInstruction1388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Instruction__Alternatives_in_ruleInstruction1414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_S1_14_in_entryRuleInst_B6_S1_141441 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B6_S1_141448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B6_S1_14__Alternatives_in_ruleInst_B6_S1_141474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B15_S1_9_in_entryRuleInst_B15_S1_91501 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B15_S1_91508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B15_S1_9__Alternatives_in_ruleInst_B15_S1_91534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_in_entryRuleInst_B61561 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B61568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B6__Alternatives_in_ruleInst_B61594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B24_in_entryRuleInst_B241621 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B241628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B24__Alternatives_in_ruleInst_B241654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_X0_in_entryRuleInst_X01681 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_X01688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_X0__Alternatives_in_ruleInst_X01714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_S1_14_S1_10_in_entryRuleInst_S1_14_S1_101741 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_S1_14_S1_101748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_S1_14_S1_10__Alternatives_in_ruleInst_S1_14_S1_101774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegister_in_entryRuleReadRegister1801 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadRegister1808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__0_in_ruleReadRegister1834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterLowshelf_in_entryRuleWriteRegisterLowshelf1861 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegisterLowshelf1868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__0_in_ruleWriteRegisterLowshelf1894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterHighshelf_in_entryRuleWriteRegisterHighshelf1921 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegisterHighshelf1928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__0_in_ruleWriteRegisterHighshelf1954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegister_in_entryRuleWriteRegister1981 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegister1988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__0_in_ruleWriteRegister2014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMaxx_in_entryRuleMaxx2041 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMaxx2048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__0_in_ruleMaxx2074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegisterFilter_in_entryRuleReadRegisterFilter2101 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadRegisterFilter2108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__0_in_ruleReadRegisterFilter2134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulx_in_entryRuleMulx2161 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMulx2168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__0_in_ruleMulx2194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLdax_in_entryRuleLdax2221 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLdax2228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__0_in_ruleLdax2254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExp_in_entryRuleExp2281 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExp2288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__0_in_ruleExp2314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLog_in_entryRuleLog2341 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLog2348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__0_in_ruleLog2374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleScaleOffset_in_entryRuleScaleOffset2401 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleScaleOffset2408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__0_in_ruleScaleOffset2434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteDelay_in_entryRuleWriteDelay2461 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteDelay2468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__0_in_ruleWriteDelay2494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteAllpass_in_entryRuleWriteAllpass2521 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteAllpass2528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__0_in_ruleWriteAllpass2554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelay_in_entryRuleReadDelay2581 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadDelay2588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__0_in_ruleReadDelay2614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadSinLFO_in_entryRuleLoadSinLFO2641 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLoadSinLFO2648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__0_in_ruleLoadSinLFO2674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadRampLFO_in_entryRuleLoadRampLFO2701 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLoadRampLFO2708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__0_in_ruleLoadRampLFO2734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadDelay_in_entryRuleChorusReadDelay2761 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusReadDelay2768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__0_in_ruleChorusReadDelay2794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadValue_in_entryRuleChorusReadValue2821 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusReadValue2828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__0_in_ruleChorusReadValue2854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusScaleOffset_in_entryRuleChorusScaleOffset2881 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusScaleOffset2888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__0_in_ruleChorusScaleOffset2914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelayPointer_in_entryRuleReadDelayPointer2941 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadDelayPointer2948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__0_in_ruleReadDelayPointer2974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnd_in_entryRuleAnd3001 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAnd3008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__0_in_ruleAnd3034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOr_in_entryRuleOr3061 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOr3068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__0_in_ruleOr3094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXor_in_entryRuleXor3121 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXor3128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__0_in_ruleXor3154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJam_in_entryRuleJam3181 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJam3188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__0_in_ruleJam3214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClr_in_entryRuleClr3241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleClr3248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__0_in_ruleClr3274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNot_in_entryRuleNot3301 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNot3308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__0_in_ruleNot3334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbsa_in_entryRuleAbsa3361 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbsa3368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__0_in_ruleAbsa3394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSkip_in_entryRuleSkip3421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSkip3428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__0_in_ruleSkip3454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_entryRuleSPINDOUBLE3481 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINDOUBLE3488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__0_in_ruleSPINDOUBLE3514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_entryRuleSPINREGISTER3541 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINREGISTER3548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINREGISTER__Alternatives_in_ruleSPINREGISTER3574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_entryRuleSPINCHOREGFLAGS3601 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINCHOREGFLAGS3608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Alternatives_in_ruleSPINCHOREGFLAGS3634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_entryRuleSPINMEM3661 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINMEM3668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__0_in_ruleSPINMEM3694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINBUF_in_entryRuleSPINBUF3721 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINBUF3728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__0_in_ruleSPINBUF3754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_entryRuleBINARY243781 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBINARY243788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Alternatives_in_ruleBINARY243814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInputPin_in_rule__Pin__Alternatives3850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutputPin_in_rule__Pin__Alternatives3867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioInput_in_rule__InputPin__Alternatives3899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlInput_in_rule__InputPin__Alternatives3916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioOutput_in_rule__OutputPin__Alternatives3948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlOutput_in_rule__OutputPin__Alternatives3965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEquate_in_rule__SpinElement__Alternatives3997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMem_in_rule__SpinElement__Alternatives4014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstruction_in_rule__SpinElement__Alternatives4031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_rule__SpinElement__Alternatives4048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_rule__SpinElement__Alternatives4065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMacro_in_rule__SpinElement__Alternatives4082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOffset_in_rule__SpinElement__Alternatives4099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsPinConnected_in_rule__Macro__Alternatives4131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsElse_in_rule__Macro__Alternatives4148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsEndif_in_rule__Macro__Alternatives4165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetInputDefault_in_rule__Macro__Alternatives4182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetDelayScaleControl_in_rule__Macro__Alternatives4199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetOutputPin_in_rule__Macro__Alternatives4216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetBaseAddress_in_rule__Macro__Alternatives4233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B15_S1_9_in_rule__Instruction__Alternatives4265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_S1_14_in_rule__Instruction__Alternatives4282 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_S1_14_S1_10_in_rule__Instruction__Alternatives4299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_in_rule__Instruction__Alternatives4316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B24_in_rule__Instruction__Alternatives4333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSkip_in_rule__Instruction__Alternatives4350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJam_in_rule__Instruction__Alternatives4367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_X0_in_rule__Instruction__Alternatives4384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadSinLFO_in_rule__Instruction__Alternatives4401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadRampLFO_in_rule__Instruction__Alternatives4418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadDelay_in_rule__Instruction__Alternatives4435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadValue_in_rule__Instruction__Alternatives4452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusScaleOffset_in_rule__Instruction__Alternatives4469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLog_in_rule__Instruction__Alternatives4486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelayPointer_in_rule__Instruction__Alternatives4503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegister_in_rule__Inst_B6_S1_14__Alternatives4535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegister_in_rule__Inst_B6_S1_14__Alternatives4552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegisterFilter_in_rule__Inst_B6_S1_14__Alternatives4569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMaxx_in_rule__Inst_B6_S1_14__Alternatives4586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterHighshelf_in_rule__Inst_B6_S1_14__Alternatives4603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterLowshelf_in_rule__Inst_B6_S1_14__Alternatives4620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelay_in_rule__Inst_B15_S1_9__Alternatives4652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteDelay_in_rule__Inst_B15_S1_9__Alternatives4669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteAllpass_in_rule__Inst_B15_S1_9__Alternatives4686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulx_in_rule__Inst_B6__Alternatives4718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLdax_in_rule__Inst_B6__Alternatives4735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnd_in_rule__Inst_B24__Alternatives4767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOr_in_rule__Inst_B24__Alternatives4784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXor_in_rule__Inst_B24__Alternatives4801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClr_in_rule__Inst_X0__Alternatives4833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNot_in_rule__Inst_X0__Alternatives4850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbsa_in_rule__Inst_X0__Alternatives4867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExp_in_rule__Inst_S1_14_S1_10__Alternatives4899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleScaleOffset_in_rule__Inst_S1_14_S1_10__Alternatives4916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINDOUBLE__Alternatives_14948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__0_in_rule__SPINDOUBLE__Alternatives_14965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINREGISTER__Alternatives4998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINREGISTER__Alternatives5015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINCHOREGFLAGS__Alternatives5047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0_in_rule__SPINCHOREGFLAGS__Alternatives5064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__ValueAssignment_1_0_in_rule__SPINMEM__Alternatives_15098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__OffsetAssignment_1_1_in_rule__SPINMEM__Alternatives_15116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_rule__SPINBUF__Alternatives_15150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_rule__SPINBUF__Alternatives_15170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_rule__SPINBUF__Alternatives_25205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_rule__SPINBUF__Alternatives_25225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__0_in_rule__BINARY24__Alternatives5259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__0_in_rule__BINARY24__Alternatives5277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__0__Impl_in_rule__Program__Group__05308 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Program__Group__1_in_rule__Program__Group__05311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_rule__Program__Group__0__Impl5339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__1__Impl_in_rule__Program__Group__15370 = new BitSet(new long[]{0x00000000001E0000L});
    public static final BitSet FOLLOW_rule__Program__Group__2_in_rule__Program__Group__15373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__NameAssignment_1_in_rule__Program__Group__1__Impl5400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__2__Impl_in_rule__Program__Group__25430 = new BitSet(new long[]{0x1FFFFFFDFEE00050L});
    public static final BitSet FOLLOW_rule__Program__Group__3_in_rule__Program__Group__25433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5462 = new BitSet(new long[]{0x00000000001E0002L});
    public static final BitSet FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5474 = new BitSet(new long[]{0x00000000001E0002L});
    public static final BitSet FOLLOW_rule__Program__Group__3__Impl_in_rule__Program__Group__35507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__ElementsAssignment_3_in_rule__Program__Group__3__Impl5536 = new BitSet(new long[]{0x1FFFFFFDFEE00052L});
    public static final BitSet FOLLOW_rule__Program__ElementsAssignment_3_in_rule__Program__Group__3__Impl5548 = new BitSet(new long[]{0x1FFFFFFDFEE00052L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__0__Impl_in_rule__AudioInput__Group__05589 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__1_in_rule__AudioInput__Group__05592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_rule__AudioInput__Group__0__Impl5620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__1__Impl_in_rule__AudioInput__Group__15651 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__2_in_rule__AudioInput__Group__15654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__VarNameAssignment_1_in_rule__AudioInput__Group__1__Impl5681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__2__Impl_in_rule__AudioInput__Group__25711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__NameAssignment_2_in_rule__AudioInput__Group__2__Impl5738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__0__Impl_in_rule__AudioOutput__Group__05774 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__1_in_rule__AudioOutput__Group__05777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_rule__AudioOutput__Group__0__Impl5805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__1__Impl_in_rule__AudioOutput__Group__15836 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__2_in_rule__AudioOutput__Group__15839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__VarNameAssignment_1_in_rule__AudioOutput__Group__1__Impl5866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__2__Impl_in_rule__AudioOutput__Group__25896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__NameAssignment_2_in_rule__AudioOutput__Group__2__Impl5923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__0__Impl_in_rule__ControlInput__Group__05959 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__1_in_rule__ControlInput__Group__05962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_rule__ControlInput__Group__0__Impl5990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__1__Impl_in_rule__ControlInput__Group__16021 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__2_in_rule__ControlInput__Group__16024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__VarNameAssignment_1_in_rule__ControlInput__Group__1__Impl6051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__2__Impl_in_rule__ControlInput__Group__26081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__NameAssignment_2_in_rule__ControlInput__Group__2__Impl6108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__0__Impl_in_rule__ControlOutput__Group__06144 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__1_in_rule__ControlOutput__Group__06147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_rule__ControlOutput__Group__0__Impl6175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__1__Impl_in_rule__ControlOutput__Group__16206 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__2_in_rule__ControlOutput__Group__16209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__VarNameAssignment_1_in_rule__ControlOutput__Group__1__Impl6236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__2__Impl_in_rule__ControlOutput__Group__26266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__NameAssignment_2_in_rule__ControlOutput__Group__2__Impl6293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__0__Impl_in_rule__Equate__Group__06329 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Equate__Group__1_in_rule__Equate__Group__06332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_rule__Equate__Group__0__Impl6360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__1__Impl_in_rule__Equate__Group__16391 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Equate__Group__2_in_rule__Equate__Group__16394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__EnameAssignment_1_in_rule__Equate__Group__1__Impl6421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__2__Impl_in_rule__Equate__Group__26451 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Equate__Group__3_in_rule__Equate__Group__26454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__ValueAssignment_2_in_rule__Equate__Group__2__Impl6481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__3__Impl_in_rule__Equate__Group__36511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group_3__0_in_rule__Equate__Group__3__Impl6538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group_3__0__Impl_in_rule__Equate__Group_3__06577 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Equate__Group_3__1_in_rule__Equate__Group_3__06580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__ControlTypeAssignment_3_0_in_rule__Equate__Group_3__0__Impl6607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group_3__1__Impl_in_rule__Equate__Group_3__16637 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Equate__Group_3__2_in_rule__Equate__Group_3__16640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__ControlNameAssignment_3_1_in_rule__Equate__Group_3__1__Impl6667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group_3__2__Impl_in_rule__Equate__Group_3__26697 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Equate__Group_3__3_in_rule__Equate__Group_3__26700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__MaxAssignment_3_2_in_rule__Equate__Group_3__2__Impl6727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group_3__3__Impl_in_rule__Equate__Group_3__36757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__MultiplierAssignment_3_3_in_rule__Equate__Group_3__3__Impl6784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__0__Impl_in_rule__Mem__Group__06822 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Mem__Group__1_in_rule__Mem__Group__06825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_rule__Mem__Group__0__Impl6853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__1__Impl_in_rule__Mem__Group__16884 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__Mem__Group__2_in_rule__Mem__Group__16887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__BufferAssignment_1_in_rule__Mem__Group__1__Impl6914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__2__Impl_in_rule__Mem__Group__26944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__LengthAssignment_2_in_rule__Mem__Group__2__Impl6971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__0__Impl_in_rule__Offset__Group__07007 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Offset__Group__1_in_rule__Offset__Group__07010 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_rule__Offset__Group__0__Impl7038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__1__Impl_in_rule__Offset__Group__17069 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__Offset__Group__2_in_rule__Offset__Group__17072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__NameAssignment_1_in_rule__Offset__Group__1__Impl7099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__2__Impl_in_rule__Offset__Group__27129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__LengthAssignment_2_in_rule__Offset__Group__2__Impl7156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__0__Impl_in_rule__Label__Group__07192 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_rule__Label__Group__1_in_rule__Label__Group__07195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__NameAssignment_0_in_rule__Label__Group__0__Impl7222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__1__Impl_in_rule__Label__Group__17252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_rule__Label__Group__1__Impl7280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__0__Impl_in_rule__IsPinConnected__Group__07315 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__1_in_rule__IsPinConnected__Group__07318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_rule__IsPinConnected__Group__0__Impl7346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__1__Impl_in_rule__IsPinConnected__Group__17377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Arg1Assignment_1_in_rule__IsPinConnected__Group__1__Impl7404 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__0__Impl_in_rule__IsElse__Group__07438 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_rule__IsElse__Group__1_in_rule__IsElse__Group__07441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__1__Impl_in_rule__IsElse__Group__17499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_rule__IsElse__Group__1__Impl7527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__0__Impl_in_rule__IsEndif__Group__07562 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__1_in_rule__IsEndif__Group__07565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__1__Impl_in_rule__IsEndif__Group__17623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_rule__IsEndif__Group__1__Impl7651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__0__Impl_in_rule__GetInputDefault__Group__07686 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__1_in_rule__GetInputDefault__Group__07689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_rule__GetInputDefault__Group__0__Impl7717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__1__Impl_in_rule__GetInputDefault__Group__17748 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__2_in_rule__GetInputDefault__Group__17751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__NameAssignment_1_in_rule__GetInputDefault__Group__1__Impl7778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__2__Impl_in_rule__GetInputDefault__Group__27808 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__3_in_rule__GetInputDefault__Group__27811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__VariableAssignment_2_in_rule__GetInputDefault__Group__2__Impl7838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__3__Impl_in_rule__GetInputDefault__Group__37868 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__4_in_rule__GetInputDefault__Group__37871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__ScaleAssignment_3_in_rule__GetInputDefault__Group__3__Impl7898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__4__Impl_in_rule__GetInputDefault__Group__47928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__DefaultValAssignment_4_in_rule__GetInputDefault__Group__4__Impl7955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__0__Impl_in_rule__GetDelayScaleControl__Group__07995 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__1_in_rule__GetDelayScaleControl__Group__07998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_rule__GetDelayScaleControl__Group__0__Impl8026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__1__Impl_in_rule__GetDelayScaleControl__Group__18057 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__2_in_rule__GetDelayScaleControl__Group__18060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__RatioAssignment_1_in_rule__GetDelayScaleControl__Group__1__Impl8087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__2__Impl_in_rule__GetDelayScaleControl__Group__28117 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__3_in_rule__GetDelayScaleControl__Group__28120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__LengthAssignment_2_in_rule__GetDelayScaleControl__Group__2__Impl8147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__3__Impl_in_rule__GetDelayScaleControl__Group__38177 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__4_in_rule__GetDelayScaleControl__Group__38180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__OffsetAssignment_3_in_rule__GetDelayScaleControl__Group__3__Impl8207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__4__Impl_in_rule__GetDelayScaleControl__Group__48237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__ControlAssignment_4_in_rule__GetDelayScaleControl__Group__4__Impl8264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetBaseAddress__Group__0__Impl_in_rule__GetBaseAddress__Group__08305 = new BitSet(new long[]{0x00000000FE000000L});
    public static final BitSet FOLLOW_rule__GetBaseAddress__Group__1_in_rule__GetBaseAddress__Group__08308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetBaseAddress__Group__1__Impl_in_rule__GetBaseAddress__Group__18366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_rule__GetBaseAddress__Group__1__Impl8394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__0__Impl_in_rule__SetOutputPin__Group__08429 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__1_in_rule__SetOutputPin__Group__08432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_rule__SetOutputPin__Group__0__Impl8460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__1__Impl_in_rule__SetOutputPin__Group__18491 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__2_in_rule__SetOutputPin__Group__18494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__PinNameAssignment_1_in_rule__SetOutputPin__Group__1__Impl8521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__2__Impl_in_rule__SetOutputPin__Group__28551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__VarNameAssignment_2_in_rule__SetOutputPin__Group__2__Impl8578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__0__Impl_in_rule__ReadRegister__Group__08614 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__1_in_rule__ReadRegister__Group__08617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_rule__ReadRegister__Group__0__Impl8645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__1__Impl_in_rule__ReadRegister__Group__18676 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__2_in_rule__ReadRegister__Group__18679 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Arg1Assignment_1_in_rule__ReadRegister__Group__1__Impl8706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__2__Impl_in_rule__ReadRegister__Group__28736 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__3_in_rule__ReadRegister__Group__28739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ReadRegister__Group__2__Impl8767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__3__Impl_in_rule__ReadRegister__Group__38798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Arg2Assignment_3_in_rule__ReadRegister__Group__3__Impl8825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__0__Impl_in_rule__WriteRegisterLowshelf__Group__08863 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__1_in_rule__WriteRegisterLowshelf__Group__08866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__WriteRegisterLowshelf__Group__0__Impl8894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__1__Impl_in_rule__WriteRegisterLowshelf__Group__18925 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__2_in_rule__WriteRegisterLowshelf__Group__18928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Arg1Assignment_1_in_rule__WriteRegisterLowshelf__Group__1__Impl8955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__2__Impl_in_rule__WriteRegisterLowshelf__Group__28985 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__3_in_rule__WriteRegisterLowshelf__Group__28988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__WriteRegisterLowshelf__Group__2__Impl9016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__3__Impl_in_rule__WriteRegisterLowshelf__Group__39047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Arg2Assignment_3_in_rule__WriteRegisterLowshelf__Group__3__Impl9074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__0__Impl_in_rule__WriteRegisterHighshelf__Group__09112 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__1_in_rule__WriteRegisterHighshelf__Group__09115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__WriteRegisterHighshelf__Group__0__Impl9143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__1__Impl_in_rule__WriteRegisterHighshelf__Group__19174 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__2_in_rule__WriteRegisterHighshelf__Group__19177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Arg1Assignment_1_in_rule__WriteRegisterHighshelf__Group__1__Impl9204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__2__Impl_in_rule__WriteRegisterHighshelf__Group__29234 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__3_in_rule__WriteRegisterHighshelf__Group__29237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__WriteRegisterHighshelf__Group__2__Impl9265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__3__Impl_in_rule__WriteRegisterHighshelf__Group__39296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Arg2Assignment_3_in_rule__WriteRegisterHighshelf__Group__3__Impl9323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__0__Impl_in_rule__WriteRegister__Group__09361 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__1_in_rule__WriteRegister__Group__09364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_rule__WriteRegister__Group__0__Impl9392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__1__Impl_in_rule__WriteRegister__Group__19423 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__2_in_rule__WriteRegister__Group__19426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Arg1Assignment_1_in_rule__WriteRegister__Group__1__Impl9453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__2__Impl_in_rule__WriteRegister__Group__29483 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__3_in_rule__WriteRegister__Group__29486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__WriteRegister__Group__2__Impl9514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__3__Impl_in_rule__WriteRegister__Group__39545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Arg2Assignment_3_in_rule__WriteRegister__Group__3__Impl9572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__0__Impl_in_rule__Maxx__Group__09610 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__Maxx__Group__1_in_rule__Maxx__Group__09613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_rule__Maxx__Group__0__Impl9641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__1__Impl_in_rule__Maxx__Group__19672 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__Maxx__Group__2_in_rule__Maxx__Group__19675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Arg1Assignment_1_in_rule__Maxx__Group__1__Impl9702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__2__Impl_in_rule__Maxx__Group__29732 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Maxx__Group__3_in_rule__Maxx__Group__29735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__Maxx__Group__2__Impl9763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__3__Impl_in_rule__Maxx__Group__39794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Arg2Assignment_3_in_rule__Maxx__Group__3__Impl9821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__0__Impl_in_rule__ReadRegisterFilter__Group__09859 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__1_in_rule__ReadRegisterFilter__Group__09862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_rule__ReadRegisterFilter__Group__0__Impl9890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__1__Impl_in_rule__ReadRegisterFilter__Group__19921 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__2_in_rule__ReadRegisterFilter__Group__19924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Arg1Assignment_1_in_rule__ReadRegisterFilter__Group__1__Impl9951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__2__Impl_in_rule__ReadRegisterFilter__Group__29981 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__3_in_rule__ReadRegisterFilter__Group__29984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ReadRegisterFilter__Group__2__Impl10012 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__3__Impl_in_rule__ReadRegisterFilter__Group__310043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Arg2Assignment_3_in_rule__ReadRegisterFilter__Group__3__Impl10070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__0__Impl_in_rule__Mulx__Group__010108 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Mulx__Group__1_in_rule__Mulx__Group__010111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__Mulx__Group__0__Impl10139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__1__Impl_in_rule__Mulx__Group__110170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Arg1Assignment_1_in_rule__Mulx__Group__1__Impl10197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__0__Impl_in_rule__Ldax__Group__010231 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Ldax__Group__1_in_rule__Ldax__Group__010234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_rule__Ldax__Group__0__Impl10262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__1__Impl_in_rule__Ldax__Group__110293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Arg1Assignment_1_in_rule__Ldax__Group__1__Impl10320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__0__Impl_in_rule__Exp__Group__010354 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Exp__Group__1_in_rule__Exp__Group__010357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_rule__Exp__Group__0__Impl10385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__1__Impl_in_rule__Exp__Group__110416 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__Exp__Group__2_in_rule__Exp__Group__110419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Arg1Assignment_1_in_rule__Exp__Group__1__Impl10446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__2__Impl_in_rule__Exp__Group__210476 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Exp__Group__3_in_rule__Exp__Group__210479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__Exp__Group__2__Impl10507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__3__Impl_in_rule__Exp__Group__310538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Arg2Assignment_3_in_rule__Exp__Group__3__Impl10565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__0__Impl_in_rule__Log__Group__010603 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Log__Group__1_in_rule__Log__Group__010606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_rule__Log__Group__0__Impl10634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__1__Impl_in_rule__Log__Group__110665 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__Log__Group__2_in_rule__Log__Group__110668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Arg1Assignment_1_in_rule__Log__Group__1__Impl10695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__2__Impl_in_rule__Log__Group__210725 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Log__Group__3_in_rule__Log__Group__210728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__Log__Group__2__Impl10756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__3__Impl_in_rule__Log__Group__310787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Arg2Assignment_3_in_rule__Log__Group__3__Impl10814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__0__Impl_in_rule__ScaleOffset__Group__010852 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__1_in_rule__ScaleOffset__Group__010855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_rule__ScaleOffset__Group__0__Impl10883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__1__Impl_in_rule__ScaleOffset__Group__110914 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__2_in_rule__ScaleOffset__Group__110917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Arg1Assignment_1_in_rule__ScaleOffset__Group__1__Impl10944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__2__Impl_in_rule__ScaleOffset__Group__210974 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__3_in_rule__ScaleOffset__Group__210977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ScaleOffset__Group__2__Impl11005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__3__Impl_in_rule__ScaleOffset__Group__311036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Arg2Assignment_3_in_rule__ScaleOffset__Group__3__Impl11063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__0__Impl_in_rule__WriteDelay__Group__011101 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__1_in_rule__WriteDelay__Group__011104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_rule__WriteDelay__Group__0__Impl11132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__1__Impl_in_rule__WriteDelay__Group__111163 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__2_in_rule__WriteDelay__Group__111166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Arg1Assignment_1_in_rule__WriteDelay__Group__1__Impl11193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__2__Impl_in_rule__WriteDelay__Group__211223 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__3_in_rule__WriteDelay__Group__211226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__WriteDelay__Group__2__Impl11254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__3__Impl_in_rule__WriteDelay__Group__311285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Arg2Assignment_3_in_rule__WriteDelay__Group__3__Impl11312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__0__Impl_in_rule__WriteAllpass__Group__011350 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__1_in_rule__WriteAllpass__Group__011353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_rule__WriteAllpass__Group__0__Impl11381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__1__Impl_in_rule__WriteAllpass__Group__111412 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__2_in_rule__WriteAllpass__Group__111415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Arg1Assignment_1_in_rule__WriteAllpass__Group__1__Impl11442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__2__Impl_in_rule__WriteAllpass__Group__211472 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__3_in_rule__WriteAllpass__Group__211475 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__WriteAllpass__Group__2__Impl11503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__3__Impl_in_rule__WriteAllpass__Group__311534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Arg2Assignment_3_in_rule__WriteAllpass__Group__3__Impl11561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__0__Impl_in_rule__ReadDelay__Group__011599 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__1_in_rule__ReadDelay__Group__011602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_rule__ReadDelay__Group__0__Impl11630 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__1__Impl_in_rule__ReadDelay__Group__111661 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__2_in_rule__ReadDelay__Group__111664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Arg1Assignment_1_in_rule__ReadDelay__Group__1__Impl11691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__2__Impl_in_rule__ReadDelay__Group__211721 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__3_in_rule__ReadDelay__Group__211724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ReadDelay__Group__2__Impl11752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__3__Impl_in_rule__ReadDelay__Group__311783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Arg2Assignment_3_in_rule__ReadDelay__Group__3__Impl11810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__0__Impl_in_rule__LoadSinLFO__Group__011848 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__1_in_rule__LoadSinLFO__Group__011851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_rule__LoadSinLFO__Group__0__Impl11879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__1__Impl_in_rule__LoadSinLFO__Group__111910 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__2_in_rule__LoadSinLFO__Group__111913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg1Assignment_1_in_rule__LoadSinLFO__Group__1__Impl11940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__2__Impl_in_rule__LoadSinLFO__Group__211970 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__3_in_rule__LoadSinLFO__Group__211973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__LoadSinLFO__Group__2__Impl12001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__3__Impl_in_rule__LoadSinLFO__Group__312032 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__4_in_rule__LoadSinLFO__Group__312035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg2Assignment_3_in_rule__LoadSinLFO__Group__3__Impl12062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__4__Impl_in_rule__LoadSinLFO__Group__412092 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__5_in_rule__LoadSinLFO__Group__412095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__LoadSinLFO__Group__4__Impl12123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__5__Impl_in_rule__LoadSinLFO__Group__512154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg3Assignment_5_in_rule__LoadSinLFO__Group__5__Impl12181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__0__Impl_in_rule__LoadRampLFO__Group__012223 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__1_in_rule__LoadRampLFO__Group__012226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_rule__LoadRampLFO__Group__0__Impl12254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__1__Impl_in_rule__LoadRampLFO__Group__112285 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__2_in_rule__LoadRampLFO__Group__112288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg1Assignment_1_in_rule__LoadRampLFO__Group__1__Impl12315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__2__Impl_in_rule__LoadRampLFO__Group__212345 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__3_in_rule__LoadRampLFO__Group__212348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__LoadRampLFO__Group__2__Impl12376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__3__Impl_in_rule__LoadRampLFO__Group__312407 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__4_in_rule__LoadRampLFO__Group__312410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg2Assignment_3_in_rule__LoadRampLFO__Group__3__Impl12437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__4__Impl_in_rule__LoadRampLFO__Group__412467 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__5_in_rule__LoadRampLFO__Group__412470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__LoadRampLFO__Group__4__Impl12498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__5__Impl_in_rule__LoadRampLFO__Group__512529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg3Assignment_5_in_rule__LoadRampLFO__Group__5__Impl12556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__0__Impl_in_rule__ChorusReadDelay__Group__012598 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__1_in_rule__ChorusReadDelay__Group__012601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_rule__ChorusReadDelay__Group__0__Impl12629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__1__Impl_in_rule__ChorusReadDelay__Group__112660 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__2_in_rule__ChorusReadDelay__Group__112663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ChorusReadDelay__Group__1__Impl12691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__2__Impl_in_rule__ChorusReadDelay__Group__212722 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__3_in_rule__ChorusReadDelay__Group__212725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg1Assignment_2_in_rule__ChorusReadDelay__Group__2__Impl12752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__3__Impl_in_rule__ChorusReadDelay__Group__312782 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__4_in_rule__ChorusReadDelay__Group__312785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ChorusReadDelay__Group__3__Impl12813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__4__Impl_in_rule__ChorusReadDelay__Group__412844 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__5_in_rule__ChorusReadDelay__Group__412847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg2Assignment_4_in_rule__ChorusReadDelay__Group__4__Impl12874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__5__Impl_in_rule__ChorusReadDelay__Group__512904 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__6_in_rule__ChorusReadDelay__Group__512907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ChorusReadDelay__Group__5__Impl12935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__6__Impl_in_rule__ChorusReadDelay__Group__612966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg3Assignment_6_in_rule__ChorusReadDelay__Group__6__Impl12993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__0__Impl_in_rule__ChorusReadValue__Group__013037 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__1_in_rule__ChorusReadValue__Group__013040 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_rule__ChorusReadValue__Group__0__Impl13068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__1__Impl_in_rule__ChorusReadValue__Group__113099 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__2_in_rule__ChorusReadValue__Group__113102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ChorusReadValue__Group__1__Impl13130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__2__Impl_in_rule__ChorusReadValue__Group__213161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Arg1Assignment_2_in_rule__ChorusReadValue__Group__2__Impl13188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__0__Impl_in_rule__ChorusScaleOffset__Group__013224 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__1_in_rule__ChorusScaleOffset__Group__013227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_rule__ChorusScaleOffset__Group__0__Impl13255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__1__Impl_in_rule__ChorusScaleOffset__Group__113286 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__2_in_rule__ChorusScaleOffset__Group__113289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ChorusScaleOffset__Group__1__Impl13317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__2__Impl_in_rule__ChorusScaleOffset__Group__213348 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__3_in_rule__ChorusScaleOffset__Group__213351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg1Assignment_2_in_rule__ChorusScaleOffset__Group__2__Impl13378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__3__Impl_in_rule__ChorusScaleOffset__Group__313408 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__4_in_rule__ChorusScaleOffset__Group__313411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ChorusScaleOffset__Group__3__Impl13439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__4__Impl_in_rule__ChorusScaleOffset__Group__413470 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__5_in_rule__ChorusScaleOffset__Group__413473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg2Assignment_4_in_rule__ChorusScaleOffset__Group__4__Impl13500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__5__Impl_in_rule__ChorusScaleOffset__Group__513530 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__6_in_rule__ChorusScaleOffset__Group__513533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ChorusScaleOffset__Group__5__Impl13561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__6__Impl_in_rule__ChorusScaleOffset__Group__613592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg3Assignment_6_in_rule__ChorusScaleOffset__Group__6__Impl13619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__0__Impl_in_rule__ReadDelayPointer__Group__013663 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__1_in_rule__ReadDelayPointer__Group__013666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_rule__ReadDelayPointer__Group__0__Impl13694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__1__Impl_in_rule__ReadDelayPointer__Group__113725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Arg1Assignment_1_in_rule__ReadDelayPointer__Group__1__Impl13752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__0__Impl_in_rule__And__Group__013786 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rule__And__Group__1_in_rule__And__Group__013789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_rule__And__Group__0__Impl13817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__1__Impl_in_rule__And__Group__113848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Arg1Assignment_1_in_rule__And__Group__1__Impl13875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__0__Impl_in_rule__Or__Group__013909 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rule__Or__Group__1_in_rule__Or__Group__013912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_rule__Or__Group__0__Impl13940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__1__Impl_in_rule__Or__Group__113971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Arg1Assignment_1_in_rule__Or__Group__1__Impl13998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__0__Impl_in_rule__Xor__Group__014032 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rule__Xor__Group__1_in_rule__Xor__Group__014035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_rule__Xor__Group__0__Impl14063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__1__Impl_in_rule__Xor__Group__114094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Arg1Assignment_1_in_rule__Xor__Group__1__Impl14121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__0__Impl_in_rule__Jam__Group__014155 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Jam__Group__1_in_rule__Jam__Group__014158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_rule__Jam__Group__0__Impl14186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__1__Impl_in_rule__Jam__Group__114217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Arg1Assignment_1_in_rule__Jam__Group__1__Impl14244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__0__Impl_in_rule__Clr__Group__014278 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_rule__Clr__Group__1_in_rule__Clr__Group__014281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__1__Impl_in_rule__Clr__Group__114339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_rule__Clr__Group__1__Impl14367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__0__Impl_in_rule__Not__Group__014402 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_rule__Not__Group__1_in_rule__Not__Group__014405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__1__Impl_in_rule__Not__Group__114463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_rule__Not__Group__1__Impl14491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__0__Impl_in_rule__Absa__Group__014526 = new BitSet(new long[]{0x0E00000000000000L});
    public static final BitSet FOLLOW_rule__Absa__Group__1_in_rule__Absa__Group__014529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__1__Impl_in_rule__Absa__Group__114587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_rule__Absa__Group__1__Impl14615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__0__Impl_in_rule__Skip__Group__014650 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Skip__Group__1_in_rule__Skip__Group__014653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_rule__Skip__Group__0__Impl14681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__1__Impl_in_rule__Skip__Group__114712 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__Skip__Group__2_in_rule__Skip__Group__114715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__FlagsAssignment_1_in_rule__Skip__Group__1__Impl14742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__2__Impl_in_rule__Skip__Group__214772 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Skip__Group__3_in_rule__Skip__Group__214775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__Skip__Group__2__Impl14803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__3__Impl_in_rule__Skip__Group__314834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__LabelAssignment_3_in_rule__Skip__Group__3__Impl14861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__0__Impl_in_rule__SPINDOUBLE__Group__014899 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__1_in_rule__SPINDOUBLE__Group__014902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_rule__SPINDOUBLE__Group__0__Impl14931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__1__Impl_in_rule__SPINDOUBLE__Group__114964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Alternatives_1_in_rule__SPINDOUBLE__Group__1__Impl14991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1__015025 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__1_in_rule__SPINDOUBLE__Group_1_1__015028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1__0__Impl15055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1__115084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0_in_rule__SPINDOUBLE__Group_1_1__1__Impl15111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1_1__015146 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1_in_rule__SPINDOUBLE__Group_1_1_1__015149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_rule__SPINDOUBLE__Group_1_1_1__0__Impl15177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1_1__115208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1_1__1__Impl15235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1__015268 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1_in_rule__SPINCHOREGFLAGS__Group_1__015271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1__0__Impl15298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1__115327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0_in_rule__SPINCHOREGFLAGS__Group_1__1__Impl15354 = new BitSet(new long[]{0x4000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__015389 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1_in_rule__SPINCHOREGFLAGS__Group_1_1__015392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl15420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__115451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl15478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__0__Impl_in_rule__SPINMEM__Group__015511 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__1_in_rule__SPINMEM__Group__015514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__BufferAssignment_0_in_rule__SPINMEM__Group__0__Impl15541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__1__Impl_in_rule__SPINMEM__Group__115571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Alternatives_1_in_rule__SPINMEM__Group__1__Impl15598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__0__Impl_in_rule__SPINBUF__Group__015633 = new BitSet(new long[]{0x000000000000F000L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__1_in_rule__SPINBUF__Group__015636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINBUF__Group__0__Impl15663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__1__Impl_in_rule__SPINBUF__Group__115692 = new BitSet(new long[]{0x000000000000F000L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__2_in_rule__SPINBUF__Group__115695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Alternatives_1_in_rule__SPINBUF__Group__1__Impl15722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__2__Impl_in_rule__SPINBUF__Group__215753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Alternatives_2_in_rule__SPINBUF__Group__2__Impl15780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__0__Impl_in_rule__BINARY24__Group_0__015817 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__1_in_rule__BINARY24__Group_0__015820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__0_in_rule__BINARY24__Group_0__0__Impl15847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__1__Impl_in_rule__BINARY24__Group_0__115877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__BINARY24__Group_0__1__Impl15905 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__0__Impl_in_rule__BINARY24__Group_0_0__015940 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__1_in_rule__BINARY24__Group_0_0__015943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_rule__BINARY24__Group_0_0__0__Impl15971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__1__Impl_in_rule__BINARY24__Group_0_0__116002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__BINARY24__Group_0_0__1__Impl16029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__0__Impl_in_rule__BINARY24__Group_1__016062 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__1_in_rule__BINARY24__Group_1__016065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_rule__BINARY24__Group_1__0__Impl16093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__1__Impl_in_rule__BINARY24__Group_1__116124 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__2_in_rule__BINARY24__Group_1__116127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__BINARY24__Group_1__1__Impl16155 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__2__Impl_in_rule__BINARY24__Group_1__216186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__BINARY24__Group_1__2__Impl16214 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Program__NameAssignment_116256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePin_in_rule__Program__PinsAssignment_216287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinElement_in_rule__Program__ElementsAssignment_316318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioInput__VarNameAssignment_116349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioInput__NameAssignment_216380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioOutput__VarNameAssignment_116411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioOutput__NameAssignment_216442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlInput__VarNameAssignment_116473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlInput__NameAssignment_216504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlOutput__VarNameAssignment_116535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlOutput__NameAssignment_216566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Equate__EnameAssignment_116597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Equate__ValueAssignment_216628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Equate__ControlTypeAssignment_3_016659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Equate__ControlNameAssignment_3_116690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Equate__MaxAssignment_3_216721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Equate__MultiplierAssignment_3_316752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Mem__BufferAssignment_116783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__Mem__LengthAssignment_216814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Offset__NameAssignment_116845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__Offset__LengthAssignment_216876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_SC_COMMENT_in_rule__Comment__RemarkAssignment16907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Label__NameAssignment_016938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__IsPinConnected__Arg1Assignment_116969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetInputDefault__NameAssignment_117000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetInputDefault__VariableAssignment_217031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__ScaleAssignment_317062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__DefaultValAssignment_417093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__RatioAssignment_117124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__LengthAssignment_217155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__OffsetAssignment_317186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__ControlAssignment_417217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SetOutputPin__PinNameAssignment_117248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SetOutputPin__VarNameAssignment_217279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ReadRegister__Arg1Assignment_117310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegister__Arg2Assignment_317341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterLowshelf__Arg1Assignment_117372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterLowshelf__Arg2Assignment_317403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterHighshelf__Arg1Assignment_117434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterHighshelf__Arg2Assignment_317465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegister__Arg1Assignment_117496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegister__Arg2Assignment_317527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__Maxx__Arg1Assignment_117558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Maxx__Arg2Assignment_317589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ReadRegisterFilter__Arg1Assignment_117620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegisterFilter__Arg2Assignment_317651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Mulx__Arg1Assignment_117682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Ldax__Arg1Assignment_117713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg1Assignment_117744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg2Assignment_317775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg1Assignment_117806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg2Assignment_317837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg1Assignment_117868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg2Assignment_317899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__WriteDelay__Arg1Assignment_117930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteDelay__Arg2Assignment_317961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__WriteAllpass__Arg1Assignment_117992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteAllpass__Arg2Assignment_318023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__ReadDelay__Arg1Assignment_118054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelay__Arg2Assignment_318085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__LoadSinLFO__Arg1Assignment_118116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg2Assignment_318147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg3Assignment_518178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__LoadRampLFO__Arg1Assignment_118209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg2Assignment_318240 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg3Assignment_518271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadDelay__Arg1Assignment_218302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusReadDelay__Arg2Assignment_418333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__ChorusReadDelay__Arg3Assignment_618364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadValue__Arg1Assignment_218395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ChorusScaleOffset__Arg1Assignment_218426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusScaleOffset__Arg2Assignment_418457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ChorusScaleOffset__Arg3Assignment_618488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelayPointer__Arg1Assignment_118519 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__And__Arg1Assignment_118550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__Or__Arg1Assignment_118581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__Xor__Arg1Assignment_118612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Jam__Arg1Assignment_118643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Skip__FlagsAssignment_118674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Skip__LabelAssignment_318709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINBUF_in_rule__SPINMEM__BufferAssignment_018744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINMEM__ValueAssignment_1_018775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINMEM__OffsetAssignment_1_118810 = new BitSet(new long[]{0x0000000000000002L});

}