package com.holycityaudio.spincad.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.holycityaudio.spincad.services.SpinCADGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalSpinCADParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_SC_COMMENT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'#'", "'^'", "'+'", "'-'", "'@name'", "'@audioInput'", "'@audioOutput'", "'@controlInput'", "'@controlOutput'", "'@slider'", "'@checkbox'", "'@controlLabel'", "'equ'", "'mem'", "'offset'", "':'", "'@isPinConnected'", "'@else'", "'@endif'", "'@getInputDefault'", "'@getDelayScale'", "'@setOutputPin'", "'rdax'", "','", "'wrlx'", "'wrhx'", "'wrax'", "'maxx'", "'rdfx'", "'mulx'", "'ldax'", "'exp'", "'log'", "'sof'", "'wra'", "'wrap'", "'rda'", "'wlds'", "'wldr'", "'cho rda'", "'cho rdal'", "'cho sof'", "'rmpa'", "'and'", "'or'", "'xor'", "'jam'", "'clr'", "'not'", "'absa'", "'skp'", "'.'", "'|'", "'%'", "'$'"
    };
    public static final int RULE_SC_COMMENT=6;
    public static final int RULE_ID=4;
    public static final int T__66=66;
    public static final int T__64=64;
    public static final int T__29=29;
    public static final int T__65=65;
    public static final int T__28=28;
    public static final int T__62=62;
    public static final int T__27=27;
    public static final int T__63=63;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int EOF=-1;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__19=19;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__16=16;
    public static final int T__52=52;
    public static final int T__15=15;
    public static final int T__53=53;
    public static final int T__18=18;
    public static final int T__54=54;
    public static final int T__17=17;
    public static final int T__12=12;
    public static final int T__14=14;
    public static final int T__13=13;
    public static final int T__59=59;
    public static final int RULE_INT=5;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_SL_COMMENT=9;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int RULE_STRING=7;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_WS=10;

    // delegates
    // delegators


        public InternalSpinCADParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSpinCADParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSpinCADParser.tokenNames; }
    public String getGrammarFileName() { return "../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g"; }


     
     	private SpinCADGrammarAccess grammarAccess;
     	
        public void setGrammarAccess(SpinCADGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }
        
        @Override
        protected String getValueForTokenName(String tokenName) {
        	return tokenName;
        }




    // $ANTLR start "entryRuleProgram"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:60:1: entryRuleProgram : ruleProgram EOF ;
    public final void entryRuleProgram() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:61:1: ( ruleProgram EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:62:1: ruleProgram EOF
            {
             before(grammarAccess.getProgramRule()); 
            pushFollow(FOLLOW_ruleProgram_in_entryRuleProgram61);
            ruleProgram();

            state._fsp--;

             after(grammarAccess.getProgramRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleProgram68); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProgram"


    // $ANTLR start "ruleProgram"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:69:1: ruleProgram : ( ( rule__Program__Group__0 ) ) ;
    public final void ruleProgram() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:73:2: ( ( ( rule__Program__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:74:1: ( ( rule__Program__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:74:1: ( ( rule__Program__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:75:1: ( rule__Program__Group__0 )
            {
             before(grammarAccess.getProgramAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:76:1: ( rule__Program__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:76:2: rule__Program__Group__0
            {
            pushFollow(FOLLOW_rule__Program__Group__0_in_ruleProgram94);
            rule__Program__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProgram"


    // $ANTLR start "entryRulePin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:88:1: entryRulePin : rulePin EOF ;
    public final void entryRulePin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:89:1: ( rulePin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:90:1: rulePin EOF
            {
             before(grammarAccess.getPinRule()); 
            pushFollow(FOLLOW_rulePin_in_entryRulePin121);
            rulePin();

            state._fsp--;

             after(grammarAccess.getPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePin128); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePin"


    // $ANTLR start "rulePin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:97:1: rulePin : ( ( rule__Pin__Alternatives ) ) ;
    public final void rulePin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:101:2: ( ( ( rule__Pin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:102:1: ( ( rule__Pin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:102:1: ( ( rule__Pin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:103:1: ( rule__Pin__Alternatives )
            {
             before(grammarAccess.getPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:104:1: ( rule__Pin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:104:2: rule__Pin__Alternatives
            {
            pushFollow(FOLLOW_rule__Pin__Alternatives_in_rulePin154);
            rule__Pin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePin"


    // $ANTLR start "entryRuleInputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:116:1: entryRuleInputPin : ruleInputPin EOF ;
    public final void entryRuleInputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:117:1: ( ruleInputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:118:1: ruleInputPin EOF
            {
             before(grammarAccess.getInputPinRule()); 
            pushFollow(FOLLOW_ruleInputPin_in_entryRuleInputPin181);
            ruleInputPin();

            state._fsp--;

             after(grammarAccess.getInputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInputPin188); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInputPin"


    // $ANTLR start "ruleInputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:125:1: ruleInputPin : ( ( rule__InputPin__Alternatives ) ) ;
    public final void ruleInputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:129:2: ( ( ( rule__InputPin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:130:1: ( ( rule__InputPin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:130:1: ( ( rule__InputPin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:131:1: ( rule__InputPin__Alternatives )
            {
             before(grammarAccess.getInputPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:132:1: ( rule__InputPin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:132:2: rule__InputPin__Alternatives
            {
            pushFollow(FOLLOW_rule__InputPin__Alternatives_in_ruleInputPin214);
            rule__InputPin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInputPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInputPin"


    // $ANTLR start "entryRuleOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:144:1: entryRuleOutputPin : ruleOutputPin EOF ;
    public final void entryRuleOutputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:145:1: ( ruleOutputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:146:1: ruleOutputPin EOF
            {
             before(grammarAccess.getOutputPinRule()); 
            pushFollow(FOLLOW_ruleOutputPin_in_entryRuleOutputPin241);
            ruleOutputPin();

            state._fsp--;

             after(grammarAccess.getOutputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOutputPin248); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOutputPin"


    // $ANTLR start "ruleOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:153:1: ruleOutputPin : ( ( rule__OutputPin__Alternatives ) ) ;
    public final void ruleOutputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:157:2: ( ( ( rule__OutputPin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:158:1: ( ( rule__OutputPin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:158:1: ( ( rule__OutputPin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:159:1: ( rule__OutputPin__Alternatives )
            {
             before(grammarAccess.getOutputPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:160:1: ( rule__OutputPin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:160:2: rule__OutputPin__Alternatives
            {
            pushFollow(FOLLOW_rule__OutputPin__Alternatives_in_ruleOutputPin274);
            rule__OutputPin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getOutputPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOutputPin"


    // $ANTLR start "entryRuleAudioInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:172:1: entryRuleAudioInput : ruleAudioInput EOF ;
    public final void entryRuleAudioInput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:173:1: ( ruleAudioInput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:174:1: ruleAudioInput EOF
            {
             before(grammarAccess.getAudioInputRule()); 
            pushFollow(FOLLOW_ruleAudioInput_in_entryRuleAudioInput301);
            ruleAudioInput();

            state._fsp--;

             after(grammarAccess.getAudioInputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAudioInput308); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAudioInput"


    // $ANTLR start "ruleAudioInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:181:1: ruleAudioInput : ( ( rule__AudioInput__Group__0 ) ) ;
    public final void ruleAudioInput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:185:2: ( ( ( rule__AudioInput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:186:1: ( ( rule__AudioInput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:186:1: ( ( rule__AudioInput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:187:1: ( rule__AudioInput__Group__0 )
            {
             before(grammarAccess.getAudioInputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:188:1: ( rule__AudioInput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:188:2: rule__AudioInput__Group__0
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__0_in_ruleAudioInput334);
            rule__AudioInput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAudioInput"


    // $ANTLR start "entryRuleAudioOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:200:1: entryRuleAudioOutput : ruleAudioOutput EOF ;
    public final void entryRuleAudioOutput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:201:1: ( ruleAudioOutput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:202:1: ruleAudioOutput EOF
            {
             before(grammarAccess.getAudioOutputRule()); 
            pushFollow(FOLLOW_ruleAudioOutput_in_entryRuleAudioOutput361);
            ruleAudioOutput();

            state._fsp--;

             after(grammarAccess.getAudioOutputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAudioOutput368); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAudioOutput"


    // $ANTLR start "ruleAudioOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:209:1: ruleAudioOutput : ( ( rule__AudioOutput__Group__0 ) ) ;
    public final void ruleAudioOutput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:213:2: ( ( ( rule__AudioOutput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:214:1: ( ( rule__AudioOutput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:214:1: ( ( rule__AudioOutput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:215:1: ( rule__AudioOutput__Group__0 )
            {
             before(grammarAccess.getAudioOutputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:216:1: ( rule__AudioOutput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:216:2: rule__AudioOutput__Group__0
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__0_in_ruleAudioOutput394);
            rule__AudioOutput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAudioOutput"


    // $ANTLR start "entryRuleControlInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:228:1: entryRuleControlInput : ruleControlInput EOF ;
    public final void entryRuleControlInput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:229:1: ( ruleControlInput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:230:1: ruleControlInput EOF
            {
             before(grammarAccess.getControlInputRule()); 
            pushFollow(FOLLOW_ruleControlInput_in_entryRuleControlInput421);
            ruleControlInput();

            state._fsp--;

             after(grammarAccess.getControlInputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControlInput428); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControlInput"


    // $ANTLR start "ruleControlInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:237:1: ruleControlInput : ( ( rule__ControlInput__Group__0 ) ) ;
    public final void ruleControlInput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:241:2: ( ( ( rule__ControlInput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:242:1: ( ( rule__ControlInput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:242:1: ( ( rule__ControlInput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:243:1: ( rule__ControlInput__Group__0 )
            {
             before(grammarAccess.getControlInputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:244:1: ( rule__ControlInput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:244:2: rule__ControlInput__Group__0
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__0_in_ruleControlInput454);
            rule__ControlInput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControlInput"


    // $ANTLR start "entryRuleControlOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:256:1: entryRuleControlOutput : ruleControlOutput EOF ;
    public final void entryRuleControlOutput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:257:1: ( ruleControlOutput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:258:1: ruleControlOutput EOF
            {
             before(grammarAccess.getControlOutputRule()); 
            pushFollow(FOLLOW_ruleControlOutput_in_entryRuleControlOutput481);
            ruleControlOutput();

            state._fsp--;

             after(grammarAccess.getControlOutputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControlOutput488); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControlOutput"


    // $ANTLR start "ruleControlOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:265:1: ruleControlOutput : ( ( rule__ControlOutput__Group__0 ) ) ;
    public final void ruleControlOutput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:269:2: ( ( ( rule__ControlOutput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:270:1: ( ( rule__ControlOutput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:270:1: ( ( rule__ControlOutput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:271:1: ( rule__ControlOutput__Group__0 )
            {
             before(grammarAccess.getControlOutputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:272:1: ( rule__ControlOutput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:272:2: rule__ControlOutput__Group__0
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__0_in_ruleControlOutput514);
            rule__ControlOutput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControlOutput"


    // $ANTLR start "entryRuleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:284:1: entryRuleControl : ruleControl EOF ;
    public final void entryRuleControl() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:285:1: ( ruleControl EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:286:1: ruleControl EOF
            {
             before(grammarAccess.getControlRule()); 
            pushFollow(FOLLOW_ruleControl_in_entryRuleControl541);
            ruleControl();

            state._fsp--;

             after(grammarAccess.getControlRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControl548); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControl"


    // $ANTLR start "ruleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:293:1: ruleControl : ( ( rule__Control__Alternatives ) ) ;
    public final void ruleControl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:297:2: ( ( ( rule__Control__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:298:1: ( ( rule__Control__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:298:1: ( ( rule__Control__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:299:1: ( rule__Control__Alternatives )
            {
             before(grammarAccess.getControlAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:300:1: ( rule__Control__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:300:2: rule__Control__Alternatives
            {
            pushFollow(FOLLOW_rule__Control__Alternatives_in_ruleControl574);
            rule__Control__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getControlAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControl"


    // $ANTLR start "entryRuleSlider"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:312:1: entryRuleSlider : ruleSlider EOF ;
    public final void entryRuleSlider() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:313:1: ( ruleSlider EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:314:1: ruleSlider EOF
            {
             before(grammarAccess.getSliderRule()); 
            pushFollow(FOLLOW_ruleSlider_in_entryRuleSlider601);
            ruleSlider();

            state._fsp--;

             after(grammarAccess.getSliderRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSlider608); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlider"


    // $ANTLR start "ruleSlider"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:321:1: ruleSlider : ( ( rule__Slider__Group__0 ) ) ;
    public final void ruleSlider() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:325:2: ( ( ( rule__Slider__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:326:1: ( ( rule__Slider__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:326:1: ( ( rule__Slider__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:327:1: ( rule__Slider__Group__0 )
            {
             before(grammarAccess.getSliderAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:328:1: ( rule__Slider__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:328:2: rule__Slider__Group__0
            {
            pushFollow(FOLLOW_rule__Slider__Group__0_in_ruleSlider634);
            rule__Slider__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSliderAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlider"


    // $ANTLR start "entryRuleCheckBox"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:340:1: entryRuleCheckBox : ruleCheckBox EOF ;
    public final void entryRuleCheckBox() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:341:1: ( ruleCheckBox EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:342:1: ruleCheckBox EOF
            {
             before(grammarAccess.getCheckBoxRule()); 
            pushFollow(FOLLOW_ruleCheckBox_in_entryRuleCheckBox661);
            ruleCheckBox();

            state._fsp--;

             after(grammarAccess.getCheckBoxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCheckBox668); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCheckBox"


    // $ANTLR start "ruleCheckBox"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:349:1: ruleCheckBox : ( ( rule__CheckBox__Group__0 ) ) ;
    public final void ruleCheckBox() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:353:2: ( ( ( rule__CheckBox__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:354:1: ( ( rule__CheckBox__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:354:1: ( ( rule__CheckBox__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:355:1: ( rule__CheckBox__Group__0 )
            {
             before(grammarAccess.getCheckBoxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:356:1: ( rule__CheckBox__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:356:2: rule__CheckBox__Group__0
            {
            pushFollow(FOLLOW_rule__CheckBox__Group__0_in_ruleCheckBox694);
            rule__CheckBox__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getCheckBoxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCheckBox"


    // $ANTLR start "entryRulecontrolLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:368:1: entryRulecontrolLabel : rulecontrolLabel EOF ;
    public final void entryRulecontrolLabel() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:369:1: ( rulecontrolLabel EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:370:1: rulecontrolLabel EOF
            {
             before(grammarAccess.getControlLabelRule()); 
            pushFollow(FOLLOW_rulecontrolLabel_in_entryRulecontrolLabel721);
            rulecontrolLabel();

            state._fsp--;

             after(grammarAccess.getControlLabelRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRulecontrolLabel728); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecontrolLabel"


    // $ANTLR start "rulecontrolLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:377:1: rulecontrolLabel : ( ( rule__ControlLabel__Group__0 ) ) ;
    public final void rulecontrolLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:381:2: ( ( ( rule__ControlLabel__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:382:1: ( ( rule__ControlLabel__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:382:1: ( ( rule__ControlLabel__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:383:1: ( rule__ControlLabel__Group__0 )
            {
             before(grammarAccess.getControlLabelAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:384:1: ( rule__ControlLabel__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:384:2: rule__ControlLabel__Group__0
            {
            pushFollow(FOLLOW_rule__ControlLabel__Group__0_in_rulecontrolLabel754);
            rule__ControlLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecontrolLabel"


    // $ANTLR start "entryRuleSpinElement"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:396:1: entryRuleSpinElement : ruleSpinElement EOF ;
    public final void entryRuleSpinElement() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:397:1: ( ruleSpinElement EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:398:1: ruleSpinElement EOF
            {
             before(grammarAccess.getSpinElementRule()); 
            pushFollow(FOLLOW_ruleSpinElement_in_entryRuleSpinElement781);
            ruleSpinElement();

            state._fsp--;

             after(grammarAccess.getSpinElementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSpinElement788); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpinElement"


    // $ANTLR start "ruleSpinElement"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:405:1: ruleSpinElement : ( ( rule__SpinElement__Alternatives ) ) ;
    public final void ruleSpinElement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:409:2: ( ( ( rule__SpinElement__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:410:1: ( ( rule__SpinElement__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:410:1: ( ( rule__SpinElement__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:411:1: ( rule__SpinElement__Alternatives )
            {
             before(grammarAccess.getSpinElementAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:412:1: ( rule__SpinElement__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:412:2: rule__SpinElement__Alternatives
            {
            pushFollow(FOLLOW_rule__SpinElement__Alternatives_in_ruleSpinElement814);
            rule__SpinElement__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSpinElementAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpinElement"


    // $ANTLR start "entryRuleEquate"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:424:1: entryRuleEquate : ruleEquate EOF ;
    public final void entryRuleEquate() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:425:1: ( ruleEquate EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:426:1: ruleEquate EOF
            {
             before(grammarAccess.getEquateRule()); 
            pushFollow(FOLLOW_ruleEquate_in_entryRuleEquate841);
            ruleEquate();

            state._fsp--;

             after(grammarAccess.getEquateRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleEquate848); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquate"


    // $ANTLR start "ruleEquate"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:433:1: ruleEquate : ( ( rule__Equate__Group__0 ) ) ;
    public final void ruleEquate() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:437:2: ( ( ( rule__Equate__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:438:1: ( ( rule__Equate__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:438:1: ( ( rule__Equate__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:439:1: ( rule__Equate__Group__0 )
            {
             before(grammarAccess.getEquateAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:440:1: ( rule__Equate__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:440:2: rule__Equate__Group__0
            {
            pushFollow(FOLLOW_rule__Equate__Group__0_in_ruleEquate874);
            rule__Equate__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquate"


    // $ANTLR start "entryRuleMem"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:452:1: entryRuleMem : ruleMem EOF ;
    public final void entryRuleMem() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:453:1: ( ruleMem EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:454:1: ruleMem EOF
            {
             before(grammarAccess.getMemRule()); 
            pushFollow(FOLLOW_ruleMem_in_entryRuleMem901);
            ruleMem();

            state._fsp--;

             after(grammarAccess.getMemRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMem908); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMem"


    // $ANTLR start "ruleMem"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:461:1: ruleMem : ( ( rule__Mem__Group__0 ) ) ;
    public final void ruleMem() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:465:2: ( ( ( rule__Mem__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:466:1: ( ( rule__Mem__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:466:1: ( ( rule__Mem__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:467:1: ( rule__Mem__Group__0 )
            {
             before(grammarAccess.getMemAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:468:1: ( rule__Mem__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:468:2: rule__Mem__Group__0
            {
            pushFollow(FOLLOW_rule__Mem__Group__0_in_ruleMem934);
            rule__Mem__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMem"


    // $ANTLR start "entryRuleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:480:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:481:1: ( ruleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:482:1: ruleOffset EOF
            {
             before(grammarAccess.getOffsetRule()); 
            pushFollow(FOLLOW_ruleOffset_in_entryRuleOffset961);
            ruleOffset();

            state._fsp--;

             after(grammarAccess.getOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOffset968); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:489:1: ruleOffset : ( ( rule__Offset__Group__0 ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:493:2: ( ( ( rule__Offset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:494:1: ( ( rule__Offset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:494:1: ( ( rule__Offset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:495:1: ( rule__Offset__Group__0 )
            {
             before(grammarAccess.getOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:496:1: ( rule__Offset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:496:2: rule__Offset__Group__0
            {
            pushFollow(FOLLOW_rule__Offset__Group__0_in_ruleOffset994);
            rule__Offset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleComment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:508:1: entryRuleComment : ruleComment EOF ;
    public final void entryRuleComment() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:509:1: ( ruleComment EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:510:1: ruleComment EOF
            {
             before(grammarAccess.getCommentRule()); 
            pushFollow(FOLLOW_ruleComment_in_entryRuleComment1021);
            ruleComment();

            state._fsp--;

             after(grammarAccess.getCommentRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleComment1028); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:517:1: ruleComment : ( ( rule__Comment__RemarkAssignment ) ) ;
    public final void ruleComment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:521:2: ( ( ( rule__Comment__RemarkAssignment ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:522:1: ( ( rule__Comment__RemarkAssignment ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:522:1: ( ( rule__Comment__RemarkAssignment ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:523:1: ( rule__Comment__RemarkAssignment )
            {
             before(grammarAccess.getCommentAccess().getRemarkAssignment()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:524:1: ( rule__Comment__RemarkAssignment )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:524:2: rule__Comment__RemarkAssignment
            {
            pushFollow(FOLLOW_rule__Comment__RemarkAssignment_in_ruleComment1054);
            rule__Comment__RemarkAssignment();

            state._fsp--;


            }

             after(grammarAccess.getCommentAccess().getRemarkAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRuleLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:536:1: entryRuleLabel : ruleLabel EOF ;
    public final void entryRuleLabel() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:537:1: ( ruleLabel EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:538:1: ruleLabel EOF
            {
             before(grammarAccess.getLabelRule()); 
            pushFollow(FOLLOW_ruleLabel_in_entryRuleLabel1081);
            ruleLabel();

            state._fsp--;

             after(grammarAccess.getLabelRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabel1088); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:545:1: ruleLabel : ( ( rule__Label__Group__0 ) ) ;
    public final void ruleLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:549:2: ( ( ( rule__Label__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:550:1: ( ( rule__Label__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:550:1: ( ( rule__Label__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:551:1: ( rule__Label__Group__0 )
            {
             before(grammarAccess.getLabelAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:552:1: ( rule__Label__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:552:2: rule__Label__Group__0
            {
            pushFollow(FOLLOW_rule__Label__Group__0_in_ruleLabel1114);
            rule__Label__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleMacro"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:564:1: entryRuleMacro : ruleMacro EOF ;
    public final void entryRuleMacro() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:565:1: ( ruleMacro EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:566:1: ruleMacro EOF
            {
             before(grammarAccess.getMacroRule()); 
            pushFollow(FOLLOW_ruleMacro_in_entryRuleMacro1141);
            ruleMacro();

            state._fsp--;

             after(grammarAccess.getMacroRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMacro1148); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMacro"


    // $ANTLR start "ruleMacro"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:573:1: ruleMacro : ( ( rule__Macro__Alternatives ) ) ;
    public final void ruleMacro() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:577:2: ( ( ( rule__Macro__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:578:1: ( ( rule__Macro__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:578:1: ( ( rule__Macro__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:579:1: ( rule__Macro__Alternatives )
            {
             before(grammarAccess.getMacroAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:580:1: ( rule__Macro__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:580:2: rule__Macro__Alternatives
            {
            pushFollow(FOLLOW_rule__Macro__Alternatives_in_ruleMacro1174);
            rule__Macro__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getMacroAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMacro"


    // $ANTLR start "entryRuleIsPinConnected"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:592:1: entryRuleIsPinConnected : ruleIsPinConnected EOF ;
    public final void entryRuleIsPinConnected() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:593:1: ( ruleIsPinConnected EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:594:1: ruleIsPinConnected EOF
            {
             before(grammarAccess.getIsPinConnectedRule()); 
            pushFollow(FOLLOW_ruleIsPinConnected_in_entryRuleIsPinConnected1201);
            ruleIsPinConnected();

            state._fsp--;

             after(grammarAccess.getIsPinConnectedRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsPinConnected1208); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsPinConnected"


    // $ANTLR start "ruleIsPinConnected"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:601:1: ruleIsPinConnected : ( ( rule__IsPinConnected__Group__0 ) ) ;
    public final void ruleIsPinConnected() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:605:2: ( ( ( rule__IsPinConnected__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:606:1: ( ( rule__IsPinConnected__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:606:1: ( ( rule__IsPinConnected__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:607:1: ( rule__IsPinConnected__Group__0 )
            {
             before(grammarAccess.getIsPinConnectedAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:608:1: ( rule__IsPinConnected__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:608:2: rule__IsPinConnected__Group__0
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__0_in_ruleIsPinConnected1234);
            rule__IsPinConnected__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsPinConnectedAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsPinConnected"


    // $ANTLR start "entryRuleIsElse"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:620:1: entryRuleIsElse : ruleIsElse EOF ;
    public final void entryRuleIsElse() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:621:1: ( ruleIsElse EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:622:1: ruleIsElse EOF
            {
             before(grammarAccess.getIsElseRule()); 
            pushFollow(FOLLOW_ruleIsElse_in_entryRuleIsElse1261);
            ruleIsElse();

            state._fsp--;

             after(grammarAccess.getIsElseRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsElse1268); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsElse"


    // $ANTLR start "ruleIsElse"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:629:1: ruleIsElse : ( ( rule__IsElse__Group__0 ) ) ;
    public final void ruleIsElse() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:633:2: ( ( ( rule__IsElse__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:634:1: ( ( rule__IsElse__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:634:1: ( ( rule__IsElse__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:635:1: ( rule__IsElse__Group__0 )
            {
             before(grammarAccess.getIsElseAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:636:1: ( rule__IsElse__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:636:2: rule__IsElse__Group__0
            {
            pushFollow(FOLLOW_rule__IsElse__Group__0_in_ruleIsElse1294);
            rule__IsElse__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsElseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsElse"


    // $ANTLR start "entryRuleIsEndif"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:648:1: entryRuleIsEndif : ruleIsEndif EOF ;
    public final void entryRuleIsEndif() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:649:1: ( ruleIsEndif EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:650:1: ruleIsEndif EOF
            {
             before(grammarAccess.getIsEndifRule()); 
            pushFollow(FOLLOW_ruleIsEndif_in_entryRuleIsEndif1321);
            ruleIsEndif();

            state._fsp--;

             after(grammarAccess.getIsEndifRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsEndif1328); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsEndif"


    // $ANTLR start "ruleIsEndif"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:657:1: ruleIsEndif : ( ( rule__IsEndif__Group__0 ) ) ;
    public final void ruleIsEndif() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:661:2: ( ( ( rule__IsEndif__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:662:1: ( ( rule__IsEndif__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:662:1: ( ( rule__IsEndif__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:663:1: ( rule__IsEndif__Group__0 )
            {
             before(grammarAccess.getIsEndifAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:664:1: ( rule__IsEndif__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:664:2: rule__IsEndif__Group__0
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__0_in_ruleIsEndif1354);
            rule__IsEndif__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsEndifAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsEndif"


    // $ANTLR start "entryRuleGetInputDefault"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:676:1: entryRuleGetInputDefault : ruleGetInputDefault EOF ;
    public final void entryRuleGetInputDefault() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:677:1: ( ruleGetInputDefault EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:678:1: ruleGetInputDefault EOF
            {
             before(grammarAccess.getGetInputDefaultRule()); 
            pushFollow(FOLLOW_ruleGetInputDefault_in_entryRuleGetInputDefault1381);
            ruleGetInputDefault();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetInputDefault1388); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetInputDefault"


    // $ANTLR start "ruleGetInputDefault"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:685:1: ruleGetInputDefault : ( ( rule__GetInputDefault__Group__0 ) ) ;
    public final void ruleGetInputDefault() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:689:2: ( ( ( rule__GetInputDefault__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:690:1: ( ( rule__GetInputDefault__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:690:1: ( ( rule__GetInputDefault__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:691:1: ( rule__GetInputDefault__Group__0 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:692:1: ( rule__GetInputDefault__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:692:2: rule__GetInputDefault__Group__0
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__0_in_ruleGetInputDefault1414);
            rule__GetInputDefault__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetInputDefault"


    // $ANTLR start "entryRuleGetDelayScale"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:704:1: entryRuleGetDelayScale : ruleGetDelayScale EOF ;
    public final void entryRuleGetDelayScale() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:705:1: ( ruleGetDelayScale EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:706:1: ruleGetDelayScale EOF
            {
             before(grammarAccess.getGetDelayScaleRule()); 
            pushFollow(FOLLOW_ruleGetDelayScale_in_entryRuleGetDelayScale1441);
            ruleGetDelayScale();

            state._fsp--;

             after(grammarAccess.getGetDelayScaleRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetDelayScale1448); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetDelayScale"


    // $ANTLR start "ruleGetDelayScale"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:713:1: ruleGetDelayScale : ( ( rule__GetDelayScale__Group__0 ) ) ;
    public final void ruleGetDelayScale() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:717:2: ( ( ( rule__GetDelayScale__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:718:1: ( ( rule__GetDelayScale__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:718:1: ( ( rule__GetDelayScale__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:719:1: ( rule__GetDelayScale__Group__0 )
            {
             before(grammarAccess.getGetDelayScaleAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:720:1: ( rule__GetDelayScale__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:720:2: rule__GetDelayScale__Group__0
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__0_in_ruleGetDelayScale1474);
            rule__GetDelayScale__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetDelayScale"


    // $ANTLR start "entryRuleSetOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:732:1: entryRuleSetOutputPin : ruleSetOutputPin EOF ;
    public final void entryRuleSetOutputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:733:1: ( ruleSetOutputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:734:1: ruleSetOutputPin EOF
            {
             before(grammarAccess.getSetOutputPinRule()); 
            pushFollow(FOLLOW_ruleSetOutputPin_in_entryRuleSetOutputPin1501);
            ruleSetOutputPin();

            state._fsp--;

             after(grammarAccess.getSetOutputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSetOutputPin1508); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSetOutputPin"


    // $ANTLR start "ruleSetOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:741:1: ruleSetOutputPin : ( ( rule__SetOutputPin__Group__0 ) ) ;
    public final void ruleSetOutputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:745:2: ( ( ( rule__SetOutputPin__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:746:1: ( ( rule__SetOutputPin__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:746:1: ( ( rule__SetOutputPin__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:747:1: ( rule__SetOutputPin__Group__0 )
            {
             before(grammarAccess.getSetOutputPinAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:748:1: ( rule__SetOutputPin__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:748:2: rule__SetOutputPin__Group__0
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__0_in_ruleSetOutputPin1534);
            rule__SetOutputPin__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSetOutputPinAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSetOutputPin"


    // $ANTLR start "entryRuleInstruction"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:760:1: entryRuleInstruction : ruleInstruction EOF ;
    public final void entryRuleInstruction() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:761:1: ( ruleInstruction EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:762:1: ruleInstruction EOF
            {
             before(grammarAccess.getInstructionRule()); 
            pushFollow(FOLLOW_ruleInstruction_in_entryRuleInstruction1561);
            ruleInstruction();

            state._fsp--;

             after(grammarAccess.getInstructionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInstruction1568); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInstruction"


    // $ANTLR start "ruleInstruction"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:769:1: ruleInstruction : ( ( rule__Instruction__Alternatives ) ) ;
    public final void ruleInstruction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:773:2: ( ( ( rule__Instruction__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:774:1: ( ( rule__Instruction__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:774:1: ( ( rule__Instruction__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:775:1: ( rule__Instruction__Alternatives )
            {
             before(grammarAccess.getInstructionAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:776:1: ( rule__Instruction__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:776:2: rule__Instruction__Alternatives
            {
            pushFollow(FOLLOW_rule__Instruction__Alternatives_in_ruleInstruction1594);
            rule__Instruction__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInstructionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInstruction"


    // $ANTLR start "entryRuleInst_B6_S1_14"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:788:1: entryRuleInst_B6_S1_14 : ruleInst_B6_S1_14 EOF ;
    public final void entryRuleInst_B6_S1_14() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:789:1: ( ruleInst_B6_S1_14 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:790:1: ruleInst_B6_S1_14 EOF
            {
             before(grammarAccess.getInst_B6_S1_14Rule()); 
            pushFollow(FOLLOW_ruleInst_B6_S1_14_in_entryRuleInst_B6_S1_141621);
            ruleInst_B6_S1_14();

            state._fsp--;

             after(grammarAccess.getInst_B6_S1_14Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B6_S1_141628); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B6_S1_14"


    // $ANTLR start "ruleInst_B6_S1_14"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:797:1: ruleInst_B6_S1_14 : ( ( rule__Inst_B6_S1_14__Alternatives ) ) ;
    public final void ruleInst_B6_S1_14() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:801:2: ( ( ( rule__Inst_B6_S1_14__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:802:1: ( ( rule__Inst_B6_S1_14__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:802:1: ( ( rule__Inst_B6_S1_14__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:803:1: ( rule__Inst_B6_S1_14__Alternatives )
            {
             before(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:804:1: ( rule__Inst_B6_S1_14__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:804:2: rule__Inst_B6_S1_14__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B6_S1_14__Alternatives_in_ruleInst_B6_S1_141654);
            rule__Inst_B6_S1_14__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B6_S1_14"


    // $ANTLR start "entryRuleInst_B15_S1_9"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:816:1: entryRuleInst_B15_S1_9 : ruleInst_B15_S1_9 EOF ;
    public final void entryRuleInst_B15_S1_9() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:817:1: ( ruleInst_B15_S1_9 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:818:1: ruleInst_B15_S1_9 EOF
            {
             before(grammarAccess.getInst_B15_S1_9Rule()); 
            pushFollow(FOLLOW_ruleInst_B15_S1_9_in_entryRuleInst_B15_S1_91681);
            ruleInst_B15_S1_9();

            state._fsp--;

             after(grammarAccess.getInst_B15_S1_9Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B15_S1_91688); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B15_S1_9"


    // $ANTLR start "ruleInst_B15_S1_9"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:825:1: ruleInst_B15_S1_9 : ( ( rule__Inst_B15_S1_9__Alternatives ) ) ;
    public final void ruleInst_B15_S1_9() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:829:2: ( ( ( rule__Inst_B15_S1_9__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:830:1: ( ( rule__Inst_B15_S1_9__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:830:1: ( ( rule__Inst_B15_S1_9__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:831:1: ( rule__Inst_B15_S1_9__Alternatives )
            {
             before(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:832:1: ( rule__Inst_B15_S1_9__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:832:2: rule__Inst_B15_S1_9__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B15_S1_9__Alternatives_in_ruleInst_B15_S1_91714);
            rule__Inst_B15_S1_9__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B15_S1_9"


    // $ANTLR start "entryRuleInst_B6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:844:1: entryRuleInst_B6 : ruleInst_B6 EOF ;
    public final void entryRuleInst_B6() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:845:1: ( ruleInst_B6 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:846:1: ruleInst_B6 EOF
            {
             before(grammarAccess.getInst_B6Rule()); 
            pushFollow(FOLLOW_ruleInst_B6_in_entryRuleInst_B61741);
            ruleInst_B6();

            state._fsp--;

             after(grammarAccess.getInst_B6Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B61748); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B6"


    // $ANTLR start "ruleInst_B6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:853:1: ruleInst_B6 : ( ( rule__Inst_B6__Alternatives ) ) ;
    public final void ruleInst_B6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:857:2: ( ( ( rule__Inst_B6__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:858:1: ( ( rule__Inst_B6__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:858:1: ( ( rule__Inst_B6__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:859:1: ( rule__Inst_B6__Alternatives )
            {
             before(grammarAccess.getInst_B6Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:860:1: ( rule__Inst_B6__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:860:2: rule__Inst_B6__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B6__Alternatives_in_ruleInst_B61774);
            rule__Inst_B6__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B6Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B6"


    // $ANTLR start "entryRuleInst_B24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:872:1: entryRuleInst_B24 : ruleInst_B24 EOF ;
    public final void entryRuleInst_B24() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:873:1: ( ruleInst_B24 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:874:1: ruleInst_B24 EOF
            {
             before(grammarAccess.getInst_B24Rule()); 
            pushFollow(FOLLOW_ruleInst_B24_in_entryRuleInst_B241801);
            ruleInst_B24();

            state._fsp--;

             after(grammarAccess.getInst_B24Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B241808); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B24"


    // $ANTLR start "ruleInst_B24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:881:1: ruleInst_B24 : ( ( rule__Inst_B24__Alternatives ) ) ;
    public final void ruleInst_B24() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:885:2: ( ( ( rule__Inst_B24__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:886:1: ( ( rule__Inst_B24__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:886:1: ( ( rule__Inst_B24__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:887:1: ( rule__Inst_B24__Alternatives )
            {
             before(grammarAccess.getInst_B24Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:888:1: ( rule__Inst_B24__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:888:2: rule__Inst_B24__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B24__Alternatives_in_ruleInst_B241834);
            rule__Inst_B24__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B24Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B24"


    // $ANTLR start "entryRuleInst_X0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:900:1: entryRuleInst_X0 : ruleInst_X0 EOF ;
    public final void entryRuleInst_X0() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:901:1: ( ruleInst_X0 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:902:1: ruleInst_X0 EOF
            {
             before(grammarAccess.getInst_X0Rule()); 
            pushFollow(FOLLOW_ruleInst_X0_in_entryRuleInst_X01861);
            ruleInst_X0();

            state._fsp--;

             after(grammarAccess.getInst_X0Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_X01868); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_X0"


    // $ANTLR start "ruleInst_X0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:909:1: ruleInst_X0 : ( ( rule__Inst_X0__Alternatives ) ) ;
    public final void ruleInst_X0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:913:2: ( ( ( rule__Inst_X0__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:914:1: ( ( rule__Inst_X0__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:914:1: ( ( rule__Inst_X0__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:915:1: ( rule__Inst_X0__Alternatives )
            {
             before(grammarAccess.getInst_X0Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:916:1: ( rule__Inst_X0__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:916:2: rule__Inst_X0__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_X0__Alternatives_in_ruleInst_X01894);
            rule__Inst_X0__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_X0Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_X0"


    // $ANTLR start "entryRuleInst_S1_14_S1_10"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:928:1: entryRuleInst_S1_14_S1_10 : ruleInst_S1_14_S1_10 EOF ;
    public final void entryRuleInst_S1_14_S1_10() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:929:1: ( ruleInst_S1_14_S1_10 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:930:1: ruleInst_S1_14_S1_10 EOF
            {
             before(grammarAccess.getInst_S1_14_S1_10Rule()); 
            pushFollow(FOLLOW_ruleInst_S1_14_S1_10_in_entryRuleInst_S1_14_S1_101921);
            ruleInst_S1_14_S1_10();

            state._fsp--;

             after(grammarAccess.getInst_S1_14_S1_10Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_S1_14_S1_101928); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_S1_14_S1_10"


    // $ANTLR start "ruleInst_S1_14_S1_10"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:937:1: ruleInst_S1_14_S1_10 : ( ( rule__Inst_S1_14_S1_10__Alternatives ) ) ;
    public final void ruleInst_S1_14_S1_10() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:941:2: ( ( ( rule__Inst_S1_14_S1_10__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:942:1: ( ( rule__Inst_S1_14_S1_10__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:942:1: ( ( rule__Inst_S1_14_S1_10__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:943:1: ( rule__Inst_S1_14_S1_10__Alternatives )
            {
             before(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:944:1: ( rule__Inst_S1_14_S1_10__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:944:2: rule__Inst_S1_14_S1_10__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_S1_14_S1_10__Alternatives_in_ruleInst_S1_14_S1_101954);
            rule__Inst_S1_14_S1_10__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_S1_14_S1_10"


    // $ANTLR start "entryRuleReadRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:956:1: entryRuleReadRegister : ruleReadRegister EOF ;
    public final void entryRuleReadRegister() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:957:1: ( ruleReadRegister EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:958:1: ruleReadRegister EOF
            {
             before(grammarAccess.getReadRegisterRule()); 
            pushFollow(FOLLOW_ruleReadRegister_in_entryRuleReadRegister1981);
            ruleReadRegister();

            state._fsp--;

             after(grammarAccess.getReadRegisterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadRegister1988); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadRegister"


    // $ANTLR start "ruleReadRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:965:1: ruleReadRegister : ( ( rule__ReadRegister__Group__0 ) ) ;
    public final void ruleReadRegister() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:969:2: ( ( ( rule__ReadRegister__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:970:1: ( ( rule__ReadRegister__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:970:1: ( ( rule__ReadRegister__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:971:1: ( rule__ReadRegister__Group__0 )
            {
             before(grammarAccess.getReadRegisterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:972:1: ( rule__ReadRegister__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:972:2: rule__ReadRegister__Group__0
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__0_in_ruleReadRegister2014);
            rule__ReadRegister__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadRegister"


    // $ANTLR start "entryRuleWriteRegisterLowshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:984:1: entryRuleWriteRegisterLowshelf : ruleWriteRegisterLowshelf EOF ;
    public final void entryRuleWriteRegisterLowshelf() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:985:1: ( ruleWriteRegisterLowshelf EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:986:1: ruleWriteRegisterLowshelf EOF
            {
             before(grammarAccess.getWriteRegisterLowshelfRule()); 
            pushFollow(FOLLOW_ruleWriteRegisterLowshelf_in_entryRuleWriteRegisterLowshelf2041);
            ruleWriteRegisterLowshelf();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegisterLowshelf2048); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegisterLowshelf"


    // $ANTLR start "ruleWriteRegisterLowshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:993:1: ruleWriteRegisterLowshelf : ( ( rule__WriteRegisterLowshelf__Group__0 ) ) ;
    public final void ruleWriteRegisterLowshelf() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:997:2: ( ( ( rule__WriteRegisterLowshelf__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:998:1: ( ( rule__WriteRegisterLowshelf__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:998:1: ( ( rule__WriteRegisterLowshelf__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:999:1: ( rule__WriteRegisterLowshelf__Group__0 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1000:1: ( rule__WriteRegisterLowshelf__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1000:2: rule__WriteRegisterLowshelf__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__0_in_ruleWriteRegisterLowshelf2074);
            rule__WriteRegisterLowshelf__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegisterLowshelf"


    // $ANTLR start "entryRuleWriteRegisterHighshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1012:1: entryRuleWriteRegisterHighshelf : ruleWriteRegisterHighshelf EOF ;
    public final void entryRuleWriteRegisterHighshelf() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1013:1: ( ruleWriteRegisterHighshelf EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1014:1: ruleWriteRegisterHighshelf EOF
            {
             before(grammarAccess.getWriteRegisterHighshelfRule()); 
            pushFollow(FOLLOW_ruleWriteRegisterHighshelf_in_entryRuleWriteRegisterHighshelf2101);
            ruleWriteRegisterHighshelf();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegisterHighshelf2108); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegisterHighshelf"


    // $ANTLR start "ruleWriteRegisterHighshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1021:1: ruleWriteRegisterHighshelf : ( ( rule__WriteRegisterHighshelf__Group__0 ) ) ;
    public final void ruleWriteRegisterHighshelf() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1025:2: ( ( ( rule__WriteRegisterHighshelf__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1026:1: ( ( rule__WriteRegisterHighshelf__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1026:1: ( ( rule__WriteRegisterHighshelf__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1027:1: ( rule__WriteRegisterHighshelf__Group__0 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1028:1: ( rule__WriteRegisterHighshelf__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1028:2: rule__WriteRegisterHighshelf__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__0_in_ruleWriteRegisterHighshelf2134);
            rule__WriteRegisterHighshelf__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegisterHighshelf"


    // $ANTLR start "entryRuleWriteRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1040:1: entryRuleWriteRegister : ruleWriteRegister EOF ;
    public final void entryRuleWriteRegister() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1041:1: ( ruleWriteRegister EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1042:1: ruleWriteRegister EOF
            {
             before(grammarAccess.getWriteRegisterRule()); 
            pushFollow(FOLLOW_ruleWriteRegister_in_entryRuleWriteRegister2161);
            ruleWriteRegister();

            state._fsp--;

             after(grammarAccess.getWriteRegisterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegister2168); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegister"


    // $ANTLR start "ruleWriteRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1049:1: ruleWriteRegister : ( ( rule__WriteRegister__Group__0 ) ) ;
    public final void ruleWriteRegister() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1053:2: ( ( ( rule__WriteRegister__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1054:1: ( ( rule__WriteRegister__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1054:1: ( ( rule__WriteRegister__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1055:1: ( rule__WriteRegister__Group__0 )
            {
             before(grammarAccess.getWriteRegisterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1056:1: ( rule__WriteRegister__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1056:2: rule__WriteRegister__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__0_in_ruleWriteRegister2194);
            rule__WriteRegister__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegister"


    // $ANTLR start "entryRuleMaxx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1068:1: entryRuleMaxx : ruleMaxx EOF ;
    public final void entryRuleMaxx() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1069:1: ( ruleMaxx EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1070:1: ruleMaxx EOF
            {
             before(grammarAccess.getMaxxRule()); 
            pushFollow(FOLLOW_ruleMaxx_in_entryRuleMaxx2221);
            ruleMaxx();

            state._fsp--;

             after(grammarAccess.getMaxxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMaxx2228); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMaxx"


    // $ANTLR start "ruleMaxx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1077:1: ruleMaxx : ( ( rule__Maxx__Group__0 ) ) ;
    public final void ruleMaxx() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1081:2: ( ( ( rule__Maxx__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1082:1: ( ( rule__Maxx__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1082:1: ( ( rule__Maxx__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1083:1: ( rule__Maxx__Group__0 )
            {
             before(grammarAccess.getMaxxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1084:1: ( rule__Maxx__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1084:2: rule__Maxx__Group__0
            {
            pushFollow(FOLLOW_rule__Maxx__Group__0_in_ruleMaxx2254);
            rule__Maxx__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMaxx"


    // $ANTLR start "entryRuleReadRegisterFilter"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1096:1: entryRuleReadRegisterFilter : ruleReadRegisterFilter EOF ;
    public final void entryRuleReadRegisterFilter() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1097:1: ( ruleReadRegisterFilter EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1098:1: ruleReadRegisterFilter EOF
            {
             before(grammarAccess.getReadRegisterFilterRule()); 
            pushFollow(FOLLOW_ruleReadRegisterFilter_in_entryRuleReadRegisterFilter2281);
            ruleReadRegisterFilter();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadRegisterFilter2288); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadRegisterFilter"


    // $ANTLR start "ruleReadRegisterFilter"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1105:1: ruleReadRegisterFilter : ( ( rule__ReadRegisterFilter__Group__0 ) ) ;
    public final void ruleReadRegisterFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1109:2: ( ( ( rule__ReadRegisterFilter__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1110:1: ( ( rule__ReadRegisterFilter__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1110:1: ( ( rule__ReadRegisterFilter__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1111:1: ( rule__ReadRegisterFilter__Group__0 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1112:1: ( rule__ReadRegisterFilter__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1112:2: rule__ReadRegisterFilter__Group__0
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__0_in_ruleReadRegisterFilter2314);
            rule__ReadRegisterFilter__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadRegisterFilter"


    // $ANTLR start "entryRuleMulx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1124:1: entryRuleMulx : ruleMulx EOF ;
    public final void entryRuleMulx() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1125:1: ( ruleMulx EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1126:1: ruleMulx EOF
            {
             before(grammarAccess.getMulxRule()); 
            pushFollow(FOLLOW_ruleMulx_in_entryRuleMulx2341);
            ruleMulx();

            state._fsp--;

             after(grammarAccess.getMulxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMulx2348); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMulx"


    // $ANTLR start "ruleMulx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1133:1: ruleMulx : ( ( rule__Mulx__Group__0 ) ) ;
    public final void ruleMulx() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1137:2: ( ( ( rule__Mulx__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1138:1: ( ( rule__Mulx__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1138:1: ( ( rule__Mulx__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1139:1: ( rule__Mulx__Group__0 )
            {
             before(grammarAccess.getMulxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1140:1: ( rule__Mulx__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1140:2: rule__Mulx__Group__0
            {
            pushFollow(FOLLOW_rule__Mulx__Group__0_in_ruleMulx2374);
            rule__Mulx__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMulxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulx"


    // $ANTLR start "entryRuleLdax"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1152:1: entryRuleLdax : ruleLdax EOF ;
    public final void entryRuleLdax() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1153:1: ( ruleLdax EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1154:1: ruleLdax EOF
            {
             before(grammarAccess.getLdaxRule()); 
            pushFollow(FOLLOW_ruleLdax_in_entryRuleLdax2401);
            ruleLdax();

            state._fsp--;

             after(grammarAccess.getLdaxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLdax2408); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLdax"


    // $ANTLR start "ruleLdax"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1161:1: ruleLdax : ( ( rule__Ldax__Group__0 ) ) ;
    public final void ruleLdax() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1165:2: ( ( ( rule__Ldax__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1166:1: ( ( rule__Ldax__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1166:1: ( ( rule__Ldax__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1167:1: ( rule__Ldax__Group__0 )
            {
             before(grammarAccess.getLdaxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1168:1: ( rule__Ldax__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1168:2: rule__Ldax__Group__0
            {
            pushFollow(FOLLOW_rule__Ldax__Group__0_in_ruleLdax2434);
            rule__Ldax__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLdaxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLdax"


    // $ANTLR start "entryRuleExp"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1180:1: entryRuleExp : ruleExp EOF ;
    public final void entryRuleExp() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1181:1: ( ruleExp EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1182:1: ruleExp EOF
            {
             before(grammarAccess.getExpRule()); 
            pushFollow(FOLLOW_ruleExp_in_entryRuleExp2461);
            ruleExp();

            state._fsp--;

             after(grammarAccess.getExpRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExp2468); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExp"


    // $ANTLR start "ruleExp"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1189:1: ruleExp : ( ( rule__Exp__Group__0 ) ) ;
    public final void ruleExp() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1193:2: ( ( ( rule__Exp__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1194:1: ( ( rule__Exp__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1194:1: ( ( rule__Exp__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1195:1: ( rule__Exp__Group__0 )
            {
             before(grammarAccess.getExpAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1196:1: ( rule__Exp__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1196:2: rule__Exp__Group__0
            {
            pushFollow(FOLLOW_rule__Exp__Group__0_in_ruleExp2494);
            rule__Exp__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExp"


    // $ANTLR start "entryRuleLog"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1208:1: entryRuleLog : ruleLog EOF ;
    public final void entryRuleLog() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1209:1: ( ruleLog EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1210:1: ruleLog EOF
            {
             before(grammarAccess.getLogRule()); 
            pushFollow(FOLLOW_ruleLog_in_entryRuleLog2521);
            ruleLog();

            state._fsp--;

             after(grammarAccess.getLogRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLog2528); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLog"


    // $ANTLR start "ruleLog"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1217:1: ruleLog : ( ( rule__Log__Group__0 ) ) ;
    public final void ruleLog() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1221:2: ( ( ( rule__Log__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1222:1: ( ( rule__Log__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1222:1: ( ( rule__Log__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1223:1: ( rule__Log__Group__0 )
            {
             before(grammarAccess.getLogAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1224:1: ( rule__Log__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1224:2: rule__Log__Group__0
            {
            pushFollow(FOLLOW_rule__Log__Group__0_in_ruleLog2554);
            rule__Log__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLog"


    // $ANTLR start "entryRuleScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1236:1: entryRuleScaleOffset : ruleScaleOffset EOF ;
    public final void entryRuleScaleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1237:1: ( ruleScaleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1238:1: ruleScaleOffset EOF
            {
             before(grammarAccess.getScaleOffsetRule()); 
            pushFollow(FOLLOW_ruleScaleOffset_in_entryRuleScaleOffset2581);
            ruleScaleOffset();

            state._fsp--;

             after(grammarAccess.getScaleOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleScaleOffset2588); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScaleOffset"


    // $ANTLR start "ruleScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1245:1: ruleScaleOffset : ( ( rule__ScaleOffset__Group__0 ) ) ;
    public final void ruleScaleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1249:2: ( ( ( rule__ScaleOffset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1250:1: ( ( rule__ScaleOffset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1250:1: ( ( rule__ScaleOffset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1251:1: ( rule__ScaleOffset__Group__0 )
            {
             before(grammarAccess.getScaleOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1252:1: ( rule__ScaleOffset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1252:2: rule__ScaleOffset__Group__0
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__0_in_ruleScaleOffset2614);
            rule__ScaleOffset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScaleOffset"


    // $ANTLR start "entryRuleWriteDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1264:1: entryRuleWriteDelay : ruleWriteDelay EOF ;
    public final void entryRuleWriteDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1265:1: ( ruleWriteDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1266:1: ruleWriteDelay EOF
            {
             before(grammarAccess.getWriteDelayRule()); 
            pushFollow(FOLLOW_ruleWriteDelay_in_entryRuleWriteDelay2641);
            ruleWriteDelay();

            state._fsp--;

             after(grammarAccess.getWriteDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteDelay2648); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteDelay"


    // $ANTLR start "ruleWriteDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1273:1: ruleWriteDelay : ( ( rule__WriteDelay__Group__0 ) ) ;
    public final void ruleWriteDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1277:2: ( ( ( rule__WriteDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1278:1: ( ( rule__WriteDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1278:1: ( ( rule__WriteDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1279:1: ( rule__WriteDelay__Group__0 )
            {
             before(grammarAccess.getWriteDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1280:1: ( rule__WriteDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1280:2: rule__WriteDelay__Group__0
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__0_in_ruleWriteDelay2674);
            rule__WriteDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteDelay"


    // $ANTLR start "entryRuleWriteAllpass"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1292:1: entryRuleWriteAllpass : ruleWriteAllpass EOF ;
    public final void entryRuleWriteAllpass() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1293:1: ( ruleWriteAllpass EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1294:1: ruleWriteAllpass EOF
            {
             before(grammarAccess.getWriteAllpassRule()); 
            pushFollow(FOLLOW_ruleWriteAllpass_in_entryRuleWriteAllpass2701);
            ruleWriteAllpass();

            state._fsp--;

             after(grammarAccess.getWriteAllpassRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteAllpass2708); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteAllpass"


    // $ANTLR start "ruleWriteAllpass"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1301:1: ruleWriteAllpass : ( ( rule__WriteAllpass__Group__0 ) ) ;
    public final void ruleWriteAllpass() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1305:2: ( ( ( rule__WriteAllpass__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1306:1: ( ( rule__WriteAllpass__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1306:1: ( ( rule__WriteAllpass__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1307:1: ( rule__WriteAllpass__Group__0 )
            {
             before(grammarAccess.getWriteAllpassAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1308:1: ( rule__WriteAllpass__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1308:2: rule__WriteAllpass__Group__0
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__0_in_ruleWriteAllpass2734);
            rule__WriteAllpass__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteAllpass"


    // $ANTLR start "entryRuleReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1320:1: entryRuleReadDelay : ruleReadDelay EOF ;
    public final void entryRuleReadDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1321:1: ( ruleReadDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1322:1: ruleReadDelay EOF
            {
             before(grammarAccess.getReadDelayRule()); 
            pushFollow(FOLLOW_ruleReadDelay_in_entryRuleReadDelay2761);
            ruleReadDelay();

            state._fsp--;

             after(grammarAccess.getReadDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadDelay2768); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadDelay"


    // $ANTLR start "ruleReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1329:1: ruleReadDelay : ( ( rule__ReadDelay__Group__0 ) ) ;
    public final void ruleReadDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1333:2: ( ( ( rule__ReadDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1334:1: ( ( rule__ReadDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1334:1: ( ( rule__ReadDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1335:1: ( rule__ReadDelay__Group__0 )
            {
             before(grammarAccess.getReadDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1336:1: ( rule__ReadDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1336:2: rule__ReadDelay__Group__0
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__0_in_ruleReadDelay2794);
            rule__ReadDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadDelay"


    // $ANTLR start "entryRuleLoadSinLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1348:1: entryRuleLoadSinLFO : ruleLoadSinLFO EOF ;
    public final void entryRuleLoadSinLFO() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1349:1: ( ruleLoadSinLFO EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1350:1: ruleLoadSinLFO EOF
            {
             before(grammarAccess.getLoadSinLFORule()); 
            pushFollow(FOLLOW_ruleLoadSinLFO_in_entryRuleLoadSinLFO2821);
            ruleLoadSinLFO();

            state._fsp--;

             after(grammarAccess.getLoadSinLFORule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLoadSinLFO2828); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLoadSinLFO"


    // $ANTLR start "ruleLoadSinLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1357:1: ruleLoadSinLFO : ( ( rule__LoadSinLFO__Group__0 ) ) ;
    public final void ruleLoadSinLFO() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1361:2: ( ( ( rule__LoadSinLFO__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1362:1: ( ( rule__LoadSinLFO__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1362:1: ( ( rule__LoadSinLFO__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1363:1: ( rule__LoadSinLFO__Group__0 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1364:1: ( rule__LoadSinLFO__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1364:2: rule__LoadSinLFO__Group__0
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__0_in_ruleLoadSinLFO2854);
            rule__LoadSinLFO__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLoadSinLFO"


    // $ANTLR start "entryRuleLoadRampLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1376:1: entryRuleLoadRampLFO : ruleLoadRampLFO EOF ;
    public final void entryRuleLoadRampLFO() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1377:1: ( ruleLoadRampLFO EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1378:1: ruleLoadRampLFO EOF
            {
             before(grammarAccess.getLoadRampLFORule()); 
            pushFollow(FOLLOW_ruleLoadRampLFO_in_entryRuleLoadRampLFO2881);
            ruleLoadRampLFO();

            state._fsp--;

             after(grammarAccess.getLoadRampLFORule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLoadRampLFO2888); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLoadRampLFO"


    // $ANTLR start "ruleLoadRampLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1385:1: ruleLoadRampLFO : ( ( rule__LoadRampLFO__Group__0 ) ) ;
    public final void ruleLoadRampLFO() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1389:2: ( ( ( rule__LoadRampLFO__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1390:1: ( ( rule__LoadRampLFO__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1390:1: ( ( rule__LoadRampLFO__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1391:1: ( rule__LoadRampLFO__Group__0 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1392:1: ( rule__LoadRampLFO__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1392:2: rule__LoadRampLFO__Group__0
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__0_in_ruleLoadRampLFO2914);
            rule__LoadRampLFO__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLoadRampLFO"


    // $ANTLR start "entryRuleChorusReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1404:1: entryRuleChorusReadDelay : ruleChorusReadDelay EOF ;
    public final void entryRuleChorusReadDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1405:1: ( ruleChorusReadDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1406:1: ruleChorusReadDelay EOF
            {
             before(grammarAccess.getChorusReadDelayRule()); 
            pushFollow(FOLLOW_ruleChorusReadDelay_in_entryRuleChorusReadDelay2941);
            ruleChorusReadDelay();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusReadDelay2948); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusReadDelay"


    // $ANTLR start "ruleChorusReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1413:1: ruleChorusReadDelay : ( ( rule__ChorusReadDelay__Group__0 ) ) ;
    public final void ruleChorusReadDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1417:2: ( ( ( rule__ChorusReadDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1418:1: ( ( rule__ChorusReadDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1418:1: ( ( rule__ChorusReadDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1419:1: ( rule__ChorusReadDelay__Group__0 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1420:1: ( rule__ChorusReadDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1420:2: rule__ChorusReadDelay__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__0_in_ruleChorusReadDelay2974);
            rule__ChorusReadDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusReadDelay"


    // $ANTLR start "entryRuleChorusReadValue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1432:1: entryRuleChorusReadValue : ruleChorusReadValue EOF ;
    public final void entryRuleChorusReadValue() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1433:1: ( ruleChorusReadValue EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1434:1: ruleChorusReadValue EOF
            {
             before(grammarAccess.getChorusReadValueRule()); 
            pushFollow(FOLLOW_ruleChorusReadValue_in_entryRuleChorusReadValue3001);
            ruleChorusReadValue();

            state._fsp--;

             after(grammarAccess.getChorusReadValueRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusReadValue3008); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusReadValue"


    // $ANTLR start "ruleChorusReadValue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1441:1: ruleChorusReadValue : ( ( rule__ChorusReadValue__Group__0 ) ) ;
    public final void ruleChorusReadValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1445:2: ( ( ( rule__ChorusReadValue__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1446:1: ( ( rule__ChorusReadValue__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1446:1: ( ( rule__ChorusReadValue__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1447:1: ( rule__ChorusReadValue__Group__0 )
            {
             before(grammarAccess.getChorusReadValueAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1448:1: ( rule__ChorusReadValue__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1448:2: rule__ChorusReadValue__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__0_in_ruleChorusReadValue3034);
            rule__ChorusReadValue__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadValueAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusReadValue"


    // $ANTLR start "entryRuleChorusScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1460:1: entryRuleChorusScaleOffset : ruleChorusScaleOffset EOF ;
    public final void entryRuleChorusScaleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1461:1: ( ruleChorusScaleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1462:1: ruleChorusScaleOffset EOF
            {
             before(grammarAccess.getChorusScaleOffsetRule()); 
            pushFollow(FOLLOW_ruleChorusScaleOffset_in_entryRuleChorusScaleOffset3061);
            ruleChorusScaleOffset();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusScaleOffset3068); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusScaleOffset"


    // $ANTLR start "ruleChorusScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1469:1: ruleChorusScaleOffset : ( ( rule__ChorusScaleOffset__Group__0 ) ) ;
    public final void ruleChorusScaleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1473:2: ( ( ( rule__ChorusScaleOffset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1474:1: ( ( rule__ChorusScaleOffset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1474:1: ( ( rule__ChorusScaleOffset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1475:1: ( rule__ChorusScaleOffset__Group__0 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1476:1: ( rule__ChorusScaleOffset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1476:2: rule__ChorusScaleOffset__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__0_in_ruleChorusScaleOffset3094);
            rule__ChorusScaleOffset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusScaleOffset"


    // $ANTLR start "entryRuleReadDelayPointer"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1488:1: entryRuleReadDelayPointer : ruleReadDelayPointer EOF ;
    public final void entryRuleReadDelayPointer() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1489:1: ( ruleReadDelayPointer EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1490:1: ruleReadDelayPointer EOF
            {
             before(grammarAccess.getReadDelayPointerRule()); 
            pushFollow(FOLLOW_ruleReadDelayPointer_in_entryRuleReadDelayPointer3121);
            ruleReadDelayPointer();

            state._fsp--;

             after(grammarAccess.getReadDelayPointerRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadDelayPointer3128); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadDelayPointer"


    // $ANTLR start "ruleReadDelayPointer"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1497:1: ruleReadDelayPointer : ( ( rule__ReadDelayPointer__Group__0 ) ) ;
    public final void ruleReadDelayPointer() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1501:2: ( ( ( rule__ReadDelayPointer__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1502:1: ( ( rule__ReadDelayPointer__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1502:1: ( ( rule__ReadDelayPointer__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1503:1: ( rule__ReadDelayPointer__Group__0 )
            {
             before(grammarAccess.getReadDelayPointerAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1504:1: ( rule__ReadDelayPointer__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1504:2: rule__ReadDelayPointer__Group__0
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__0_in_ruleReadDelayPointer3154);
            rule__ReadDelayPointer__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayPointerAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadDelayPointer"


    // $ANTLR start "entryRuleAnd"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1516:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1517:1: ( ruleAnd EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1518:1: ruleAnd EOF
            {
             before(grammarAccess.getAndRule()); 
            pushFollow(FOLLOW_ruleAnd_in_entryRuleAnd3181);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getAndRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAnd3188); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1525:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1529:2: ( ( ( rule__And__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1530:1: ( ( rule__And__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1530:1: ( ( rule__And__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1531:1: ( rule__And__Group__0 )
            {
             before(grammarAccess.getAndAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1532:1: ( rule__And__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1532:2: rule__And__Group__0
            {
            pushFollow(FOLLOW_rule__And__Group__0_in_ruleAnd3214);
            rule__And__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleOr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1544:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1545:1: ( ruleOr EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1546:1: ruleOr EOF
            {
             before(grammarAccess.getOrRule()); 
            pushFollow(FOLLOW_ruleOr_in_entryRuleOr3241);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getOrRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOr3248); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1553:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1557:2: ( ( ( rule__Or__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1558:1: ( ( rule__Or__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1558:1: ( ( rule__Or__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1559:1: ( rule__Or__Group__0 )
            {
             before(grammarAccess.getOrAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1560:1: ( rule__Or__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1560:2: rule__Or__Group__0
            {
            pushFollow(FOLLOW_rule__Or__Group__0_in_ruleOr3274);
            rule__Or__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleXor"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1572:1: entryRuleXor : ruleXor EOF ;
    public final void entryRuleXor() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1573:1: ( ruleXor EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1574:1: ruleXor EOF
            {
             before(grammarAccess.getXorRule()); 
            pushFollow(FOLLOW_ruleXor_in_entryRuleXor3301);
            ruleXor();

            state._fsp--;

             after(grammarAccess.getXorRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleXor3308); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXor"


    // $ANTLR start "ruleXor"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1581:1: ruleXor : ( ( rule__Xor__Group__0 ) ) ;
    public final void ruleXor() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1585:2: ( ( ( rule__Xor__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1586:1: ( ( rule__Xor__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1586:1: ( ( rule__Xor__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1587:1: ( rule__Xor__Group__0 )
            {
             before(grammarAccess.getXorAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1588:1: ( rule__Xor__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1588:2: rule__Xor__Group__0
            {
            pushFollow(FOLLOW_rule__Xor__Group__0_in_ruleXor3334);
            rule__Xor__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXor"


    // $ANTLR start "entryRuleJam"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1600:1: entryRuleJam : ruleJam EOF ;
    public final void entryRuleJam() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1601:1: ( ruleJam EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1602:1: ruleJam EOF
            {
             before(grammarAccess.getJamRule()); 
            pushFollow(FOLLOW_ruleJam_in_entryRuleJam3361);
            ruleJam();

            state._fsp--;

             after(grammarAccess.getJamRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleJam3368); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJam"


    // $ANTLR start "ruleJam"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1609:1: ruleJam : ( ( rule__Jam__Group__0 ) ) ;
    public final void ruleJam() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1613:2: ( ( ( rule__Jam__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1614:1: ( ( rule__Jam__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1614:1: ( ( rule__Jam__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1615:1: ( rule__Jam__Group__0 )
            {
             before(grammarAccess.getJamAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1616:1: ( rule__Jam__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1616:2: rule__Jam__Group__0
            {
            pushFollow(FOLLOW_rule__Jam__Group__0_in_ruleJam3394);
            rule__Jam__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getJamAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJam"


    // $ANTLR start "entryRuleClr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1628:1: entryRuleClr : ruleClr EOF ;
    public final void entryRuleClr() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1629:1: ( ruleClr EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1630:1: ruleClr EOF
            {
             before(grammarAccess.getClrRule()); 
            pushFollow(FOLLOW_ruleClr_in_entryRuleClr3421);
            ruleClr();

            state._fsp--;

             after(grammarAccess.getClrRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleClr3428); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleClr"


    // $ANTLR start "ruleClr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1637:1: ruleClr : ( ( rule__Clr__Group__0 ) ) ;
    public final void ruleClr() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1641:2: ( ( ( rule__Clr__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1642:1: ( ( rule__Clr__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1642:1: ( ( rule__Clr__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1643:1: ( rule__Clr__Group__0 )
            {
             before(grammarAccess.getClrAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1644:1: ( rule__Clr__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1644:2: rule__Clr__Group__0
            {
            pushFollow(FOLLOW_rule__Clr__Group__0_in_ruleClr3454);
            rule__Clr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getClrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClr"


    // $ANTLR start "entryRuleNot"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1656:1: entryRuleNot : ruleNot EOF ;
    public final void entryRuleNot() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1657:1: ( ruleNot EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1658:1: ruleNot EOF
            {
             before(grammarAccess.getNotRule()); 
            pushFollow(FOLLOW_ruleNot_in_entryRuleNot3481);
            ruleNot();

            state._fsp--;

             after(grammarAccess.getNotRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNot3488); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNot"


    // $ANTLR start "ruleNot"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1665:1: ruleNot : ( ( rule__Not__Group__0 ) ) ;
    public final void ruleNot() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1669:2: ( ( ( rule__Not__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1670:1: ( ( rule__Not__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1670:1: ( ( rule__Not__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1671:1: ( rule__Not__Group__0 )
            {
             before(grammarAccess.getNotAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1672:1: ( rule__Not__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1672:2: rule__Not__Group__0
            {
            pushFollow(FOLLOW_rule__Not__Group__0_in_ruleNot3514);
            rule__Not__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNotAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNot"


    // $ANTLR start "entryRuleAbsa"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1684:1: entryRuleAbsa : ruleAbsa EOF ;
    public final void entryRuleAbsa() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1685:1: ( ruleAbsa EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1686:1: ruleAbsa EOF
            {
             before(grammarAccess.getAbsaRule()); 
            pushFollow(FOLLOW_ruleAbsa_in_entryRuleAbsa3541);
            ruleAbsa();

            state._fsp--;

             after(grammarAccess.getAbsaRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbsa3548); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAbsa"


    // $ANTLR start "ruleAbsa"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1693:1: ruleAbsa : ( ( rule__Absa__Group__0 ) ) ;
    public final void ruleAbsa() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1697:2: ( ( ( rule__Absa__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1698:1: ( ( rule__Absa__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1698:1: ( ( rule__Absa__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1699:1: ( rule__Absa__Group__0 )
            {
             before(grammarAccess.getAbsaAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1700:1: ( rule__Absa__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1700:2: rule__Absa__Group__0
            {
            pushFollow(FOLLOW_rule__Absa__Group__0_in_ruleAbsa3574);
            rule__Absa__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAbsaAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAbsa"


    // $ANTLR start "entryRuleSkip"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1712:1: entryRuleSkip : ruleSkip EOF ;
    public final void entryRuleSkip() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1713:1: ( ruleSkip EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1714:1: ruleSkip EOF
            {
             before(grammarAccess.getSkipRule()); 
            pushFollow(FOLLOW_ruleSkip_in_entryRuleSkip3601);
            ruleSkip();

            state._fsp--;

             after(grammarAccess.getSkipRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSkip3608); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSkip"


    // $ANTLR start "ruleSkip"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1721:1: ruleSkip : ( ( rule__Skip__Group__0 ) ) ;
    public final void ruleSkip() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1725:2: ( ( ( rule__Skip__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1726:1: ( ( rule__Skip__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1726:1: ( ( rule__Skip__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1727:1: ( rule__Skip__Group__0 )
            {
             before(grammarAccess.getSkipAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1728:1: ( rule__Skip__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1728:2: rule__Skip__Group__0
            {
            pushFollow(FOLLOW_rule__Skip__Group__0_in_ruleSkip3634);
            rule__Skip__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSkip"


    // $ANTLR start "entryRuleSPINDOUBLE"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1740:1: entryRuleSPINDOUBLE : ruleSPINDOUBLE EOF ;
    public final void entryRuleSPINDOUBLE() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1741:1: ( ruleSPINDOUBLE EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1742:1: ruleSPINDOUBLE EOF
            {
             before(grammarAccess.getSPINDOUBLERule()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_entryRuleSPINDOUBLE3661);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getSPINDOUBLERule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINDOUBLE3668); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINDOUBLE"


    // $ANTLR start "ruleSPINDOUBLE"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1749:1: ruleSPINDOUBLE : ( ( rule__SPINDOUBLE__Group__0 ) ) ;
    public final void ruleSPINDOUBLE() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1753:2: ( ( ( rule__SPINDOUBLE__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1754:1: ( ( rule__SPINDOUBLE__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1754:1: ( ( rule__SPINDOUBLE__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1755:1: ( rule__SPINDOUBLE__Group__0 )
            {
             before(grammarAccess.getSPINDOUBLEAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1756:1: ( rule__SPINDOUBLE__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1756:2: rule__SPINDOUBLE__Group__0
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__0_in_ruleSPINDOUBLE3694);
            rule__SPINDOUBLE__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINDOUBLEAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINDOUBLE"


    // $ANTLR start "entryRuleSPINREGISTER"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1768:1: entryRuleSPINREGISTER : ruleSPINREGISTER EOF ;
    public final void entryRuleSPINREGISTER() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1769:1: ( ruleSPINREGISTER EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1770:1: ruleSPINREGISTER EOF
            {
             before(grammarAccess.getSPINREGISTERRule()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_entryRuleSPINREGISTER3721);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getSPINREGISTERRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINREGISTER3728); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINREGISTER"


    // $ANTLR start "ruleSPINREGISTER"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1777:1: ruleSPINREGISTER : ( ( rule__SPINREGISTER__Alternatives ) ) ;
    public final void ruleSPINREGISTER() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1781:2: ( ( ( rule__SPINREGISTER__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1782:1: ( ( rule__SPINREGISTER__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1782:1: ( ( rule__SPINREGISTER__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1783:1: ( rule__SPINREGISTER__Alternatives )
            {
             before(grammarAccess.getSPINREGISTERAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1784:1: ( rule__SPINREGISTER__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1784:2: rule__SPINREGISTER__Alternatives
            {
            pushFollow(FOLLOW_rule__SPINREGISTER__Alternatives_in_ruleSPINREGISTER3754);
            rule__SPINREGISTER__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSPINREGISTERAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINREGISTER"


    // $ANTLR start "entryRuleSPINCHOREGFLAGS"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1796:1: entryRuleSPINCHOREGFLAGS : ruleSPINCHOREGFLAGS EOF ;
    public final void entryRuleSPINCHOREGFLAGS() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1797:1: ( ruleSPINCHOREGFLAGS EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1798:1: ruleSPINCHOREGFLAGS EOF
            {
             before(grammarAccess.getSPINCHOREGFLAGSRule()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_entryRuleSPINCHOREGFLAGS3781);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getSPINCHOREGFLAGSRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINCHOREGFLAGS3788); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINCHOREGFLAGS"


    // $ANTLR start "ruleSPINCHOREGFLAGS"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1805:1: ruleSPINCHOREGFLAGS : ( ( rule__SPINCHOREGFLAGS__Alternatives ) ) ;
    public final void ruleSPINCHOREGFLAGS() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1809:2: ( ( ( rule__SPINCHOREGFLAGS__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1810:1: ( ( rule__SPINCHOREGFLAGS__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1810:1: ( ( rule__SPINCHOREGFLAGS__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1811:1: ( rule__SPINCHOREGFLAGS__Alternatives )
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1812:1: ( rule__SPINCHOREGFLAGS__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1812:2: rule__SPINCHOREGFLAGS__Alternatives
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Alternatives_in_ruleSPINCHOREGFLAGS3814);
            rule__SPINCHOREGFLAGS__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINCHOREGFLAGS"


    // $ANTLR start "entryRuleSPINMEM"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1824:1: entryRuleSPINMEM : ruleSPINMEM EOF ;
    public final void entryRuleSPINMEM() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1825:1: ( ruleSPINMEM EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1826:1: ruleSPINMEM EOF
            {
             before(grammarAccess.getSPINMEMRule()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_entryRuleSPINMEM3841);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getSPINMEMRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINMEM3848); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINMEM"


    // $ANTLR start "ruleSPINMEM"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1833:1: ruleSPINMEM : ( ( rule__SPINMEM__Group__0 ) ) ;
    public final void ruleSPINMEM() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1837:2: ( ( ( rule__SPINMEM__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1838:1: ( ( rule__SPINMEM__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1838:1: ( ( rule__SPINMEM__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1839:1: ( rule__SPINMEM__Group__0 )
            {
             before(grammarAccess.getSPINMEMAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1840:1: ( rule__SPINMEM__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1840:2: rule__SPINMEM__Group__0
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__0_in_ruleSPINMEM3874);
            rule__SPINMEM__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINMEMAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINMEM"


    // $ANTLR start "entryRuleSPINBUF"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1852:1: entryRuleSPINBUF : ruleSPINBUF EOF ;
    public final void entryRuleSPINBUF() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1853:1: ( ruleSPINBUF EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1854:1: ruleSPINBUF EOF
            {
             before(grammarAccess.getSPINBUFRule()); 
            pushFollow(FOLLOW_ruleSPINBUF_in_entryRuleSPINBUF3901);
            ruleSPINBUF();

            state._fsp--;

             after(grammarAccess.getSPINBUFRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINBUF3908); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINBUF"


    // $ANTLR start "ruleSPINBUF"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1861:1: ruleSPINBUF : ( ( rule__SPINBUF__Group__0 ) ) ;
    public final void ruleSPINBUF() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1865:2: ( ( ( rule__SPINBUF__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1866:1: ( ( rule__SPINBUF__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1866:1: ( ( rule__SPINBUF__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1867:1: ( rule__SPINBUF__Group__0 )
            {
             before(grammarAccess.getSPINBUFAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1868:1: ( rule__SPINBUF__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1868:2: rule__SPINBUF__Group__0
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__0_in_ruleSPINBUF3934);
            rule__SPINBUF__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINBUFAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINBUF"


    // $ANTLR start "entryRuleBINARY24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1880:1: entryRuleBINARY24 : ruleBINARY24 EOF ;
    public final void entryRuleBINARY24() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1881:1: ( ruleBINARY24 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1882:1: ruleBINARY24 EOF
            {
             before(grammarAccess.getBINARY24Rule()); 
            pushFollow(FOLLOW_ruleBINARY24_in_entryRuleBINARY243961);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getBINARY24Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBINARY243968); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBINARY24"


    // $ANTLR start "ruleBINARY24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1889:1: ruleBINARY24 : ( ( rule__BINARY24__Alternatives ) ) ;
    public final void ruleBINARY24() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1893:2: ( ( ( rule__BINARY24__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1894:1: ( ( rule__BINARY24__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1894:1: ( ( rule__BINARY24__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1895:1: ( rule__BINARY24__Alternatives )
            {
             before(grammarAccess.getBINARY24Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1896:1: ( rule__BINARY24__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1896:2: rule__BINARY24__Alternatives
            {
            pushFollow(FOLLOW_rule__BINARY24__Alternatives_in_ruleBINARY243994);
            rule__BINARY24__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBINARY24Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBINARY24"


    // $ANTLR start "rule__Pin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1908:1: rule__Pin__Alternatives : ( ( ruleInputPin ) | ( ruleOutputPin ) );
    public final void rule__Pin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1912:1: ( ( ruleInputPin ) | ( ruleOutputPin ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==17||LA1_0==19) ) {
                alt1=1;
            }
            else if ( (LA1_0==18||LA1_0==20) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1913:1: ( ruleInputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1913:1: ( ruleInputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1914:1: ruleInputPin
                    {
                     before(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleInputPin_in_rule__Pin__Alternatives4030);
                    ruleInputPin();

                    state._fsp--;

                     after(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1919:6: ( ruleOutputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1919:6: ( ruleOutputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1920:1: ruleOutputPin
                    {
                     before(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleOutputPin_in_rule__Pin__Alternatives4047);
                    ruleOutputPin();

                    state._fsp--;

                     after(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pin__Alternatives"


    // $ANTLR start "rule__InputPin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1930:1: rule__InputPin__Alternatives : ( ( ruleAudioInput ) | ( ruleControlInput ) );
    public final void rule__InputPin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1934:1: ( ( ruleAudioInput ) | ( ruleControlInput ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==17) ) {
                alt2=1;
            }
            else if ( (LA2_0==19) ) {
                alt2=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1935:1: ( ruleAudioInput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1935:1: ( ruleAudioInput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1936:1: ruleAudioInput
                    {
                     before(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAudioInput_in_rule__InputPin__Alternatives4079);
                    ruleAudioInput();

                    state._fsp--;

                     after(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1941:6: ( ruleControlInput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1941:6: ( ruleControlInput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1942:1: ruleControlInput
                    {
                     before(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleControlInput_in_rule__InputPin__Alternatives4096);
                    ruleControlInput();

                    state._fsp--;

                     after(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InputPin__Alternatives"


    // $ANTLR start "rule__OutputPin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1952:1: rule__OutputPin__Alternatives : ( ( ruleAudioOutput ) | ( ruleControlOutput ) );
    public final void rule__OutputPin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1956:1: ( ( ruleAudioOutput ) | ( ruleControlOutput ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==18) ) {
                alt3=1;
            }
            else if ( (LA3_0==20) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1957:1: ( ruleAudioOutput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1957:1: ( ruleAudioOutput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1958:1: ruleAudioOutput
                    {
                     before(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAudioOutput_in_rule__OutputPin__Alternatives4128);
                    ruleAudioOutput();

                    state._fsp--;

                     after(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1963:6: ( ruleControlOutput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1963:6: ( ruleControlOutput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1964:1: ruleControlOutput
                    {
                     before(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleControlOutput_in_rule__OutputPin__Alternatives4145);
                    ruleControlOutput();

                    state._fsp--;

                     after(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OutputPin__Alternatives"


    // $ANTLR start "rule__Control__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1974:1: rule__Control__Alternatives : ( ( ruleSlider ) | ( ruleCheckBox ) | ( rulecontrolLabel ) );
    public final void rule__Control__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1978:1: ( ( ruleSlider ) | ( ruleCheckBox ) | ( rulecontrolLabel ) )
            int alt4=3;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt4=1;
                }
                break;
            case 22:
                {
                alt4=2;
                }
                break;
            case 23:
                {
                alt4=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1979:1: ( ruleSlider )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1979:1: ( ruleSlider )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1980:1: ruleSlider
                    {
                     before(grammarAccess.getControlAccess().getSliderParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleSlider_in_rule__Control__Alternatives4177);
                    ruleSlider();

                    state._fsp--;

                     after(grammarAccess.getControlAccess().getSliderParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1985:6: ( ruleCheckBox )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1985:6: ( ruleCheckBox )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1986:1: ruleCheckBox
                    {
                     before(grammarAccess.getControlAccess().getCheckBoxParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleCheckBox_in_rule__Control__Alternatives4194);
                    ruleCheckBox();

                    state._fsp--;

                     after(grammarAccess.getControlAccess().getCheckBoxParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1991:6: ( rulecontrolLabel )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1991:6: ( rulecontrolLabel )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1992:1: rulecontrolLabel
                    {
                     before(grammarAccess.getControlAccess().getControlLabelParserRuleCall_2()); 
                    pushFollow(FOLLOW_rulecontrolLabel_in_rule__Control__Alternatives4211);
                    rulecontrolLabel();

                    state._fsp--;

                     after(grammarAccess.getControlAccess().getControlLabelParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Control__Alternatives"


    // $ANTLR start "rule__SpinElement__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2002:1: rule__SpinElement__Alternatives : ( ( ruleEquate ) | ( ruleMem ) | ( ruleInstruction ) | ( ruleLabel ) | ( ruleComment ) | ( ruleMacro ) | ( ruleOffset ) );
    public final void rule__SpinElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2006:1: ( ( ruleEquate ) | ( ruleMem ) | ( ruleInstruction ) | ( ruleLabel ) | ( ruleComment ) | ( ruleMacro ) | ( ruleOffset ) )
            int alt5=7;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt5=1;
                }
                break;
            case 25:
                {
                alt5=2;
                }
                break;
            case 34:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
                {
                alt5=3;
                }
                break;
            case RULE_ID:
                {
                alt5=4;
                }
                break;
            case RULE_SC_COMMENT:
                {
                alt5=5;
                }
                break;
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
                {
                alt5=6;
                }
                break;
            case 26:
                {
                alt5=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2007:1: ( ruleEquate )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2007:1: ( ruleEquate )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2008:1: ruleEquate
                    {
                     before(grammarAccess.getSpinElementAccess().getEquateParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleEquate_in_rule__SpinElement__Alternatives4243);
                    ruleEquate();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getEquateParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2013:6: ( ruleMem )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2013:6: ( ruleMem )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2014:1: ruleMem
                    {
                     before(grammarAccess.getSpinElementAccess().getMemParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleMem_in_rule__SpinElement__Alternatives4260);
                    ruleMem();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getMemParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2019:6: ( ruleInstruction )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2019:6: ( ruleInstruction )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2020:1: ruleInstruction
                    {
                     before(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleInstruction_in_rule__SpinElement__Alternatives4277);
                    ruleInstruction();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2025:6: ( ruleLabel )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2025:6: ( ruleLabel )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2026:1: ruleLabel
                    {
                     before(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleLabel_in_rule__SpinElement__Alternatives4294);
                    ruleLabel();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2031:6: ( ruleComment )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2031:6: ( ruleComment )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2032:1: ruleComment
                    {
                     before(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleComment_in_rule__SpinElement__Alternatives4311);
                    ruleComment();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2037:6: ( ruleMacro )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2037:6: ( ruleMacro )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2038:1: ruleMacro
                    {
                     before(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleMacro_in_rule__SpinElement__Alternatives4328);
                    ruleMacro();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2043:6: ( ruleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2043:6: ( ruleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2044:1: ruleOffset
                    {
                     before(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleOffset_in_rule__SpinElement__Alternatives4345);
                    ruleOffset();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_6()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinElement__Alternatives"


    // $ANTLR start "rule__Macro__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2054:1: rule__Macro__Alternatives : ( ( ruleIsPinConnected ) | ( ruleIsElse ) | ( ruleIsEndif ) | ( ruleGetInputDefault ) | ( ruleGetDelayScale ) | ( ruleSetOutputPin ) );
    public final void rule__Macro__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2058:1: ( ( ruleIsPinConnected ) | ( ruleIsElse ) | ( ruleIsEndif ) | ( ruleGetInputDefault ) | ( ruleGetDelayScale ) | ( ruleSetOutputPin ) )
            int alt6=6;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt6=1;
                }
                break;
            case 29:
                {
                alt6=2;
                }
                break;
            case 30:
                {
                alt6=3;
                }
                break;
            case 31:
                {
                alt6=4;
                }
                break;
            case 32:
                {
                alt6=5;
                }
                break;
            case 33:
                {
                alt6=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2059:1: ( ruleIsPinConnected )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2059:1: ( ruleIsPinConnected )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2060:1: ruleIsPinConnected
                    {
                     before(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleIsPinConnected_in_rule__Macro__Alternatives4377);
                    ruleIsPinConnected();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2065:6: ( ruleIsElse )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2065:6: ( ruleIsElse )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2066:1: ruleIsElse
                    {
                     before(grammarAccess.getMacroAccess().getIsElseParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleIsElse_in_rule__Macro__Alternatives4394);
                    ruleIsElse();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsElseParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2071:6: ( ruleIsEndif )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2071:6: ( ruleIsEndif )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2072:1: ruleIsEndif
                    {
                     before(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleIsEndif_in_rule__Macro__Alternatives4411);
                    ruleIsEndif();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2077:6: ( ruleGetInputDefault )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2077:6: ( ruleGetInputDefault )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2078:1: ruleGetInputDefault
                    {
                     before(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleGetInputDefault_in_rule__Macro__Alternatives4428);
                    ruleGetInputDefault();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2083:6: ( ruleGetDelayScale )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2083:6: ( ruleGetDelayScale )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2084:1: ruleGetDelayScale
                    {
                     before(grammarAccess.getMacroAccess().getGetDelayScaleParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleGetDelayScale_in_rule__Macro__Alternatives4445);
                    ruleGetDelayScale();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetDelayScaleParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2089:6: ( ruleSetOutputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2089:6: ( ruleSetOutputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2090:1: ruleSetOutputPin
                    {
                     before(grammarAccess.getMacroAccess().getSetOutputPinParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleSetOutputPin_in_rule__Macro__Alternatives4462);
                    ruleSetOutputPin();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getSetOutputPinParserRuleCall_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Macro__Alternatives"


    // $ANTLR start "rule__Instruction__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2100:1: rule__Instruction__Alternatives : ( ( ruleInst_B15_S1_9 ) | ( ruleInst_B6_S1_14 ) | ( ruleInst_S1_14_S1_10 ) | ( ruleInst_B6 ) | ( ruleInst_B24 ) | ( ruleSkip ) | ( ruleJam ) | ( ruleInst_X0 ) | ( ruleLoadSinLFO ) | ( ruleLoadRampLFO ) | ( ruleChorusReadDelay ) | ( ruleChorusReadValue ) | ( ruleChorusScaleOffset ) | ( ruleLog ) | ( ruleReadDelayPointer ) );
    public final void rule__Instruction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2104:1: ( ( ruleInst_B15_S1_9 ) | ( ruleInst_B6_S1_14 ) | ( ruleInst_S1_14_S1_10 ) | ( ruleInst_B6 ) | ( ruleInst_B24 ) | ( ruleSkip ) | ( ruleJam ) | ( ruleInst_X0 ) | ( ruleLoadSinLFO ) | ( ruleLoadRampLFO ) | ( ruleChorusReadDelay ) | ( ruleChorusReadValue ) | ( ruleChorusScaleOffset ) | ( ruleLog ) | ( ruleReadDelayPointer ) )
            int alt7=15;
            switch ( input.LA(1) ) {
            case 46:
            case 47:
            case 48:
                {
                alt7=1;
                }
                break;
            case 34:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
                {
                alt7=2;
                }
                break;
            case 43:
            case 45:
                {
                alt7=3;
                }
                break;
            case 41:
            case 42:
                {
                alt7=4;
                }
                break;
            case 55:
            case 56:
            case 57:
                {
                alt7=5;
                }
                break;
            case 62:
                {
                alt7=6;
                }
                break;
            case 58:
                {
                alt7=7;
                }
                break;
            case 59:
            case 60:
            case 61:
                {
                alt7=8;
                }
                break;
            case 49:
                {
                alt7=9;
                }
                break;
            case 50:
                {
                alt7=10;
                }
                break;
            case 51:
                {
                alt7=11;
                }
                break;
            case 52:
                {
                alt7=12;
                }
                break;
            case 53:
                {
                alt7=13;
                }
                break;
            case 44:
                {
                alt7=14;
                }
                break;
            case 54:
                {
                alt7=15;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2105:1: ( ruleInst_B15_S1_9 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2105:1: ( ruleInst_B15_S1_9 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2106:1: ruleInst_B15_S1_9
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleInst_B15_S1_9_in_rule__Instruction__Alternatives4494);
                    ruleInst_B15_S1_9();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2111:6: ( ruleInst_B6_S1_14 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2111:6: ( ruleInst_B6_S1_14 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2112:1: ruleInst_B6_S1_14
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleInst_B6_S1_14_in_rule__Instruction__Alternatives4511);
                    ruleInst_B6_S1_14();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2117:6: ( ruleInst_S1_14_S1_10 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2117:6: ( ruleInst_S1_14_S1_10 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2118:1: ruleInst_S1_14_S1_10
                    {
                     before(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleInst_S1_14_S1_10_in_rule__Instruction__Alternatives4528);
                    ruleInst_S1_14_S1_10();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2123:6: ( ruleInst_B6 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2123:6: ( ruleInst_B6 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2124:1: ruleInst_B6
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleInst_B6_in_rule__Instruction__Alternatives4545);
                    ruleInst_B6();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2129:6: ( ruleInst_B24 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2129:6: ( ruleInst_B24 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2130:1: ruleInst_B24
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleInst_B24_in_rule__Instruction__Alternatives4562);
                    ruleInst_B24();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2135:6: ( ruleSkip )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2135:6: ( ruleSkip )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2136:1: ruleSkip
                    {
                     before(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleSkip_in_rule__Instruction__Alternatives4579);
                    ruleSkip();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2141:6: ( ruleJam )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2141:6: ( ruleJam )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2142:1: ruleJam
                    {
                     before(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleJam_in_rule__Instruction__Alternatives4596);
                    ruleJam();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); 

                    }


                    }
                    break;
                case 8 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2147:6: ( ruleInst_X0 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2147:6: ( ruleInst_X0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2148:1: ruleInst_X0
                    {
                     before(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); 
                    pushFollow(FOLLOW_ruleInst_X0_in_rule__Instruction__Alternatives4613);
                    ruleInst_X0();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); 

                    }


                    }
                    break;
                case 9 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2153:6: ( ruleLoadSinLFO )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2153:6: ( ruleLoadSinLFO )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2154:1: ruleLoadSinLFO
                    {
                     before(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); 
                    pushFollow(FOLLOW_ruleLoadSinLFO_in_rule__Instruction__Alternatives4630);
                    ruleLoadSinLFO();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); 

                    }


                    }
                    break;
                case 10 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2159:6: ( ruleLoadRampLFO )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2159:6: ( ruleLoadRampLFO )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2160:1: ruleLoadRampLFO
                    {
                     before(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); 
                    pushFollow(FOLLOW_ruleLoadRampLFO_in_rule__Instruction__Alternatives4647);
                    ruleLoadRampLFO();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); 

                    }


                    }
                    break;
                case 11 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2165:6: ( ruleChorusReadDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2165:6: ( ruleChorusReadDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2166:1: ruleChorusReadDelay
                    {
                     before(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); 
                    pushFollow(FOLLOW_ruleChorusReadDelay_in_rule__Instruction__Alternatives4664);
                    ruleChorusReadDelay();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); 

                    }


                    }
                    break;
                case 12 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2171:6: ( ruleChorusReadValue )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2171:6: ( ruleChorusReadValue )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2172:1: ruleChorusReadValue
                    {
                     before(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); 
                    pushFollow(FOLLOW_ruleChorusReadValue_in_rule__Instruction__Alternatives4681);
                    ruleChorusReadValue();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); 

                    }


                    }
                    break;
                case 13 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2177:6: ( ruleChorusScaleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2177:6: ( ruleChorusScaleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2178:1: ruleChorusScaleOffset
                    {
                     before(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); 
                    pushFollow(FOLLOW_ruleChorusScaleOffset_in_rule__Instruction__Alternatives4698);
                    ruleChorusScaleOffset();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); 

                    }


                    }
                    break;
                case 14 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2183:6: ( ruleLog )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2183:6: ( ruleLog )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2184:1: ruleLog
                    {
                     before(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); 
                    pushFollow(FOLLOW_ruleLog_in_rule__Instruction__Alternatives4715);
                    ruleLog();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); 

                    }


                    }
                    break;
                case 15 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2189:6: ( ruleReadDelayPointer )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2189:6: ( ruleReadDelayPointer )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2190:1: ruleReadDelayPointer
                    {
                     before(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); 
                    pushFollow(FOLLOW_ruleReadDelayPointer_in_rule__Instruction__Alternatives4732);
                    ruleReadDelayPointer();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Alternatives"


    // $ANTLR start "rule__Inst_B6_S1_14__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2200:1: rule__Inst_B6_S1_14__Alternatives : ( ( ruleReadRegister ) | ( ruleWriteRegister ) | ( ruleReadRegisterFilter ) | ( ruleMaxx ) | ( ruleWriteRegisterHighshelf ) | ( ruleWriteRegisterLowshelf ) );
    public final void rule__Inst_B6_S1_14__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2204:1: ( ( ruleReadRegister ) | ( ruleWriteRegister ) | ( ruleReadRegisterFilter ) | ( ruleMaxx ) | ( ruleWriteRegisterHighshelf ) | ( ruleWriteRegisterLowshelf ) )
            int alt8=6;
            switch ( input.LA(1) ) {
            case 34:
                {
                alt8=1;
                }
                break;
            case 38:
                {
                alt8=2;
                }
                break;
            case 40:
                {
                alt8=3;
                }
                break;
            case 39:
                {
                alt8=4;
                }
                break;
            case 37:
                {
                alt8=5;
                }
                break;
            case 36:
                {
                alt8=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2205:1: ( ruleReadRegister )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2205:1: ( ruleReadRegister )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2206:1: ruleReadRegister
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleReadRegister_in_rule__Inst_B6_S1_14__Alternatives4764);
                    ruleReadRegister();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2211:6: ( ruleWriteRegister )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2211:6: ( ruleWriteRegister )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2212:1: ruleWriteRegister
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleWriteRegister_in_rule__Inst_B6_S1_14__Alternatives4781);
                    ruleWriteRegister();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2217:6: ( ruleReadRegisterFilter )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2217:6: ( ruleReadRegisterFilter )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2218:1: ruleReadRegisterFilter
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleReadRegisterFilter_in_rule__Inst_B6_S1_14__Alternatives4798);
                    ruleReadRegisterFilter();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2223:6: ( ruleMaxx )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2223:6: ( ruleMaxx )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2224:1: ruleMaxx
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleMaxx_in_rule__Inst_B6_S1_14__Alternatives4815);
                    ruleMaxx();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2229:6: ( ruleWriteRegisterHighshelf )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2229:6: ( ruleWriteRegisterHighshelf )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2230:1: ruleWriteRegisterHighshelf
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleWriteRegisterHighshelf_in_rule__Inst_B6_S1_14__Alternatives4832);
                    ruleWriteRegisterHighshelf();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2235:6: ( ruleWriteRegisterLowshelf )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2235:6: ( ruleWriteRegisterLowshelf )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2236:1: ruleWriteRegisterLowshelf
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleWriteRegisterLowshelf_in_rule__Inst_B6_S1_14__Alternatives4849);
                    ruleWriteRegisterLowshelf();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B6_S1_14__Alternatives"


    // $ANTLR start "rule__Inst_B15_S1_9__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2246:1: rule__Inst_B15_S1_9__Alternatives : ( ( ruleReadDelay ) | ( ruleWriteDelay ) | ( ruleWriteAllpass ) );
    public final void rule__Inst_B15_S1_9__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2250:1: ( ( ruleReadDelay ) | ( ruleWriteDelay ) | ( ruleWriteAllpass ) )
            int alt9=3;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt9=1;
                }
                break;
            case 46:
                {
                alt9=2;
                }
                break;
            case 47:
                {
                alt9=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2251:1: ( ruleReadDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2251:1: ( ruleReadDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2252:1: ruleReadDelay
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleReadDelay_in_rule__Inst_B15_S1_9__Alternatives4881);
                    ruleReadDelay();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2257:6: ( ruleWriteDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2257:6: ( ruleWriteDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2258:1: ruleWriteDelay
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleWriteDelay_in_rule__Inst_B15_S1_9__Alternatives4898);
                    ruleWriteDelay();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2263:6: ( ruleWriteAllpass )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2263:6: ( ruleWriteAllpass )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2264:1: ruleWriteAllpass
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleWriteAllpass_in_rule__Inst_B15_S1_9__Alternatives4915);
                    ruleWriteAllpass();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B15_S1_9__Alternatives"


    // $ANTLR start "rule__Inst_B6__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2274:1: rule__Inst_B6__Alternatives : ( ( ruleMulx ) | ( ruleLdax ) );
    public final void rule__Inst_B6__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2278:1: ( ( ruleMulx ) | ( ruleLdax ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==41) ) {
                alt10=1;
            }
            else if ( (LA10_0==42) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2279:1: ( ruleMulx )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2279:1: ( ruleMulx )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2280:1: ruleMulx
                    {
                     before(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleMulx_in_rule__Inst_B6__Alternatives4947);
                    ruleMulx();

                    state._fsp--;

                     after(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2285:6: ( ruleLdax )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2285:6: ( ruleLdax )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2286:1: ruleLdax
                    {
                     before(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleLdax_in_rule__Inst_B6__Alternatives4964);
                    ruleLdax();

                    state._fsp--;

                     after(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B6__Alternatives"


    // $ANTLR start "rule__Inst_B24__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2296:1: rule__Inst_B24__Alternatives : ( ( ruleAnd ) | ( ruleOr ) | ( ruleXor ) );
    public final void rule__Inst_B24__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2300:1: ( ( ruleAnd ) | ( ruleOr ) | ( ruleXor ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case 55:
                {
                alt11=1;
                }
                break;
            case 56:
                {
                alt11=2;
                }
                break;
            case 57:
                {
                alt11=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2301:1: ( ruleAnd )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2301:1: ( ruleAnd )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2302:1: ruleAnd
                    {
                     before(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAnd_in_rule__Inst_B24__Alternatives4996);
                    ruleAnd();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2307:6: ( ruleOr )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2307:6: ( ruleOr )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2308:1: ruleOr
                    {
                     before(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleOr_in_rule__Inst_B24__Alternatives5013);
                    ruleOr();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2313:6: ( ruleXor )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2313:6: ( ruleXor )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2314:1: ruleXor
                    {
                     before(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleXor_in_rule__Inst_B24__Alternatives5030);
                    ruleXor();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B24__Alternatives"


    // $ANTLR start "rule__Inst_X0__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2324:1: rule__Inst_X0__Alternatives : ( ( ruleClr ) | ( ruleNot ) | ( ruleAbsa ) );
    public final void rule__Inst_X0__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2328:1: ( ( ruleClr ) | ( ruleNot ) | ( ruleAbsa ) )
            int alt12=3;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt12=1;
                }
                break;
            case 60:
                {
                alt12=2;
                }
                break;
            case 61:
                {
                alt12=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2329:1: ( ruleClr )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2329:1: ( ruleClr )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2330:1: ruleClr
                    {
                     before(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleClr_in_rule__Inst_X0__Alternatives5062);
                    ruleClr();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2335:6: ( ruleNot )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2335:6: ( ruleNot )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2336:1: ruleNot
                    {
                     before(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleNot_in_rule__Inst_X0__Alternatives5079);
                    ruleNot();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2341:6: ( ruleAbsa )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2341:6: ( ruleAbsa )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2342:1: ruleAbsa
                    {
                     before(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleAbsa_in_rule__Inst_X0__Alternatives5096);
                    ruleAbsa();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_X0__Alternatives"


    // $ANTLR start "rule__Inst_S1_14_S1_10__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2352:1: rule__Inst_S1_14_S1_10__Alternatives : ( ( ruleExp ) | ( ruleScaleOffset ) );
    public final void rule__Inst_S1_14_S1_10__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2356:1: ( ( ruleExp ) | ( ruleScaleOffset ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==43) ) {
                alt13=1;
            }
            else if ( (LA13_0==45) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2357:1: ( ruleExp )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2357:1: ( ruleExp )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2358:1: ruleExp
                    {
                     before(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleExp_in_rule__Inst_S1_14_S1_10__Alternatives5128);
                    ruleExp();

                    state._fsp--;

                     after(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2363:6: ( ruleScaleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2363:6: ( ruleScaleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2364:1: ruleScaleOffset
                    {
                     before(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleScaleOffset_in_rule__Inst_S1_14_S1_10__Alternatives5145);
                    ruleScaleOffset();

                    state._fsp--;

                     after(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_S1_14_S1_10__Alternatives"


    // $ANTLR start "rule__SPINDOUBLE__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2374:1: rule__SPINDOUBLE__Alternatives_1 : ( ( RULE_ID ) | ( ( rule__SPINDOUBLE__Group_1_1__0 ) ) );
    public final void rule__SPINDOUBLE__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2378:1: ( ( RULE_ID ) | ( ( rule__SPINDOUBLE__Group_1_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_ID) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_INT) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2379:1: ( RULE_ID )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2379:1: ( RULE_ID )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2380:1: RULE_ID
                    {
                     before(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); 
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINDOUBLE__Alternatives_15177); 
                     after(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2385:6: ( ( rule__SPINDOUBLE__Group_1_1__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2385:6: ( ( rule__SPINDOUBLE__Group_1_1__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2386:1: ( rule__SPINDOUBLE__Group_1_1__0 )
                    {
                     before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2387:1: ( rule__SPINDOUBLE__Group_1_1__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2387:2: rule__SPINDOUBLE__Group_1_1__0
                    {
                    pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__0_in_rule__SPINDOUBLE__Alternatives_15194);
                    rule__SPINDOUBLE__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Alternatives_1"


    // $ANTLR start "rule__SPINREGISTER__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2396:1: rule__SPINREGISTER__Alternatives : ( ( RULE_ID ) | ( RULE_INT ) );
    public final void rule__SPINREGISTER__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2400:1: ( ( RULE_ID ) | ( RULE_INT ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_ID) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_INT) ) {
                alt15=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2401:1: ( RULE_ID )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2401:1: ( RULE_ID )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2402:1: RULE_ID
                    {
                     before(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); 
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINREGISTER__Alternatives5227); 
                     after(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2407:6: ( RULE_INT )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2407:6: ( RULE_INT )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2408:1: RULE_INT
                    {
                     before(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); 
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINREGISTER__Alternatives5244); 
                     after(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINREGISTER__Alternatives"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2418:1: rule__SPINCHOREGFLAGS__Alternatives : ( ( RULE_INT ) | ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? ) );
    public final void rule__SPINCHOREGFLAGS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2422:1: ( ( RULE_INT ) | ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_INT) ) {
                alt17=1;
            }
            else if ( (LA17_0==EOF||LA17_0==RULE_ID||LA17_0==35) ) {
                alt17=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2423:1: ( RULE_INT )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2423:1: ( RULE_INT )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2424:1: RULE_INT
                    {
                     before(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); 
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINCHOREGFLAGS__Alternatives5276); 
                     after(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2429:6: ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2429:6: ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2430:1: ( rule__SPINCHOREGFLAGS__Group_1__0 )?
                    {
                     before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2431:1: ( rule__SPINCHOREGFLAGS__Group_1__0 )?
                    int alt16=2;
                    int LA16_0 = input.LA(1);

                    if ( (LA16_0==RULE_ID) ) {
                        alt16=1;
                    }
                    switch (alt16) {
                        case 1 :
                            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2431:2: rule__SPINCHOREGFLAGS__Group_1__0
                            {
                            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0_in_rule__SPINCHOREGFLAGS__Alternatives5293);
                            rule__SPINCHOREGFLAGS__Group_1__0();

                            state._fsp--;


                            }
                            break;

                    }

                     after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Alternatives"


    // $ANTLR start "rule__SPINMEM__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2440:1: rule__SPINMEM__Alternatives_1 : ( ( ( rule__SPINMEM__ValueAssignment_1_0 ) ) | ( ( rule__SPINMEM__OffsetAssignment_1_1 ) ) );
    public final void rule__SPINMEM__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2444:1: ( ( ( rule__SPINMEM__ValueAssignment_1_0 ) ) | ( ( rule__SPINMEM__OffsetAssignment_1_1 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_INT) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_ID) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2445:1: ( ( rule__SPINMEM__ValueAssignment_1_0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2445:1: ( ( rule__SPINMEM__ValueAssignment_1_0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2446:1: ( rule__SPINMEM__ValueAssignment_1_0 )
                    {
                     before(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2447:1: ( rule__SPINMEM__ValueAssignment_1_0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2447:2: rule__SPINMEM__ValueAssignment_1_0
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__ValueAssignment_1_0_in_rule__SPINMEM__Alternatives_15327);
                    rule__SPINMEM__ValueAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2451:6: ( ( rule__SPINMEM__OffsetAssignment_1_1 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2451:6: ( ( rule__SPINMEM__OffsetAssignment_1_1 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2452:1: ( rule__SPINMEM__OffsetAssignment_1_1 )
                    {
                     before(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2453:1: ( rule__SPINMEM__OffsetAssignment_1_1 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2453:2: rule__SPINMEM__OffsetAssignment_1_1
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__OffsetAssignment_1_1_in_rule__SPINMEM__Alternatives_15345);
                    rule__SPINMEM__OffsetAssignment_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Alternatives_1"


    // $ANTLR start "rule__SPINBUF__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2462:1: rule__SPINBUF__Alternatives_1 : ( ( '#' ) | ( '^' ) );
    public final void rule__SPINBUF__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2466:1: ( ( '#' ) | ( '^' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==12) ) {
                alt19=1;
            }
            else if ( (LA19_0==13) ) {
                alt19=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2467:1: ( '#' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2467:1: ( '#' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2468:1: '#'
                    {
                     before(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); 
                    match(input,12,FOLLOW_12_in_rule__SPINBUF__Alternatives_15379); 
                     after(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2475:6: ( '^' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2475:6: ( '^' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2476:1: '^'
                    {
                     before(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); 
                    match(input,13,FOLLOW_13_in_rule__SPINBUF__Alternatives_15399); 
                     after(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Alternatives_1"


    // $ANTLR start "rule__SPINBUF__Alternatives_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2488:1: rule__SPINBUF__Alternatives_2 : ( ( '+' ) | ( '-' ) );
    public final void rule__SPINBUF__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2492:1: ( ( '+' ) | ( '-' ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==14) ) {
                alt20=1;
            }
            else if ( (LA20_0==15) ) {
                alt20=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2493:1: ( '+' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2493:1: ( '+' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2494:1: '+'
                    {
                     before(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); 
                    match(input,14,FOLLOW_14_in_rule__SPINBUF__Alternatives_25434); 
                     after(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2501:6: ( '-' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2501:6: ( '-' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2502:1: '-'
                    {
                     before(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); 
                    match(input,15,FOLLOW_15_in_rule__SPINBUF__Alternatives_25454); 
                     after(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Alternatives_2"


    // $ANTLR start "rule__BINARY24__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2514:1: rule__BINARY24__Alternatives : ( ( ( rule__BINARY24__Group_0__0 ) ) | ( ( rule__BINARY24__Group_1__0 ) ) );
    public final void rule__BINARY24__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2518:1: ( ( ( rule__BINARY24__Group_0__0 ) ) | ( ( rule__BINARY24__Group_1__0 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==65) ) {
                alt21=1;
            }
            else if ( (LA21_0==66) ) {
                alt21=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2519:1: ( ( rule__BINARY24__Group_0__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2519:1: ( ( rule__BINARY24__Group_0__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2520:1: ( rule__BINARY24__Group_0__0 )
                    {
                     before(grammarAccess.getBINARY24Access().getGroup_0()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2521:1: ( rule__BINARY24__Group_0__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2521:2: rule__BINARY24__Group_0__0
                    {
                    pushFollow(FOLLOW_rule__BINARY24__Group_0__0_in_rule__BINARY24__Alternatives5488);
                    rule__BINARY24__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBINARY24Access().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2525:6: ( ( rule__BINARY24__Group_1__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2525:6: ( ( rule__BINARY24__Group_1__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2526:1: ( rule__BINARY24__Group_1__0 )
                    {
                     before(grammarAccess.getBINARY24Access().getGroup_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2527:1: ( rule__BINARY24__Group_1__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2527:2: rule__BINARY24__Group_1__0
                    {
                    pushFollow(FOLLOW_rule__BINARY24__Group_1__0_in_rule__BINARY24__Alternatives5506);
                    rule__BINARY24__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBINARY24Access().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Alternatives"


    // $ANTLR start "rule__Program__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2538:1: rule__Program__Group__0 : rule__Program__Group__0__Impl rule__Program__Group__1 ;
    public final void rule__Program__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2542:1: ( rule__Program__Group__0__Impl rule__Program__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2543:2: rule__Program__Group__0__Impl rule__Program__Group__1
            {
            pushFollow(FOLLOW_rule__Program__Group__0__Impl_in_rule__Program__Group__05537);
            rule__Program__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__1_in_rule__Program__Group__05540);
            rule__Program__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0"


    // $ANTLR start "rule__Program__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2550:1: rule__Program__Group__0__Impl : ( '@name' ) ;
    public final void rule__Program__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2554:1: ( ( '@name' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2555:1: ( '@name' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2555:1: ( '@name' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2556:1: '@name'
            {
             before(grammarAccess.getProgramAccess().getNameKeyword_0()); 
            match(input,16,FOLLOW_16_in_rule__Program__Group__0__Impl5568); 
             after(grammarAccess.getProgramAccess().getNameKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0__Impl"


    // $ANTLR start "rule__Program__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2569:1: rule__Program__Group__1 : rule__Program__Group__1__Impl rule__Program__Group__2 ;
    public final void rule__Program__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2573:1: ( rule__Program__Group__1__Impl rule__Program__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2574:2: rule__Program__Group__1__Impl rule__Program__Group__2
            {
            pushFollow(FOLLOW_rule__Program__Group__1__Impl_in_rule__Program__Group__15599);
            rule__Program__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__2_in_rule__Program__Group__15602);
            rule__Program__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1"


    // $ANTLR start "rule__Program__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2581:1: rule__Program__Group__1__Impl : ( ( rule__Program__NameAssignment_1 ) ) ;
    public final void rule__Program__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2585:1: ( ( ( rule__Program__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2586:1: ( ( rule__Program__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2586:1: ( ( rule__Program__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2587:1: ( rule__Program__NameAssignment_1 )
            {
             before(grammarAccess.getProgramAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2588:1: ( rule__Program__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2588:2: rule__Program__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__Program__NameAssignment_1_in_rule__Program__Group__1__Impl5629);
            rule__Program__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1__Impl"


    // $ANTLR start "rule__Program__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2598:1: rule__Program__Group__2 : rule__Program__Group__2__Impl rule__Program__Group__3 ;
    public final void rule__Program__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2602:1: ( rule__Program__Group__2__Impl rule__Program__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2603:2: rule__Program__Group__2__Impl rule__Program__Group__3
            {
            pushFollow(FOLLOW_rule__Program__Group__2__Impl_in_rule__Program__Group__25659);
            rule__Program__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__3_in_rule__Program__Group__25662);
            rule__Program__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2"


    // $ANTLR start "rule__Program__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2610:1: rule__Program__Group__2__Impl : ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) ) ;
    public final void rule__Program__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2614:1: ( ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2615:1: ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2615:1: ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2616:1: ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2616:1: ( ( rule__Program__PinsAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2617:1: ( rule__Program__PinsAssignment_2 )
            {
             before(grammarAccess.getProgramAccess().getPinsAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2618:1: ( rule__Program__PinsAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2618:2: rule__Program__PinsAssignment_2
            {
            pushFollow(FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5691);
            rule__Program__PinsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getPinsAssignment_2()); 

            }

            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2621:1: ( ( rule__Program__PinsAssignment_2 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2622:1: ( rule__Program__PinsAssignment_2 )*
            {
             before(grammarAccess.getProgramAccess().getPinsAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2623:1: ( rule__Program__PinsAssignment_2 )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( ((LA22_0>=17 && LA22_0<=20)) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2623:2: rule__Program__PinsAssignment_2
            	    {
            	    pushFollow(FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5703);
            	    rule__Program__PinsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getPinsAssignment_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2__Impl"


    // $ANTLR start "rule__Program__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2634:1: rule__Program__Group__3 : rule__Program__Group__3__Impl rule__Program__Group__4 ;
    public final void rule__Program__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2638:1: ( rule__Program__Group__3__Impl rule__Program__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2639:2: rule__Program__Group__3__Impl rule__Program__Group__4
            {
            pushFollow(FOLLOW_rule__Program__Group__3__Impl_in_rule__Program__Group__35736);
            rule__Program__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__4_in_rule__Program__Group__35739);
            rule__Program__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3"


    // $ANTLR start "rule__Program__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2646:1: rule__Program__Group__3__Impl : ( ( rule__Program__ControlsAssignment_3 )* ) ;
    public final void rule__Program__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2650:1: ( ( ( rule__Program__ControlsAssignment_3 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2651:1: ( ( rule__Program__ControlsAssignment_3 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2651:1: ( ( rule__Program__ControlsAssignment_3 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2652:1: ( rule__Program__ControlsAssignment_3 )*
            {
             before(grammarAccess.getProgramAccess().getControlsAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2653:1: ( rule__Program__ControlsAssignment_3 )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( ((LA23_0>=21 && LA23_0<=23)) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2653:2: rule__Program__ControlsAssignment_3
            	    {
            	    pushFollow(FOLLOW_rule__Program__ControlsAssignment_3_in_rule__Program__Group__3__Impl5766);
            	    rule__Program__ControlsAssignment_3();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getControlsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3__Impl"


    // $ANTLR start "rule__Program__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2663:1: rule__Program__Group__4 : rule__Program__Group__4__Impl ;
    public final void rule__Program__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2667:1: ( rule__Program__Group__4__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2668:2: rule__Program__Group__4__Impl
            {
            pushFollow(FOLLOW_rule__Program__Group__4__Impl_in_rule__Program__Group__45797);
            rule__Program__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4"


    // $ANTLR start "rule__Program__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2674:1: rule__Program__Group__4__Impl : ( ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* ) ) ;
    public final void rule__Program__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2678:1: ( ( ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2679:1: ( ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2679:1: ( ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2680:1: ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2680:1: ( ( rule__Program__ElementsAssignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2681:1: ( rule__Program__ElementsAssignment_4 )
            {
             before(grammarAccess.getProgramAccess().getElementsAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2682:1: ( rule__Program__ElementsAssignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2682:2: rule__Program__ElementsAssignment_4
            {
            pushFollow(FOLLOW_rule__Program__ElementsAssignment_4_in_rule__Program__Group__4__Impl5826);
            rule__Program__ElementsAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getElementsAssignment_4()); 

            }

            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2685:1: ( ( rule__Program__ElementsAssignment_4 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2686:1: ( rule__Program__ElementsAssignment_4 )*
            {
             before(grammarAccess.getProgramAccess().getElementsAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2687:1: ( rule__Program__ElementsAssignment_4 )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==RULE_ID||LA24_0==RULE_SC_COMMENT||(LA24_0>=24 && LA24_0<=26)||(LA24_0>=28 && LA24_0<=34)||(LA24_0>=36 && LA24_0<=62)) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2687:2: rule__Program__ElementsAssignment_4
            	    {
            	    pushFollow(FOLLOW_rule__Program__ElementsAssignment_4_in_rule__Program__Group__4__Impl5838);
            	    rule__Program__ElementsAssignment_4();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getElementsAssignment_4()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4__Impl"


    // $ANTLR start "rule__AudioInput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2708:1: rule__AudioInput__Group__0 : rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1 ;
    public final void rule__AudioInput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2712:1: ( rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2713:2: rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__0__Impl_in_rule__AudioInput__Group__05881);
            rule__AudioInput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioInput__Group__1_in_rule__AudioInput__Group__05884);
            rule__AudioInput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__0"


    // $ANTLR start "rule__AudioInput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2720:1: rule__AudioInput__Group__0__Impl : ( '@audioInput' ) ;
    public final void rule__AudioInput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2724:1: ( ( '@audioInput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2725:1: ( '@audioInput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2725:1: ( '@audioInput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2726:1: '@audioInput'
            {
             before(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); 
            match(input,17,FOLLOW_17_in_rule__AudioInput__Group__0__Impl5912); 
             after(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__0__Impl"


    // $ANTLR start "rule__AudioInput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2739:1: rule__AudioInput__Group__1 : rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2 ;
    public final void rule__AudioInput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2743:1: ( rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2744:2: rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__1__Impl_in_rule__AudioInput__Group__15943);
            rule__AudioInput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioInput__Group__2_in_rule__AudioInput__Group__15946);
            rule__AudioInput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__1"


    // $ANTLR start "rule__AudioInput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2751:1: rule__AudioInput__Group__1__Impl : ( ( rule__AudioInput__VarNameAssignment_1 ) ) ;
    public final void rule__AudioInput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2755:1: ( ( ( rule__AudioInput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2756:1: ( ( rule__AudioInput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2756:1: ( ( rule__AudioInput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2757:1: ( rule__AudioInput__VarNameAssignment_1 )
            {
             before(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2758:1: ( rule__AudioInput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2758:2: rule__AudioInput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__AudioInput__VarNameAssignment_1_in_rule__AudioInput__Group__1__Impl5973);
            rule__AudioInput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__1__Impl"


    // $ANTLR start "rule__AudioInput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2768:1: rule__AudioInput__Group__2 : rule__AudioInput__Group__2__Impl ;
    public final void rule__AudioInput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2772:1: ( rule__AudioInput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2773:2: rule__AudioInput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__2__Impl_in_rule__AudioInput__Group__26003);
            rule__AudioInput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__2"


    // $ANTLR start "rule__AudioInput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2779:1: rule__AudioInput__Group__2__Impl : ( ( rule__AudioInput__NameAssignment_2 ) ) ;
    public final void rule__AudioInput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2783:1: ( ( ( rule__AudioInput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2784:1: ( ( rule__AudioInput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2784:1: ( ( rule__AudioInput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2785:1: ( rule__AudioInput__NameAssignment_2 )
            {
             before(grammarAccess.getAudioInputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2786:1: ( rule__AudioInput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2786:2: rule__AudioInput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__AudioInput__NameAssignment_2_in_rule__AudioInput__Group__2__Impl6030);
            rule__AudioInput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__2__Impl"


    // $ANTLR start "rule__AudioOutput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2802:1: rule__AudioOutput__Group__0 : rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1 ;
    public final void rule__AudioOutput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2806:1: ( rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2807:2: rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__0__Impl_in_rule__AudioOutput__Group__06066);
            rule__AudioOutput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioOutput__Group__1_in_rule__AudioOutput__Group__06069);
            rule__AudioOutput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__0"


    // $ANTLR start "rule__AudioOutput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2814:1: rule__AudioOutput__Group__0__Impl : ( '@audioOutput' ) ;
    public final void rule__AudioOutput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2818:1: ( ( '@audioOutput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2819:1: ( '@audioOutput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2819:1: ( '@audioOutput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2820:1: '@audioOutput'
            {
             before(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); 
            match(input,18,FOLLOW_18_in_rule__AudioOutput__Group__0__Impl6097); 
             after(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__0__Impl"


    // $ANTLR start "rule__AudioOutput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2833:1: rule__AudioOutput__Group__1 : rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2 ;
    public final void rule__AudioOutput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2837:1: ( rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2838:2: rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__1__Impl_in_rule__AudioOutput__Group__16128);
            rule__AudioOutput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioOutput__Group__2_in_rule__AudioOutput__Group__16131);
            rule__AudioOutput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__1"


    // $ANTLR start "rule__AudioOutput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2845:1: rule__AudioOutput__Group__1__Impl : ( ( rule__AudioOutput__VarNameAssignment_1 ) ) ;
    public final void rule__AudioOutput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2849:1: ( ( ( rule__AudioOutput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2850:1: ( ( rule__AudioOutput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2850:1: ( ( rule__AudioOutput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2851:1: ( rule__AudioOutput__VarNameAssignment_1 )
            {
             before(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2852:1: ( rule__AudioOutput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2852:2: rule__AudioOutput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__AudioOutput__VarNameAssignment_1_in_rule__AudioOutput__Group__1__Impl6158);
            rule__AudioOutput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__1__Impl"


    // $ANTLR start "rule__AudioOutput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2862:1: rule__AudioOutput__Group__2 : rule__AudioOutput__Group__2__Impl ;
    public final void rule__AudioOutput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2866:1: ( rule__AudioOutput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2867:2: rule__AudioOutput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__2__Impl_in_rule__AudioOutput__Group__26188);
            rule__AudioOutput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__2"


    // $ANTLR start "rule__AudioOutput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2873:1: rule__AudioOutput__Group__2__Impl : ( ( rule__AudioOutput__NameAssignment_2 ) ) ;
    public final void rule__AudioOutput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2877:1: ( ( ( rule__AudioOutput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2878:1: ( ( rule__AudioOutput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2878:1: ( ( rule__AudioOutput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2879:1: ( rule__AudioOutput__NameAssignment_2 )
            {
             before(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2880:1: ( rule__AudioOutput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2880:2: rule__AudioOutput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__AudioOutput__NameAssignment_2_in_rule__AudioOutput__Group__2__Impl6215);
            rule__AudioOutput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__2__Impl"


    // $ANTLR start "rule__ControlInput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2896:1: rule__ControlInput__Group__0 : rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1 ;
    public final void rule__ControlInput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2900:1: ( rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2901:2: rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__0__Impl_in_rule__ControlInput__Group__06251);
            rule__ControlInput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlInput__Group__1_in_rule__ControlInput__Group__06254);
            rule__ControlInput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__0"


    // $ANTLR start "rule__ControlInput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2908:1: rule__ControlInput__Group__0__Impl : ( '@controlInput' ) ;
    public final void rule__ControlInput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2912:1: ( ( '@controlInput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2913:1: ( '@controlInput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2913:1: ( '@controlInput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2914:1: '@controlInput'
            {
             before(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); 
            match(input,19,FOLLOW_19_in_rule__ControlInput__Group__0__Impl6282); 
             after(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__0__Impl"


    // $ANTLR start "rule__ControlInput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2927:1: rule__ControlInput__Group__1 : rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2 ;
    public final void rule__ControlInput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2931:1: ( rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2932:2: rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__1__Impl_in_rule__ControlInput__Group__16313);
            rule__ControlInput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlInput__Group__2_in_rule__ControlInput__Group__16316);
            rule__ControlInput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__1"


    // $ANTLR start "rule__ControlInput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2939:1: rule__ControlInput__Group__1__Impl : ( ( rule__ControlInput__VarNameAssignment_1 ) ) ;
    public final void rule__ControlInput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2943:1: ( ( ( rule__ControlInput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2944:1: ( ( rule__ControlInput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2944:1: ( ( rule__ControlInput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2945:1: ( rule__ControlInput__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2946:1: ( rule__ControlInput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2946:2: rule__ControlInput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlInput__VarNameAssignment_1_in_rule__ControlInput__Group__1__Impl6343);
            rule__ControlInput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__1__Impl"


    // $ANTLR start "rule__ControlInput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2956:1: rule__ControlInput__Group__2 : rule__ControlInput__Group__2__Impl ;
    public final void rule__ControlInput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2960:1: ( rule__ControlInput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2961:2: rule__ControlInput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__2__Impl_in_rule__ControlInput__Group__26373);
            rule__ControlInput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__2"


    // $ANTLR start "rule__ControlInput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2967:1: rule__ControlInput__Group__2__Impl : ( ( rule__ControlInput__NameAssignment_2 ) ) ;
    public final void rule__ControlInput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2971:1: ( ( ( rule__ControlInput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2972:1: ( ( rule__ControlInput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2972:1: ( ( rule__ControlInput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2973:1: ( rule__ControlInput__NameAssignment_2 )
            {
             before(grammarAccess.getControlInputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2974:1: ( rule__ControlInput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2974:2: rule__ControlInput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlInput__NameAssignment_2_in_rule__ControlInput__Group__2__Impl6400);
            rule__ControlInput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__2__Impl"


    // $ANTLR start "rule__ControlOutput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2990:1: rule__ControlOutput__Group__0 : rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1 ;
    public final void rule__ControlOutput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2994:1: ( rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2995:2: rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__0__Impl_in_rule__ControlOutput__Group__06436);
            rule__ControlOutput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlOutput__Group__1_in_rule__ControlOutput__Group__06439);
            rule__ControlOutput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__0"


    // $ANTLR start "rule__ControlOutput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3002:1: rule__ControlOutput__Group__0__Impl : ( '@controlOutput' ) ;
    public final void rule__ControlOutput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3006:1: ( ( '@controlOutput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3007:1: ( '@controlOutput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3007:1: ( '@controlOutput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3008:1: '@controlOutput'
            {
             before(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); 
            match(input,20,FOLLOW_20_in_rule__ControlOutput__Group__0__Impl6467); 
             after(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__0__Impl"


    // $ANTLR start "rule__ControlOutput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3021:1: rule__ControlOutput__Group__1 : rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2 ;
    public final void rule__ControlOutput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3025:1: ( rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3026:2: rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__1__Impl_in_rule__ControlOutput__Group__16498);
            rule__ControlOutput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlOutput__Group__2_in_rule__ControlOutput__Group__16501);
            rule__ControlOutput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__1"


    // $ANTLR start "rule__ControlOutput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3033:1: rule__ControlOutput__Group__1__Impl : ( ( rule__ControlOutput__VarNameAssignment_1 ) ) ;
    public final void rule__ControlOutput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3037:1: ( ( ( rule__ControlOutput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3038:1: ( ( rule__ControlOutput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3038:1: ( ( rule__ControlOutput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3039:1: ( rule__ControlOutput__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3040:1: ( rule__ControlOutput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3040:2: rule__ControlOutput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlOutput__VarNameAssignment_1_in_rule__ControlOutput__Group__1__Impl6528);
            rule__ControlOutput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__1__Impl"


    // $ANTLR start "rule__ControlOutput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3050:1: rule__ControlOutput__Group__2 : rule__ControlOutput__Group__2__Impl ;
    public final void rule__ControlOutput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3054:1: ( rule__ControlOutput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3055:2: rule__ControlOutput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__2__Impl_in_rule__ControlOutput__Group__26558);
            rule__ControlOutput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__2"


    // $ANTLR start "rule__ControlOutput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3061:1: rule__ControlOutput__Group__2__Impl : ( ( rule__ControlOutput__NameAssignment_2 ) ) ;
    public final void rule__ControlOutput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3065:1: ( ( ( rule__ControlOutput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3066:1: ( ( rule__ControlOutput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3066:1: ( ( rule__ControlOutput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3067:1: ( rule__ControlOutput__NameAssignment_2 )
            {
             before(grammarAccess.getControlOutputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3068:1: ( rule__ControlOutput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3068:2: rule__ControlOutput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlOutput__NameAssignment_2_in_rule__ControlOutput__Group__2__Impl6585);
            rule__ControlOutput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__2__Impl"


    // $ANTLR start "rule__Slider__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3084:1: rule__Slider__Group__0 : rule__Slider__Group__0__Impl rule__Slider__Group__1 ;
    public final void rule__Slider__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3088:1: ( rule__Slider__Group__0__Impl rule__Slider__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3089:2: rule__Slider__Group__0__Impl rule__Slider__Group__1
            {
            pushFollow(FOLLOW_rule__Slider__Group__0__Impl_in_rule__Slider__Group__06621);
            rule__Slider__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Slider__Group__1_in_rule__Slider__Group__06624);
            rule__Slider__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__0"


    // $ANTLR start "rule__Slider__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3096:1: rule__Slider__Group__0__Impl : ( '@slider' ) ;
    public final void rule__Slider__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3100:1: ( ( '@slider' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3101:1: ( '@slider' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3101:1: ( '@slider' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3102:1: '@slider'
            {
             before(grammarAccess.getSliderAccess().getSliderKeyword_0()); 
            match(input,21,FOLLOW_21_in_rule__Slider__Group__0__Impl6652); 
             after(grammarAccess.getSliderAccess().getSliderKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__0__Impl"


    // $ANTLR start "rule__Slider__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3115:1: rule__Slider__Group__1 : rule__Slider__Group__1__Impl rule__Slider__Group__2 ;
    public final void rule__Slider__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3119:1: ( rule__Slider__Group__1__Impl rule__Slider__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3120:2: rule__Slider__Group__1__Impl rule__Slider__Group__2
            {
            pushFollow(FOLLOW_rule__Slider__Group__1__Impl_in_rule__Slider__Group__16683);
            rule__Slider__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Slider__Group__2_in_rule__Slider__Group__16686);
            rule__Slider__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__1"


    // $ANTLR start "rule__Slider__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3127:1: rule__Slider__Group__1__Impl : ( ( rule__Slider__VarNameAssignment_1 ) ) ;
    public final void rule__Slider__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3131:1: ( ( ( rule__Slider__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3132:1: ( ( rule__Slider__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3132:1: ( ( rule__Slider__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3133:1: ( rule__Slider__VarNameAssignment_1 )
            {
             before(grammarAccess.getSliderAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3134:1: ( rule__Slider__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3134:2: rule__Slider__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__Slider__VarNameAssignment_1_in_rule__Slider__Group__1__Impl6713);
            rule__Slider__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSliderAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__1__Impl"


    // $ANTLR start "rule__Slider__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3144:1: rule__Slider__Group__2 : rule__Slider__Group__2__Impl ;
    public final void rule__Slider__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3148:1: ( rule__Slider__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3149:2: rule__Slider__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Slider__Group__2__Impl_in_rule__Slider__Group__26743);
            rule__Slider__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__2"


    // $ANTLR start "rule__Slider__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3155:1: rule__Slider__Group__2__Impl : ( ( rule__Slider__LabelAssignment_2 ) ) ;
    public final void rule__Slider__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3159:1: ( ( ( rule__Slider__LabelAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3160:1: ( ( rule__Slider__LabelAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3160:1: ( ( rule__Slider__LabelAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3161:1: ( rule__Slider__LabelAssignment_2 )
            {
             before(grammarAccess.getSliderAccess().getLabelAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3162:1: ( rule__Slider__LabelAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3162:2: rule__Slider__LabelAssignment_2
            {
            pushFollow(FOLLOW_rule__Slider__LabelAssignment_2_in_rule__Slider__Group__2__Impl6770);
            rule__Slider__LabelAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSliderAccess().getLabelAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__2__Impl"


    // $ANTLR start "rule__CheckBox__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3178:1: rule__CheckBox__Group__0 : rule__CheckBox__Group__0__Impl rule__CheckBox__Group__1 ;
    public final void rule__CheckBox__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3182:1: ( rule__CheckBox__Group__0__Impl rule__CheckBox__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3183:2: rule__CheckBox__Group__0__Impl rule__CheckBox__Group__1
            {
            pushFollow(FOLLOW_rule__CheckBox__Group__0__Impl_in_rule__CheckBox__Group__06806);
            rule__CheckBox__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__CheckBox__Group__1_in_rule__CheckBox__Group__06809);
            rule__CheckBox__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__0"


    // $ANTLR start "rule__CheckBox__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3190:1: rule__CheckBox__Group__0__Impl : ( '@checkbox' ) ;
    public final void rule__CheckBox__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3194:1: ( ( '@checkbox' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3195:1: ( '@checkbox' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3195:1: ( '@checkbox' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3196:1: '@checkbox'
            {
             before(grammarAccess.getCheckBoxAccess().getCheckboxKeyword_0()); 
            match(input,22,FOLLOW_22_in_rule__CheckBox__Group__0__Impl6837); 
             after(grammarAccess.getCheckBoxAccess().getCheckboxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__0__Impl"


    // $ANTLR start "rule__CheckBox__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3209:1: rule__CheckBox__Group__1 : rule__CheckBox__Group__1__Impl rule__CheckBox__Group__2 ;
    public final void rule__CheckBox__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3213:1: ( rule__CheckBox__Group__1__Impl rule__CheckBox__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3214:2: rule__CheckBox__Group__1__Impl rule__CheckBox__Group__2
            {
            pushFollow(FOLLOW_rule__CheckBox__Group__1__Impl_in_rule__CheckBox__Group__16868);
            rule__CheckBox__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__CheckBox__Group__2_in_rule__CheckBox__Group__16871);
            rule__CheckBox__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__1"


    // $ANTLR start "rule__CheckBox__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3221:1: rule__CheckBox__Group__1__Impl : ( ( rule__CheckBox__VarNameAssignment_1 ) ) ;
    public final void rule__CheckBox__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3225:1: ( ( ( rule__CheckBox__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3226:1: ( ( rule__CheckBox__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3226:1: ( ( rule__CheckBox__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3227:1: ( rule__CheckBox__VarNameAssignment_1 )
            {
             before(grammarAccess.getCheckBoxAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3228:1: ( rule__CheckBox__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3228:2: rule__CheckBox__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__CheckBox__VarNameAssignment_1_in_rule__CheckBox__Group__1__Impl6898);
            rule__CheckBox__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getCheckBoxAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__1__Impl"


    // $ANTLR start "rule__CheckBox__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3238:1: rule__CheckBox__Group__2 : rule__CheckBox__Group__2__Impl ;
    public final void rule__CheckBox__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3242:1: ( rule__CheckBox__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3243:2: rule__CheckBox__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__CheckBox__Group__2__Impl_in_rule__CheckBox__Group__26928);
            rule__CheckBox__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__2"


    // $ANTLR start "rule__CheckBox__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3249:1: rule__CheckBox__Group__2__Impl : ( ( rule__CheckBox__LabelAssignment_2 ) ) ;
    public final void rule__CheckBox__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3253:1: ( ( ( rule__CheckBox__LabelAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3254:1: ( ( rule__CheckBox__LabelAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3254:1: ( ( rule__CheckBox__LabelAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3255:1: ( rule__CheckBox__LabelAssignment_2 )
            {
             before(grammarAccess.getCheckBoxAccess().getLabelAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3256:1: ( rule__CheckBox__LabelAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3256:2: rule__CheckBox__LabelAssignment_2
            {
            pushFollow(FOLLOW_rule__CheckBox__LabelAssignment_2_in_rule__CheckBox__Group__2__Impl6955);
            rule__CheckBox__LabelAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getCheckBoxAccess().getLabelAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__2__Impl"


    // $ANTLR start "rule__ControlLabel__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3272:1: rule__ControlLabel__Group__0 : rule__ControlLabel__Group__0__Impl rule__ControlLabel__Group__1 ;
    public final void rule__ControlLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3276:1: ( rule__ControlLabel__Group__0__Impl rule__ControlLabel__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3277:2: rule__ControlLabel__Group__0__Impl rule__ControlLabel__Group__1
            {
            pushFollow(FOLLOW_rule__ControlLabel__Group__0__Impl_in_rule__ControlLabel__Group__06991);
            rule__ControlLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlLabel__Group__1_in_rule__ControlLabel__Group__06994);
            rule__ControlLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__0"


    // $ANTLR start "rule__ControlLabel__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3284:1: rule__ControlLabel__Group__0__Impl : ( '@controlLabel' ) ;
    public final void rule__ControlLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3288:1: ( ( '@controlLabel' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3289:1: ( '@controlLabel' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3289:1: ( '@controlLabel' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3290:1: '@controlLabel'
            {
             before(grammarAccess.getControlLabelAccess().getControlLabelKeyword_0()); 
            match(input,23,FOLLOW_23_in_rule__ControlLabel__Group__0__Impl7022); 
             after(grammarAccess.getControlLabelAccess().getControlLabelKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__0__Impl"


    // $ANTLR start "rule__ControlLabel__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3303:1: rule__ControlLabel__Group__1 : rule__ControlLabel__Group__1__Impl rule__ControlLabel__Group__2 ;
    public final void rule__ControlLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3307:1: ( rule__ControlLabel__Group__1__Impl rule__ControlLabel__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3308:2: rule__ControlLabel__Group__1__Impl rule__ControlLabel__Group__2
            {
            pushFollow(FOLLOW_rule__ControlLabel__Group__1__Impl_in_rule__ControlLabel__Group__17053);
            rule__ControlLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlLabel__Group__2_in_rule__ControlLabel__Group__17056);
            rule__ControlLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__1"


    // $ANTLR start "rule__ControlLabel__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3315:1: rule__ControlLabel__Group__1__Impl : ( ( rule__ControlLabel__VarNameAssignment_1 ) ) ;
    public final void rule__ControlLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3319:1: ( ( ( rule__ControlLabel__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3320:1: ( ( rule__ControlLabel__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3320:1: ( ( rule__ControlLabel__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3321:1: ( rule__ControlLabel__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlLabelAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3322:1: ( rule__ControlLabel__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3322:2: rule__ControlLabel__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlLabel__VarNameAssignment_1_in_rule__ControlLabel__Group__1__Impl7083);
            rule__ControlLabel__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlLabelAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__1__Impl"


    // $ANTLR start "rule__ControlLabel__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3332:1: rule__ControlLabel__Group__2 : rule__ControlLabel__Group__2__Impl ;
    public final void rule__ControlLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3336:1: ( rule__ControlLabel__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3337:2: rule__ControlLabel__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlLabel__Group__2__Impl_in_rule__ControlLabel__Group__27113);
            rule__ControlLabel__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__2"


    // $ANTLR start "rule__ControlLabel__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3343:1: rule__ControlLabel__Group__2__Impl : ( ( rule__ControlLabel__LabelAssignment_2 ) ) ;
    public final void rule__ControlLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3347:1: ( ( ( rule__ControlLabel__LabelAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3348:1: ( ( rule__ControlLabel__LabelAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3348:1: ( ( rule__ControlLabel__LabelAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3349:1: ( rule__ControlLabel__LabelAssignment_2 )
            {
             before(grammarAccess.getControlLabelAccess().getLabelAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3350:1: ( rule__ControlLabel__LabelAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3350:2: rule__ControlLabel__LabelAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlLabel__LabelAssignment_2_in_rule__ControlLabel__Group__2__Impl7140);
            rule__ControlLabel__LabelAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlLabelAccess().getLabelAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__2__Impl"


    // $ANTLR start "rule__Equate__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3366:1: rule__Equate__Group__0 : rule__Equate__Group__0__Impl rule__Equate__Group__1 ;
    public final void rule__Equate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3370:1: ( rule__Equate__Group__0__Impl rule__Equate__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3371:2: rule__Equate__Group__0__Impl rule__Equate__Group__1
            {
            pushFollow(FOLLOW_rule__Equate__Group__0__Impl_in_rule__Equate__Group__07176);
            rule__Equate__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group__1_in_rule__Equate__Group__07179);
            rule__Equate__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__0"


    // $ANTLR start "rule__Equate__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3378:1: rule__Equate__Group__0__Impl : ( 'equ' ) ;
    public final void rule__Equate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3382:1: ( ( 'equ' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3383:1: ( 'equ' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3383:1: ( 'equ' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3384:1: 'equ'
            {
             before(grammarAccess.getEquateAccess().getEquKeyword_0()); 
            match(input,24,FOLLOW_24_in_rule__Equate__Group__0__Impl7207); 
             after(grammarAccess.getEquateAccess().getEquKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__0__Impl"


    // $ANTLR start "rule__Equate__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3397:1: rule__Equate__Group__1 : rule__Equate__Group__1__Impl rule__Equate__Group__2 ;
    public final void rule__Equate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3401:1: ( rule__Equate__Group__1__Impl rule__Equate__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3402:2: rule__Equate__Group__1__Impl rule__Equate__Group__2
            {
            pushFollow(FOLLOW_rule__Equate__Group__1__Impl_in_rule__Equate__Group__17238);
            rule__Equate__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group__2_in_rule__Equate__Group__17241);
            rule__Equate__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__1"


    // $ANTLR start "rule__Equate__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3409:1: rule__Equate__Group__1__Impl : ( ( rule__Equate__EnameAssignment_1 ) ) ;
    public final void rule__Equate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3413:1: ( ( ( rule__Equate__EnameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3414:1: ( ( rule__Equate__EnameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3414:1: ( ( rule__Equate__EnameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3415:1: ( rule__Equate__EnameAssignment_1 )
            {
             before(grammarAccess.getEquateAccess().getEnameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3416:1: ( rule__Equate__EnameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3416:2: rule__Equate__EnameAssignment_1
            {
            pushFollow(FOLLOW_rule__Equate__EnameAssignment_1_in_rule__Equate__Group__1__Impl7268);
            rule__Equate__EnameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getEnameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__1__Impl"


    // $ANTLR start "rule__Equate__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3426:1: rule__Equate__Group__2 : rule__Equate__Group__2__Impl ;
    public final void rule__Equate__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3430:1: ( rule__Equate__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3431:2: rule__Equate__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Equate__Group__2__Impl_in_rule__Equate__Group__27298);
            rule__Equate__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__2"


    // $ANTLR start "rule__Equate__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3437:1: rule__Equate__Group__2__Impl : ( ( rule__Equate__ValueAssignment_2 ) ) ;
    public final void rule__Equate__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3441:1: ( ( ( rule__Equate__ValueAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3442:1: ( ( rule__Equate__ValueAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3442:1: ( ( rule__Equate__ValueAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3443:1: ( rule__Equate__ValueAssignment_2 )
            {
             before(grammarAccess.getEquateAccess().getValueAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3444:1: ( rule__Equate__ValueAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3444:2: rule__Equate__ValueAssignment_2
            {
            pushFollow(FOLLOW_rule__Equate__ValueAssignment_2_in_rule__Equate__Group__2__Impl7325);
            rule__Equate__ValueAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getValueAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__2__Impl"


    // $ANTLR start "rule__Mem__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3460:1: rule__Mem__Group__0 : rule__Mem__Group__0__Impl rule__Mem__Group__1 ;
    public final void rule__Mem__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3464:1: ( rule__Mem__Group__0__Impl rule__Mem__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3465:2: rule__Mem__Group__0__Impl rule__Mem__Group__1
            {
            pushFollow(FOLLOW_rule__Mem__Group__0__Impl_in_rule__Mem__Group__07361);
            rule__Mem__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mem__Group__1_in_rule__Mem__Group__07364);
            rule__Mem__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__0"


    // $ANTLR start "rule__Mem__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3472:1: rule__Mem__Group__0__Impl : ( 'mem' ) ;
    public final void rule__Mem__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3476:1: ( ( 'mem' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3477:1: ( 'mem' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3477:1: ( 'mem' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3478:1: 'mem'
            {
             before(grammarAccess.getMemAccess().getMemKeyword_0()); 
            match(input,25,FOLLOW_25_in_rule__Mem__Group__0__Impl7392); 
             after(grammarAccess.getMemAccess().getMemKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__0__Impl"


    // $ANTLR start "rule__Mem__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3491:1: rule__Mem__Group__1 : rule__Mem__Group__1__Impl rule__Mem__Group__2 ;
    public final void rule__Mem__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3495:1: ( rule__Mem__Group__1__Impl rule__Mem__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3496:2: rule__Mem__Group__1__Impl rule__Mem__Group__2
            {
            pushFollow(FOLLOW_rule__Mem__Group__1__Impl_in_rule__Mem__Group__17423);
            rule__Mem__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mem__Group__2_in_rule__Mem__Group__17426);
            rule__Mem__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__1"


    // $ANTLR start "rule__Mem__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3503:1: rule__Mem__Group__1__Impl : ( ( rule__Mem__BufferAssignment_1 ) ) ;
    public final void rule__Mem__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3507:1: ( ( ( rule__Mem__BufferAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3508:1: ( ( rule__Mem__BufferAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3508:1: ( ( rule__Mem__BufferAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3509:1: ( rule__Mem__BufferAssignment_1 )
            {
             before(grammarAccess.getMemAccess().getBufferAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3510:1: ( rule__Mem__BufferAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3510:2: rule__Mem__BufferAssignment_1
            {
            pushFollow(FOLLOW_rule__Mem__BufferAssignment_1_in_rule__Mem__Group__1__Impl7453);
            rule__Mem__BufferAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getBufferAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__1__Impl"


    // $ANTLR start "rule__Mem__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3520:1: rule__Mem__Group__2 : rule__Mem__Group__2__Impl ;
    public final void rule__Mem__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3524:1: ( rule__Mem__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3525:2: rule__Mem__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Mem__Group__2__Impl_in_rule__Mem__Group__27483);
            rule__Mem__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__2"


    // $ANTLR start "rule__Mem__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3531:1: rule__Mem__Group__2__Impl : ( ( rule__Mem__LengthAssignment_2 ) ) ;
    public final void rule__Mem__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3535:1: ( ( ( rule__Mem__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3536:1: ( ( rule__Mem__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3536:1: ( ( rule__Mem__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3537:1: ( rule__Mem__LengthAssignment_2 )
            {
             before(grammarAccess.getMemAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3538:1: ( rule__Mem__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3538:2: rule__Mem__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__Mem__LengthAssignment_2_in_rule__Mem__Group__2__Impl7510);
            rule__Mem__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__2__Impl"


    // $ANTLR start "rule__Offset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3554:1: rule__Offset__Group__0 : rule__Offset__Group__0__Impl rule__Offset__Group__1 ;
    public final void rule__Offset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3558:1: ( rule__Offset__Group__0__Impl rule__Offset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3559:2: rule__Offset__Group__0__Impl rule__Offset__Group__1
            {
            pushFollow(FOLLOW_rule__Offset__Group__0__Impl_in_rule__Offset__Group__07546);
            rule__Offset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Offset__Group__1_in_rule__Offset__Group__07549);
            rule__Offset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__0"


    // $ANTLR start "rule__Offset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3566:1: rule__Offset__Group__0__Impl : ( 'offset' ) ;
    public final void rule__Offset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3570:1: ( ( 'offset' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3571:1: ( 'offset' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3571:1: ( 'offset' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3572:1: 'offset'
            {
             before(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); 
            match(input,26,FOLLOW_26_in_rule__Offset__Group__0__Impl7577); 
             after(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__0__Impl"


    // $ANTLR start "rule__Offset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3585:1: rule__Offset__Group__1 : rule__Offset__Group__1__Impl rule__Offset__Group__2 ;
    public final void rule__Offset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3589:1: ( rule__Offset__Group__1__Impl rule__Offset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3590:2: rule__Offset__Group__1__Impl rule__Offset__Group__2
            {
            pushFollow(FOLLOW_rule__Offset__Group__1__Impl_in_rule__Offset__Group__17608);
            rule__Offset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Offset__Group__2_in_rule__Offset__Group__17611);
            rule__Offset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__1"


    // $ANTLR start "rule__Offset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3597:1: rule__Offset__Group__1__Impl : ( ( rule__Offset__NameAssignment_1 ) ) ;
    public final void rule__Offset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3601:1: ( ( ( rule__Offset__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3602:1: ( ( rule__Offset__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3602:1: ( ( rule__Offset__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3603:1: ( rule__Offset__NameAssignment_1 )
            {
             before(grammarAccess.getOffsetAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3604:1: ( rule__Offset__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3604:2: rule__Offset__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__Offset__NameAssignment_1_in_rule__Offset__Group__1__Impl7638);
            rule__Offset__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__1__Impl"


    // $ANTLR start "rule__Offset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3614:1: rule__Offset__Group__2 : rule__Offset__Group__2__Impl ;
    public final void rule__Offset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3618:1: ( rule__Offset__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3619:2: rule__Offset__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Offset__Group__2__Impl_in_rule__Offset__Group__27668);
            rule__Offset__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__2"


    // $ANTLR start "rule__Offset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3625:1: rule__Offset__Group__2__Impl : ( ( rule__Offset__LengthAssignment_2 ) ) ;
    public final void rule__Offset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3629:1: ( ( ( rule__Offset__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3630:1: ( ( rule__Offset__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3630:1: ( ( rule__Offset__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3631:1: ( rule__Offset__LengthAssignment_2 )
            {
             before(grammarAccess.getOffsetAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3632:1: ( rule__Offset__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3632:2: rule__Offset__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__Offset__LengthAssignment_2_in_rule__Offset__Group__2__Impl7695);
            rule__Offset__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__2__Impl"


    // $ANTLR start "rule__Label__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3648:1: rule__Label__Group__0 : rule__Label__Group__0__Impl rule__Label__Group__1 ;
    public final void rule__Label__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3652:1: ( rule__Label__Group__0__Impl rule__Label__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3653:2: rule__Label__Group__0__Impl rule__Label__Group__1
            {
            pushFollow(FOLLOW_rule__Label__Group__0__Impl_in_rule__Label__Group__07731);
            rule__Label__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Label__Group__1_in_rule__Label__Group__07734);
            rule__Label__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__0"


    // $ANTLR start "rule__Label__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3660:1: rule__Label__Group__0__Impl : ( ( rule__Label__NameAssignment_0 ) ) ;
    public final void rule__Label__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3664:1: ( ( ( rule__Label__NameAssignment_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3665:1: ( ( rule__Label__NameAssignment_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3665:1: ( ( rule__Label__NameAssignment_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3666:1: ( rule__Label__NameAssignment_0 )
            {
             before(grammarAccess.getLabelAccess().getNameAssignment_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3667:1: ( rule__Label__NameAssignment_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3667:2: rule__Label__NameAssignment_0
            {
            pushFollow(FOLLOW_rule__Label__NameAssignment_0_in_rule__Label__Group__0__Impl7761);
            rule__Label__NameAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getLabelAccess().getNameAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__0__Impl"


    // $ANTLR start "rule__Label__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3677:1: rule__Label__Group__1 : rule__Label__Group__1__Impl ;
    public final void rule__Label__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3681:1: ( rule__Label__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3682:2: rule__Label__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Label__Group__1__Impl_in_rule__Label__Group__17791);
            rule__Label__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__1"


    // $ANTLR start "rule__Label__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3688:1: rule__Label__Group__1__Impl : ( ':' ) ;
    public final void rule__Label__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3692:1: ( ( ':' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3693:1: ( ':' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3693:1: ( ':' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3694:1: ':'
            {
             before(grammarAccess.getLabelAccess().getColonKeyword_1()); 
            match(input,27,FOLLOW_27_in_rule__Label__Group__1__Impl7819); 
             after(grammarAccess.getLabelAccess().getColonKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__1__Impl"


    // $ANTLR start "rule__IsPinConnected__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3711:1: rule__IsPinConnected__Group__0 : rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1 ;
    public final void rule__IsPinConnected__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3715:1: ( rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3716:2: rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__0__Impl_in_rule__IsPinConnected__Group__07854);
            rule__IsPinConnected__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsPinConnected__Group__1_in_rule__IsPinConnected__Group__07857);
            rule__IsPinConnected__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__0"


    // $ANTLR start "rule__IsPinConnected__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3723:1: rule__IsPinConnected__Group__0__Impl : ( '@isPinConnected' ) ;
    public final void rule__IsPinConnected__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3727:1: ( ( '@isPinConnected' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3728:1: ( '@isPinConnected' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3728:1: ( '@isPinConnected' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3729:1: '@isPinConnected'
            {
             before(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); 
            match(input,28,FOLLOW_28_in_rule__IsPinConnected__Group__0__Impl7885); 
             after(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__0__Impl"


    // $ANTLR start "rule__IsPinConnected__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3742:1: rule__IsPinConnected__Group__1 : rule__IsPinConnected__Group__1__Impl ;
    public final void rule__IsPinConnected__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3746:1: ( rule__IsPinConnected__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3747:2: rule__IsPinConnected__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__1__Impl_in_rule__IsPinConnected__Group__17916);
            rule__IsPinConnected__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__1"


    // $ANTLR start "rule__IsPinConnected__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3753:1: rule__IsPinConnected__Group__1__Impl : ( ( rule__IsPinConnected__Arg1Assignment_1 ) ) ;
    public final void rule__IsPinConnected__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3757:1: ( ( ( rule__IsPinConnected__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3758:1: ( ( rule__IsPinConnected__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3758:1: ( ( rule__IsPinConnected__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3759:1: ( rule__IsPinConnected__Arg1Assignment_1 )
            {
             before(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3760:1: ( rule__IsPinConnected__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3760:2: rule__IsPinConnected__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Arg1Assignment_1_in_rule__IsPinConnected__Group__1__Impl7943);
            rule__IsPinConnected__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__1__Impl"


    // $ANTLR start "rule__IsElse__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3774:1: rule__IsElse__Group__0 : rule__IsElse__Group__0__Impl rule__IsElse__Group__1 ;
    public final void rule__IsElse__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3778:1: ( rule__IsElse__Group__0__Impl rule__IsElse__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3779:2: rule__IsElse__Group__0__Impl rule__IsElse__Group__1
            {
            pushFollow(FOLLOW_rule__IsElse__Group__0__Impl_in_rule__IsElse__Group__07977);
            rule__IsElse__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsElse__Group__1_in_rule__IsElse__Group__07980);
            rule__IsElse__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__0"


    // $ANTLR start "rule__IsElse__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3786:1: rule__IsElse__Group__0__Impl : ( () ) ;
    public final void rule__IsElse__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3790:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3791:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3791:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3792:1: ()
            {
             before(grammarAccess.getIsElseAccess().getIsElseAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3793:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3795:1: 
            {
            }

             after(grammarAccess.getIsElseAccess().getIsElseAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__0__Impl"


    // $ANTLR start "rule__IsElse__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3805:1: rule__IsElse__Group__1 : rule__IsElse__Group__1__Impl ;
    public final void rule__IsElse__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3809:1: ( rule__IsElse__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3810:2: rule__IsElse__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsElse__Group__1__Impl_in_rule__IsElse__Group__18038);
            rule__IsElse__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__1"


    // $ANTLR start "rule__IsElse__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3816:1: rule__IsElse__Group__1__Impl : ( '@else' ) ;
    public final void rule__IsElse__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3820:1: ( ( '@else' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3821:1: ( '@else' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3821:1: ( '@else' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3822:1: '@else'
            {
             before(grammarAccess.getIsElseAccess().getElseKeyword_1()); 
            match(input,29,FOLLOW_29_in_rule__IsElse__Group__1__Impl8066); 
             after(grammarAccess.getIsElseAccess().getElseKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__1__Impl"


    // $ANTLR start "rule__IsEndif__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3839:1: rule__IsEndif__Group__0 : rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1 ;
    public final void rule__IsEndif__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3843:1: ( rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3844:2: rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__0__Impl_in_rule__IsEndif__Group__08101);
            rule__IsEndif__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsEndif__Group__1_in_rule__IsEndif__Group__08104);
            rule__IsEndif__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__0"


    // $ANTLR start "rule__IsEndif__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3851:1: rule__IsEndif__Group__0__Impl : ( () ) ;
    public final void rule__IsEndif__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3855:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3856:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3856:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3857:1: ()
            {
             before(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3858:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3860:1: 
            {
            }

             after(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__0__Impl"


    // $ANTLR start "rule__IsEndif__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3870:1: rule__IsEndif__Group__1 : rule__IsEndif__Group__1__Impl ;
    public final void rule__IsEndif__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3874:1: ( rule__IsEndif__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3875:2: rule__IsEndif__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__1__Impl_in_rule__IsEndif__Group__18162);
            rule__IsEndif__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__1"


    // $ANTLR start "rule__IsEndif__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3881:1: rule__IsEndif__Group__1__Impl : ( '@endif' ) ;
    public final void rule__IsEndif__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3885:1: ( ( '@endif' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3886:1: ( '@endif' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3886:1: ( '@endif' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3887:1: '@endif'
            {
             before(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); 
            match(input,30,FOLLOW_30_in_rule__IsEndif__Group__1__Impl8190); 
             after(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__1__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3904:1: rule__GetInputDefault__Group__0 : rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1 ;
    public final void rule__GetInputDefault__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3908:1: ( rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3909:2: rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__0__Impl_in_rule__GetInputDefault__Group__08225);
            rule__GetInputDefault__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__1_in_rule__GetInputDefault__Group__08228);
            rule__GetInputDefault__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__0"


    // $ANTLR start "rule__GetInputDefault__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3916:1: rule__GetInputDefault__Group__0__Impl : ( '@getInputDefault' ) ;
    public final void rule__GetInputDefault__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3920:1: ( ( '@getInputDefault' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3921:1: ( '@getInputDefault' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3921:1: ( '@getInputDefault' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3922:1: '@getInputDefault'
            {
             before(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); 
            match(input,31,FOLLOW_31_in_rule__GetInputDefault__Group__0__Impl8256); 
             after(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__0__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3935:1: rule__GetInputDefault__Group__1 : rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2 ;
    public final void rule__GetInputDefault__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3939:1: ( rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3940:2: rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__1__Impl_in_rule__GetInputDefault__Group__18287);
            rule__GetInputDefault__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__2_in_rule__GetInputDefault__Group__18290);
            rule__GetInputDefault__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__1"


    // $ANTLR start "rule__GetInputDefault__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3947:1: rule__GetInputDefault__Group__1__Impl : ( ( rule__GetInputDefault__NameAssignment_1 ) ) ;
    public final void rule__GetInputDefault__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3951:1: ( ( ( rule__GetInputDefault__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3952:1: ( ( rule__GetInputDefault__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3952:1: ( ( rule__GetInputDefault__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3953:1: ( rule__GetInputDefault__NameAssignment_1 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3954:1: ( rule__GetInputDefault__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3954:2: rule__GetInputDefault__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__GetInputDefault__NameAssignment_1_in_rule__GetInputDefault__Group__1__Impl8317);
            rule__GetInputDefault__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__1__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3964:1: rule__GetInputDefault__Group__2 : rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3 ;
    public final void rule__GetInputDefault__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3968:1: ( rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3969:2: rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__2__Impl_in_rule__GetInputDefault__Group__28347);
            rule__GetInputDefault__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__3_in_rule__GetInputDefault__Group__28350);
            rule__GetInputDefault__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__2"


    // $ANTLR start "rule__GetInputDefault__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3976:1: rule__GetInputDefault__Group__2__Impl : ( ( rule__GetInputDefault__VariableAssignment_2 ) ) ;
    public final void rule__GetInputDefault__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3980:1: ( ( ( rule__GetInputDefault__VariableAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3981:1: ( ( rule__GetInputDefault__VariableAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3981:1: ( ( rule__GetInputDefault__VariableAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3982:1: ( rule__GetInputDefault__VariableAssignment_2 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3983:1: ( rule__GetInputDefault__VariableAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3983:2: rule__GetInputDefault__VariableAssignment_2
            {
            pushFollow(FOLLOW_rule__GetInputDefault__VariableAssignment_2_in_rule__GetInputDefault__Group__2__Impl8377);
            rule__GetInputDefault__VariableAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__2__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3993:1: rule__GetInputDefault__Group__3 : rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4 ;
    public final void rule__GetInputDefault__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3997:1: ( rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3998:2: rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__3__Impl_in_rule__GetInputDefault__Group__38407);
            rule__GetInputDefault__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__4_in_rule__GetInputDefault__Group__38410);
            rule__GetInputDefault__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__3"


    // $ANTLR start "rule__GetInputDefault__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4005:1: rule__GetInputDefault__Group__3__Impl : ( ( rule__GetInputDefault__ScaleAssignment_3 ) ) ;
    public final void rule__GetInputDefault__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4009:1: ( ( ( rule__GetInputDefault__ScaleAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4010:1: ( ( rule__GetInputDefault__ScaleAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4010:1: ( ( rule__GetInputDefault__ScaleAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4011:1: ( rule__GetInputDefault__ScaleAssignment_3 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4012:1: ( rule__GetInputDefault__ScaleAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4012:2: rule__GetInputDefault__ScaleAssignment_3
            {
            pushFollow(FOLLOW_rule__GetInputDefault__ScaleAssignment_3_in_rule__GetInputDefault__Group__3__Impl8437);
            rule__GetInputDefault__ScaleAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__3__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4022:1: rule__GetInputDefault__Group__4 : rule__GetInputDefault__Group__4__Impl ;
    public final void rule__GetInputDefault__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4026:1: ( rule__GetInputDefault__Group__4__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4027:2: rule__GetInputDefault__Group__4__Impl
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__4__Impl_in_rule__GetInputDefault__Group__48467);
            rule__GetInputDefault__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__4"


    // $ANTLR start "rule__GetInputDefault__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4033:1: rule__GetInputDefault__Group__4__Impl : ( ( rule__GetInputDefault__DefaultValAssignment_4 ) ) ;
    public final void rule__GetInputDefault__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4037:1: ( ( ( rule__GetInputDefault__DefaultValAssignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4038:1: ( ( rule__GetInputDefault__DefaultValAssignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4038:1: ( ( rule__GetInputDefault__DefaultValAssignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4039:1: ( rule__GetInputDefault__DefaultValAssignment_4 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4040:1: ( rule__GetInputDefault__DefaultValAssignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4040:2: rule__GetInputDefault__DefaultValAssignment_4
            {
            pushFollow(FOLLOW_rule__GetInputDefault__DefaultValAssignment_4_in_rule__GetInputDefault__Group__4__Impl8494);
            rule__GetInputDefault__DefaultValAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__4__Impl"


    // $ANTLR start "rule__GetDelayScale__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4060:1: rule__GetDelayScale__Group__0 : rule__GetDelayScale__Group__0__Impl rule__GetDelayScale__Group__1 ;
    public final void rule__GetDelayScale__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4064:1: ( rule__GetDelayScale__Group__0__Impl rule__GetDelayScale__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4065:2: rule__GetDelayScale__Group__0__Impl rule__GetDelayScale__Group__1
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__0__Impl_in_rule__GetDelayScale__Group__08534);
            rule__GetDelayScale__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScale__Group__1_in_rule__GetDelayScale__Group__08537);
            rule__GetDelayScale__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__0"


    // $ANTLR start "rule__GetDelayScale__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4072:1: rule__GetDelayScale__Group__0__Impl : ( '@getDelayScale' ) ;
    public final void rule__GetDelayScale__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4076:1: ( ( '@getDelayScale' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4077:1: ( '@getDelayScale' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4077:1: ( '@getDelayScale' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4078:1: '@getDelayScale'
            {
             before(grammarAccess.getGetDelayScaleAccess().getGetDelayScaleKeyword_0()); 
            match(input,32,FOLLOW_32_in_rule__GetDelayScale__Group__0__Impl8565); 
             after(grammarAccess.getGetDelayScaleAccess().getGetDelayScaleKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__0__Impl"


    // $ANTLR start "rule__GetDelayScale__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4091:1: rule__GetDelayScale__Group__1 : rule__GetDelayScale__Group__1__Impl rule__GetDelayScale__Group__2 ;
    public final void rule__GetDelayScale__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4095:1: ( rule__GetDelayScale__Group__1__Impl rule__GetDelayScale__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4096:2: rule__GetDelayScale__Group__1__Impl rule__GetDelayScale__Group__2
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__1__Impl_in_rule__GetDelayScale__Group__18596);
            rule__GetDelayScale__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScale__Group__2_in_rule__GetDelayScale__Group__18599);
            rule__GetDelayScale__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__1"


    // $ANTLR start "rule__GetDelayScale__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4103:1: rule__GetDelayScale__Group__1__Impl : ( ( rule__GetDelayScale__BufferAssignment_1 ) ) ;
    public final void rule__GetDelayScale__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4107:1: ( ( ( rule__GetDelayScale__BufferAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4108:1: ( ( rule__GetDelayScale__BufferAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4108:1: ( ( rule__GetDelayScale__BufferAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4109:1: ( rule__GetDelayScale__BufferAssignment_1 )
            {
             before(grammarAccess.getGetDelayScaleAccess().getBufferAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4110:1: ( rule__GetDelayScale__BufferAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4110:2: rule__GetDelayScale__BufferAssignment_1
            {
            pushFollow(FOLLOW_rule__GetDelayScale__BufferAssignment_1_in_rule__GetDelayScale__Group__1__Impl8626);
            rule__GetDelayScale__BufferAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleAccess().getBufferAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__1__Impl"


    // $ANTLR start "rule__GetDelayScale__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4120:1: rule__GetDelayScale__Group__2 : rule__GetDelayScale__Group__2__Impl rule__GetDelayScale__Group__3 ;
    public final void rule__GetDelayScale__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4124:1: ( rule__GetDelayScale__Group__2__Impl rule__GetDelayScale__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4125:2: rule__GetDelayScale__Group__2__Impl rule__GetDelayScale__Group__3
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__2__Impl_in_rule__GetDelayScale__Group__28656);
            rule__GetDelayScale__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScale__Group__3_in_rule__GetDelayScale__Group__28659);
            rule__GetDelayScale__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__2"


    // $ANTLR start "rule__GetDelayScale__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4132:1: rule__GetDelayScale__Group__2__Impl : ( ( rule__GetDelayScale__LengthAssignment_2 ) ) ;
    public final void rule__GetDelayScale__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4136:1: ( ( ( rule__GetDelayScale__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4137:1: ( ( rule__GetDelayScale__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4137:1: ( ( rule__GetDelayScale__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4138:1: ( rule__GetDelayScale__LengthAssignment_2 )
            {
             before(grammarAccess.getGetDelayScaleAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4139:1: ( rule__GetDelayScale__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4139:2: rule__GetDelayScale__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__GetDelayScale__LengthAssignment_2_in_rule__GetDelayScale__Group__2__Impl8686);
            rule__GetDelayScale__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__2__Impl"


    // $ANTLR start "rule__GetDelayScale__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4149:1: rule__GetDelayScale__Group__3 : rule__GetDelayScale__Group__3__Impl ;
    public final void rule__GetDelayScale__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4153:1: ( rule__GetDelayScale__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4154:2: rule__GetDelayScale__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__3__Impl_in_rule__GetDelayScale__Group__38716);
            rule__GetDelayScale__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__3"


    // $ANTLR start "rule__GetDelayScale__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4160:1: rule__GetDelayScale__Group__3__Impl : ( ( rule__GetDelayScale__ControlAssignment_3 ) ) ;
    public final void rule__GetDelayScale__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4164:1: ( ( ( rule__GetDelayScale__ControlAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4165:1: ( ( rule__GetDelayScale__ControlAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4165:1: ( ( rule__GetDelayScale__ControlAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4166:1: ( rule__GetDelayScale__ControlAssignment_3 )
            {
             before(grammarAccess.getGetDelayScaleAccess().getControlAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4167:1: ( rule__GetDelayScale__ControlAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4167:2: rule__GetDelayScale__ControlAssignment_3
            {
            pushFollow(FOLLOW_rule__GetDelayScale__ControlAssignment_3_in_rule__GetDelayScale__Group__3__Impl8743);
            rule__GetDelayScale__ControlAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleAccess().getControlAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__3__Impl"


    // $ANTLR start "rule__SetOutputPin__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4185:1: rule__SetOutputPin__Group__0 : rule__SetOutputPin__Group__0__Impl rule__SetOutputPin__Group__1 ;
    public final void rule__SetOutputPin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4189:1: ( rule__SetOutputPin__Group__0__Impl rule__SetOutputPin__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4190:2: rule__SetOutputPin__Group__0__Impl rule__SetOutputPin__Group__1
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__0__Impl_in_rule__SetOutputPin__Group__08781);
            rule__SetOutputPin__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SetOutputPin__Group__1_in_rule__SetOutputPin__Group__08784);
            rule__SetOutputPin__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__0"


    // $ANTLR start "rule__SetOutputPin__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4197:1: rule__SetOutputPin__Group__0__Impl : ( '@setOutputPin' ) ;
    public final void rule__SetOutputPin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4201:1: ( ( '@setOutputPin' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4202:1: ( '@setOutputPin' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4202:1: ( '@setOutputPin' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4203:1: '@setOutputPin'
            {
             before(grammarAccess.getSetOutputPinAccess().getSetOutputPinKeyword_0()); 
            match(input,33,FOLLOW_33_in_rule__SetOutputPin__Group__0__Impl8812); 
             after(grammarAccess.getSetOutputPinAccess().getSetOutputPinKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__0__Impl"


    // $ANTLR start "rule__SetOutputPin__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4216:1: rule__SetOutputPin__Group__1 : rule__SetOutputPin__Group__1__Impl rule__SetOutputPin__Group__2 ;
    public final void rule__SetOutputPin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4220:1: ( rule__SetOutputPin__Group__1__Impl rule__SetOutputPin__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4221:2: rule__SetOutputPin__Group__1__Impl rule__SetOutputPin__Group__2
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__1__Impl_in_rule__SetOutputPin__Group__18843);
            rule__SetOutputPin__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SetOutputPin__Group__2_in_rule__SetOutputPin__Group__18846);
            rule__SetOutputPin__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__1"


    // $ANTLR start "rule__SetOutputPin__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4228:1: rule__SetOutputPin__Group__1__Impl : ( ( rule__SetOutputPin__PinNameAssignment_1 ) ) ;
    public final void rule__SetOutputPin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4232:1: ( ( ( rule__SetOutputPin__PinNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4233:1: ( ( rule__SetOutputPin__PinNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4233:1: ( ( rule__SetOutputPin__PinNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4234:1: ( rule__SetOutputPin__PinNameAssignment_1 )
            {
             before(grammarAccess.getSetOutputPinAccess().getPinNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4235:1: ( rule__SetOutputPin__PinNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4235:2: rule__SetOutputPin__PinNameAssignment_1
            {
            pushFollow(FOLLOW_rule__SetOutputPin__PinNameAssignment_1_in_rule__SetOutputPin__Group__1__Impl8873);
            rule__SetOutputPin__PinNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSetOutputPinAccess().getPinNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__1__Impl"


    // $ANTLR start "rule__SetOutputPin__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4245:1: rule__SetOutputPin__Group__2 : rule__SetOutputPin__Group__2__Impl ;
    public final void rule__SetOutputPin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4249:1: ( rule__SetOutputPin__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4250:2: rule__SetOutputPin__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__2__Impl_in_rule__SetOutputPin__Group__28903);
            rule__SetOutputPin__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__2"


    // $ANTLR start "rule__SetOutputPin__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4256:1: rule__SetOutputPin__Group__2__Impl : ( ( rule__SetOutputPin__VarNameAssignment_2 ) ) ;
    public final void rule__SetOutputPin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4260:1: ( ( ( rule__SetOutputPin__VarNameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4261:1: ( ( rule__SetOutputPin__VarNameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4261:1: ( ( rule__SetOutputPin__VarNameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4262:1: ( rule__SetOutputPin__VarNameAssignment_2 )
            {
             before(grammarAccess.getSetOutputPinAccess().getVarNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4263:1: ( rule__SetOutputPin__VarNameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4263:2: rule__SetOutputPin__VarNameAssignment_2
            {
            pushFollow(FOLLOW_rule__SetOutputPin__VarNameAssignment_2_in_rule__SetOutputPin__Group__2__Impl8930);
            rule__SetOutputPin__VarNameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSetOutputPinAccess().getVarNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__2__Impl"


    // $ANTLR start "rule__ReadRegister__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4279:1: rule__ReadRegister__Group__0 : rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1 ;
    public final void rule__ReadRegister__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4283:1: ( rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4284:2: rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__0__Impl_in_rule__ReadRegister__Group__08966);
            rule__ReadRegister__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__1_in_rule__ReadRegister__Group__08969);
            rule__ReadRegister__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__0"


    // $ANTLR start "rule__ReadRegister__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4291:1: rule__ReadRegister__Group__0__Impl : ( 'rdax' ) ;
    public final void rule__ReadRegister__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4295:1: ( ( 'rdax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4296:1: ( 'rdax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4296:1: ( 'rdax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4297:1: 'rdax'
            {
             before(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); 
            match(input,34,FOLLOW_34_in_rule__ReadRegister__Group__0__Impl8997); 
             after(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__0__Impl"


    // $ANTLR start "rule__ReadRegister__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4310:1: rule__ReadRegister__Group__1 : rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2 ;
    public final void rule__ReadRegister__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4314:1: ( rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4315:2: rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__1__Impl_in_rule__ReadRegister__Group__19028);
            rule__ReadRegister__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__2_in_rule__ReadRegister__Group__19031);
            rule__ReadRegister__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__1"


    // $ANTLR start "rule__ReadRegister__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4322:1: rule__ReadRegister__Group__1__Impl : ( ( rule__ReadRegister__Arg1Assignment_1 ) ) ;
    public final void rule__ReadRegister__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4326:1: ( ( ( rule__ReadRegister__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4327:1: ( ( rule__ReadRegister__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4327:1: ( ( rule__ReadRegister__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4328:1: ( rule__ReadRegister__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4329:1: ( rule__ReadRegister__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4329:2: rule__ReadRegister__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadRegister__Arg1Assignment_1_in_rule__ReadRegister__Group__1__Impl9058);
            rule__ReadRegister__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__1__Impl"


    // $ANTLR start "rule__ReadRegister__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4339:1: rule__ReadRegister__Group__2 : rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3 ;
    public final void rule__ReadRegister__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4343:1: ( rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4344:2: rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__2__Impl_in_rule__ReadRegister__Group__29088);
            rule__ReadRegister__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__3_in_rule__ReadRegister__Group__29091);
            rule__ReadRegister__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__2"


    // $ANTLR start "rule__ReadRegister__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4351:1: rule__ReadRegister__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadRegister__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4355:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4356:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4356:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4357:1: ','
            {
             before(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__ReadRegister__Group__2__Impl9119); 
             after(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__2__Impl"


    // $ANTLR start "rule__ReadRegister__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4370:1: rule__ReadRegister__Group__3 : rule__ReadRegister__Group__3__Impl ;
    public final void rule__ReadRegister__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4374:1: ( rule__ReadRegister__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4375:2: rule__ReadRegister__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__3__Impl_in_rule__ReadRegister__Group__39150);
            rule__ReadRegister__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__3"


    // $ANTLR start "rule__ReadRegister__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4381:1: rule__ReadRegister__Group__3__Impl : ( ( rule__ReadRegister__Arg2Assignment_3 ) ) ;
    public final void rule__ReadRegister__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4385:1: ( ( ( rule__ReadRegister__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4386:1: ( ( rule__ReadRegister__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4386:1: ( ( rule__ReadRegister__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4387:1: ( rule__ReadRegister__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4388:1: ( rule__ReadRegister__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4388:2: rule__ReadRegister__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadRegister__Arg2Assignment_3_in_rule__ReadRegister__Group__3__Impl9177);
            rule__ReadRegister__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__3__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4406:1: rule__WriteRegisterLowshelf__Group__0 : rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1 ;
    public final void rule__WriteRegisterLowshelf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4410:1: ( rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4411:2: rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__0__Impl_in_rule__WriteRegisterLowshelf__Group__09215);
            rule__WriteRegisterLowshelf__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__1_in_rule__WriteRegisterLowshelf__Group__09218);
            rule__WriteRegisterLowshelf__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__0"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4418:1: rule__WriteRegisterLowshelf__Group__0__Impl : ( 'wrlx' ) ;
    public final void rule__WriteRegisterLowshelf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4422:1: ( ( 'wrlx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4423:1: ( 'wrlx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4423:1: ( 'wrlx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4424:1: 'wrlx'
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); 
            match(input,36,FOLLOW_36_in_rule__WriteRegisterLowshelf__Group__0__Impl9246); 
             after(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__0__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4437:1: rule__WriteRegisterLowshelf__Group__1 : rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2 ;
    public final void rule__WriteRegisterLowshelf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4441:1: ( rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4442:2: rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__1__Impl_in_rule__WriteRegisterLowshelf__Group__19277);
            rule__WriteRegisterLowshelf__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__2_in_rule__WriteRegisterLowshelf__Group__19280);
            rule__WriteRegisterLowshelf__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__1"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4449:1: rule__WriteRegisterLowshelf__Group__1__Impl : ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegisterLowshelf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4453:1: ( ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4454:1: ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4454:1: ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4455:1: ( rule__WriteRegisterLowshelf__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4456:1: ( rule__WriteRegisterLowshelf__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4456:2: rule__WriteRegisterLowshelf__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Arg1Assignment_1_in_rule__WriteRegisterLowshelf__Group__1__Impl9307);
            rule__WriteRegisterLowshelf__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__1__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4466:1: rule__WriteRegisterLowshelf__Group__2 : rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3 ;
    public final void rule__WriteRegisterLowshelf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4470:1: ( rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4471:2: rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__2__Impl_in_rule__WriteRegisterLowshelf__Group__29337);
            rule__WriteRegisterLowshelf__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__3_in_rule__WriteRegisterLowshelf__Group__29340);
            rule__WriteRegisterLowshelf__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__2"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4478:1: rule__WriteRegisterLowshelf__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegisterLowshelf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4482:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4483:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4483:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4484:1: ','
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__WriteRegisterLowshelf__Group__2__Impl9368); 
             after(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__2__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4497:1: rule__WriteRegisterLowshelf__Group__3 : rule__WriteRegisterLowshelf__Group__3__Impl ;
    public final void rule__WriteRegisterLowshelf__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4501:1: ( rule__WriteRegisterLowshelf__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4502:2: rule__WriteRegisterLowshelf__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__3__Impl_in_rule__WriteRegisterLowshelf__Group__39399);
            rule__WriteRegisterLowshelf__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__3"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4508:1: rule__WriteRegisterLowshelf__Group__3__Impl : ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegisterLowshelf__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4512:1: ( ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4513:1: ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4513:1: ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4514:1: ( rule__WriteRegisterLowshelf__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4515:1: ( rule__WriteRegisterLowshelf__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4515:2: rule__WriteRegisterLowshelf__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Arg2Assignment_3_in_rule__WriteRegisterLowshelf__Group__3__Impl9426);
            rule__WriteRegisterLowshelf__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__3__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4533:1: rule__WriteRegisterHighshelf__Group__0 : rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1 ;
    public final void rule__WriteRegisterHighshelf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4537:1: ( rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4538:2: rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__0__Impl_in_rule__WriteRegisterHighshelf__Group__09464);
            rule__WriteRegisterHighshelf__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__1_in_rule__WriteRegisterHighshelf__Group__09467);
            rule__WriteRegisterHighshelf__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__0"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4545:1: rule__WriteRegisterHighshelf__Group__0__Impl : ( 'wrhx' ) ;
    public final void rule__WriteRegisterHighshelf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4549:1: ( ( 'wrhx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4550:1: ( 'wrhx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4550:1: ( 'wrhx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4551:1: 'wrhx'
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); 
            match(input,37,FOLLOW_37_in_rule__WriteRegisterHighshelf__Group__0__Impl9495); 
             after(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__0__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4564:1: rule__WriteRegisterHighshelf__Group__1 : rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2 ;
    public final void rule__WriteRegisterHighshelf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4568:1: ( rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4569:2: rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__1__Impl_in_rule__WriteRegisterHighshelf__Group__19526);
            rule__WriteRegisterHighshelf__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__2_in_rule__WriteRegisterHighshelf__Group__19529);
            rule__WriteRegisterHighshelf__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__1"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4576:1: rule__WriteRegisterHighshelf__Group__1__Impl : ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegisterHighshelf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4580:1: ( ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4581:1: ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4581:1: ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4582:1: ( rule__WriteRegisterHighshelf__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4583:1: ( rule__WriteRegisterHighshelf__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4583:2: rule__WriteRegisterHighshelf__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Arg1Assignment_1_in_rule__WriteRegisterHighshelf__Group__1__Impl9556);
            rule__WriteRegisterHighshelf__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__1__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4593:1: rule__WriteRegisterHighshelf__Group__2 : rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3 ;
    public final void rule__WriteRegisterHighshelf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4597:1: ( rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4598:2: rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__2__Impl_in_rule__WriteRegisterHighshelf__Group__29586);
            rule__WriteRegisterHighshelf__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__3_in_rule__WriteRegisterHighshelf__Group__29589);
            rule__WriteRegisterHighshelf__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__2"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4605:1: rule__WriteRegisterHighshelf__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegisterHighshelf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4609:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4610:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4610:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4611:1: ','
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__WriteRegisterHighshelf__Group__2__Impl9617); 
             after(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__2__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4624:1: rule__WriteRegisterHighshelf__Group__3 : rule__WriteRegisterHighshelf__Group__3__Impl ;
    public final void rule__WriteRegisterHighshelf__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4628:1: ( rule__WriteRegisterHighshelf__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4629:2: rule__WriteRegisterHighshelf__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__3__Impl_in_rule__WriteRegisterHighshelf__Group__39648);
            rule__WriteRegisterHighshelf__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__3"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4635:1: rule__WriteRegisterHighshelf__Group__3__Impl : ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegisterHighshelf__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4639:1: ( ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4640:1: ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4640:1: ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4641:1: ( rule__WriteRegisterHighshelf__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4642:1: ( rule__WriteRegisterHighshelf__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4642:2: rule__WriteRegisterHighshelf__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Arg2Assignment_3_in_rule__WriteRegisterHighshelf__Group__3__Impl9675);
            rule__WriteRegisterHighshelf__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__3__Impl"


    // $ANTLR start "rule__WriteRegister__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4660:1: rule__WriteRegister__Group__0 : rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1 ;
    public final void rule__WriteRegister__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4664:1: ( rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4665:2: rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__0__Impl_in_rule__WriteRegister__Group__09713);
            rule__WriteRegister__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__1_in_rule__WriteRegister__Group__09716);
            rule__WriteRegister__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__0"


    // $ANTLR start "rule__WriteRegister__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4672:1: rule__WriteRegister__Group__0__Impl : ( 'wrax' ) ;
    public final void rule__WriteRegister__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4676:1: ( ( 'wrax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4677:1: ( 'wrax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4677:1: ( 'wrax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4678:1: 'wrax'
            {
             before(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); 
            match(input,38,FOLLOW_38_in_rule__WriteRegister__Group__0__Impl9744); 
             after(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__0__Impl"


    // $ANTLR start "rule__WriteRegister__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4691:1: rule__WriteRegister__Group__1 : rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2 ;
    public final void rule__WriteRegister__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4695:1: ( rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4696:2: rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__1__Impl_in_rule__WriteRegister__Group__19775);
            rule__WriteRegister__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__2_in_rule__WriteRegister__Group__19778);
            rule__WriteRegister__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__1"


    // $ANTLR start "rule__WriteRegister__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4703:1: rule__WriteRegister__Group__1__Impl : ( ( rule__WriteRegister__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegister__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4707:1: ( ( ( rule__WriteRegister__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4708:1: ( ( rule__WriteRegister__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4708:1: ( ( rule__WriteRegister__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4709:1: ( rule__WriteRegister__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4710:1: ( rule__WriteRegister__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4710:2: rule__WriteRegister__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegister__Arg1Assignment_1_in_rule__WriteRegister__Group__1__Impl9805);
            rule__WriteRegister__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__1__Impl"


    // $ANTLR start "rule__WriteRegister__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4720:1: rule__WriteRegister__Group__2 : rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3 ;
    public final void rule__WriteRegister__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4724:1: ( rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4725:2: rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__2__Impl_in_rule__WriteRegister__Group__29835);
            rule__WriteRegister__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__3_in_rule__WriteRegister__Group__29838);
            rule__WriteRegister__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__2"


    // $ANTLR start "rule__WriteRegister__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4732:1: rule__WriteRegister__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegister__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4736:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4737:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4737:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4738:1: ','
            {
             before(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__WriteRegister__Group__2__Impl9866); 
             after(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__2__Impl"


    // $ANTLR start "rule__WriteRegister__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4751:1: rule__WriteRegister__Group__3 : rule__WriteRegister__Group__3__Impl ;
    public final void rule__WriteRegister__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4755:1: ( rule__WriteRegister__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4756:2: rule__WriteRegister__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__3__Impl_in_rule__WriteRegister__Group__39897);
            rule__WriteRegister__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__3"


    // $ANTLR start "rule__WriteRegister__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4762:1: rule__WriteRegister__Group__3__Impl : ( ( rule__WriteRegister__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegister__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4766:1: ( ( ( rule__WriteRegister__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4767:1: ( ( rule__WriteRegister__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4767:1: ( ( rule__WriteRegister__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4768:1: ( rule__WriteRegister__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4769:1: ( rule__WriteRegister__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4769:2: rule__WriteRegister__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegister__Arg2Assignment_3_in_rule__WriteRegister__Group__3__Impl9924);
            rule__WriteRegister__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__3__Impl"


    // $ANTLR start "rule__Maxx__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4787:1: rule__Maxx__Group__0 : rule__Maxx__Group__0__Impl rule__Maxx__Group__1 ;
    public final void rule__Maxx__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4791:1: ( rule__Maxx__Group__0__Impl rule__Maxx__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4792:2: rule__Maxx__Group__0__Impl rule__Maxx__Group__1
            {
            pushFollow(FOLLOW_rule__Maxx__Group__0__Impl_in_rule__Maxx__Group__09962);
            rule__Maxx__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__1_in_rule__Maxx__Group__09965);
            rule__Maxx__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__0"


    // $ANTLR start "rule__Maxx__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4799:1: rule__Maxx__Group__0__Impl : ( 'maxx' ) ;
    public final void rule__Maxx__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4803:1: ( ( 'maxx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4804:1: ( 'maxx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4804:1: ( 'maxx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4805:1: 'maxx'
            {
             before(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); 
            match(input,39,FOLLOW_39_in_rule__Maxx__Group__0__Impl9993); 
             after(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__0__Impl"


    // $ANTLR start "rule__Maxx__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4818:1: rule__Maxx__Group__1 : rule__Maxx__Group__1__Impl rule__Maxx__Group__2 ;
    public final void rule__Maxx__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4822:1: ( rule__Maxx__Group__1__Impl rule__Maxx__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4823:2: rule__Maxx__Group__1__Impl rule__Maxx__Group__2
            {
            pushFollow(FOLLOW_rule__Maxx__Group__1__Impl_in_rule__Maxx__Group__110024);
            rule__Maxx__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__2_in_rule__Maxx__Group__110027);
            rule__Maxx__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__1"


    // $ANTLR start "rule__Maxx__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4830:1: rule__Maxx__Group__1__Impl : ( ( rule__Maxx__Arg1Assignment_1 ) ) ;
    public final void rule__Maxx__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4834:1: ( ( ( rule__Maxx__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4835:1: ( ( rule__Maxx__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4835:1: ( ( rule__Maxx__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4836:1: ( rule__Maxx__Arg1Assignment_1 )
            {
             before(grammarAccess.getMaxxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4837:1: ( rule__Maxx__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4837:2: rule__Maxx__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Maxx__Arg1Assignment_1_in_rule__Maxx__Group__1__Impl10054);
            rule__Maxx__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__1__Impl"


    // $ANTLR start "rule__Maxx__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4847:1: rule__Maxx__Group__2 : rule__Maxx__Group__2__Impl rule__Maxx__Group__3 ;
    public final void rule__Maxx__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4851:1: ( rule__Maxx__Group__2__Impl rule__Maxx__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4852:2: rule__Maxx__Group__2__Impl rule__Maxx__Group__3
            {
            pushFollow(FOLLOW_rule__Maxx__Group__2__Impl_in_rule__Maxx__Group__210084);
            rule__Maxx__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__3_in_rule__Maxx__Group__210087);
            rule__Maxx__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__2"


    // $ANTLR start "rule__Maxx__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4859:1: rule__Maxx__Group__2__Impl : ( ',' ) ;
    public final void rule__Maxx__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4863:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4864:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4864:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4865:1: ','
            {
             before(grammarAccess.getMaxxAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__Maxx__Group__2__Impl10115); 
             after(grammarAccess.getMaxxAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__2__Impl"


    // $ANTLR start "rule__Maxx__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4878:1: rule__Maxx__Group__3 : rule__Maxx__Group__3__Impl ;
    public final void rule__Maxx__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4882:1: ( rule__Maxx__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4883:2: rule__Maxx__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Maxx__Group__3__Impl_in_rule__Maxx__Group__310146);
            rule__Maxx__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__3"


    // $ANTLR start "rule__Maxx__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4889:1: rule__Maxx__Group__3__Impl : ( ( rule__Maxx__Arg2Assignment_3 ) ) ;
    public final void rule__Maxx__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4893:1: ( ( ( rule__Maxx__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4894:1: ( ( rule__Maxx__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4894:1: ( ( rule__Maxx__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4895:1: ( rule__Maxx__Arg2Assignment_3 )
            {
             before(grammarAccess.getMaxxAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4896:1: ( rule__Maxx__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4896:2: rule__Maxx__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Maxx__Arg2Assignment_3_in_rule__Maxx__Group__3__Impl10173);
            rule__Maxx__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__3__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4914:1: rule__ReadRegisterFilter__Group__0 : rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1 ;
    public final void rule__ReadRegisterFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4918:1: ( rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4919:2: rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__0__Impl_in_rule__ReadRegisterFilter__Group__010211);
            rule__ReadRegisterFilter__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__1_in_rule__ReadRegisterFilter__Group__010214);
            rule__ReadRegisterFilter__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__0"


    // $ANTLR start "rule__ReadRegisterFilter__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4926:1: rule__ReadRegisterFilter__Group__0__Impl : ( 'rdfx' ) ;
    public final void rule__ReadRegisterFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4930:1: ( ( 'rdfx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4931:1: ( 'rdfx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4931:1: ( 'rdfx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4932:1: 'rdfx'
            {
             before(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); 
            match(input,40,FOLLOW_40_in_rule__ReadRegisterFilter__Group__0__Impl10242); 
             after(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__0__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4945:1: rule__ReadRegisterFilter__Group__1 : rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2 ;
    public final void rule__ReadRegisterFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4949:1: ( rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4950:2: rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__1__Impl_in_rule__ReadRegisterFilter__Group__110273);
            rule__ReadRegisterFilter__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__2_in_rule__ReadRegisterFilter__Group__110276);
            rule__ReadRegisterFilter__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__1"


    // $ANTLR start "rule__ReadRegisterFilter__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4957:1: rule__ReadRegisterFilter__Group__1__Impl : ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) ) ;
    public final void rule__ReadRegisterFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4961:1: ( ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4962:1: ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4962:1: ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4963:1: ( rule__ReadRegisterFilter__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4964:1: ( rule__ReadRegisterFilter__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4964:2: rule__ReadRegisterFilter__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Arg1Assignment_1_in_rule__ReadRegisterFilter__Group__1__Impl10303);
            rule__ReadRegisterFilter__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__1__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4974:1: rule__ReadRegisterFilter__Group__2 : rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3 ;
    public final void rule__ReadRegisterFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4978:1: ( rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4979:2: rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__2__Impl_in_rule__ReadRegisterFilter__Group__210333);
            rule__ReadRegisterFilter__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__3_in_rule__ReadRegisterFilter__Group__210336);
            rule__ReadRegisterFilter__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__2"


    // $ANTLR start "rule__ReadRegisterFilter__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4986:1: rule__ReadRegisterFilter__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadRegisterFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4990:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4991:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4991:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4992:1: ','
            {
             before(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__ReadRegisterFilter__Group__2__Impl10364); 
             after(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__2__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5005:1: rule__ReadRegisterFilter__Group__3 : rule__ReadRegisterFilter__Group__3__Impl ;
    public final void rule__ReadRegisterFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5009:1: ( rule__ReadRegisterFilter__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5010:2: rule__ReadRegisterFilter__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__3__Impl_in_rule__ReadRegisterFilter__Group__310395);
            rule__ReadRegisterFilter__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__3"


    // $ANTLR start "rule__ReadRegisterFilter__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5016:1: rule__ReadRegisterFilter__Group__3__Impl : ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) ) ;
    public final void rule__ReadRegisterFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5020:1: ( ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5021:1: ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5021:1: ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5022:1: ( rule__ReadRegisterFilter__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5023:1: ( rule__ReadRegisterFilter__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5023:2: rule__ReadRegisterFilter__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Arg2Assignment_3_in_rule__ReadRegisterFilter__Group__3__Impl10422);
            rule__ReadRegisterFilter__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__3__Impl"


    // $ANTLR start "rule__Mulx__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5041:1: rule__Mulx__Group__0 : rule__Mulx__Group__0__Impl rule__Mulx__Group__1 ;
    public final void rule__Mulx__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5045:1: ( rule__Mulx__Group__0__Impl rule__Mulx__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5046:2: rule__Mulx__Group__0__Impl rule__Mulx__Group__1
            {
            pushFollow(FOLLOW_rule__Mulx__Group__0__Impl_in_rule__Mulx__Group__010460);
            rule__Mulx__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mulx__Group__1_in_rule__Mulx__Group__010463);
            rule__Mulx__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__0"


    // $ANTLR start "rule__Mulx__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5053:1: rule__Mulx__Group__0__Impl : ( 'mulx' ) ;
    public final void rule__Mulx__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5057:1: ( ( 'mulx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5058:1: ( 'mulx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5058:1: ( 'mulx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5059:1: 'mulx'
            {
             before(grammarAccess.getMulxAccess().getMulxKeyword_0()); 
            match(input,41,FOLLOW_41_in_rule__Mulx__Group__0__Impl10491); 
             after(grammarAccess.getMulxAccess().getMulxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__0__Impl"


    // $ANTLR start "rule__Mulx__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5072:1: rule__Mulx__Group__1 : rule__Mulx__Group__1__Impl ;
    public final void rule__Mulx__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5076:1: ( rule__Mulx__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5077:2: rule__Mulx__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Mulx__Group__1__Impl_in_rule__Mulx__Group__110522);
            rule__Mulx__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__1"


    // $ANTLR start "rule__Mulx__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5083:1: rule__Mulx__Group__1__Impl : ( ( rule__Mulx__Arg1Assignment_1 ) ) ;
    public final void rule__Mulx__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5087:1: ( ( ( rule__Mulx__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5088:1: ( ( rule__Mulx__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5088:1: ( ( rule__Mulx__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5089:1: ( rule__Mulx__Arg1Assignment_1 )
            {
             before(grammarAccess.getMulxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5090:1: ( rule__Mulx__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5090:2: rule__Mulx__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Mulx__Arg1Assignment_1_in_rule__Mulx__Group__1__Impl10549);
            rule__Mulx__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMulxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__1__Impl"


    // $ANTLR start "rule__Ldax__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5104:1: rule__Ldax__Group__0 : rule__Ldax__Group__0__Impl rule__Ldax__Group__1 ;
    public final void rule__Ldax__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5108:1: ( rule__Ldax__Group__0__Impl rule__Ldax__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5109:2: rule__Ldax__Group__0__Impl rule__Ldax__Group__1
            {
            pushFollow(FOLLOW_rule__Ldax__Group__0__Impl_in_rule__Ldax__Group__010583);
            rule__Ldax__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Ldax__Group__1_in_rule__Ldax__Group__010586);
            rule__Ldax__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__0"


    // $ANTLR start "rule__Ldax__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5116:1: rule__Ldax__Group__0__Impl : ( 'ldax' ) ;
    public final void rule__Ldax__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5120:1: ( ( 'ldax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5121:1: ( 'ldax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5121:1: ( 'ldax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5122:1: 'ldax'
            {
             before(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); 
            match(input,42,FOLLOW_42_in_rule__Ldax__Group__0__Impl10614); 
             after(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__0__Impl"


    // $ANTLR start "rule__Ldax__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5135:1: rule__Ldax__Group__1 : rule__Ldax__Group__1__Impl ;
    public final void rule__Ldax__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5139:1: ( rule__Ldax__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5140:2: rule__Ldax__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Ldax__Group__1__Impl_in_rule__Ldax__Group__110645);
            rule__Ldax__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__1"


    // $ANTLR start "rule__Ldax__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5146:1: rule__Ldax__Group__1__Impl : ( ( rule__Ldax__Arg1Assignment_1 ) ) ;
    public final void rule__Ldax__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5150:1: ( ( ( rule__Ldax__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5151:1: ( ( rule__Ldax__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5151:1: ( ( rule__Ldax__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5152:1: ( rule__Ldax__Arg1Assignment_1 )
            {
             before(grammarAccess.getLdaxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5153:1: ( rule__Ldax__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5153:2: rule__Ldax__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Ldax__Arg1Assignment_1_in_rule__Ldax__Group__1__Impl10672);
            rule__Ldax__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLdaxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__1__Impl"


    // $ANTLR start "rule__Exp__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5167:1: rule__Exp__Group__0 : rule__Exp__Group__0__Impl rule__Exp__Group__1 ;
    public final void rule__Exp__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5171:1: ( rule__Exp__Group__0__Impl rule__Exp__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5172:2: rule__Exp__Group__0__Impl rule__Exp__Group__1
            {
            pushFollow(FOLLOW_rule__Exp__Group__0__Impl_in_rule__Exp__Group__010706);
            rule__Exp__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__1_in_rule__Exp__Group__010709);
            rule__Exp__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__0"


    // $ANTLR start "rule__Exp__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5179:1: rule__Exp__Group__0__Impl : ( 'exp' ) ;
    public final void rule__Exp__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5183:1: ( ( 'exp' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5184:1: ( 'exp' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5184:1: ( 'exp' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5185:1: 'exp'
            {
             before(grammarAccess.getExpAccess().getExpKeyword_0()); 
            match(input,43,FOLLOW_43_in_rule__Exp__Group__0__Impl10737); 
             after(grammarAccess.getExpAccess().getExpKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__0__Impl"


    // $ANTLR start "rule__Exp__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5198:1: rule__Exp__Group__1 : rule__Exp__Group__1__Impl rule__Exp__Group__2 ;
    public final void rule__Exp__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5202:1: ( rule__Exp__Group__1__Impl rule__Exp__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5203:2: rule__Exp__Group__1__Impl rule__Exp__Group__2
            {
            pushFollow(FOLLOW_rule__Exp__Group__1__Impl_in_rule__Exp__Group__110768);
            rule__Exp__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__2_in_rule__Exp__Group__110771);
            rule__Exp__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__1"


    // $ANTLR start "rule__Exp__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5210:1: rule__Exp__Group__1__Impl : ( ( rule__Exp__Arg1Assignment_1 ) ) ;
    public final void rule__Exp__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5214:1: ( ( ( rule__Exp__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5215:1: ( ( rule__Exp__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5215:1: ( ( rule__Exp__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5216:1: ( rule__Exp__Arg1Assignment_1 )
            {
             before(grammarAccess.getExpAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5217:1: ( rule__Exp__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5217:2: rule__Exp__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Exp__Arg1Assignment_1_in_rule__Exp__Group__1__Impl10798);
            rule__Exp__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__1__Impl"


    // $ANTLR start "rule__Exp__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5227:1: rule__Exp__Group__2 : rule__Exp__Group__2__Impl rule__Exp__Group__3 ;
    public final void rule__Exp__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5231:1: ( rule__Exp__Group__2__Impl rule__Exp__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5232:2: rule__Exp__Group__2__Impl rule__Exp__Group__3
            {
            pushFollow(FOLLOW_rule__Exp__Group__2__Impl_in_rule__Exp__Group__210828);
            rule__Exp__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__3_in_rule__Exp__Group__210831);
            rule__Exp__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__2"


    // $ANTLR start "rule__Exp__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5239:1: rule__Exp__Group__2__Impl : ( ',' ) ;
    public final void rule__Exp__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5243:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5244:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5244:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5245:1: ','
            {
             before(grammarAccess.getExpAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__Exp__Group__2__Impl10859); 
             after(grammarAccess.getExpAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__2__Impl"


    // $ANTLR start "rule__Exp__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5258:1: rule__Exp__Group__3 : rule__Exp__Group__3__Impl ;
    public final void rule__Exp__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5262:1: ( rule__Exp__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5263:2: rule__Exp__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Exp__Group__3__Impl_in_rule__Exp__Group__310890);
            rule__Exp__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__3"


    // $ANTLR start "rule__Exp__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5269:1: rule__Exp__Group__3__Impl : ( ( rule__Exp__Arg2Assignment_3 ) ) ;
    public final void rule__Exp__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5273:1: ( ( ( rule__Exp__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5274:1: ( ( rule__Exp__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5274:1: ( ( rule__Exp__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5275:1: ( rule__Exp__Arg2Assignment_3 )
            {
             before(grammarAccess.getExpAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5276:1: ( rule__Exp__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5276:2: rule__Exp__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Exp__Arg2Assignment_3_in_rule__Exp__Group__3__Impl10917);
            rule__Exp__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__3__Impl"


    // $ANTLR start "rule__Log__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5294:1: rule__Log__Group__0 : rule__Log__Group__0__Impl rule__Log__Group__1 ;
    public final void rule__Log__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5298:1: ( rule__Log__Group__0__Impl rule__Log__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5299:2: rule__Log__Group__0__Impl rule__Log__Group__1
            {
            pushFollow(FOLLOW_rule__Log__Group__0__Impl_in_rule__Log__Group__010955);
            rule__Log__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__1_in_rule__Log__Group__010958);
            rule__Log__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__0"


    // $ANTLR start "rule__Log__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5306:1: rule__Log__Group__0__Impl : ( 'log' ) ;
    public final void rule__Log__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5310:1: ( ( 'log' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5311:1: ( 'log' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5311:1: ( 'log' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5312:1: 'log'
            {
             before(grammarAccess.getLogAccess().getLogKeyword_0()); 
            match(input,44,FOLLOW_44_in_rule__Log__Group__0__Impl10986); 
             after(grammarAccess.getLogAccess().getLogKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__0__Impl"


    // $ANTLR start "rule__Log__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5325:1: rule__Log__Group__1 : rule__Log__Group__1__Impl rule__Log__Group__2 ;
    public final void rule__Log__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5329:1: ( rule__Log__Group__1__Impl rule__Log__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5330:2: rule__Log__Group__1__Impl rule__Log__Group__2
            {
            pushFollow(FOLLOW_rule__Log__Group__1__Impl_in_rule__Log__Group__111017);
            rule__Log__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__2_in_rule__Log__Group__111020);
            rule__Log__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__1"


    // $ANTLR start "rule__Log__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5337:1: rule__Log__Group__1__Impl : ( ( rule__Log__Arg1Assignment_1 ) ) ;
    public final void rule__Log__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5341:1: ( ( ( rule__Log__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5342:1: ( ( rule__Log__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5342:1: ( ( rule__Log__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5343:1: ( rule__Log__Arg1Assignment_1 )
            {
             before(grammarAccess.getLogAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5344:1: ( rule__Log__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5344:2: rule__Log__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Log__Arg1Assignment_1_in_rule__Log__Group__1__Impl11047);
            rule__Log__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__1__Impl"


    // $ANTLR start "rule__Log__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5354:1: rule__Log__Group__2 : rule__Log__Group__2__Impl rule__Log__Group__3 ;
    public final void rule__Log__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5358:1: ( rule__Log__Group__2__Impl rule__Log__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5359:2: rule__Log__Group__2__Impl rule__Log__Group__3
            {
            pushFollow(FOLLOW_rule__Log__Group__2__Impl_in_rule__Log__Group__211077);
            rule__Log__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__3_in_rule__Log__Group__211080);
            rule__Log__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__2"


    // $ANTLR start "rule__Log__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5366:1: rule__Log__Group__2__Impl : ( ',' ) ;
    public final void rule__Log__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5370:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5371:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5371:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5372:1: ','
            {
             before(grammarAccess.getLogAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__Log__Group__2__Impl11108); 
             after(grammarAccess.getLogAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__2__Impl"


    // $ANTLR start "rule__Log__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5385:1: rule__Log__Group__3 : rule__Log__Group__3__Impl ;
    public final void rule__Log__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5389:1: ( rule__Log__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5390:2: rule__Log__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Log__Group__3__Impl_in_rule__Log__Group__311139);
            rule__Log__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__3"


    // $ANTLR start "rule__Log__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5396:1: rule__Log__Group__3__Impl : ( ( rule__Log__Arg2Assignment_3 ) ) ;
    public final void rule__Log__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5400:1: ( ( ( rule__Log__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5401:1: ( ( rule__Log__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5401:1: ( ( rule__Log__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5402:1: ( rule__Log__Arg2Assignment_3 )
            {
             before(grammarAccess.getLogAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5403:1: ( rule__Log__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5403:2: rule__Log__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Log__Arg2Assignment_3_in_rule__Log__Group__3__Impl11166);
            rule__Log__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__3__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5421:1: rule__ScaleOffset__Group__0 : rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1 ;
    public final void rule__ScaleOffset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5425:1: ( rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5426:2: rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__0__Impl_in_rule__ScaleOffset__Group__011204);
            rule__ScaleOffset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__1_in_rule__ScaleOffset__Group__011207);
            rule__ScaleOffset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__0"


    // $ANTLR start "rule__ScaleOffset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5433:1: rule__ScaleOffset__Group__0__Impl : ( 'sof' ) ;
    public final void rule__ScaleOffset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5437:1: ( ( 'sof' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5438:1: ( 'sof' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5438:1: ( 'sof' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5439:1: 'sof'
            {
             before(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); 
            match(input,45,FOLLOW_45_in_rule__ScaleOffset__Group__0__Impl11235); 
             after(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__0__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5452:1: rule__ScaleOffset__Group__1 : rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2 ;
    public final void rule__ScaleOffset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5456:1: ( rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5457:2: rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__1__Impl_in_rule__ScaleOffset__Group__111266);
            rule__ScaleOffset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__2_in_rule__ScaleOffset__Group__111269);
            rule__ScaleOffset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__1"


    // $ANTLR start "rule__ScaleOffset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5464:1: rule__ScaleOffset__Group__1__Impl : ( ( rule__ScaleOffset__Arg1Assignment_1 ) ) ;
    public final void rule__ScaleOffset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5468:1: ( ( ( rule__ScaleOffset__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5469:1: ( ( rule__ScaleOffset__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5469:1: ( ( rule__ScaleOffset__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5470:1: ( rule__ScaleOffset__Arg1Assignment_1 )
            {
             before(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5471:1: ( rule__ScaleOffset__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5471:2: rule__ScaleOffset__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Arg1Assignment_1_in_rule__ScaleOffset__Group__1__Impl11296);
            rule__ScaleOffset__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__1__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5481:1: rule__ScaleOffset__Group__2 : rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3 ;
    public final void rule__ScaleOffset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5485:1: ( rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5486:2: rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__2__Impl_in_rule__ScaleOffset__Group__211326);
            rule__ScaleOffset__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__3_in_rule__ScaleOffset__Group__211329);
            rule__ScaleOffset__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__2"


    // $ANTLR start "rule__ScaleOffset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5493:1: rule__ScaleOffset__Group__2__Impl : ( ',' ) ;
    public final void rule__ScaleOffset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5497:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5498:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5498:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5499:1: ','
            {
             before(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__ScaleOffset__Group__2__Impl11357); 
             after(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__2__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5512:1: rule__ScaleOffset__Group__3 : rule__ScaleOffset__Group__3__Impl ;
    public final void rule__ScaleOffset__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5516:1: ( rule__ScaleOffset__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5517:2: rule__ScaleOffset__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__3__Impl_in_rule__ScaleOffset__Group__311388);
            rule__ScaleOffset__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__3"


    // $ANTLR start "rule__ScaleOffset__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5523:1: rule__ScaleOffset__Group__3__Impl : ( ( rule__ScaleOffset__Arg2Assignment_3 ) ) ;
    public final void rule__ScaleOffset__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5527:1: ( ( ( rule__ScaleOffset__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5528:1: ( ( rule__ScaleOffset__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5528:1: ( ( rule__ScaleOffset__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5529:1: ( rule__ScaleOffset__Arg2Assignment_3 )
            {
             before(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5530:1: ( rule__ScaleOffset__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5530:2: rule__ScaleOffset__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Arg2Assignment_3_in_rule__ScaleOffset__Group__3__Impl11415);
            rule__ScaleOffset__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__3__Impl"


    // $ANTLR start "rule__WriteDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5548:1: rule__WriteDelay__Group__0 : rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1 ;
    public final void rule__WriteDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5552:1: ( rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5553:2: rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__0__Impl_in_rule__WriteDelay__Group__011453);
            rule__WriteDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__1_in_rule__WriteDelay__Group__011456);
            rule__WriteDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__0"


    // $ANTLR start "rule__WriteDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5560:1: rule__WriteDelay__Group__0__Impl : ( 'wra' ) ;
    public final void rule__WriteDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5564:1: ( ( 'wra' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5565:1: ( 'wra' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5565:1: ( 'wra' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5566:1: 'wra'
            {
             before(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); 
            match(input,46,FOLLOW_46_in_rule__WriteDelay__Group__0__Impl11484); 
             after(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__0__Impl"


    // $ANTLR start "rule__WriteDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5579:1: rule__WriteDelay__Group__1 : rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2 ;
    public final void rule__WriteDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5583:1: ( rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5584:2: rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__1__Impl_in_rule__WriteDelay__Group__111515);
            rule__WriteDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__2_in_rule__WriteDelay__Group__111518);
            rule__WriteDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__1"


    // $ANTLR start "rule__WriteDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5591:1: rule__WriteDelay__Group__1__Impl : ( ( rule__WriteDelay__Arg1Assignment_1 ) ) ;
    public final void rule__WriteDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5595:1: ( ( ( rule__WriteDelay__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5596:1: ( ( rule__WriteDelay__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5596:1: ( ( rule__WriteDelay__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5597:1: ( rule__WriteDelay__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5598:1: ( rule__WriteDelay__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5598:2: rule__WriteDelay__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteDelay__Arg1Assignment_1_in_rule__WriteDelay__Group__1__Impl11545);
            rule__WriteDelay__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__1__Impl"


    // $ANTLR start "rule__WriteDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5608:1: rule__WriteDelay__Group__2 : rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3 ;
    public final void rule__WriteDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5612:1: ( rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5613:2: rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__2__Impl_in_rule__WriteDelay__Group__211575);
            rule__WriteDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__3_in_rule__WriteDelay__Group__211578);
            rule__WriteDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__2"


    // $ANTLR start "rule__WriteDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5620:1: rule__WriteDelay__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5624:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5625:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5625:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5626:1: ','
            {
             before(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__WriteDelay__Group__2__Impl11606); 
             after(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__2__Impl"


    // $ANTLR start "rule__WriteDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5639:1: rule__WriteDelay__Group__3 : rule__WriteDelay__Group__3__Impl ;
    public final void rule__WriteDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5643:1: ( rule__WriteDelay__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5644:2: rule__WriteDelay__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__3__Impl_in_rule__WriteDelay__Group__311637);
            rule__WriteDelay__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__3"


    // $ANTLR start "rule__WriteDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5650:1: rule__WriteDelay__Group__3__Impl : ( ( rule__WriteDelay__Arg2Assignment_3 ) ) ;
    public final void rule__WriteDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5654:1: ( ( ( rule__WriteDelay__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5655:1: ( ( rule__WriteDelay__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5655:1: ( ( rule__WriteDelay__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5656:1: ( rule__WriteDelay__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5657:1: ( rule__WriteDelay__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5657:2: rule__WriteDelay__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteDelay__Arg2Assignment_3_in_rule__WriteDelay__Group__3__Impl11664);
            rule__WriteDelay__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__3__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5675:1: rule__WriteAllpass__Group__0 : rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1 ;
    public final void rule__WriteAllpass__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5679:1: ( rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5680:2: rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__0__Impl_in_rule__WriteAllpass__Group__011702);
            rule__WriteAllpass__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__1_in_rule__WriteAllpass__Group__011705);
            rule__WriteAllpass__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__0"


    // $ANTLR start "rule__WriteAllpass__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5687:1: rule__WriteAllpass__Group__0__Impl : ( 'wrap' ) ;
    public final void rule__WriteAllpass__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5691:1: ( ( 'wrap' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5692:1: ( 'wrap' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5692:1: ( 'wrap' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5693:1: 'wrap'
            {
             before(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); 
            match(input,47,FOLLOW_47_in_rule__WriteAllpass__Group__0__Impl11733); 
             after(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__0__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5706:1: rule__WriteAllpass__Group__1 : rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2 ;
    public final void rule__WriteAllpass__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5710:1: ( rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5711:2: rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__1__Impl_in_rule__WriteAllpass__Group__111764);
            rule__WriteAllpass__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__2_in_rule__WriteAllpass__Group__111767);
            rule__WriteAllpass__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__1"


    // $ANTLR start "rule__WriteAllpass__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5718:1: rule__WriteAllpass__Group__1__Impl : ( ( rule__WriteAllpass__Arg1Assignment_1 ) ) ;
    public final void rule__WriteAllpass__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5722:1: ( ( ( rule__WriteAllpass__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5723:1: ( ( rule__WriteAllpass__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5723:1: ( ( rule__WriteAllpass__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5724:1: ( rule__WriteAllpass__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5725:1: ( rule__WriteAllpass__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5725:2: rule__WriteAllpass__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Arg1Assignment_1_in_rule__WriteAllpass__Group__1__Impl11794);
            rule__WriteAllpass__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__1__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5735:1: rule__WriteAllpass__Group__2 : rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3 ;
    public final void rule__WriteAllpass__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5739:1: ( rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5740:2: rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__2__Impl_in_rule__WriteAllpass__Group__211824);
            rule__WriteAllpass__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__3_in_rule__WriteAllpass__Group__211827);
            rule__WriteAllpass__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__2"


    // $ANTLR start "rule__WriteAllpass__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5747:1: rule__WriteAllpass__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteAllpass__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5751:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5752:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5752:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5753:1: ','
            {
             before(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__WriteAllpass__Group__2__Impl11855); 
             after(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__2__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5766:1: rule__WriteAllpass__Group__3 : rule__WriteAllpass__Group__3__Impl ;
    public final void rule__WriteAllpass__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5770:1: ( rule__WriteAllpass__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5771:2: rule__WriteAllpass__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__3__Impl_in_rule__WriteAllpass__Group__311886);
            rule__WriteAllpass__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__3"


    // $ANTLR start "rule__WriteAllpass__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5777:1: rule__WriteAllpass__Group__3__Impl : ( ( rule__WriteAllpass__Arg2Assignment_3 ) ) ;
    public final void rule__WriteAllpass__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5781:1: ( ( ( rule__WriteAllpass__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5782:1: ( ( rule__WriteAllpass__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5782:1: ( ( rule__WriteAllpass__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5783:1: ( rule__WriteAllpass__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5784:1: ( rule__WriteAllpass__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5784:2: rule__WriteAllpass__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Arg2Assignment_3_in_rule__WriteAllpass__Group__3__Impl11913);
            rule__WriteAllpass__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__3__Impl"


    // $ANTLR start "rule__ReadDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5802:1: rule__ReadDelay__Group__0 : rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1 ;
    public final void rule__ReadDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5806:1: ( rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5807:2: rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__0__Impl_in_rule__ReadDelay__Group__011951);
            rule__ReadDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__1_in_rule__ReadDelay__Group__011954);
            rule__ReadDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__0"


    // $ANTLR start "rule__ReadDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5814:1: rule__ReadDelay__Group__0__Impl : ( 'rda' ) ;
    public final void rule__ReadDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5818:1: ( ( 'rda' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5819:1: ( 'rda' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5819:1: ( 'rda' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5820:1: 'rda'
            {
             before(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); 
            match(input,48,FOLLOW_48_in_rule__ReadDelay__Group__0__Impl11982); 
             after(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__0__Impl"


    // $ANTLR start "rule__ReadDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5833:1: rule__ReadDelay__Group__1 : rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2 ;
    public final void rule__ReadDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5837:1: ( rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5838:2: rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__1__Impl_in_rule__ReadDelay__Group__112013);
            rule__ReadDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__2_in_rule__ReadDelay__Group__112016);
            rule__ReadDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__1"


    // $ANTLR start "rule__ReadDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5845:1: rule__ReadDelay__Group__1__Impl : ( ( rule__ReadDelay__Arg1Assignment_1 ) ) ;
    public final void rule__ReadDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5849:1: ( ( ( rule__ReadDelay__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5850:1: ( ( rule__ReadDelay__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5850:1: ( ( rule__ReadDelay__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5851:1: ( rule__ReadDelay__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5852:1: ( rule__ReadDelay__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5852:2: rule__ReadDelay__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadDelay__Arg1Assignment_1_in_rule__ReadDelay__Group__1__Impl12043);
            rule__ReadDelay__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__1__Impl"


    // $ANTLR start "rule__ReadDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5862:1: rule__ReadDelay__Group__2 : rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3 ;
    public final void rule__ReadDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5866:1: ( rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5867:2: rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__2__Impl_in_rule__ReadDelay__Group__212073);
            rule__ReadDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__3_in_rule__ReadDelay__Group__212076);
            rule__ReadDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__2"


    // $ANTLR start "rule__ReadDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5874:1: rule__ReadDelay__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5878:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5879:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5879:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5880:1: ','
            {
             before(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__ReadDelay__Group__2__Impl12104); 
             after(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__2__Impl"


    // $ANTLR start "rule__ReadDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5893:1: rule__ReadDelay__Group__3 : rule__ReadDelay__Group__3__Impl ;
    public final void rule__ReadDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5897:1: ( rule__ReadDelay__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5898:2: rule__ReadDelay__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__3__Impl_in_rule__ReadDelay__Group__312135);
            rule__ReadDelay__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__3"


    // $ANTLR start "rule__ReadDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5904:1: rule__ReadDelay__Group__3__Impl : ( ( rule__ReadDelay__Arg2Assignment_3 ) ) ;
    public final void rule__ReadDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5908:1: ( ( ( rule__ReadDelay__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5909:1: ( ( rule__ReadDelay__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5909:1: ( ( rule__ReadDelay__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5910:1: ( rule__ReadDelay__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5911:1: ( rule__ReadDelay__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5911:2: rule__ReadDelay__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadDelay__Arg2Assignment_3_in_rule__ReadDelay__Group__3__Impl12162);
            rule__ReadDelay__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__3__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5929:1: rule__LoadSinLFO__Group__0 : rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1 ;
    public final void rule__LoadSinLFO__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5933:1: ( rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5934:2: rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__0__Impl_in_rule__LoadSinLFO__Group__012200);
            rule__LoadSinLFO__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__1_in_rule__LoadSinLFO__Group__012203);
            rule__LoadSinLFO__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__0"


    // $ANTLR start "rule__LoadSinLFO__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5941:1: rule__LoadSinLFO__Group__0__Impl : ( 'wlds' ) ;
    public final void rule__LoadSinLFO__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5945:1: ( ( 'wlds' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5946:1: ( 'wlds' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5946:1: ( 'wlds' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5947:1: 'wlds'
            {
             before(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); 
            match(input,49,FOLLOW_49_in_rule__LoadSinLFO__Group__0__Impl12231); 
             after(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__0__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5960:1: rule__LoadSinLFO__Group__1 : rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2 ;
    public final void rule__LoadSinLFO__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5964:1: ( rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5965:2: rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__1__Impl_in_rule__LoadSinLFO__Group__112262);
            rule__LoadSinLFO__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__2_in_rule__LoadSinLFO__Group__112265);
            rule__LoadSinLFO__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__1"


    // $ANTLR start "rule__LoadSinLFO__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5972:1: rule__LoadSinLFO__Group__1__Impl : ( ( rule__LoadSinLFO__Arg1Assignment_1 ) ) ;
    public final void rule__LoadSinLFO__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5976:1: ( ( ( rule__LoadSinLFO__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5977:1: ( ( rule__LoadSinLFO__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5977:1: ( ( rule__LoadSinLFO__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5978:1: ( rule__LoadSinLFO__Arg1Assignment_1 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5979:1: ( rule__LoadSinLFO__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5979:2: rule__LoadSinLFO__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg1Assignment_1_in_rule__LoadSinLFO__Group__1__Impl12292);
            rule__LoadSinLFO__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__1__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5989:1: rule__LoadSinLFO__Group__2 : rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3 ;
    public final void rule__LoadSinLFO__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5993:1: ( rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5994:2: rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__2__Impl_in_rule__LoadSinLFO__Group__212322);
            rule__LoadSinLFO__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__3_in_rule__LoadSinLFO__Group__212325);
            rule__LoadSinLFO__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__2"


    // $ANTLR start "rule__LoadSinLFO__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6001:1: rule__LoadSinLFO__Group__2__Impl : ( ',' ) ;
    public final void rule__LoadSinLFO__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6005:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6006:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6006:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6007:1: ','
            {
             before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__LoadSinLFO__Group__2__Impl12353); 
             after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__2__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6020:1: rule__LoadSinLFO__Group__3 : rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4 ;
    public final void rule__LoadSinLFO__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6024:1: ( rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6025:2: rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__3__Impl_in_rule__LoadSinLFO__Group__312384);
            rule__LoadSinLFO__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__4_in_rule__LoadSinLFO__Group__312387);
            rule__LoadSinLFO__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__3"


    // $ANTLR start "rule__LoadSinLFO__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6032:1: rule__LoadSinLFO__Group__3__Impl : ( ( rule__LoadSinLFO__Arg2Assignment_3 ) ) ;
    public final void rule__LoadSinLFO__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6036:1: ( ( ( rule__LoadSinLFO__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6037:1: ( ( rule__LoadSinLFO__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6037:1: ( ( rule__LoadSinLFO__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6038:1: ( rule__LoadSinLFO__Arg2Assignment_3 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6039:1: ( rule__LoadSinLFO__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6039:2: rule__LoadSinLFO__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg2Assignment_3_in_rule__LoadSinLFO__Group__3__Impl12414);
            rule__LoadSinLFO__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__3__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6049:1: rule__LoadSinLFO__Group__4 : rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5 ;
    public final void rule__LoadSinLFO__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6053:1: ( rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6054:2: rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__4__Impl_in_rule__LoadSinLFO__Group__412444);
            rule__LoadSinLFO__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__5_in_rule__LoadSinLFO__Group__412447);
            rule__LoadSinLFO__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__4"


    // $ANTLR start "rule__LoadSinLFO__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6061:1: rule__LoadSinLFO__Group__4__Impl : ( ',' ) ;
    public final void rule__LoadSinLFO__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6065:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6066:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6066:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6067:1: ','
            {
             before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); 
            match(input,35,FOLLOW_35_in_rule__LoadSinLFO__Group__4__Impl12475); 
             after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__4__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6080:1: rule__LoadSinLFO__Group__5 : rule__LoadSinLFO__Group__5__Impl ;
    public final void rule__LoadSinLFO__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6084:1: ( rule__LoadSinLFO__Group__5__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6085:2: rule__LoadSinLFO__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__5__Impl_in_rule__LoadSinLFO__Group__512506);
            rule__LoadSinLFO__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__5"


    // $ANTLR start "rule__LoadSinLFO__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6091:1: rule__LoadSinLFO__Group__5__Impl : ( ( rule__LoadSinLFO__Arg3Assignment_5 ) ) ;
    public final void rule__LoadSinLFO__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6095:1: ( ( ( rule__LoadSinLFO__Arg3Assignment_5 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6096:1: ( ( rule__LoadSinLFO__Arg3Assignment_5 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6096:1: ( ( rule__LoadSinLFO__Arg3Assignment_5 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6097:1: ( rule__LoadSinLFO__Arg3Assignment_5 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6098:1: ( rule__LoadSinLFO__Arg3Assignment_5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6098:2: rule__LoadSinLFO__Arg3Assignment_5
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg3Assignment_5_in_rule__LoadSinLFO__Group__5__Impl12533);
            rule__LoadSinLFO__Arg3Assignment_5();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__5__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6120:1: rule__LoadRampLFO__Group__0 : rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1 ;
    public final void rule__LoadRampLFO__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6124:1: ( rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6125:2: rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__0__Impl_in_rule__LoadRampLFO__Group__012575);
            rule__LoadRampLFO__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__1_in_rule__LoadRampLFO__Group__012578);
            rule__LoadRampLFO__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__0"


    // $ANTLR start "rule__LoadRampLFO__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6132:1: rule__LoadRampLFO__Group__0__Impl : ( 'wldr' ) ;
    public final void rule__LoadRampLFO__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6136:1: ( ( 'wldr' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6137:1: ( 'wldr' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6137:1: ( 'wldr' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6138:1: 'wldr'
            {
             before(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); 
            match(input,50,FOLLOW_50_in_rule__LoadRampLFO__Group__0__Impl12606); 
             after(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__0__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6151:1: rule__LoadRampLFO__Group__1 : rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2 ;
    public final void rule__LoadRampLFO__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6155:1: ( rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6156:2: rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__1__Impl_in_rule__LoadRampLFO__Group__112637);
            rule__LoadRampLFO__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__2_in_rule__LoadRampLFO__Group__112640);
            rule__LoadRampLFO__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__1"


    // $ANTLR start "rule__LoadRampLFO__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6163:1: rule__LoadRampLFO__Group__1__Impl : ( ( rule__LoadRampLFO__Arg1Assignment_1 ) ) ;
    public final void rule__LoadRampLFO__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6167:1: ( ( ( rule__LoadRampLFO__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6168:1: ( ( rule__LoadRampLFO__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6168:1: ( ( rule__LoadRampLFO__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6169:1: ( rule__LoadRampLFO__Arg1Assignment_1 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6170:1: ( rule__LoadRampLFO__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6170:2: rule__LoadRampLFO__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg1Assignment_1_in_rule__LoadRampLFO__Group__1__Impl12667);
            rule__LoadRampLFO__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__1__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6180:1: rule__LoadRampLFO__Group__2 : rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3 ;
    public final void rule__LoadRampLFO__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6184:1: ( rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6185:2: rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__2__Impl_in_rule__LoadRampLFO__Group__212697);
            rule__LoadRampLFO__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__3_in_rule__LoadRampLFO__Group__212700);
            rule__LoadRampLFO__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__2"


    // $ANTLR start "rule__LoadRampLFO__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6192:1: rule__LoadRampLFO__Group__2__Impl : ( ',' ) ;
    public final void rule__LoadRampLFO__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6196:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6197:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6197:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6198:1: ','
            {
             before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__LoadRampLFO__Group__2__Impl12728); 
             after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__2__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6211:1: rule__LoadRampLFO__Group__3 : rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4 ;
    public final void rule__LoadRampLFO__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6215:1: ( rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6216:2: rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__3__Impl_in_rule__LoadRampLFO__Group__312759);
            rule__LoadRampLFO__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__4_in_rule__LoadRampLFO__Group__312762);
            rule__LoadRampLFO__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__3"


    // $ANTLR start "rule__LoadRampLFO__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6223:1: rule__LoadRampLFO__Group__3__Impl : ( ( rule__LoadRampLFO__Arg2Assignment_3 ) ) ;
    public final void rule__LoadRampLFO__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6227:1: ( ( ( rule__LoadRampLFO__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6228:1: ( ( rule__LoadRampLFO__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6228:1: ( ( rule__LoadRampLFO__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6229:1: ( rule__LoadRampLFO__Arg2Assignment_3 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6230:1: ( rule__LoadRampLFO__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6230:2: rule__LoadRampLFO__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg2Assignment_3_in_rule__LoadRampLFO__Group__3__Impl12789);
            rule__LoadRampLFO__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__3__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6240:1: rule__LoadRampLFO__Group__4 : rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5 ;
    public final void rule__LoadRampLFO__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6244:1: ( rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6245:2: rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__4__Impl_in_rule__LoadRampLFO__Group__412819);
            rule__LoadRampLFO__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__5_in_rule__LoadRampLFO__Group__412822);
            rule__LoadRampLFO__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__4"


    // $ANTLR start "rule__LoadRampLFO__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6252:1: rule__LoadRampLFO__Group__4__Impl : ( ',' ) ;
    public final void rule__LoadRampLFO__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6256:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6257:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6257:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6258:1: ','
            {
             before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); 
            match(input,35,FOLLOW_35_in_rule__LoadRampLFO__Group__4__Impl12850); 
             after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__4__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6271:1: rule__LoadRampLFO__Group__5 : rule__LoadRampLFO__Group__5__Impl ;
    public final void rule__LoadRampLFO__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6275:1: ( rule__LoadRampLFO__Group__5__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6276:2: rule__LoadRampLFO__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__5__Impl_in_rule__LoadRampLFO__Group__512881);
            rule__LoadRampLFO__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__5"


    // $ANTLR start "rule__LoadRampLFO__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6282:1: rule__LoadRampLFO__Group__5__Impl : ( ( rule__LoadRampLFO__Arg3Assignment_5 ) ) ;
    public final void rule__LoadRampLFO__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6286:1: ( ( ( rule__LoadRampLFO__Arg3Assignment_5 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6287:1: ( ( rule__LoadRampLFO__Arg3Assignment_5 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6287:1: ( ( rule__LoadRampLFO__Arg3Assignment_5 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6288:1: ( rule__LoadRampLFO__Arg3Assignment_5 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6289:1: ( rule__LoadRampLFO__Arg3Assignment_5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6289:2: rule__LoadRampLFO__Arg3Assignment_5
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg3Assignment_5_in_rule__LoadRampLFO__Group__5__Impl12908);
            rule__LoadRampLFO__Arg3Assignment_5();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__5__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6311:1: rule__ChorusReadDelay__Group__0 : rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1 ;
    public final void rule__ChorusReadDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6315:1: ( rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6316:2: rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__0__Impl_in_rule__ChorusReadDelay__Group__012950);
            rule__ChorusReadDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__1_in_rule__ChorusReadDelay__Group__012953);
            rule__ChorusReadDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__0"


    // $ANTLR start "rule__ChorusReadDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6323:1: rule__ChorusReadDelay__Group__0__Impl : ( 'cho rda' ) ;
    public final void rule__ChorusReadDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6327:1: ( ( 'cho rda' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6328:1: ( 'cho rda' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6328:1: ( 'cho rda' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6329:1: 'cho rda'
            {
             before(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); 
            match(input,51,FOLLOW_51_in_rule__ChorusReadDelay__Group__0__Impl12981); 
             after(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__0__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6342:1: rule__ChorusReadDelay__Group__1 : rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2 ;
    public final void rule__ChorusReadDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6346:1: ( rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6347:2: rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__1__Impl_in_rule__ChorusReadDelay__Group__113012);
            rule__ChorusReadDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__2_in_rule__ChorusReadDelay__Group__113015);
            rule__ChorusReadDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__1"


    // $ANTLR start "rule__ChorusReadDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6354:1: rule__ChorusReadDelay__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6358:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6359:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6359:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6360:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); 
            match(input,35,FOLLOW_35_in_rule__ChorusReadDelay__Group__1__Impl13043); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__1__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6373:1: rule__ChorusReadDelay__Group__2 : rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3 ;
    public final void rule__ChorusReadDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6377:1: ( rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6378:2: rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__2__Impl_in_rule__ChorusReadDelay__Group__213074);
            rule__ChorusReadDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__3_in_rule__ChorusReadDelay__Group__213077);
            rule__ChorusReadDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__2"


    // $ANTLR start "rule__ChorusReadDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6385:1: rule__ChorusReadDelay__Group__2__Impl : ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusReadDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6389:1: ( ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6390:1: ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6390:1: ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6391:1: ( rule__ChorusReadDelay__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6392:1: ( rule__ChorusReadDelay__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6392:2: rule__ChorusReadDelay__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg1Assignment_2_in_rule__ChorusReadDelay__Group__2__Impl13104);
            rule__ChorusReadDelay__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__2__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6402:1: rule__ChorusReadDelay__Group__3 : rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4 ;
    public final void rule__ChorusReadDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6406:1: ( rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6407:2: rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__3__Impl_in_rule__ChorusReadDelay__Group__313134);
            rule__ChorusReadDelay__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__4_in_rule__ChorusReadDelay__Group__313137);
            rule__ChorusReadDelay__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__3"


    // $ANTLR start "rule__ChorusReadDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6414:1: rule__ChorusReadDelay__Group__3__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6418:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6419:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6419:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6420:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); 
            match(input,35,FOLLOW_35_in_rule__ChorusReadDelay__Group__3__Impl13165); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__3__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6433:1: rule__ChorusReadDelay__Group__4 : rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5 ;
    public final void rule__ChorusReadDelay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6437:1: ( rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6438:2: rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__4__Impl_in_rule__ChorusReadDelay__Group__413196);
            rule__ChorusReadDelay__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__5_in_rule__ChorusReadDelay__Group__413199);
            rule__ChorusReadDelay__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__4"


    // $ANTLR start "rule__ChorusReadDelay__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6445:1: rule__ChorusReadDelay__Group__4__Impl : ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) ) ;
    public final void rule__ChorusReadDelay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6449:1: ( ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6450:1: ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6450:1: ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6451:1: ( rule__ChorusReadDelay__Arg2Assignment_4 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6452:1: ( rule__ChorusReadDelay__Arg2Assignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6452:2: rule__ChorusReadDelay__Arg2Assignment_4
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg2Assignment_4_in_rule__ChorusReadDelay__Group__4__Impl13226);
            rule__ChorusReadDelay__Arg2Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__4__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6462:1: rule__ChorusReadDelay__Group__5 : rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6 ;
    public final void rule__ChorusReadDelay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6466:1: ( rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6467:2: rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__5__Impl_in_rule__ChorusReadDelay__Group__513256);
            rule__ChorusReadDelay__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__6_in_rule__ChorusReadDelay__Group__513259);
            rule__ChorusReadDelay__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__5"


    // $ANTLR start "rule__ChorusReadDelay__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6474:1: rule__ChorusReadDelay__Group__5__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6478:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6479:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6479:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6480:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); 
            match(input,35,FOLLOW_35_in_rule__ChorusReadDelay__Group__5__Impl13287); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__5__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6493:1: rule__ChorusReadDelay__Group__6 : rule__ChorusReadDelay__Group__6__Impl ;
    public final void rule__ChorusReadDelay__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6497:1: ( rule__ChorusReadDelay__Group__6__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6498:2: rule__ChorusReadDelay__Group__6__Impl
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__6__Impl_in_rule__ChorusReadDelay__Group__613318);
            rule__ChorusReadDelay__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__6"


    // $ANTLR start "rule__ChorusReadDelay__Group__6__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6504:1: rule__ChorusReadDelay__Group__6__Impl : ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) ) ;
    public final void rule__ChorusReadDelay__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6508:1: ( ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6509:1: ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6509:1: ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6510:1: ( rule__ChorusReadDelay__Arg3Assignment_6 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6511:1: ( rule__ChorusReadDelay__Arg3Assignment_6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6511:2: rule__ChorusReadDelay__Arg3Assignment_6
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg3Assignment_6_in_rule__ChorusReadDelay__Group__6__Impl13345);
            rule__ChorusReadDelay__Arg3Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__6__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6535:1: rule__ChorusReadValue__Group__0 : rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1 ;
    public final void rule__ChorusReadValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6539:1: ( rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6540:2: rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__0__Impl_in_rule__ChorusReadValue__Group__013389);
            rule__ChorusReadValue__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadValue__Group__1_in_rule__ChorusReadValue__Group__013392);
            rule__ChorusReadValue__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__0"


    // $ANTLR start "rule__ChorusReadValue__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6547:1: rule__ChorusReadValue__Group__0__Impl : ( 'cho rdal' ) ;
    public final void rule__ChorusReadValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6551:1: ( ( 'cho rdal' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6552:1: ( 'cho rdal' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6552:1: ( 'cho rdal' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6553:1: 'cho rdal'
            {
             before(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); 
            match(input,52,FOLLOW_52_in_rule__ChorusReadValue__Group__0__Impl13420); 
             after(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__0__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6566:1: rule__ChorusReadValue__Group__1 : rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2 ;
    public final void rule__ChorusReadValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6570:1: ( rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6571:2: rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__1__Impl_in_rule__ChorusReadValue__Group__113451);
            rule__ChorusReadValue__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadValue__Group__2_in_rule__ChorusReadValue__Group__113454);
            rule__ChorusReadValue__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__1"


    // $ANTLR start "rule__ChorusReadValue__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6578:1: rule__ChorusReadValue__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusReadValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6582:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6583:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6583:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6584:1: ','
            {
             before(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); 
            match(input,35,FOLLOW_35_in_rule__ChorusReadValue__Group__1__Impl13482); 
             after(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__1__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6597:1: rule__ChorusReadValue__Group__2 : rule__ChorusReadValue__Group__2__Impl ;
    public final void rule__ChorusReadValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6601:1: ( rule__ChorusReadValue__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6602:2: rule__ChorusReadValue__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__2__Impl_in_rule__ChorusReadValue__Group__213513);
            rule__ChorusReadValue__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__2"


    // $ANTLR start "rule__ChorusReadValue__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6608:1: rule__ChorusReadValue__Group__2__Impl : ( ( rule__ChorusReadValue__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusReadValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6612:1: ( ( ( rule__ChorusReadValue__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6613:1: ( ( rule__ChorusReadValue__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6613:1: ( ( rule__ChorusReadValue__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6614:1: ( rule__ChorusReadValue__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6615:1: ( rule__ChorusReadValue__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6615:2: rule__ChorusReadValue__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Arg1Assignment_2_in_rule__ChorusReadValue__Group__2__Impl13540);
            rule__ChorusReadValue__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__2__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6631:1: rule__ChorusScaleOffset__Group__0 : rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1 ;
    public final void rule__ChorusScaleOffset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6635:1: ( rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6636:2: rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__0__Impl_in_rule__ChorusScaleOffset__Group__013576);
            rule__ChorusScaleOffset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__1_in_rule__ChorusScaleOffset__Group__013579);
            rule__ChorusScaleOffset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__0"


    // $ANTLR start "rule__ChorusScaleOffset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6643:1: rule__ChorusScaleOffset__Group__0__Impl : ( 'cho sof' ) ;
    public final void rule__ChorusScaleOffset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6647:1: ( ( 'cho sof' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6648:1: ( 'cho sof' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6648:1: ( 'cho sof' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6649:1: 'cho sof'
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); 
            match(input,53,FOLLOW_53_in_rule__ChorusScaleOffset__Group__0__Impl13607); 
             after(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__0__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6662:1: rule__ChorusScaleOffset__Group__1 : rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2 ;
    public final void rule__ChorusScaleOffset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6666:1: ( rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6667:2: rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__1__Impl_in_rule__ChorusScaleOffset__Group__113638);
            rule__ChorusScaleOffset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__2_in_rule__ChorusScaleOffset__Group__113641);
            rule__ChorusScaleOffset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__1"


    // $ANTLR start "rule__ChorusScaleOffset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6674:1: rule__ChorusScaleOffset__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6678:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6679:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6679:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6680:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); 
            match(input,35,FOLLOW_35_in_rule__ChorusScaleOffset__Group__1__Impl13669); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__1__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6693:1: rule__ChorusScaleOffset__Group__2 : rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3 ;
    public final void rule__ChorusScaleOffset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6697:1: ( rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6698:2: rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__2__Impl_in_rule__ChorusScaleOffset__Group__213700);
            rule__ChorusScaleOffset__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__3_in_rule__ChorusScaleOffset__Group__213703);
            rule__ChorusScaleOffset__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__2"


    // $ANTLR start "rule__ChorusScaleOffset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6705:1: rule__ChorusScaleOffset__Group__2__Impl : ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusScaleOffset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6709:1: ( ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6710:1: ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6710:1: ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6711:1: ( rule__ChorusScaleOffset__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6712:1: ( rule__ChorusScaleOffset__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6712:2: rule__ChorusScaleOffset__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg1Assignment_2_in_rule__ChorusScaleOffset__Group__2__Impl13730);
            rule__ChorusScaleOffset__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__2__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6722:1: rule__ChorusScaleOffset__Group__3 : rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4 ;
    public final void rule__ChorusScaleOffset__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6726:1: ( rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6727:2: rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__3__Impl_in_rule__ChorusScaleOffset__Group__313760);
            rule__ChorusScaleOffset__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__4_in_rule__ChorusScaleOffset__Group__313763);
            rule__ChorusScaleOffset__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__3"


    // $ANTLR start "rule__ChorusScaleOffset__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6734:1: rule__ChorusScaleOffset__Group__3__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6738:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6739:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6739:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6740:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); 
            match(input,35,FOLLOW_35_in_rule__ChorusScaleOffset__Group__3__Impl13791); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__3__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6753:1: rule__ChorusScaleOffset__Group__4 : rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5 ;
    public final void rule__ChorusScaleOffset__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6757:1: ( rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6758:2: rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__4__Impl_in_rule__ChorusScaleOffset__Group__413822);
            rule__ChorusScaleOffset__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__5_in_rule__ChorusScaleOffset__Group__413825);
            rule__ChorusScaleOffset__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__4"


    // $ANTLR start "rule__ChorusScaleOffset__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6765:1: rule__ChorusScaleOffset__Group__4__Impl : ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) ) ;
    public final void rule__ChorusScaleOffset__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6769:1: ( ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6770:1: ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6770:1: ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6771:1: ( rule__ChorusScaleOffset__Arg2Assignment_4 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6772:1: ( rule__ChorusScaleOffset__Arg2Assignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6772:2: rule__ChorusScaleOffset__Arg2Assignment_4
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg2Assignment_4_in_rule__ChorusScaleOffset__Group__4__Impl13852);
            rule__ChorusScaleOffset__Arg2Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__4__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6782:1: rule__ChorusScaleOffset__Group__5 : rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6 ;
    public final void rule__ChorusScaleOffset__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6786:1: ( rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6787:2: rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__5__Impl_in_rule__ChorusScaleOffset__Group__513882);
            rule__ChorusScaleOffset__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__6_in_rule__ChorusScaleOffset__Group__513885);
            rule__ChorusScaleOffset__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__5"


    // $ANTLR start "rule__ChorusScaleOffset__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6794:1: rule__ChorusScaleOffset__Group__5__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6798:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6799:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6799:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6800:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); 
            match(input,35,FOLLOW_35_in_rule__ChorusScaleOffset__Group__5__Impl13913); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__5__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6813:1: rule__ChorusScaleOffset__Group__6 : rule__ChorusScaleOffset__Group__6__Impl ;
    public final void rule__ChorusScaleOffset__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6817:1: ( rule__ChorusScaleOffset__Group__6__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6818:2: rule__ChorusScaleOffset__Group__6__Impl
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__6__Impl_in_rule__ChorusScaleOffset__Group__613944);
            rule__ChorusScaleOffset__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__6"


    // $ANTLR start "rule__ChorusScaleOffset__Group__6__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6824:1: rule__ChorusScaleOffset__Group__6__Impl : ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) ) ;
    public final void rule__ChorusScaleOffset__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6828:1: ( ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6829:1: ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6829:1: ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6830:1: ( rule__ChorusScaleOffset__Arg3Assignment_6 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6831:1: ( rule__ChorusScaleOffset__Arg3Assignment_6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6831:2: rule__ChorusScaleOffset__Arg3Assignment_6
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg3Assignment_6_in_rule__ChorusScaleOffset__Group__6__Impl13971);
            rule__ChorusScaleOffset__Arg3Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__6__Impl"


    // $ANTLR start "rule__ReadDelayPointer__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6855:1: rule__ReadDelayPointer__Group__0 : rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1 ;
    public final void rule__ReadDelayPointer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6859:1: ( rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6860:2: rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__0__Impl_in_rule__ReadDelayPointer__Group__014015);
            rule__ReadDelayPointer__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__1_in_rule__ReadDelayPointer__Group__014018);
            rule__ReadDelayPointer__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__0"


    // $ANTLR start "rule__ReadDelayPointer__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6867:1: rule__ReadDelayPointer__Group__0__Impl : ( 'rmpa' ) ;
    public final void rule__ReadDelayPointer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6871:1: ( ( 'rmpa' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6872:1: ( 'rmpa' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6872:1: ( 'rmpa' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6873:1: 'rmpa'
            {
             before(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); 
            match(input,54,FOLLOW_54_in_rule__ReadDelayPointer__Group__0__Impl14046); 
             after(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__0__Impl"


    // $ANTLR start "rule__ReadDelayPointer__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6886:1: rule__ReadDelayPointer__Group__1 : rule__ReadDelayPointer__Group__1__Impl ;
    public final void rule__ReadDelayPointer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6890:1: ( rule__ReadDelayPointer__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6891:2: rule__ReadDelayPointer__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__1__Impl_in_rule__ReadDelayPointer__Group__114077);
            rule__ReadDelayPointer__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__1"


    // $ANTLR start "rule__ReadDelayPointer__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6897:1: rule__ReadDelayPointer__Group__1__Impl : ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) ) ;
    public final void rule__ReadDelayPointer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6901:1: ( ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6902:1: ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6902:1: ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6903:1: ( rule__ReadDelayPointer__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6904:1: ( rule__ReadDelayPointer__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6904:2: rule__ReadDelayPointer__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Arg1Assignment_1_in_rule__ReadDelayPointer__Group__1__Impl14104);
            rule__ReadDelayPointer__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__1__Impl"


    // $ANTLR start "rule__And__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6918:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6922:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6923:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_rule__And__Group__0__Impl_in_rule__And__Group__014138);
            rule__And__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__And__Group__1_in_rule__And__Group__014141);
            rule__And__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6930:1: rule__And__Group__0__Impl : ( 'and' ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6934:1: ( ( 'and' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6935:1: ( 'and' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6935:1: ( 'and' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6936:1: 'and'
            {
             before(grammarAccess.getAndAccess().getAndKeyword_0()); 
            match(input,55,FOLLOW_55_in_rule__And__Group__0__Impl14169); 
             after(grammarAccess.getAndAccess().getAndKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6949:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6953:1: ( rule__And__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6954:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__And__Group__1__Impl_in_rule__And__Group__114200);
            rule__And__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6960:1: rule__And__Group__1__Impl : ( ( rule__And__Arg1Assignment_1 ) ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6964:1: ( ( ( rule__And__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6965:1: ( ( rule__And__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6965:1: ( ( rule__And__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6966:1: ( rule__And__Arg1Assignment_1 )
            {
             before(grammarAccess.getAndAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6967:1: ( rule__And__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6967:2: rule__And__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__And__Arg1Assignment_1_in_rule__And__Group__1__Impl14227);
            rule__And__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6981:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6985:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6986:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_rule__Or__Group__0__Impl_in_rule__Or__Group__014261);
            rule__Or__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Or__Group__1_in_rule__Or__Group__014264);
            rule__Or__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6993:1: rule__Or__Group__0__Impl : ( 'or' ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6997:1: ( ( 'or' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6998:1: ( 'or' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6998:1: ( 'or' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6999:1: 'or'
            {
             before(grammarAccess.getOrAccess().getOrKeyword_0()); 
            match(input,56,FOLLOW_56_in_rule__Or__Group__0__Impl14292); 
             after(grammarAccess.getOrAccess().getOrKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7012:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7016:1: ( rule__Or__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7017:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Or__Group__1__Impl_in_rule__Or__Group__114323);
            rule__Or__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7023:1: rule__Or__Group__1__Impl : ( ( rule__Or__Arg1Assignment_1 ) ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7027:1: ( ( ( rule__Or__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7028:1: ( ( rule__Or__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7028:1: ( ( rule__Or__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7029:1: ( rule__Or__Arg1Assignment_1 )
            {
             before(grammarAccess.getOrAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7030:1: ( rule__Or__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7030:2: rule__Or__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Or__Arg1Assignment_1_in_rule__Or__Group__1__Impl14350);
            rule__Or__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Xor__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7044:1: rule__Xor__Group__0 : rule__Xor__Group__0__Impl rule__Xor__Group__1 ;
    public final void rule__Xor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7048:1: ( rule__Xor__Group__0__Impl rule__Xor__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7049:2: rule__Xor__Group__0__Impl rule__Xor__Group__1
            {
            pushFollow(FOLLOW_rule__Xor__Group__0__Impl_in_rule__Xor__Group__014384);
            rule__Xor__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Xor__Group__1_in_rule__Xor__Group__014387);
            rule__Xor__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__0"


    // $ANTLR start "rule__Xor__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7056:1: rule__Xor__Group__0__Impl : ( 'xor' ) ;
    public final void rule__Xor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7060:1: ( ( 'xor' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7061:1: ( 'xor' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7061:1: ( 'xor' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7062:1: 'xor'
            {
             before(grammarAccess.getXorAccess().getXorKeyword_0()); 
            match(input,57,FOLLOW_57_in_rule__Xor__Group__0__Impl14415); 
             after(grammarAccess.getXorAccess().getXorKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__0__Impl"


    // $ANTLR start "rule__Xor__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7075:1: rule__Xor__Group__1 : rule__Xor__Group__1__Impl ;
    public final void rule__Xor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7079:1: ( rule__Xor__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7080:2: rule__Xor__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Xor__Group__1__Impl_in_rule__Xor__Group__114446);
            rule__Xor__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__1"


    // $ANTLR start "rule__Xor__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7086:1: rule__Xor__Group__1__Impl : ( ( rule__Xor__Arg1Assignment_1 ) ) ;
    public final void rule__Xor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7090:1: ( ( ( rule__Xor__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7091:1: ( ( rule__Xor__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7091:1: ( ( rule__Xor__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7092:1: ( rule__Xor__Arg1Assignment_1 )
            {
             before(grammarAccess.getXorAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7093:1: ( rule__Xor__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7093:2: rule__Xor__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Xor__Arg1Assignment_1_in_rule__Xor__Group__1__Impl14473);
            rule__Xor__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getXorAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__1__Impl"


    // $ANTLR start "rule__Jam__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7107:1: rule__Jam__Group__0 : rule__Jam__Group__0__Impl rule__Jam__Group__1 ;
    public final void rule__Jam__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7111:1: ( rule__Jam__Group__0__Impl rule__Jam__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7112:2: rule__Jam__Group__0__Impl rule__Jam__Group__1
            {
            pushFollow(FOLLOW_rule__Jam__Group__0__Impl_in_rule__Jam__Group__014507);
            rule__Jam__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Jam__Group__1_in_rule__Jam__Group__014510);
            rule__Jam__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__0"


    // $ANTLR start "rule__Jam__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7119:1: rule__Jam__Group__0__Impl : ( 'jam' ) ;
    public final void rule__Jam__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7123:1: ( ( 'jam' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7124:1: ( 'jam' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7124:1: ( 'jam' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7125:1: 'jam'
            {
             before(grammarAccess.getJamAccess().getJamKeyword_0()); 
            match(input,58,FOLLOW_58_in_rule__Jam__Group__0__Impl14538); 
             after(grammarAccess.getJamAccess().getJamKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__0__Impl"


    // $ANTLR start "rule__Jam__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7138:1: rule__Jam__Group__1 : rule__Jam__Group__1__Impl ;
    public final void rule__Jam__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7142:1: ( rule__Jam__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7143:2: rule__Jam__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Jam__Group__1__Impl_in_rule__Jam__Group__114569);
            rule__Jam__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__1"


    // $ANTLR start "rule__Jam__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7149:1: rule__Jam__Group__1__Impl : ( ( rule__Jam__Arg1Assignment_1 ) ) ;
    public final void rule__Jam__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7153:1: ( ( ( rule__Jam__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7154:1: ( ( rule__Jam__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7154:1: ( ( rule__Jam__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7155:1: ( rule__Jam__Arg1Assignment_1 )
            {
             before(grammarAccess.getJamAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7156:1: ( rule__Jam__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7156:2: rule__Jam__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Jam__Arg1Assignment_1_in_rule__Jam__Group__1__Impl14596);
            rule__Jam__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getJamAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__1__Impl"


    // $ANTLR start "rule__Clr__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7170:1: rule__Clr__Group__0 : rule__Clr__Group__0__Impl rule__Clr__Group__1 ;
    public final void rule__Clr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7174:1: ( rule__Clr__Group__0__Impl rule__Clr__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7175:2: rule__Clr__Group__0__Impl rule__Clr__Group__1
            {
            pushFollow(FOLLOW_rule__Clr__Group__0__Impl_in_rule__Clr__Group__014630);
            rule__Clr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Clr__Group__1_in_rule__Clr__Group__014633);
            rule__Clr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__0"


    // $ANTLR start "rule__Clr__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7182:1: rule__Clr__Group__0__Impl : ( () ) ;
    public final void rule__Clr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7186:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7187:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7187:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7188:1: ()
            {
             before(grammarAccess.getClrAccess().getClrAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7189:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7191:1: 
            {
            }

             after(grammarAccess.getClrAccess().getClrAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__0__Impl"


    // $ANTLR start "rule__Clr__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7201:1: rule__Clr__Group__1 : rule__Clr__Group__1__Impl ;
    public final void rule__Clr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7205:1: ( rule__Clr__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7206:2: rule__Clr__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Clr__Group__1__Impl_in_rule__Clr__Group__114691);
            rule__Clr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__1"


    // $ANTLR start "rule__Clr__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7212:1: rule__Clr__Group__1__Impl : ( 'clr' ) ;
    public final void rule__Clr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7216:1: ( ( 'clr' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7217:1: ( 'clr' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7217:1: ( 'clr' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7218:1: 'clr'
            {
             before(grammarAccess.getClrAccess().getClrKeyword_1()); 
            match(input,59,FOLLOW_59_in_rule__Clr__Group__1__Impl14719); 
             after(grammarAccess.getClrAccess().getClrKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__1__Impl"


    // $ANTLR start "rule__Not__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7235:1: rule__Not__Group__0 : rule__Not__Group__0__Impl rule__Not__Group__1 ;
    public final void rule__Not__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7239:1: ( rule__Not__Group__0__Impl rule__Not__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7240:2: rule__Not__Group__0__Impl rule__Not__Group__1
            {
            pushFollow(FOLLOW_rule__Not__Group__0__Impl_in_rule__Not__Group__014754);
            rule__Not__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Not__Group__1_in_rule__Not__Group__014757);
            rule__Not__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__0"


    // $ANTLR start "rule__Not__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7247:1: rule__Not__Group__0__Impl : ( () ) ;
    public final void rule__Not__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7251:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7252:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7252:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7253:1: ()
            {
             before(grammarAccess.getNotAccess().getNotAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7254:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7256:1: 
            {
            }

             after(grammarAccess.getNotAccess().getNotAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__0__Impl"


    // $ANTLR start "rule__Not__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7266:1: rule__Not__Group__1 : rule__Not__Group__1__Impl ;
    public final void rule__Not__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7270:1: ( rule__Not__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7271:2: rule__Not__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Not__Group__1__Impl_in_rule__Not__Group__114815);
            rule__Not__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__1"


    // $ANTLR start "rule__Not__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7277:1: rule__Not__Group__1__Impl : ( 'not' ) ;
    public final void rule__Not__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7281:1: ( ( 'not' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7282:1: ( 'not' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7282:1: ( 'not' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7283:1: 'not'
            {
             before(grammarAccess.getNotAccess().getNotKeyword_1()); 
            match(input,60,FOLLOW_60_in_rule__Not__Group__1__Impl14843); 
             after(grammarAccess.getNotAccess().getNotKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__1__Impl"


    // $ANTLR start "rule__Absa__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7300:1: rule__Absa__Group__0 : rule__Absa__Group__0__Impl rule__Absa__Group__1 ;
    public final void rule__Absa__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7304:1: ( rule__Absa__Group__0__Impl rule__Absa__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7305:2: rule__Absa__Group__0__Impl rule__Absa__Group__1
            {
            pushFollow(FOLLOW_rule__Absa__Group__0__Impl_in_rule__Absa__Group__014878);
            rule__Absa__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Absa__Group__1_in_rule__Absa__Group__014881);
            rule__Absa__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__0"


    // $ANTLR start "rule__Absa__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7312:1: rule__Absa__Group__0__Impl : ( () ) ;
    public final void rule__Absa__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7316:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7317:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7317:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7318:1: ()
            {
             before(grammarAccess.getAbsaAccess().getAbsaAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7319:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7321:1: 
            {
            }

             after(grammarAccess.getAbsaAccess().getAbsaAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__0__Impl"


    // $ANTLR start "rule__Absa__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7331:1: rule__Absa__Group__1 : rule__Absa__Group__1__Impl ;
    public final void rule__Absa__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7335:1: ( rule__Absa__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7336:2: rule__Absa__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Absa__Group__1__Impl_in_rule__Absa__Group__114939);
            rule__Absa__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__1"


    // $ANTLR start "rule__Absa__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7342:1: rule__Absa__Group__1__Impl : ( 'absa' ) ;
    public final void rule__Absa__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7346:1: ( ( 'absa' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7347:1: ( 'absa' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7347:1: ( 'absa' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7348:1: 'absa'
            {
             before(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); 
            match(input,61,FOLLOW_61_in_rule__Absa__Group__1__Impl14967); 
             after(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__1__Impl"


    // $ANTLR start "rule__Skip__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7365:1: rule__Skip__Group__0 : rule__Skip__Group__0__Impl rule__Skip__Group__1 ;
    public final void rule__Skip__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7369:1: ( rule__Skip__Group__0__Impl rule__Skip__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7370:2: rule__Skip__Group__0__Impl rule__Skip__Group__1
            {
            pushFollow(FOLLOW_rule__Skip__Group__0__Impl_in_rule__Skip__Group__015002);
            rule__Skip__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__1_in_rule__Skip__Group__015005);
            rule__Skip__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__0"


    // $ANTLR start "rule__Skip__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7377:1: rule__Skip__Group__0__Impl : ( 'skp' ) ;
    public final void rule__Skip__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7381:1: ( ( 'skp' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7382:1: ( 'skp' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7382:1: ( 'skp' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7383:1: 'skp'
            {
             before(grammarAccess.getSkipAccess().getSkpKeyword_0()); 
            match(input,62,FOLLOW_62_in_rule__Skip__Group__0__Impl15033); 
             after(grammarAccess.getSkipAccess().getSkpKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__0__Impl"


    // $ANTLR start "rule__Skip__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7396:1: rule__Skip__Group__1 : rule__Skip__Group__1__Impl rule__Skip__Group__2 ;
    public final void rule__Skip__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7400:1: ( rule__Skip__Group__1__Impl rule__Skip__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7401:2: rule__Skip__Group__1__Impl rule__Skip__Group__2
            {
            pushFollow(FOLLOW_rule__Skip__Group__1__Impl_in_rule__Skip__Group__115064);
            rule__Skip__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__2_in_rule__Skip__Group__115067);
            rule__Skip__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__1"


    // $ANTLR start "rule__Skip__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7408:1: rule__Skip__Group__1__Impl : ( ( rule__Skip__FlagsAssignment_1 ) ) ;
    public final void rule__Skip__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7412:1: ( ( ( rule__Skip__FlagsAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7413:1: ( ( rule__Skip__FlagsAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7413:1: ( ( rule__Skip__FlagsAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7414:1: ( rule__Skip__FlagsAssignment_1 )
            {
             before(grammarAccess.getSkipAccess().getFlagsAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7415:1: ( rule__Skip__FlagsAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7415:2: rule__Skip__FlagsAssignment_1
            {
            pushFollow(FOLLOW_rule__Skip__FlagsAssignment_1_in_rule__Skip__Group__1__Impl15094);
            rule__Skip__FlagsAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getFlagsAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__1__Impl"


    // $ANTLR start "rule__Skip__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7425:1: rule__Skip__Group__2 : rule__Skip__Group__2__Impl rule__Skip__Group__3 ;
    public final void rule__Skip__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7429:1: ( rule__Skip__Group__2__Impl rule__Skip__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7430:2: rule__Skip__Group__2__Impl rule__Skip__Group__3
            {
            pushFollow(FOLLOW_rule__Skip__Group__2__Impl_in_rule__Skip__Group__215124);
            rule__Skip__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__3_in_rule__Skip__Group__215127);
            rule__Skip__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__2"


    // $ANTLR start "rule__Skip__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7437:1: rule__Skip__Group__2__Impl : ( ',' ) ;
    public final void rule__Skip__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7441:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7442:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7442:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7443:1: ','
            {
             before(grammarAccess.getSkipAccess().getCommaKeyword_2()); 
            match(input,35,FOLLOW_35_in_rule__Skip__Group__2__Impl15155); 
             after(grammarAccess.getSkipAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__2__Impl"


    // $ANTLR start "rule__Skip__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7456:1: rule__Skip__Group__3 : rule__Skip__Group__3__Impl ;
    public final void rule__Skip__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7460:1: ( rule__Skip__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7461:2: rule__Skip__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Skip__Group__3__Impl_in_rule__Skip__Group__315186);
            rule__Skip__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__3"


    // $ANTLR start "rule__Skip__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7467:1: rule__Skip__Group__3__Impl : ( ( rule__Skip__LabelAssignment_3 ) ) ;
    public final void rule__Skip__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7471:1: ( ( ( rule__Skip__LabelAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7472:1: ( ( rule__Skip__LabelAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7472:1: ( ( rule__Skip__LabelAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7473:1: ( rule__Skip__LabelAssignment_3 )
            {
             before(grammarAccess.getSkipAccess().getLabelAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7474:1: ( rule__Skip__LabelAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7474:2: rule__Skip__LabelAssignment_3
            {
            pushFollow(FOLLOW_rule__Skip__LabelAssignment_3_in_rule__Skip__Group__3__Impl15213);
            rule__Skip__LabelAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getLabelAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__3__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7492:1: rule__SPINDOUBLE__Group__0 : rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1 ;
    public final void rule__SPINDOUBLE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7496:1: ( rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7497:2: rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__0__Impl_in_rule__SPINDOUBLE__Group__015251);
            rule__SPINDOUBLE__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__1_in_rule__SPINDOUBLE__Group__015254);
            rule__SPINDOUBLE__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__0"


    // $ANTLR start "rule__SPINDOUBLE__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7504:1: rule__SPINDOUBLE__Group__0__Impl : ( ( '-' )? ) ;
    public final void rule__SPINDOUBLE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7508:1: ( ( ( '-' )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7509:1: ( ( '-' )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7509:1: ( ( '-' )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7510:1: ( '-' )?
            {
             before(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7511:1: ( '-' )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==15) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7512:2: '-'
                    {
                    match(input,15,FOLLOW_15_in_rule__SPINDOUBLE__Group__0__Impl15283); 

                    }
                    break;

            }

             after(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7523:1: rule__SPINDOUBLE__Group__1 : rule__SPINDOUBLE__Group__1__Impl ;
    public final void rule__SPINDOUBLE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7527:1: ( rule__SPINDOUBLE__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7528:2: rule__SPINDOUBLE__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__1__Impl_in_rule__SPINDOUBLE__Group__115316);
            rule__SPINDOUBLE__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__1"


    // $ANTLR start "rule__SPINDOUBLE__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7534:1: rule__SPINDOUBLE__Group__1__Impl : ( ( rule__SPINDOUBLE__Alternatives_1 ) ) ;
    public final void rule__SPINDOUBLE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7538:1: ( ( ( rule__SPINDOUBLE__Alternatives_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7539:1: ( ( rule__SPINDOUBLE__Alternatives_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7539:1: ( ( rule__SPINDOUBLE__Alternatives_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7540:1: ( rule__SPINDOUBLE__Alternatives_1 )
            {
             before(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7541:1: ( rule__SPINDOUBLE__Alternatives_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7541:2: rule__SPINDOUBLE__Alternatives_1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Alternatives_1_in_rule__SPINDOUBLE__Group__1__Impl15343);
            rule__SPINDOUBLE__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__1__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7555:1: rule__SPINDOUBLE__Group_1_1__0 : rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1 ;
    public final void rule__SPINDOUBLE__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7559:1: ( rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7560:2: rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1__015377);
            rule__SPINDOUBLE__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__1_in_rule__SPINDOUBLE__Group_1_1__015380);
            rule__SPINDOUBLE__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__0"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7567:1: rule__SPINDOUBLE__Group_1_1__0__Impl : ( RULE_INT ) ;
    public final void rule__SPINDOUBLE__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7571:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7572:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7572:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7573:1: RULE_INT
            {
             before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1__0__Impl15407); 
             after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7584:1: rule__SPINDOUBLE__Group_1_1__1 : rule__SPINDOUBLE__Group_1_1__1__Impl ;
    public final void rule__SPINDOUBLE__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7588:1: ( rule__SPINDOUBLE__Group_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7589:2: rule__SPINDOUBLE__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1__115436);
            rule__SPINDOUBLE__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__1"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7595:1: rule__SPINDOUBLE__Group_1_1__1__Impl : ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? ) ;
    public final void rule__SPINDOUBLE__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7599:1: ( ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7600:1: ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7600:1: ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7601:1: ( rule__SPINDOUBLE__Group_1_1_1__0 )?
            {
             before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7602:1: ( rule__SPINDOUBLE__Group_1_1_1__0 )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==63) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7602:2: rule__SPINDOUBLE__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0_in_rule__SPINDOUBLE__Group_1_1__1__Impl15463);
                    rule__SPINDOUBLE__Group_1_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__1__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7616:1: rule__SPINDOUBLE__Group_1_1_1__0 : rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1 ;
    public final void rule__SPINDOUBLE__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7620:1: ( rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7621:2: rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1_1__015498);
            rule__SPINDOUBLE__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1_in_rule__SPINDOUBLE__Group_1_1_1__015501);
            rule__SPINDOUBLE__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__0"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7628:1: rule__SPINDOUBLE__Group_1_1_1__0__Impl : ( '.' ) ;
    public final void rule__SPINDOUBLE__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7632:1: ( ( '.' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7633:1: ( '.' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7633:1: ( '.' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7634:1: '.'
            {
             before(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); 
            match(input,63,FOLLOW_63_in_rule__SPINDOUBLE__Group_1_1_1__0__Impl15529); 
             after(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7647:1: rule__SPINDOUBLE__Group_1_1_1__1 : rule__SPINDOUBLE__Group_1_1_1__1__Impl ;
    public final void rule__SPINDOUBLE__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7651:1: ( rule__SPINDOUBLE__Group_1_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7652:2: rule__SPINDOUBLE__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1_1__115560);
            rule__SPINDOUBLE__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__1"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7658:1: rule__SPINDOUBLE__Group_1_1_1__1__Impl : ( RULE_INT ) ;
    public final void rule__SPINDOUBLE__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7662:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7663:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7663:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7664:1: RULE_INT
            {
             before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1_1__1__Impl15587); 
             after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7679:1: rule__SPINCHOREGFLAGS__Group_1__0 : rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1 ;
    public final void rule__SPINCHOREGFLAGS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7683:1: ( rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7684:2: rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1__015620);
            rule__SPINCHOREGFLAGS__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1_in_rule__SPINCHOREGFLAGS__Group_1__015623);
            rule__SPINCHOREGFLAGS__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__0"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7691:1: rule__SPINCHOREGFLAGS__Group_1__0__Impl : ( RULE_ID ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7695:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7696:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7696:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7697:1: RULE_ID
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1__0__Impl15650); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__0__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7708:1: rule__SPINCHOREGFLAGS__Group_1__1 : rule__SPINCHOREGFLAGS__Group_1__1__Impl ;
    public final void rule__SPINCHOREGFLAGS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7712:1: ( rule__SPINCHOREGFLAGS__Group_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7713:2: rule__SPINCHOREGFLAGS__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1__115679);
            rule__SPINCHOREGFLAGS__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__1"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7719:1: rule__SPINCHOREGFLAGS__Group_1__1__Impl : ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7723:1: ( ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7724:1: ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7724:1: ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7725:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0 )*
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7726:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0 )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==64) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7726:2: rule__SPINCHOREGFLAGS__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0_in_rule__SPINCHOREGFLAGS__Group_1__1__Impl15706);
            	    rule__SPINCHOREGFLAGS__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

             after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__1__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7740:1: rule__SPINCHOREGFLAGS__Group_1_1__0 : rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1 ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7744:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7745:2: rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__015741);
            rule__SPINCHOREGFLAGS__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1_in_rule__SPINCHOREGFLAGS__Group_1_1__015744);
            rule__SPINCHOREGFLAGS__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__0"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7752:1: rule__SPINCHOREGFLAGS__Group_1_1__0__Impl : ( '|' ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7756:1: ( ( '|' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7757:1: ( '|' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7757:1: ( '|' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7758:1: '|'
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); 
            match(input,64,FOLLOW_64_in_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl15772); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__0__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7771:1: rule__SPINCHOREGFLAGS__Group_1_1__1 : rule__SPINCHOREGFLAGS__Group_1_1__1__Impl ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7775:1: ( rule__SPINCHOREGFLAGS__Group_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7776:2: rule__SPINCHOREGFLAGS__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__115803);
            rule__SPINCHOREGFLAGS__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__1"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7782:1: rule__SPINCHOREGFLAGS__Group_1_1__1__Impl : ( RULE_ID ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7786:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7787:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7787:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7788:1: RULE_ID
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl15830); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__1__Impl"


    // $ANTLR start "rule__SPINMEM__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7803:1: rule__SPINMEM__Group__0 : rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1 ;
    public final void rule__SPINMEM__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7807:1: ( rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7808:2: rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__0__Impl_in_rule__SPINMEM__Group__015863);
            rule__SPINMEM__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINMEM__Group__1_in_rule__SPINMEM__Group__015866);
            rule__SPINMEM__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__0"


    // $ANTLR start "rule__SPINMEM__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7815:1: rule__SPINMEM__Group__0__Impl : ( ( rule__SPINMEM__BufferAssignment_0 ) ) ;
    public final void rule__SPINMEM__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7819:1: ( ( ( rule__SPINMEM__BufferAssignment_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7820:1: ( ( rule__SPINMEM__BufferAssignment_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7820:1: ( ( rule__SPINMEM__BufferAssignment_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7821:1: ( rule__SPINMEM__BufferAssignment_0 )
            {
             before(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7822:1: ( rule__SPINMEM__BufferAssignment_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7822:2: rule__SPINMEM__BufferAssignment_0
            {
            pushFollow(FOLLOW_rule__SPINMEM__BufferAssignment_0_in_rule__SPINMEM__Group__0__Impl15893);
            rule__SPINMEM__BufferAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__0__Impl"


    // $ANTLR start "rule__SPINMEM__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7832:1: rule__SPINMEM__Group__1 : rule__SPINMEM__Group__1__Impl ;
    public final void rule__SPINMEM__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7836:1: ( rule__SPINMEM__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7837:2: rule__SPINMEM__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__1__Impl_in_rule__SPINMEM__Group__115923);
            rule__SPINMEM__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__1"


    // $ANTLR start "rule__SPINMEM__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7843:1: rule__SPINMEM__Group__1__Impl : ( ( rule__SPINMEM__Alternatives_1 )? ) ;
    public final void rule__SPINMEM__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7847:1: ( ( ( rule__SPINMEM__Alternatives_1 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7848:1: ( ( rule__SPINMEM__Alternatives_1 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7848:1: ( ( rule__SPINMEM__Alternatives_1 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7849:1: ( rule__SPINMEM__Alternatives_1 )?
            {
             before(grammarAccess.getSPINMEMAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7850:1: ( rule__SPINMEM__Alternatives_1 )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_INT) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_ID) ) {
                int LA28_2 = input.LA(2);

                if ( (LA28_2==EOF||LA28_2==RULE_ID||LA28_2==RULE_SC_COMMENT||(LA28_2>=24 && LA28_2<=26)||(LA28_2>=28 && LA28_2<=62)) ) {
                    alt28=1;
                }
            }
            switch (alt28) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7850:2: rule__SPINMEM__Alternatives_1
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__Alternatives_1_in_rule__SPINMEM__Group__1__Impl15950);
                    rule__SPINMEM__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINMEMAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__1__Impl"


    // $ANTLR start "rule__SPINBUF__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7864:1: rule__SPINBUF__Group__0 : rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1 ;
    public final void rule__SPINBUF__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7868:1: ( rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7869:2: rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__0__Impl_in_rule__SPINBUF__Group__015985);
            rule__SPINBUF__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINBUF__Group__1_in_rule__SPINBUF__Group__015988);
            rule__SPINBUF__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__0"


    // $ANTLR start "rule__SPINBUF__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7876:1: rule__SPINBUF__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__SPINBUF__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7880:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7881:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7881:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7882:1: RULE_ID
            {
             before(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINBUF__Group__0__Impl16015); 
             after(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__0__Impl"


    // $ANTLR start "rule__SPINBUF__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7893:1: rule__SPINBUF__Group__1 : rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2 ;
    public final void rule__SPINBUF__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7897:1: ( rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7898:2: rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__1__Impl_in_rule__SPINBUF__Group__116044);
            rule__SPINBUF__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINBUF__Group__2_in_rule__SPINBUF__Group__116047);
            rule__SPINBUF__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__1"


    // $ANTLR start "rule__SPINBUF__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7905:1: rule__SPINBUF__Group__1__Impl : ( ( rule__SPINBUF__Alternatives_1 )? ) ;
    public final void rule__SPINBUF__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7909:1: ( ( ( rule__SPINBUF__Alternatives_1 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7910:1: ( ( rule__SPINBUF__Alternatives_1 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7910:1: ( ( rule__SPINBUF__Alternatives_1 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7911:1: ( rule__SPINBUF__Alternatives_1 )?
            {
             before(grammarAccess.getSPINBUFAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7912:1: ( rule__SPINBUF__Alternatives_1 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=12 && LA29_0<=13)) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7912:2: rule__SPINBUF__Alternatives_1
                    {
                    pushFollow(FOLLOW_rule__SPINBUF__Alternatives_1_in_rule__SPINBUF__Group__1__Impl16074);
                    rule__SPINBUF__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINBUFAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__1__Impl"


    // $ANTLR start "rule__SPINBUF__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7922:1: rule__SPINBUF__Group__2 : rule__SPINBUF__Group__2__Impl ;
    public final void rule__SPINBUF__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7926:1: ( rule__SPINBUF__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7927:2: rule__SPINBUF__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__2__Impl_in_rule__SPINBUF__Group__216105);
            rule__SPINBUF__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__2"


    // $ANTLR start "rule__SPINBUF__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7933:1: rule__SPINBUF__Group__2__Impl : ( ( rule__SPINBUF__Alternatives_2 )? ) ;
    public final void rule__SPINBUF__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7937:1: ( ( ( rule__SPINBUF__Alternatives_2 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7938:1: ( ( rule__SPINBUF__Alternatives_2 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7938:1: ( ( rule__SPINBUF__Alternatives_2 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7939:1: ( rule__SPINBUF__Alternatives_2 )?
            {
             before(grammarAccess.getSPINBUFAccess().getAlternatives_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7940:1: ( rule__SPINBUF__Alternatives_2 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=14 && LA30_0<=15)) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7940:2: rule__SPINBUF__Alternatives_2
                    {
                    pushFollow(FOLLOW_rule__SPINBUF__Alternatives_2_in_rule__SPINBUF__Group__2__Impl16132);
                    rule__SPINBUF__Alternatives_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINBUFAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__2__Impl"


    // $ANTLR start "rule__BINARY24__Group_0__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7956:1: rule__BINARY24__Group_0__0 : rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1 ;
    public final void rule__BINARY24__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7960:1: ( rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7961:2: rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0__0__Impl_in_rule__BINARY24__Group_0__016169);
            rule__BINARY24__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_0__1_in_rule__BINARY24__Group_0__016172);
            rule__BINARY24__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__0"


    // $ANTLR start "rule__BINARY24__Group_0__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7968:1: rule__BINARY24__Group_0__0__Impl : ( ( rule__BINARY24__Group_0_0__0 ) ) ;
    public final void rule__BINARY24__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7972:1: ( ( ( rule__BINARY24__Group_0_0__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7973:1: ( ( rule__BINARY24__Group_0_0__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7973:1: ( ( rule__BINARY24__Group_0_0__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7974:1: ( rule__BINARY24__Group_0_0__0 )
            {
             before(grammarAccess.getBINARY24Access().getGroup_0_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7975:1: ( rule__BINARY24__Group_0_0__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7975:2: rule__BINARY24__Group_0_0__0
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__0_in_rule__BINARY24__Group_0__0__Impl16199);
            rule__BINARY24__Group_0_0__0();

            state._fsp--;


            }

             after(grammarAccess.getBINARY24Access().getGroup_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_0__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7985:1: rule__BINARY24__Group_0__1 : rule__BINARY24__Group_0__1__Impl ;
    public final void rule__BINARY24__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7989:1: ( rule__BINARY24__Group_0__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7990:2: rule__BINARY24__Group_0__1__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0__1__Impl_in_rule__BINARY24__Group_0__116229);
            rule__BINARY24__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__1"


    // $ANTLR start "rule__BINARY24__Group_0__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7996:1: rule__BINARY24__Group_0__1__Impl : ( ( RULE_ID )* ) ;
    public final void rule__BINARY24__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8000:1: ( ( ( RULE_ID )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8001:1: ( ( RULE_ID )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8001:1: ( ( RULE_ID )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8002:1: ( RULE_ID )*
            {
             before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8003:1: ( RULE_ID )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_ID) ) {
                    int LA31_2 = input.LA(2);

                    if ( (LA31_2==EOF||LA31_2==RULE_ID||LA31_2==RULE_SC_COMMENT||(LA31_2>=24 && LA31_2<=26)||(LA31_2>=28 && LA31_2<=34)||(LA31_2>=36 && LA31_2<=62)) ) {
                        alt31=1;
                    }


                }


                switch (alt31) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8003:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__BINARY24__Group_0__1__Impl16257); 

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_0_0__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8017:1: rule__BINARY24__Group_0_0__0 : rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1 ;
    public final void rule__BINARY24__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8021:1: ( rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8022:2: rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__0__Impl_in_rule__BINARY24__Group_0_0__016292);
            rule__BINARY24__Group_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__1_in_rule__BINARY24__Group_0_0__016295);
            rule__BINARY24__Group_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__0"


    // $ANTLR start "rule__BINARY24__Group_0_0__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8029:1: rule__BINARY24__Group_0_0__0__Impl : ( '%' ) ;
    public final void rule__BINARY24__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8033:1: ( ( '%' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8034:1: ( '%' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8034:1: ( '%' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8035:1: '%'
            {
             before(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); 
            match(input,65,FOLLOW_65_in_rule__BINARY24__Group_0_0__0__Impl16323); 
             after(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_0_0__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8048:1: rule__BINARY24__Group_0_0__1 : rule__BINARY24__Group_0_0__1__Impl ;
    public final void rule__BINARY24__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8052:1: ( rule__BINARY24__Group_0_0__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8053:2: rule__BINARY24__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__1__Impl_in_rule__BINARY24__Group_0_0__116354);
            rule__BINARY24__Group_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__1"


    // $ANTLR start "rule__BINARY24__Group_0_0__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8059:1: rule__BINARY24__Group_0_0__1__Impl : ( RULE_INT ) ;
    public final void rule__BINARY24__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8063:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8064:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8064:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8065:1: RULE_INT
            {
             before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__BINARY24__Group_0_0__1__Impl16381); 
             after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8080:1: rule__BINARY24__Group_1__0 : rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1 ;
    public final void rule__BINARY24__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8084:1: ( rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8085:2: rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__0__Impl_in_rule__BINARY24__Group_1__016414);
            rule__BINARY24__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_1__1_in_rule__BINARY24__Group_1__016417);
            rule__BINARY24__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__0"


    // $ANTLR start "rule__BINARY24__Group_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8092:1: rule__BINARY24__Group_1__0__Impl : ( '$' ) ;
    public final void rule__BINARY24__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8096:1: ( ( '$' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8097:1: ( '$' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8097:1: ( '$' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8098:1: '$'
            {
             before(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); 
            match(input,66,FOLLOW_66_in_rule__BINARY24__Group_1__0__Impl16445); 
             after(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8111:1: rule__BINARY24__Group_1__1 : rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2 ;
    public final void rule__BINARY24__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8115:1: ( rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8116:2: rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__1__Impl_in_rule__BINARY24__Group_1__116476);
            rule__BINARY24__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_1__2_in_rule__BINARY24__Group_1__116479);
            rule__BINARY24__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__1"


    // $ANTLR start "rule__BINARY24__Group_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8123:1: rule__BINARY24__Group_1__1__Impl : ( ( RULE_INT )* ) ;
    public final void rule__BINARY24__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8127:1: ( ( ( RULE_INT )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8128:1: ( ( RULE_INT )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8128:1: ( ( RULE_INT )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8129:1: ( RULE_INT )*
            {
             before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8130:1: ( RULE_INT )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==RULE_INT) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8130:3: RULE_INT
            	    {
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__BINARY24__Group_1__1__Impl16507); 

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8140:1: rule__BINARY24__Group_1__2 : rule__BINARY24__Group_1__2__Impl ;
    public final void rule__BINARY24__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8144:1: ( rule__BINARY24__Group_1__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8145:2: rule__BINARY24__Group_1__2__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__2__Impl_in_rule__BINARY24__Group_1__216538);
            rule__BINARY24__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__2"


    // $ANTLR start "rule__BINARY24__Group_1__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8151:1: rule__BINARY24__Group_1__2__Impl : ( ( RULE_ID )* ) ;
    public final void rule__BINARY24__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8155:1: ( ( ( RULE_ID )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8156:1: ( ( RULE_ID )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8156:1: ( ( RULE_ID )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8157:1: ( RULE_ID )*
            {
             before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8158:1: ( RULE_ID )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==RULE_ID) ) {
                    int LA33_2 = input.LA(2);

                    if ( (LA33_2==EOF||LA33_2==RULE_ID||LA33_2==RULE_SC_COMMENT||(LA33_2>=24 && LA33_2<=26)||(LA33_2>=28 && LA33_2<=34)||(LA33_2>=36 && LA33_2<=62)) ) {
                        alt33=1;
                    }


                }


                switch (alt33) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8158:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__BINARY24__Group_1__2__Impl16566); 

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__2__Impl"


    // $ANTLR start "rule__Program__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8175:1: rule__Program__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Program__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8179:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8180:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8180:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8181:1: RULE_ID
            {
             before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Program__NameAssignment_116608); 
             after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__NameAssignment_1"


    // $ANTLR start "rule__Program__PinsAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8190:1: rule__Program__PinsAssignment_2 : ( rulePin ) ;
    public final void rule__Program__PinsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8194:1: ( ( rulePin ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8195:1: ( rulePin )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8195:1: ( rulePin )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8196:1: rulePin
            {
             before(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); 
            pushFollow(FOLLOW_rulePin_in_rule__Program__PinsAssignment_216639);
            rulePin();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__PinsAssignment_2"


    // $ANTLR start "rule__Program__ControlsAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8205:1: rule__Program__ControlsAssignment_3 : ( ruleControl ) ;
    public final void rule__Program__ControlsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8209:1: ( ( ruleControl ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8210:1: ( ruleControl )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8210:1: ( ruleControl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8211:1: ruleControl
            {
             before(grammarAccess.getProgramAccess().getControlsControlParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleControl_in_rule__Program__ControlsAssignment_316670);
            ruleControl();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getControlsControlParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__ControlsAssignment_3"


    // $ANTLR start "rule__Program__ElementsAssignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8220:1: rule__Program__ElementsAssignment_4 : ( ruleSpinElement ) ;
    public final void rule__Program__ElementsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8224:1: ( ( ruleSpinElement ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8225:1: ( ruleSpinElement )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8225:1: ( ruleSpinElement )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8226:1: ruleSpinElement
            {
             before(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSpinElement_in_rule__Program__ElementsAssignment_416701);
            ruleSpinElement();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__ElementsAssignment_4"


    // $ANTLR start "rule__AudioInput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8235:1: rule__AudioInput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AudioInput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8239:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8240:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8240:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8241:1: RULE_ID
            {
             before(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioInput__VarNameAssignment_116732); 
             after(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__VarNameAssignment_1"


    // $ANTLR start "rule__AudioInput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8250:1: rule__AudioInput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__AudioInput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8254:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8255:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8255:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8256:1: RULE_ID
            {
             before(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioInput__NameAssignment_216763); 
             after(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__NameAssignment_2"


    // $ANTLR start "rule__AudioOutput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8265:1: rule__AudioOutput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AudioOutput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8269:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8270:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8270:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8271:1: RULE_ID
            {
             before(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioOutput__VarNameAssignment_116794); 
             after(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__VarNameAssignment_1"


    // $ANTLR start "rule__AudioOutput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8280:1: rule__AudioOutput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__AudioOutput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8284:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8285:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8285:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8286:1: RULE_ID
            {
             before(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioOutput__NameAssignment_216825); 
             after(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__NameAssignment_2"


    // $ANTLR start "rule__ControlInput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8295:1: rule__ControlInput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlInput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8299:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8300:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8300:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8301:1: RULE_ID
            {
             before(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlInput__VarNameAssignment_116856); 
             after(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__VarNameAssignment_1"


    // $ANTLR start "rule__ControlInput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8310:1: rule__ControlInput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlInput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8314:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8315:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8315:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8316:1: RULE_ID
            {
             before(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlInput__NameAssignment_216887); 
             after(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__NameAssignment_2"


    // $ANTLR start "rule__ControlOutput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8325:1: rule__ControlOutput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlOutput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8329:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8330:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8330:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8331:1: RULE_ID
            {
             before(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlOutput__VarNameAssignment_116918); 
             after(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__VarNameAssignment_1"


    // $ANTLR start "rule__ControlOutput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8340:1: rule__ControlOutput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlOutput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8344:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8345:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8345:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8346:1: RULE_ID
            {
             before(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlOutput__NameAssignment_216949); 
             after(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__NameAssignment_2"


    // $ANTLR start "rule__Slider__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8355:1: rule__Slider__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Slider__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8359:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8360:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8360:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8361:1: RULE_ID
            {
             before(grammarAccess.getSliderAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Slider__VarNameAssignment_116980); 
             after(grammarAccess.getSliderAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__VarNameAssignment_1"


    // $ANTLR start "rule__Slider__LabelAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8370:1: rule__Slider__LabelAssignment_2 : ( RULE_ID ) ;
    public final void rule__Slider__LabelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8374:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8375:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8375:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8376:1: RULE_ID
            {
             before(grammarAccess.getSliderAccess().getLabelIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Slider__LabelAssignment_217011); 
             after(grammarAccess.getSliderAccess().getLabelIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__LabelAssignment_2"


    // $ANTLR start "rule__CheckBox__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8385:1: rule__CheckBox__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__CheckBox__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8389:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8390:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8390:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8391:1: RULE_ID
            {
             before(grammarAccess.getCheckBoxAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__CheckBox__VarNameAssignment_117042); 
             after(grammarAccess.getCheckBoxAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__VarNameAssignment_1"


    // $ANTLR start "rule__CheckBox__LabelAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8400:1: rule__CheckBox__LabelAssignment_2 : ( RULE_ID ) ;
    public final void rule__CheckBox__LabelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8404:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8405:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8405:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8406:1: RULE_ID
            {
             before(grammarAccess.getCheckBoxAccess().getLabelIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__CheckBox__LabelAssignment_217073); 
             after(grammarAccess.getCheckBoxAccess().getLabelIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__LabelAssignment_2"


    // $ANTLR start "rule__ControlLabel__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8415:1: rule__ControlLabel__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlLabel__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8419:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8420:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8420:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8421:1: RULE_ID
            {
             before(grammarAccess.getControlLabelAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlLabel__VarNameAssignment_117104); 
             after(grammarAccess.getControlLabelAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__VarNameAssignment_1"


    // $ANTLR start "rule__ControlLabel__LabelAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8430:1: rule__ControlLabel__LabelAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlLabel__LabelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8434:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8435:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8435:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8436:1: RULE_ID
            {
             before(grammarAccess.getControlLabelAccess().getLabelIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlLabel__LabelAssignment_217135); 
             after(grammarAccess.getControlLabelAccess().getLabelIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__LabelAssignment_2"


    // $ANTLR start "rule__Equate__EnameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8445:1: rule__Equate__EnameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Equate__EnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8449:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8450:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8450:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8451:1: RULE_ID
            {
             before(grammarAccess.getEquateAccess().getEnameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Equate__EnameAssignment_117166); 
             after(grammarAccess.getEquateAccess().getEnameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__EnameAssignment_1"


    // $ANTLR start "rule__Equate__ValueAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8460:1: rule__Equate__ValueAssignment_2 : ( ruleSPINDOUBLE ) ;
    public final void rule__Equate__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8464:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8465:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8465:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8466:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Equate__ValueAssignment_217197);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__ValueAssignment_2"


    // $ANTLR start "rule__Mem__BufferAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8475:1: rule__Mem__BufferAssignment_1 : ( RULE_ID ) ;
    public final void rule__Mem__BufferAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8479:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8480:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8480:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8481:1: RULE_ID
            {
             before(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Mem__BufferAssignment_117228); 
             after(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__BufferAssignment_1"


    // $ANTLR start "rule__Mem__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8490:1: rule__Mem__LengthAssignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__Mem__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8494:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8495:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8495:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8496:1: ruleSPINREGISTER
            {
             before(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__Mem__LengthAssignment_217259);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__LengthAssignment_2"


    // $ANTLR start "rule__Offset__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8505:1: rule__Offset__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Offset__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8509:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8510:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8510:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8511:1: RULE_ID
            {
             before(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Offset__NameAssignment_117290); 
             after(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__NameAssignment_1"


    // $ANTLR start "rule__Offset__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8520:1: rule__Offset__LengthAssignment_2 : ( RULE_INT ) ;
    public final void rule__Offset__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8524:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8525:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8525:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8526:1: RULE_INT
            {
             before(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__Offset__LengthAssignment_217321); 
             after(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__LengthAssignment_2"


    // $ANTLR start "rule__Comment__RemarkAssignment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8535:1: rule__Comment__RemarkAssignment : ( RULE_SC_COMMENT ) ;
    public final void rule__Comment__RemarkAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8539:1: ( ( RULE_SC_COMMENT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8540:1: ( RULE_SC_COMMENT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8540:1: ( RULE_SC_COMMENT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8541:1: RULE_SC_COMMENT
            {
             before(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); 
            match(input,RULE_SC_COMMENT,FOLLOW_RULE_SC_COMMENT_in_rule__Comment__RemarkAssignment17352); 
             after(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__RemarkAssignment"


    // $ANTLR start "rule__Label__NameAssignment_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8550:1: rule__Label__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Label__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8554:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8555:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8555:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8556:1: RULE_ID
            {
             before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Label__NameAssignment_017383); 
             after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__NameAssignment_0"


    // $ANTLR start "rule__IsPinConnected__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8565:1: rule__IsPinConnected__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__IsPinConnected__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8569:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8570:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8570:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8571:1: RULE_ID
            {
             before(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__IsPinConnected__Arg1Assignment_117414); 
             after(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Arg1Assignment_1"


    // $ANTLR start "rule__GetInputDefault__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8580:1: rule__GetInputDefault__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__GetInputDefault__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8584:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8585:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8585:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8586:1: RULE_ID
            {
             before(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetInputDefault__NameAssignment_117445); 
             after(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__NameAssignment_1"


    // $ANTLR start "rule__GetInputDefault__VariableAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8595:1: rule__GetInputDefault__VariableAssignment_2 : ( RULE_ID ) ;
    public final void rule__GetInputDefault__VariableAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8599:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8600:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8600:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8601:1: RULE_ID
            {
             before(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetInputDefault__VariableAssignment_217476); 
             after(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__VariableAssignment_2"


    // $ANTLR start "rule__GetInputDefault__ScaleAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8610:1: rule__GetInputDefault__ScaleAssignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__GetInputDefault__ScaleAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8614:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8615:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8615:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8616:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__ScaleAssignment_317507);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__ScaleAssignment_3"


    // $ANTLR start "rule__GetInputDefault__DefaultValAssignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8625:1: rule__GetInputDefault__DefaultValAssignment_4 : ( ruleSPINDOUBLE ) ;
    public final void rule__GetInputDefault__DefaultValAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8629:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8630:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8630:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8631:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__DefaultValAssignment_417538);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__DefaultValAssignment_4"


    // $ANTLR start "rule__GetDelayScale__BufferAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8640:1: rule__GetDelayScale__BufferAssignment_1 : ( RULE_ID ) ;
    public final void rule__GetDelayScale__BufferAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8644:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8645:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8645:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8646:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleAccess().getBufferIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScale__BufferAssignment_117569); 
             after(grammarAccess.getGetDelayScaleAccess().getBufferIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__BufferAssignment_1"


    // $ANTLR start "rule__GetDelayScale__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8655:1: rule__GetDelayScale__LengthAssignment_2 : ( RULE_ID ) ;
    public final void rule__GetDelayScale__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8659:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8660:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8660:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8661:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleAccess().getLengthIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScale__LengthAssignment_217600); 
             after(grammarAccess.getGetDelayScaleAccess().getLengthIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__LengthAssignment_2"


    // $ANTLR start "rule__GetDelayScale__ControlAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8670:1: rule__GetDelayScale__ControlAssignment_3 : ( RULE_ID ) ;
    public final void rule__GetDelayScale__ControlAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8674:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8675:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8675:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8676:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleAccess().getControlIDTerminalRuleCall_3_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScale__ControlAssignment_317631); 
             after(grammarAccess.getGetDelayScaleAccess().getControlIDTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__ControlAssignment_3"


    // $ANTLR start "rule__SetOutputPin__PinNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8685:1: rule__SetOutputPin__PinNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__SetOutputPin__PinNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8689:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8690:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8690:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8691:1: RULE_ID
            {
             before(grammarAccess.getSetOutputPinAccess().getPinNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SetOutputPin__PinNameAssignment_117662); 
             after(grammarAccess.getSetOutputPinAccess().getPinNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__PinNameAssignment_1"


    // $ANTLR start "rule__SetOutputPin__VarNameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8700:1: rule__SetOutputPin__VarNameAssignment_2 : ( RULE_ID ) ;
    public final void rule__SetOutputPin__VarNameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8704:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8705:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8705:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8706:1: RULE_ID
            {
             before(grammarAccess.getSetOutputPinAccess().getVarNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SetOutputPin__VarNameAssignment_217693); 
             after(grammarAccess.getSetOutputPinAccess().getVarNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__VarNameAssignment_2"


    // $ANTLR start "rule__ReadRegister__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8715:1: rule__ReadRegister__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__ReadRegister__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8719:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8720:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8720:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8721:1: ruleSPINREGISTER
            {
             before(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ReadRegister__Arg1Assignment_117724);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Arg1Assignment_1"


    // $ANTLR start "rule__ReadRegister__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8730:1: rule__ReadRegister__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadRegister__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8734:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8735:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8735:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8736:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegister__Arg2Assignment_317755);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegisterLowshelf__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8745:1: rule__WriteRegisterLowshelf__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegisterLowshelf__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8749:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8750:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8750:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8751:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterLowshelf__Arg1Assignment_117786);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegisterLowshelf__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8760:1: rule__WriteRegisterLowshelf__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegisterLowshelf__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8764:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8765:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8765:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8766:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterLowshelf__Arg2Assignment_317817);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegisterHighshelf__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8775:1: rule__WriteRegisterHighshelf__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegisterHighshelf__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8779:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8780:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8780:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8781:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterHighshelf__Arg1Assignment_117848);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegisterHighshelf__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8790:1: rule__WriteRegisterHighshelf__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegisterHighshelf__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8794:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8795:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8795:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8796:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterHighshelf__Arg2Assignment_317879);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegister__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8805:1: rule__WriteRegister__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegister__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8809:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8810:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8810:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8811:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegister__Arg1Assignment_117910);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegister__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8820:1: rule__WriteRegister__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegister__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8824:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8825:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8825:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8826:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegister__Arg2Assignment_317941);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Arg2Assignment_3"


    // $ANTLR start "rule__Maxx__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8835:1: rule__Maxx__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__Maxx__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8839:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8840:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8840:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8841:1: ruleSPINREGISTER
            {
             before(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__Maxx__Arg1Assignment_117972);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Arg1Assignment_1"


    // $ANTLR start "rule__Maxx__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8850:1: rule__Maxx__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Maxx__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8854:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8855:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8855:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8856:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Maxx__Arg2Assignment_318003);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Arg2Assignment_3"


    // $ANTLR start "rule__ReadRegisterFilter__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8865:1: rule__ReadRegisterFilter__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__ReadRegisterFilter__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8869:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8870:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8870:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8871:1: ruleSPINREGISTER
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ReadRegisterFilter__Arg1Assignment_118034);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Arg1Assignment_1"


    // $ANTLR start "rule__ReadRegisterFilter__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8880:1: rule__ReadRegisterFilter__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadRegisterFilter__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8884:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8885:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8885:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8886:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegisterFilter__Arg2Assignment_318065);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Arg2Assignment_3"


    // $ANTLR start "rule__Mulx__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8895:1: rule__Mulx__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Mulx__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8899:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8900:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8900:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8901:1: RULE_ID
            {
             before(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Mulx__Arg1Assignment_118096); 
             after(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Arg1Assignment_1"


    // $ANTLR start "rule__Ldax__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8910:1: rule__Ldax__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Ldax__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8914:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8915:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8915:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8916:1: RULE_ID
            {
             before(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Ldax__Arg1Assignment_118127); 
             after(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Arg1Assignment_1"


    // $ANTLR start "rule__Exp__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8925:1: rule__Exp__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__Exp__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8929:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8930:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8930:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8931:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg1Assignment_118158);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Arg1Assignment_1"


    // $ANTLR start "rule__Exp__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8940:1: rule__Exp__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Exp__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8944:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8945:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8945:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8946:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg2Assignment_318189);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Arg2Assignment_3"


    // $ANTLR start "rule__Log__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8955:1: rule__Log__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__Log__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8959:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8960:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8960:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8961:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg1Assignment_118220);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Arg1Assignment_1"


    // $ANTLR start "rule__Log__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8970:1: rule__Log__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Log__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8974:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8975:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8975:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8976:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg2Assignment_318251);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Arg2Assignment_3"


    // $ANTLR start "rule__ScaleOffset__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8985:1: rule__ScaleOffset__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__ScaleOffset__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8989:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8990:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8990:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8991:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg1Assignment_118282);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Arg1Assignment_1"


    // $ANTLR start "rule__ScaleOffset__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9000:1: rule__ScaleOffset__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ScaleOffset__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9004:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9005:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9005:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9006:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg2Assignment_318313);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Arg2Assignment_3"


    // $ANTLR start "rule__WriteDelay__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9015:1: rule__WriteDelay__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__WriteDelay__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9019:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9020:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9020:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9021:1: ruleSPINMEM
            {
             before(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__WriteDelay__Arg1Assignment_118344);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Arg1Assignment_1"


    // $ANTLR start "rule__WriteDelay__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9030:1: rule__WriteDelay__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteDelay__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9034:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9035:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9035:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9036:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteDelay__Arg2Assignment_318375);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Arg2Assignment_3"


    // $ANTLR start "rule__WriteAllpass__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9045:1: rule__WriteAllpass__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__WriteAllpass__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9049:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9050:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9050:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9051:1: ruleSPINMEM
            {
             before(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__WriteAllpass__Arg1Assignment_118406);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Arg1Assignment_1"


    // $ANTLR start "rule__WriteAllpass__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9060:1: rule__WriteAllpass__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteAllpass__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9064:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9065:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9065:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9066:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteAllpass__Arg2Assignment_318437);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Arg2Assignment_3"


    // $ANTLR start "rule__ReadDelay__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9075:1: rule__ReadDelay__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__ReadDelay__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9079:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9080:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9080:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9081:1: ruleSPINMEM
            {
             before(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__ReadDelay__Arg1Assignment_118468);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Arg1Assignment_1"


    // $ANTLR start "rule__ReadDelay__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9090:1: rule__ReadDelay__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadDelay__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9094:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9095:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9095:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9096:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelay__Arg2Assignment_318499);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Arg2Assignment_3"


    // $ANTLR start "rule__LoadSinLFO__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9105:1: rule__LoadSinLFO__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__LoadSinLFO__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9109:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9110:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9110:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9111:1: ruleSPINREGISTER
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__LoadSinLFO__Arg1Assignment_118530);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg1Assignment_1"


    // $ANTLR start "rule__LoadSinLFO__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9120:1: rule__LoadSinLFO__Arg2Assignment_3 : ( RULE_INT ) ;
    public final void rule__LoadSinLFO__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9124:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9125:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9125:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9126:1: RULE_INT
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg2Assignment_318561); 
             after(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg2Assignment_3"


    // $ANTLR start "rule__LoadSinLFO__Arg3Assignment_5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9135:1: rule__LoadSinLFO__Arg3Assignment_5 : ( RULE_INT ) ;
    public final void rule__LoadSinLFO__Arg3Assignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9139:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9140:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9140:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9141:1: RULE_INT
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg3Assignment_518592); 
             after(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg3Assignment_5"


    // $ANTLR start "rule__LoadRampLFO__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9150:1: rule__LoadRampLFO__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__LoadRampLFO__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9154:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9155:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9155:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9156:1: ruleSPINREGISTER
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__LoadRampLFO__Arg1Assignment_118623);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg1Assignment_1"


    // $ANTLR start "rule__LoadRampLFO__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9165:1: rule__LoadRampLFO__Arg2Assignment_3 : ( RULE_INT ) ;
    public final void rule__LoadRampLFO__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9169:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9170:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9170:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9171:1: RULE_INT
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg2Assignment_318654); 
             after(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg2Assignment_3"


    // $ANTLR start "rule__LoadRampLFO__Arg3Assignment_5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9180:1: rule__LoadRampLFO__Arg3Assignment_5 : ( RULE_INT ) ;
    public final void rule__LoadRampLFO__Arg3Assignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9184:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9185:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9185:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9186:1: RULE_INT
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg3Assignment_518685); 
             after(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg3Assignment_5"


    // $ANTLR start "rule__ChorusReadDelay__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9195:1: rule__ChorusReadDelay__Arg1Assignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__ChorusReadDelay__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9199:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9200:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9200:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9201:1: ruleSPINREGISTER
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadDelay__Arg1Assignment_218716);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusReadDelay__Arg2Assignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9210:1: rule__ChorusReadDelay__Arg2Assignment_4 : ( ruleSPINCHOREGFLAGS ) ;
    public final void rule__ChorusReadDelay__Arg2Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9214:1: ( ( ruleSPINCHOREGFLAGS ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9215:1: ( ruleSPINCHOREGFLAGS )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9215:1: ( ruleSPINCHOREGFLAGS )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9216:1: ruleSPINCHOREGFLAGS
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusReadDelay__Arg2Assignment_418747);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg2Assignment_4"


    // $ANTLR start "rule__ChorusReadDelay__Arg3Assignment_6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9225:1: rule__ChorusReadDelay__Arg3Assignment_6 : ( ruleSPINMEM ) ;
    public final void rule__ChorusReadDelay__Arg3Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9229:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9230:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9230:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9231:1: ruleSPINMEM
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__ChorusReadDelay__Arg3Assignment_618778);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg3Assignment_6"


    // $ANTLR start "rule__ChorusReadValue__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9240:1: rule__ChorusReadValue__Arg1Assignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__ChorusReadValue__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9244:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9245:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9245:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9246:1: ruleSPINREGISTER
            {
             before(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadValue__Arg1Assignment_218809);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusScaleOffset__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9255:1: rule__ChorusScaleOffset__Arg1Assignment_2 : ( RULE_ID ) ;
    public final void rule__ChorusScaleOffset__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9259:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9260:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9260:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9261:1: RULE_ID
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ChorusScaleOffset__Arg1Assignment_218840); 
             after(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusScaleOffset__Arg2Assignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9270:1: rule__ChorusScaleOffset__Arg2Assignment_4 : ( ruleSPINCHOREGFLAGS ) ;
    public final void rule__ChorusScaleOffset__Arg2Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9274:1: ( ( ruleSPINCHOREGFLAGS ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9275:1: ( ruleSPINCHOREGFLAGS )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9275:1: ( ruleSPINCHOREGFLAGS )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9276:1: ruleSPINCHOREGFLAGS
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusScaleOffset__Arg2Assignment_418871);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg2Assignment_4"


    // $ANTLR start "rule__ChorusScaleOffset__Arg3Assignment_6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9285:1: rule__ChorusScaleOffset__Arg3Assignment_6 : ( ruleSPINDOUBLE ) ;
    public final void rule__ChorusScaleOffset__Arg3Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9289:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9290:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9290:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9291:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ChorusScaleOffset__Arg3Assignment_618902);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg3Assignment_6"


    // $ANTLR start "rule__ReadDelayPointer__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9300:1: rule__ReadDelayPointer__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadDelayPointer__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9304:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9305:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9305:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9306:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelayPointer__Arg1Assignment_118933);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Arg1Assignment_1"


    // $ANTLR start "rule__And__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9315:1: rule__And__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__And__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9319:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9320:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9320:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9321:1: ruleBINARY24
            {
             before(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__And__Arg1Assignment_118964);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Arg1Assignment_1"


    // $ANTLR start "rule__Or__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9330:1: rule__Or__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__Or__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9334:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9335:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9335:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9336:1: ruleBINARY24
            {
             before(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__Or__Arg1Assignment_118995);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Arg1Assignment_1"


    // $ANTLR start "rule__Xor__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9345:1: rule__Xor__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__Xor__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9349:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9350:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9350:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9351:1: ruleBINARY24
            {
             before(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__Xor__Arg1Assignment_119026);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Arg1Assignment_1"


    // $ANTLR start "rule__Jam__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9360:1: rule__Jam__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Jam__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9364:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9365:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9365:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9366:1: RULE_ID
            {
             before(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Jam__Arg1Assignment_119057); 
             after(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Arg1Assignment_1"


    // $ANTLR start "rule__Skip__FlagsAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9375:1: rule__Skip__FlagsAssignment_1 : ( RULE_ID ) ;
    public final void rule__Skip__FlagsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9379:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9380:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9380:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9381:1: RULE_ID
            {
             before(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Skip__FlagsAssignment_119088); 
             after(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__FlagsAssignment_1"


    // $ANTLR start "rule__Skip__LabelAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9390:1: rule__Skip__LabelAssignment_3 : ( ( RULE_ID ) ) ;
    public final void rule__Skip__LabelAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9394:1: ( ( ( RULE_ID ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9395:1: ( ( RULE_ID ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9395:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9396:1: ( RULE_ID )
            {
             before(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9397:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9398:1: RULE_ID
            {
             before(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Skip__LabelAssignment_319123); 
             after(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); 

            }

             after(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__LabelAssignment_3"


    // $ANTLR start "rule__SPINMEM__BufferAssignment_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9409:1: rule__SPINMEM__BufferAssignment_0 : ( ruleSPINBUF ) ;
    public final void rule__SPINMEM__BufferAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9413:1: ( ( ruleSPINBUF ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9414:1: ( ruleSPINBUF )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9414:1: ( ruleSPINBUF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9415:1: ruleSPINBUF
            {
             before(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); 
            pushFollow(FOLLOW_ruleSPINBUF_in_rule__SPINMEM__BufferAssignment_019158);
            ruleSPINBUF();

            state._fsp--;

             after(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__BufferAssignment_0"


    // $ANTLR start "rule__SPINMEM__ValueAssignment_1_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9424:1: rule__SPINMEM__ValueAssignment_1_0 : ( RULE_INT ) ;
    public final void rule__SPINMEM__ValueAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9428:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9429:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9429:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9430:1: RULE_INT
            {
             before(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINMEM__ValueAssignment_1_019189); 
             after(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__ValueAssignment_1_0"


    // $ANTLR start "rule__SPINMEM__OffsetAssignment_1_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9439:1: rule__SPINMEM__OffsetAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__SPINMEM__OffsetAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9443:1: ( ( ( RULE_ID ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9444:1: ( ( RULE_ID ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9444:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9445:1: ( RULE_ID )
            {
             before(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9446:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9447:1: RULE_ID
            {
             before(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINMEM__OffsetAssignment_1_119224); 
             after(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); 

            }

             after(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__OffsetAssignment_1_1"

    // Delegated rules


 

    public static final BitSet FOLLOW_ruleProgram_in_entryRuleProgram61 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProgram68 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__0_in_ruleProgram94 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePin_in_entryRulePin121 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePin128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Pin__Alternatives_in_rulePin154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInputPin_in_entryRuleInputPin181 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInputPin188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__InputPin__Alternatives_in_ruleInputPin214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutputPin_in_entryRuleOutputPin241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOutputPin248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__OutputPin__Alternatives_in_ruleOutputPin274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioInput_in_entryRuleAudioInput301 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAudioInput308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__0_in_ruleAudioInput334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioOutput_in_entryRuleAudioOutput361 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAudioOutput368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__0_in_ruleAudioOutput394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlInput_in_entryRuleControlInput421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControlInput428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__0_in_ruleControlInput454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlOutput_in_entryRuleControlOutput481 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControlOutput488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__0_in_ruleControlOutput514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControl_in_entryRuleControl541 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControl548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Control__Alternatives_in_ruleControl574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSlider_in_entryRuleSlider601 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSlider608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__Group__0_in_ruleSlider634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCheckBox_in_entryRuleCheckBox661 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCheckBox668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__0_in_ruleCheckBox694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulecontrolLabel_in_entryRulecontrolLabel721 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulecontrolLabel728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__0_in_rulecontrolLabel754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinElement_in_entryRuleSpinElement781 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSpinElement788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinElement__Alternatives_in_ruleSpinElement814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEquate_in_entryRuleEquate841 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEquate848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__0_in_ruleEquate874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMem_in_entryRuleMem901 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMem908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__0_in_ruleMem934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOffset_in_entryRuleOffset961 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOffset968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__0_in_ruleOffset994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_entryRuleComment1021 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComment1028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comment__RemarkAssignment_in_ruleComment1054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_entryRuleLabel1081 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabel1088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__0_in_ruleLabel1114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMacro_in_entryRuleMacro1141 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMacro1148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Macro__Alternatives_in_ruleMacro1174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsPinConnected_in_entryRuleIsPinConnected1201 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsPinConnected1208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__0_in_ruleIsPinConnected1234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsElse_in_entryRuleIsElse1261 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsElse1268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__0_in_ruleIsElse1294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsEndif_in_entryRuleIsEndif1321 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsEndif1328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__0_in_ruleIsEndif1354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetInputDefault_in_entryRuleGetInputDefault1381 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetInputDefault1388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__0_in_ruleGetInputDefault1414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetDelayScale_in_entryRuleGetDelayScale1441 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetDelayScale1448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__0_in_ruleGetDelayScale1474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetOutputPin_in_entryRuleSetOutputPin1501 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSetOutputPin1508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__0_in_ruleSetOutputPin1534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstruction_in_entryRuleInstruction1561 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInstruction1568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Instruction__Alternatives_in_ruleInstruction1594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_S1_14_in_entryRuleInst_B6_S1_141621 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B6_S1_141628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B6_S1_14__Alternatives_in_ruleInst_B6_S1_141654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B15_S1_9_in_entryRuleInst_B15_S1_91681 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B15_S1_91688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B15_S1_9__Alternatives_in_ruleInst_B15_S1_91714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_in_entryRuleInst_B61741 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B61748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B6__Alternatives_in_ruleInst_B61774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B24_in_entryRuleInst_B241801 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B241808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B24__Alternatives_in_ruleInst_B241834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_X0_in_entryRuleInst_X01861 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_X01868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_X0__Alternatives_in_ruleInst_X01894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_S1_14_S1_10_in_entryRuleInst_S1_14_S1_101921 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_S1_14_S1_101928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_S1_14_S1_10__Alternatives_in_ruleInst_S1_14_S1_101954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegister_in_entryRuleReadRegister1981 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadRegister1988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__0_in_ruleReadRegister2014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterLowshelf_in_entryRuleWriteRegisterLowshelf2041 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegisterLowshelf2048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__0_in_ruleWriteRegisterLowshelf2074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterHighshelf_in_entryRuleWriteRegisterHighshelf2101 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegisterHighshelf2108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__0_in_ruleWriteRegisterHighshelf2134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegister_in_entryRuleWriteRegister2161 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegister2168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__0_in_ruleWriteRegister2194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMaxx_in_entryRuleMaxx2221 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMaxx2228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__0_in_ruleMaxx2254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegisterFilter_in_entryRuleReadRegisterFilter2281 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadRegisterFilter2288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__0_in_ruleReadRegisterFilter2314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulx_in_entryRuleMulx2341 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMulx2348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__0_in_ruleMulx2374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLdax_in_entryRuleLdax2401 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLdax2408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__0_in_ruleLdax2434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExp_in_entryRuleExp2461 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExp2468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__0_in_ruleExp2494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLog_in_entryRuleLog2521 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLog2528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__0_in_ruleLog2554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleScaleOffset_in_entryRuleScaleOffset2581 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleScaleOffset2588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__0_in_ruleScaleOffset2614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteDelay_in_entryRuleWriteDelay2641 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteDelay2648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__0_in_ruleWriteDelay2674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteAllpass_in_entryRuleWriteAllpass2701 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteAllpass2708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__0_in_ruleWriteAllpass2734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelay_in_entryRuleReadDelay2761 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadDelay2768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__0_in_ruleReadDelay2794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadSinLFO_in_entryRuleLoadSinLFO2821 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLoadSinLFO2828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__0_in_ruleLoadSinLFO2854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadRampLFO_in_entryRuleLoadRampLFO2881 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLoadRampLFO2888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__0_in_ruleLoadRampLFO2914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadDelay_in_entryRuleChorusReadDelay2941 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusReadDelay2948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__0_in_ruleChorusReadDelay2974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadValue_in_entryRuleChorusReadValue3001 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusReadValue3008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__0_in_ruleChorusReadValue3034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusScaleOffset_in_entryRuleChorusScaleOffset3061 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusScaleOffset3068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__0_in_ruleChorusScaleOffset3094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelayPointer_in_entryRuleReadDelayPointer3121 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadDelayPointer3128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__0_in_ruleReadDelayPointer3154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnd_in_entryRuleAnd3181 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAnd3188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__0_in_ruleAnd3214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOr_in_entryRuleOr3241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOr3248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__0_in_ruleOr3274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXor_in_entryRuleXor3301 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXor3308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__0_in_ruleXor3334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJam_in_entryRuleJam3361 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJam3368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__0_in_ruleJam3394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClr_in_entryRuleClr3421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleClr3428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__0_in_ruleClr3454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNot_in_entryRuleNot3481 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNot3488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__0_in_ruleNot3514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbsa_in_entryRuleAbsa3541 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbsa3548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__0_in_ruleAbsa3574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSkip_in_entryRuleSkip3601 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSkip3608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__0_in_ruleSkip3634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_entryRuleSPINDOUBLE3661 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINDOUBLE3668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__0_in_ruleSPINDOUBLE3694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_entryRuleSPINREGISTER3721 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINREGISTER3728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINREGISTER__Alternatives_in_ruleSPINREGISTER3754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_entryRuleSPINCHOREGFLAGS3781 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINCHOREGFLAGS3788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Alternatives_in_ruleSPINCHOREGFLAGS3814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_entryRuleSPINMEM3841 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINMEM3848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__0_in_ruleSPINMEM3874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINBUF_in_entryRuleSPINBUF3901 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINBUF3908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__0_in_ruleSPINBUF3934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_entryRuleBINARY243961 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBINARY243968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Alternatives_in_ruleBINARY243994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInputPin_in_rule__Pin__Alternatives4030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutputPin_in_rule__Pin__Alternatives4047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioInput_in_rule__InputPin__Alternatives4079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlInput_in_rule__InputPin__Alternatives4096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioOutput_in_rule__OutputPin__Alternatives4128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlOutput_in_rule__OutputPin__Alternatives4145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSlider_in_rule__Control__Alternatives4177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCheckBox_in_rule__Control__Alternatives4194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulecontrolLabel_in_rule__Control__Alternatives4211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEquate_in_rule__SpinElement__Alternatives4243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMem_in_rule__SpinElement__Alternatives4260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstruction_in_rule__SpinElement__Alternatives4277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_rule__SpinElement__Alternatives4294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_rule__SpinElement__Alternatives4311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMacro_in_rule__SpinElement__Alternatives4328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOffset_in_rule__SpinElement__Alternatives4345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsPinConnected_in_rule__Macro__Alternatives4377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsElse_in_rule__Macro__Alternatives4394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsEndif_in_rule__Macro__Alternatives4411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetInputDefault_in_rule__Macro__Alternatives4428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetDelayScale_in_rule__Macro__Alternatives4445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetOutputPin_in_rule__Macro__Alternatives4462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B15_S1_9_in_rule__Instruction__Alternatives4494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_S1_14_in_rule__Instruction__Alternatives4511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_S1_14_S1_10_in_rule__Instruction__Alternatives4528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_in_rule__Instruction__Alternatives4545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B24_in_rule__Instruction__Alternatives4562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSkip_in_rule__Instruction__Alternatives4579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJam_in_rule__Instruction__Alternatives4596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_X0_in_rule__Instruction__Alternatives4613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadSinLFO_in_rule__Instruction__Alternatives4630 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadRampLFO_in_rule__Instruction__Alternatives4647 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadDelay_in_rule__Instruction__Alternatives4664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadValue_in_rule__Instruction__Alternatives4681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusScaleOffset_in_rule__Instruction__Alternatives4698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLog_in_rule__Instruction__Alternatives4715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelayPointer_in_rule__Instruction__Alternatives4732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegister_in_rule__Inst_B6_S1_14__Alternatives4764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegister_in_rule__Inst_B6_S1_14__Alternatives4781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegisterFilter_in_rule__Inst_B6_S1_14__Alternatives4798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMaxx_in_rule__Inst_B6_S1_14__Alternatives4815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterHighshelf_in_rule__Inst_B6_S1_14__Alternatives4832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterLowshelf_in_rule__Inst_B6_S1_14__Alternatives4849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelay_in_rule__Inst_B15_S1_9__Alternatives4881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteDelay_in_rule__Inst_B15_S1_9__Alternatives4898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteAllpass_in_rule__Inst_B15_S1_9__Alternatives4915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulx_in_rule__Inst_B6__Alternatives4947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLdax_in_rule__Inst_B6__Alternatives4964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnd_in_rule__Inst_B24__Alternatives4996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOr_in_rule__Inst_B24__Alternatives5013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXor_in_rule__Inst_B24__Alternatives5030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClr_in_rule__Inst_X0__Alternatives5062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNot_in_rule__Inst_X0__Alternatives5079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbsa_in_rule__Inst_X0__Alternatives5096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExp_in_rule__Inst_S1_14_S1_10__Alternatives5128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleScaleOffset_in_rule__Inst_S1_14_S1_10__Alternatives5145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINDOUBLE__Alternatives_15177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__0_in_rule__SPINDOUBLE__Alternatives_15194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINREGISTER__Alternatives5227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINREGISTER__Alternatives5244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINCHOREGFLAGS__Alternatives5276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0_in_rule__SPINCHOREGFLAGS__Alternatives5293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__ValueAssignment_1_0_in_rule__SPINMEM__Alternatives_15327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__OffsetAssignment_1_1_in_rule__SPINMEM__Alternatives_15345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_rule__SPINBUF__Alternatives_15379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_rule__SPINBUF__Alternatives_15399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_rule__SPINBUF__Alternatives_25434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_rule__SPINBUF__Alternatives_25454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__0_in_rule__BINARY24__Alternatives5488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__0_in_rule__BINARY24__Alternatives5506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__0__Impl_in_rule__Program__Group__05537 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Program__Group__1_in_rule__Program__Group__05540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_rule__Program__Group__0__Impl5568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__1__Impl_in_rule__Program__Group__15599 = new BitSet(new long[]{0x00000000001E0000L});
    public static final BitSet FOLLOW_rule__Program__Group__2_in_rule__Program__Group__15602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__NameAssignment_1_in_rule__Program__Group__1__Impl5629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__2__Impl_in_rule__Program__Group__25659 = new BitSet(new long[]{0x7FFFFFF7F7E00050L});
    public static final BitSet FOLLOW_rule__Program__Group__3_in_rule__Program__Group__25662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5691 = new BitSet(new long[]{0x00000000001E0002L});
    public static final BitSet FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5703 = new BitSet(new long[]{0x00000000001E0002L});
    public static final BitSet FOLLOW_rule__Program__Group__3__Impl_in_rule__Program__Group__35736 = new BitSet(new long[]{0x7FFFFFF7F7E00050L});
    public static final BitSet FOLLOW_rule__Program__Group__4_in_rule__Program__Group__35739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__ControlsAssignment_3_in_rule__Program__Group__3__Impl5766 = new BitSet(new long[]{0x0000000000E00002L});
    public static final BitSet FOLLOW_rule__Program__Group__4__Impl_in_rule__Program__Group__45797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__ElementsAssignment_4_in_rule__Program__Group__4__Impl5826 = new BitSet(new long[]{0x7FFFFFF7F7E00052L});
    public static final BitSet FOLLOW_rule__Program__ElementsAssignment_4_in_rule__Program__Group__4__Impl5838 = new BitSet(new long[]{0x7FFFFFF7F7E00052L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__0__Impl_in_rule__AudioInput__Group__05881 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__1_in_rule__AudioInput__Group__05884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_rule__AudioInput__Group__0__Impl5912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__1__Impl_in_rule__AudioInput__Group__15943 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__2_in_rule__AudioInput__Group__15946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__VarNameAssignment_1_in_rule__AudioInput__Group__1__Impl5973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__2__Impl_in_rule__AudioInput__Group__26003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__NameAssignment_2_in_rule__AudioInput__Group__2__Impl6030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__0__Impl_in_rule__AudioOutput__Group__06066 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__1_in_rule__AudioOutput__Group__06069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_rule__AudioOutput__Group__0__Impl6097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__1__Impl_in_rule__AudioOutput__Group__16128 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__2_in_rule__AudioOutput__Group__16131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__VarNameAssignment_1_in_rule__AudioOutput__Group__1__Impl6158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__2__Impl_in_rule__AudioOutput__Group__26188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__NameAssignment_2_in_rule__AudioOutput__Group__2__Impl6215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__0__Impl_in_rule__ControlInput__Group__06251 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__1_in_rule__ControlInput__Group__06254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_rule__ControlInput__Group__0__Impl6282 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__1__Impl_in_rule__ControlInput__Group__16313 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__2_in_rule__ControlInput__Group__16316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__VarNameAssignment_1_in_rule__ControlInput__Group__1__Impl6343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__2__Impl_in_rule__ControlInput__Group__26373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__NameAssignment_2_in_rule__ControlInput__Group__2__Impl6400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__0__Impl_in_rule__ControlOutput__Group__06436 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__1_in_rule__ControlOutput__Group__06439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_rule__ControlOutput__Group__0__Impl6467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__1__Impl_in_rule__ControlOutput__Group__16498 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__2_in_rule__ControlOutput__Group__16501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__VarNameAssignment_1_in_rule__ControlOutput__Group__1__Impl6528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__2__Impl_in_rule__ControlOutput__Group__26558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__NameAssignment_2_in_rule__ControlOutput__Group__2__Impl6585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__Group__0__Impl_in_rule__Slider__Group__06621 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Slider__Group__1_in_rule__Slider__Group__06624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_rule__Slider__Group__0__Impl6652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__Group__1__Impl_in_rule__Slider__Group__16683 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Slider__Group__2_in_rule__Slider__Group__16686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__VarNameAssignment_1_in_rule__Slider__Group__1__Impl6713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__Group__2__Impl_in_rule__Slider__Group__26743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__LabelAssignment_2_in_rule__Slider__Group__2__Impl6770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__0__Impl_in_rule__CheckBox__Group__06806 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__1_in_rule__CheckBox__Group__06809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_rule__CheckBox__Group__0__Impl6837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__1__Impl_in_rule__CheckBox__Group__16868 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__2_in_rule__CheckBox__Group__16871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__VarNameAssignment_1_in_rule__CheckBox__Group__1__Impl6898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__2__Impl_in_rule__CheckBox__Group__26928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__LabelAssignment_2_in_rule__CheckBox__Group__2__Impl6955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__0__Impl_in_rule__ControlLabel__Group__06991 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__1_in_rule__ControlLabel__Group__06994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_rule__ControlLabel__Group__0__Impl7022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__1__Impl_in_rule__ControlLabel__Group__17053 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__2_in_rule__ControlLabel__Group__17056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__VarNameAssignment_1_in_rule__ControlLabel__Group__1__Impl7083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__2__Impl_in_rule__ControlLabel__Group__27113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__LabelAssignment_2_in_rule__ControlLabel__Group__2__Impl7140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__0__Impl_in_rule__Equate__Group__07176 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Equate__Group__1_in_rule__Equate__Group__07179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_rule__Equate__Group__0__Impl7207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__1__Impl_in_rule__Equate__Group__17238 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Equate__Group__2_in_rule__Equate__Group__17241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__EnameAssignment_1_in_rule__Equate__Group__1__Impl7268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__2__Impl_in_rule__Equate__Group__27298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__ValueAssignment_2_in_rule__Equate__Group__2__Impl7325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__0__Impl_in_rule__Mem__Group__07361 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Mem__Group__1_in_rule__Mem__Group__07364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_rule__Mem__Group__0__Impl7392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__1__Impl_in_rule__Mem__Group__17423 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__Mem__Group__2_in_rule__Mem__Group__17426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__BufferAssignment_1_in_rule__Mem__Group__1__Impl7453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__2__Impl_in_rule__Mem__Group__27483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__LengthAssignment_2_in_rule__Mem__Group__2__Impl7510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__0__Impl_in_rule__Offset__Group__07546 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Offset__Group__1_in_rule__Offset__Group__07549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_rule__Offset__Group__0__Impl7577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__1__Impl_in_rule__Offset__Group__17608 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__Offset__Group__2_in_rule__Offset__Group__17611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__NameAssignment_1_in_rule__Offset__Group__1__Impl7638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__2__Impl_in_rule__Offset__Group__27668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__LengthAssignment_2_in_rule__Offset__Group__2__Impl7695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__0__Impl_in_rule__Label__Group__07731 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_rule__Label__Group__1_in_rule__Label__Group__07734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__NameAssignment_0_in_rule__Label__Group__0__Impl7761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__1__Impl_in_rule__Label__Group__17791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_rule__Label__Group__1__Impl7819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__0__Impl_in_rule__IsPinConnected__Group__07854 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__1_in_rule__IsPinConnected__Group__07857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_rule__IsPinConnected__Group__0__Impl7885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__1__Impl_in_rule__IsPinConnected__Group__17916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Arg1Assignment_1_in_rule__IsPinConnected__Group__1__Impl7943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__0__Impl_in_rule__IsElse__Group__07977 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_rule__IsElse__Group__1_in_rule__IsElse__Group__07980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__1__Impl_in_rule__IsElse__Group__18038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_rule__IsElse__Group__1__Impl8066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__0__Impl_in_rule__IsEndif__Group__08101 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__1_in_rule__IsEndif__Group__08104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__1__Impl_in_rule__IsEndif__Group__18162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_rule__IsEndif__Group__1__Impl8190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__0__Impl_in_rule__GetInputDefault__Group__08225 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__1_in_rule__GetInputDefault__Group__08228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_rule__GetInputDefault__Group__0__Impl8256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__1__Impl_in_rule__GetInputDefault__Group__18287 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__2_in_rule__GetInputDefault__Group__18290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__NameAssignment_1_in_rule__GetInputDefault__Group__1__Impl8317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__2__Impl_in_rule__GetInputDefault__Group__28347 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__3_in_rule__GetInputDefault__Group__28350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__VariableAssignment_2_in_rule__GetInputDefault__Group__2__Impl8377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__3__Impl_in_rule__GetInputDefault__Group__38407 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__4_in_rule__GetInputDefault__Group__38410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__ScaleAssignment_3_in_rule__GetInputDefault__Group__3__Impl8437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__4__Impl_in_rule__GetInputDefault__Group__48467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__DefaultValAssignment_4_in_rule__GetInputDefault__Group__4__Impl8494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__0__Impl_in_rule__GetDelayScale__Group__08534 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__1_in_rule__GetDelayScale__Group__08537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_rule__GetDelayScale__Group__0__Impl8565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__1__Impl_in_rule__GetDelayScale__Group__18596 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__2_in_rule__GetDelayScale__Group__18599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__BufferAssignment_1_in_rule__GetDelayScale__Group__1__Impl8626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__2__Impl_in_rule__GetDelayScale__Group__28656 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__3_in_rule__GetDelayScale__Group__28659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__LengthAssignment_2_in_rule__GetDelayScale__Group__2__Impl8686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__3__Impl_in_rule__GetDelayScale__Group__38716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__ControlAssignment_3_in_rule__GetDelayScale__Group__3__Impl8743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__0__Impl_in_rule__SetOutputPin__Group__08781 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__1_in_rule__SetOutputPin__Group__08784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__SetOutputPin__Group__0__Impl8812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__1__Impl_in_rule__SetOutputPin__Group__18843 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__2_in_rule__SetOutputPin__Group__18846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__PinNameAssignment_1_in_rule__SetOutputPin__Group__1__Impl8873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__2__Impl_in_rule__SetOutputPin__Group__28903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__VarNameAssignment_2_in_rule__SetOutputPin__Group__2__Impl8930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__0__Impl_in_rule__ReadRegister__Group__08966 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__1_in_rule__ReadRegister__Group__08969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ReadRegister__Group__0__Impl8997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__1__Impl_in_rule__ReadRegister__Group__19028 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__2_in_rule__ReadRegister__Group__19031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Arg1Assignment_1_in_rule__ReadRegister__Group__1__Impl9058 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__2__Impl_in_rule__ReadRegister__Group__29088 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__3_in_rule__ReadRegister__Group__29091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ReadRegister__Group__2__Impl9119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__3__Impl_in_rule__ReadRegister__Group__39150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Arg2Assignment_3_in_rule__ReadRegister__Group__3__Impl9177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__0__Impl_in_rule__WriteRegisterLowshelf__Group__09215 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__1_in_rule__WriteRegisterLowshelf__Group__09218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_rule__WriteRegisterLowshelf__Group__0__Impl9246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__1__Impl_in_rule__WriteRegisterLowshelf__Group__19277 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__2_in_rule__WriteRegisterLowshelf__Group__19280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Arg1Assignment_1_in_rule__WriteRegisterLowshelf__Group__1__Impl9307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__2__Impl_in_rule__WriteRegisterLowshelf__Group__29337 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__3_in_rule__WriteRegisterLowshelf__Group__29340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__WriteRegisterLowshelf__Group__2__Impl9368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__3__Impl_in_rule__WriteRegisterLowshelf__Group__39399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Arg2Assignment_3_in_rule__WriteRegisterLowshelf__Group__3__Impl9426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__0__Impl_in_rule__WriteRegisterHighshelf__Group__09464 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__1_in_rule__WriteRegisterHighshelf__Group__09467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_rule__WriteRegisterHighshelf__Group__0__Impl9495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__1__Impl_in_rule__WriteRegisterHighshelf__Group__19526 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__2_in_rule__WriteRegisterHighshelf__Group__19529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Arg1Assignment_1_in_rule__WriteRegisterHighshelf__Group__1__Impl9556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__2__Impl_in_rule__WriteRegisterHighshelf__Group__29586 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__3_in_rule__WriteRegisterHighshelf__Group__29589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__WriteRegisterHighshelf__Group__2__Impl9617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__3__Impl_in_rule__WriteRegisterHighshelf__Group__39648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Arg2Assignment_3_in_rule__WriteRegisterHighshelf__Group__3__Impl9675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__0__Impl_in_rule__WriteRegister__Group__09713 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__1_in_rule__WriteRegister__Group__09716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_rule__WriteRegister__Group__0__Impl9744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__1__Impl_in_rule__WriteRegister__Group__19775 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__2_in_rule__WriteRegister__Group__19778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Arg1Assignment_1_in_rule__WriteRegister__Group__1__Impl9805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__2__Impl_in_rule__WriteRegister__Group__29835 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__3_in_rule__WriteRegister__Group__29838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__WriteRegister__Group__2__Impl9866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__3__Impl_in_rule__WriteRegister__Group__39897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Arg2Assignment_3_in_rule__WriteRegister__Group__3__Impl9924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__0__Impl_in_rule__Maxx__Group__09962 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__Maxx__Group__1_in_rule__Maxx__Group__09965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__Maxx__Group__0__Impl9993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__1__Impl_in_rule__Maxx__Group__110024 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__Maxx__Group__2_in_rule__Maxx__Group__110027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Arg1Assignment_1_in_rule__Maxx__Group__1__Impl10054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__2__Impl_in_rule__Maxx__Group__210084 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Maxx__Group__3_in_rule__Maxx__Group__210087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__Maxx__Group__2__Impl10115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__3__Impl_in_rule__Maxx__Group__310146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Arg2Assignment_3_in_rule__Maxx__Group__3__Impl10173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__0__Impl_in_rule__ReadRegisterFilter__Group__010211 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__1_in_rule__ReadRegisterFilter__Group__010214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_rule__ReadRegisterFilter__Group__0__Impl10242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__1__Impl_in_rule__ReadRegisterFilter__Group__110273 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__2_in_rule__ReadRegisterFilter__Group__110276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Arg1Assignment_1_in_rule__ReadRegisterFilter__Group__1__Impl10303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__2__Impl_in_rule__ReadRegisterFilter__Group__210333 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__3_in_rule__ReadRegisterFilter__Group__210336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ReadRegisterFilter__Group__2__Impl10364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__3__Impl_in_rule__ReadRegisterFilter__Group__310395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Arg2Assignment_3_in_rule__ReadRegisterFilter__Group__3__Impl10422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__0__Impl_in_rule__Mulx__Group__010460 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Mulx__Group__1_in_rule__Mulx__Group__010463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_rule__Mulx__Group__0__Impl10491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__1__Impl_in_rule__Mulx__Group__110522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Arg1Assignment_1_in_rule__Mulx__Group__1__Impl10549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__0__Impl_in_rule__Ldax__Group__010583 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Ldax__Group__1_in_rule__Ldax__Group__010586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_rule__Ldax__Group__0__Impl10614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__1__Impl_in_rule__Ldax__Group__110645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Arg1Assignment_1_in_rule__Ldax__Group__1__Impl10672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__0__Impl_in_rule__Exp__Group__010706 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Exp__Group__1_in_rule__Exp__Group__010709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_rule__Exp__Group__0__Impl10737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__1__Impl_in_rule__Exp__Group__110768 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__Exp__Group__2_in_rule__Exp__Group__110771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Arg1Assignment_1_in_rule__Exp__Group__1__Impl10798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__2__Impl_in_rule__Exp__Group__210828 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Exp__Group__3_in_rule__Exp__Group__210831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__Exp__Group__2__Impl10859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__3__Impl_in_rule__Exp__Group__310890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Arg2Assignment_3_in_rule__Exp__Group__3__Impl10917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__0__Impl_in_rule__Log__Group__010955 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Log__Group__1_in_rule__Log__Group__010958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_rule__Log__Group__0__Impl10986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__1__Impl_in_rule__Log__Group__111017 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__Log__Group__2_in_rule__Log__Group__111020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Arg1Assignment_1_in_rule__Log__Group__1__Impl11047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__2__Impl_in_rule__Log__Group__211077 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Log__Group__3_in_rule__Log__Group__211080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__Log__Group__2__Impl11108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__3__Impl_in_rule__Log__Group__311139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Arg2Assignment_3_in_rule__Log__Group__3__Impl11166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__0__Impl_in_rule__ScaleOffset__Group__011204 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__1_in_rule__ScaleOffset__Group__011207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_rule__ScaleOffset__Group__0__Impl11235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__1__Impl_in_rule__ScaleOffset__Group__111266 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__2_in_rule__ScaleOffset__Group__111269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Arg1Assignment_1_in_rule__ScaleOffset__Group__1__Impl11296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__2__Impl_in_rule__ScaleOffset__Group__211326 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__3_in_rule__ScaleOffset__Group__211329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ScaleOffset__Group__2__Impl11357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__3__Impl_in_rule__ScaleOffset__Group__311388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Arg2Assignment_3_in_rule__ScaleOffset__Group__3__Impl11415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__0__Impl_in_rule__WriteDelay__Group__011453 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__1_in_rule__WriteDelay__Group__011456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_rule__WriteDelay__Group__0__Impl11484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__1__Impl_in_rule__WriteDelay__Group__111515 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__2_in_rule__WriteDelay__Group__111518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Arg1Assignment_1_in_rule__WriteDelay__Group__1__Impl11545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__2__Impl_in_rule__WriteDelay__Group__211575 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__3_in_rule__WriteDelay__Group__211578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__WriteDelay__Group__2__Impl11606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__3__Impl_in_rule__WriteDelay__Group__311637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Arg2Assignment_3_in_rule__WriteDelay__Group__3__Impl11664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__0__Impl_in_rule__WriteAllpass__Group__011702 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__1_in_rule__WriteAllpass__Group__011705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_rule__WriteAllpass__Group__0__Impl11733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__1__Impl_in_rule__WriteAllpass__Group__111764 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__2_in_rule__WriteAllpass__Group__111767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Arg1Assignment_1_in_rule__WriteAllpass__Group__1__Impl11794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__2__Impl_in_rule__WriteAllpass__Group__211824 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__3_in_rule__WriteAllpass__Group__211827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__WriteAllpass__Group__2__Impl11855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__3__Impl_in_rule__WriteAllpass__Group__311886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Arg2Assignment_3_in_rule__WriteAllpass__Group__3__Impl11913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__0__Impl_in_rule__ReadDelay__Group__011951 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__1_in_rule__ReadDelay__Group__011954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_rule__ReadDelay__Group__0__Impl11982 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__1__Impl_in_rule__ReadDelay__Group__112013 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__2_in_rule__ReadDelay__Group__112016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Arg1Assignment_1_in_rule__ReadDelay__Group__1__Impl12043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__2__Impl_in_rule__ReadDelay__Group__212073 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__3_in_rule__ReadDelay__Group__212076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ReadDelay__Group__2__Impl12104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__3__Impl_in_rule__ReadDelay__Group__312135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Arg2Assignment_3_in_rule__ReadDelay__Group__3__Impl12162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__0__Impl_in_rule__LoadSinLFO__Group__012200 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__1_in_rule__LoadSinLFO__Group__012203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_rule__LoadSinLFO__Group__0__Impl12231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__1__Impl_in_rule__LoadSinLFO__Group__112262 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__2_in_rule__LoadSinLFO__Group__112265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg1Assignment_1_in_rule__LoadSinLFO__Group__1__Impl12292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__2__Impl_in_rule__LoadSinLFO__Group__212322 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__3_in_rule__LoadSinLFO__Group__212325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__LoadSinLFO__Group__2__Impl12353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__3__Impl_in_rule__LoadSinLFO__Group__312384 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__4_in_rule__LoadSinLFO__Group__312387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg2Assignment_3_in_rule__LoadSinLFO__Group__3__Impl12414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__4__Impl_in_rule__LoadSinLFO__Group__412444 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__5_in_rule__LoadSinLFO__Group__412447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__LoadSinLFO__Group__4__Impl12475 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__5__Impl_in_rule__LoadSinLFO__Group__512506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg3Assignment_5_in_rule__LoadSinLFO__Group__5__Impl12533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__0__Impl_in_rule__LoadRampLFO__Group__012575 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__1_in_rule__LoadRampLFO__Group__012578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_rule__LoadRampLFO__Group__0__Impl12606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__1__Impl_in_rule__LoadRampLFO__Group__112637 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__2_in_rule__LoadRampLFO__Group__112640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg1Assignment_1_in_rule__LoadRampLFO__Group__1__Impl12667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__2__Impl_in_rule__LoadRampLFO__Group__212697 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__3_in_rule__LoadRampLFO__Group__212700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__LoadRampLFO__Group__2__Impl12728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__3__Impl_in_rule__LoadRampLFO__Group__312759 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__4_in_rule__LoadRampLFO__Group__312762 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg2Assignment_3_in_rule__LoadRampLFO__Group__3__Impl12789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__4__Impl_in_rule__LoadRampLFO__Group__412819 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__5_in_rule__LoadRampLFO__Group__412822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__LoadRampLFO__Group__4__Impl12850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__5__Impl_in_rule__LoadRampLFO__Group__512881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg3Assignment_5_in_rule__LoadRampLFO__Group__5__Impl12908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__0__Impl_in_rule__ChorusReadDelay__Group__012950 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__1_in_rule__ChorusReadDelay__Group__012953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_rule__ChorusReadDelay__Group__0__Impl12981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__1__Impl_in_rule__ChorusReadDelay__Group__113012 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__2_in_rule__ChorusReadDelay__Group__113015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ChorusReadDelay__Group__1__Impl13043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__2__Impl_in_rule__ChorusReadDelay__Group__213074 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__3_in_rule__ChorusReadDelay__Group__213077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg1Assignment_2_in_rule__ChorusReadDelay__Group__2__Impl13104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__3__Impl_in_rule__ChorusReadDelay__Group__313134 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__4_in_rule__ChorusReadDelay__Group__313137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ChorusReadDelay__Group__3__Impl13165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__4__Impl_in_rule__ChorusReadDelay__Group__413196 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__5_in_rule__ChorusReadDelay__Group__413199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg2Assignment_4_in_rule__ChorusReadDelay__Group__4__Impl13226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__5__Impl_in_rule__ChorusReadDelay__Group__513256 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__6_in_rule__ChorusReadDelay__Group__513259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ChorusReadDelay__Group__5__Impl13287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__6__Impl_in_rule__ChorusReadDelay__Group__613318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg3Assignment_6_in_rule__ChorusReadDelay__Group__6__Impl13345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__0__Impl_in_rule__ChorusReadValue__Group__013389 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__1_in_rule__ChorusReadValue__Group__013392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_rule__ChorusReadValue__Group__0__Impl13420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__1__Impl_in_rule__ChorusReadValue__Group__113451 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__2_in_rule__ChorusReadValue__Group__113454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ChorusReadValue__Group__1__Impl13482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__2__Impl_in_rule__ChorusReadValue__Group__213513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Arg1Assignment_2_in_rule__ChorusReadValue__Group__2__Impl13540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__0__Impl_in_rule__ChorusScaleOffset__Group__013576 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__1_in_rule__ChorusScaleOffset__Group__013579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_rule__ChorusScaleOffset__Group__0__Impl13607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__1__Impl_in_rule__ChorusScaleOffset__Group__113638 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__2_in_rule__ChorusScaleOffset__Group__113641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ChorusScaleOffset__Group__1__Impl13669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__2__Impl_in_rule__ChorusScaleOffset__Group__213700 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__3_in_rule__ChorusScaleOffset__Group__213703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg1Assignment_2_in_rule__ChorusScaleOffset__Group__2__Impl13730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__3__Impl_in_rule__ChorusScaleOffset__Group__313760 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__4_in_rule__ChorusScaleOffset__Group__313763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ChorusScaleOffset__Group__3__Impl13791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__4__Impl_in_rule__ChorusScaleOffset__Group__413822 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__5_in_rule__ChorusScaleOffset__Group__413825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg2Assignment_4_in_rule__ChorusScaleOffset__Group__4__Impl13852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__5__Impl_in_rule__ChorusScaleOffset__Group__513882 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__6_in_rule__ChorusScaleOffset__Group__513885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ChorusScaleOffset__Group__5__Impl13913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__6__Impl_in_rule__ChorusScaleOffset__Group__613944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg3Assignment_6_in_rule__ChorusScaleOffset__Group__6__Impl13971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__0__Impl_in_rule__ReadDelayPointer__Group__014015 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__1_in_rule__ReadDelayPointer__Group__014018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_rule__ReadDelayPointer__Group__0__Impl14046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__1__Impl_in_rule__ReadDelayPointer__Group__114077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Arg1Assignment_1_in_rule__ReadDelayPointer__Group__1__Impl14104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__0__Impl_in_rule__And__Group__014138 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_rule__And__Group__1_in_rule__And__Group__014141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_rule__And__Group__0__Impl14169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__1__Impl_in_rule__And__Group__114200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Arg1Assignment_1_in_rule__And__Group__1__Impl14227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__0__Impl_in_rule__Or__Group__014261 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_rule__Or__Group__1_in_rule__Or__Group__014264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_rule__Or__Group__0__Impl14292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__1__Impl_in_rule__Or__Group__114323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Arg1Assignment_1_in_rule__Or__Group__1__Impl14350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__0__Impl_in_rule__Xor__Group__014384 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_rule__Xor__Group__1_in_rule__Xor__Group__014387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_rule__Xor__Group__0__Impl14415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__1__Impl_in_rule__Xor__Group__114446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Arg1Assignment_1_in_rule__Xor__Group__1__Impl14473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__0__Impl_in_rule__Jam__Group__014507 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Jam__Group__1_in_rule__Jam__Group__014510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_rule__Jam__Group__0__Impl14538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__1__Impl_in_rule__Jam__Group__114569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Arg1Assignment_1_in_rule__Jam__Group__1__Impl14596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__0__Impl_in_rule__Clr__Group__014630 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_rule__Clr__Group__1_in_rule__Clr__Group__014633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__1__Impl_in_rule__Clr__Group__114691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_rule__Clr__Group__1__Impl14719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__0__Impl_in_rule__Not__Group__014754 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_rule__Not__Group__1_in_rule__Not__Group__014757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__1__Impl_in_rule__Not__Group__114815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_rule__Not__Group__1__Impl14843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__0__Impl_in_rule__Absa__Group__014878 = new BitSet(new long[]{0x3800000000000000L});
    public static final BitSet FOLLOW_rule__Absa__Group__1_in_rule__Absa__Group__014881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__1__Impl_in_rule__Absa__Group__114939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_rule__Absa__Group__1__Impl14967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__0__Impl_in_rule__Skip__Group__015002 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Skip__Group__1_in_rule__Skip__Group__015005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_rule__Skip__Group__0__Impl15033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__1__Impl_in_rule__Skip__Group__115064 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_rule__Skip__Group__2_in_rule__Skip__Group__115067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__FlagsAssignment_1_in_rule__Skip__Group__1__Impl15094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__2__Impl_in_rule__Skip__Group__215124 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Skip__Group__3_in_rule__Skip__Group__215127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__Skip__Group__2__Impl15155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__3__Impl_in_rule__Skip__Group__315186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__LabelAssignment_3_in_rule__Skip__Group__3__Impl15213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__0__Impl_in_rule__SPINDOUBLE__Group__015251 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__1_in_rule__SPINDOUBLE__Group__015254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_rule__SPINDOUBLE__Group__0__Impl15283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__1__Impl_in_rule__SPINDOUBLE__Group__115316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Alternatives_1_in_rule__SPINDOUBLE__Group__1__Impl15343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1__015377 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__1_in_rule__SPINDOUBLE__Group_1_1__015380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1__0__Impl15407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1__115436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0_in_rule__SPINDOUBLE__Group_1_1__1__Impl15463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1_1__015498 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1_in_rule__SPINDOUBLE__Group_1_1_1__015501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_rule__SPINDOUBLE__Group_1_1_1__0__Impl15529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1_1__115560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1_1__1__Impl15587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1__015620 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1_in_rule__SPINCHOREGFLAGS__Group_1__015623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1__0__Impl15650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1__115679 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0_in_rule__SPINCHOREGFLAGS__Group_1__1__Impl15706 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__015741 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1_in_rule__SPINCHOREGFLAGS__Group_1_1__015744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl15772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__115803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl15830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__0__Impl_in_rule__SPINMEM__Group__015863 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__1_in_rule__SPINMEM__Group__015866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__BufferAssignment_0_in_rule__SPINMEM__Group__0__Impl15893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__1__Impl_in_rule__SPINMEM__Group__115923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Alternatives_1_in_rule__SPINMEM__Group__1__Impl15950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__0__Impl_in_rule__SPINBUF__Group__015985 = new BitSet(new long[]{0x000000000000F000L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__1_in_rule__SPINBUF__Group__015988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINBUF__Group__0__Impl16015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__1__Impl_in_rule__SPINBUF__Group__116044 = new BitSet(new long[]{0x000000000000F000L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__2_in_rule__SPINBUF__Group__116047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Alternatives_1_in_rule__SPINBUF__Group__1__Impl16074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__2__Impl_in_rule__SPINBUF__Group__216105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Alternatives_2_in_rule__SPINBUF__Group__2__Impl16132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__0__Impl_in_rule__BINARY24__Group_0__016169 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__1_in_rule__BINARY24__Group_0__016172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__0_in_rule__BINARY24__Group_0__0__Impl16199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__1__Impl_in_rule__BINARY24__Group_0__116229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__BINARY24__Group_0__1__Impl16257 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__0__Impl_in_rule__BINARY24__Group_0_0__016292 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__1_in_rule__BINARY24__Group_0_0__016295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_rule__BINARY24__Group_0_0__0__Impl16323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__1__Impl_in_rule__BINARY24__Group_0_0__116354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__BINARY24__Group_0_0__1__Impl16381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__0__Impl_in_rule__BINARY24__Group_1__016414 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__1_in_rule__BINARY24__Group_1__016417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_rule__BINARY24__Group_1__0__Impl16445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__1__Impl_in_rule__BINARY24__Group_1__116476 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__2_in_rule__BINARY24__Group_1__116479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__BINARY24__Group_1__1__Impl16507 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__2__Impl_in_rule__BINARY24__Group_1__216538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__BINARY24__Group_1__2__Impl16566 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Program__NameAssignment_116608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePin_in_rule__Program__PinsAssignment_216639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControl_in_rule__Program__ControlsAssignment_316670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinElement_in_rule__Program__ElementsAssignment_416701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioInput__VarNameAssignment_116732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioInput__NameAssignment_216763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioOutput__VarNameAssignment_116794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioOutput__NameAssignment_216825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlInput__VarNameAssignment_116856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlInput__NameAssignment_216887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlOutput__VarNameAssignment_116918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlOutput__NameAssignment_216949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Slider__VarNameAssignment_116980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Slider__LabelAssignment_217011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__CheckBox__VarNameAssignment_117042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__CheckBox__LabelAssignment_217073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlLabel__VarNameAssignment_117104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlLabel__LabelAssignment_217135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Equate__EnameAssignment_117166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Equate__ValueAssignment_217197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Mem__BufferAssignment_117228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__Mem__LengthAssignment_217259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Offset__NameAssignment_117290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__Offset__LengthAssignment_217321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_SC_COMMENT_in_rule__Comment__RemarkAssignment17352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Label__NameAssignment_017383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__IsPinConnected__Arg1Assignment_117414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetInputDefault__NameAssignment_117445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetInputDefault__VariableAssignment_217476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__ScaleAssignment_317507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__DefaultValAssignment_417538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScale__BufferAssignment_117569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScale__LengthAssignment_217600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScale__ControlAssignment_317631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SetOutputPin__PinNameAssignment_117662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SetOutputPin__VarNameAssignment_217693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ReadRegister__Arg1Assignment_117724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegister__Arg2Assignment_317755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterLowshelf__Arg1Assignment_117786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterLowshelf__Arg2Assignment_317817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterHighshelf__Arg1Assignment_117848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterHighshelf__Arg2Assignment_317879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegister__Arg1Assignment_117910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegister__Arg2Assignment_317941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__Maxx__Arg1Assignment_117972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Maxx__Arg2Assignment_318003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ReadRegisterFilter__Arg1Assignment_118034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegisterFilter__Arg2Assignment_318065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Mulx__Arg1Assignment_118096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Ldax__Arg1Assignment_118127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg1Assignment_118158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg2Assignment_318189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg1Assignment_118220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg2Assignment_318251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg1Assignment_118282 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg2Assignment_318313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__WriteDelay__Arg1Assignment_118344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteDelay__Arg2Assignment_318375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__WriteAllpass__Arg1Assignment_118406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteAllpass__Arg2Assignment_318437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__ReadDelay__Arg1Assignment_118468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelay__Arg2Assignment_318499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__LoadSinLFO__Arg1Assignment_118530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg2Assignment_318561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg3Assignment_518592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__LoadRampLFO__Arg1Assignment_118623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg2Assignment_318654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg3Assignment_518685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadDelay__Arg1Assignment_218716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusReadDelay__Arg2Assignment_418747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__ChorusReadDelay__Arg3Assignment_618778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadValue__Arg1Assignment_218809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ChorusScaleOffset__Arg1Assignment_218840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusScaleOffset__Arg2Assignment_418871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ChorusScaleOffset__Arg3Assignment_618902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelayPointer__Arg1Assignment_118933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__And__Arg1Assignment_118964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__Or__Arg1Assignment_118995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__Xor__Arg1Assignment_119026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Jam__Arg1Assignment_119057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Skip__FlagsAssignment_119088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Skip__LabelAssignment_319123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINBUF_in_rule__SPINMEM__BufferAssignment_019158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINMEM__ValueAssignment_1_019189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINMEM__OffsetAssignment_1_119224 = new BitSet(new long[]{0x0000000000000002L});

}