package com.holycityaudio.spincad.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.holycityaudio.spincad.services.SpinCADGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalSpinCADParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_SC_COMMENT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'#'", "'^'", "'+'", "'-'", "'true'", "'false'", "'@name'", "'@audioInput'", "'@audioOutput'", "'@controlInput'", "'@controlOutput'", "'equ'", "'mem'", "'offset'", "'bool'", "'@sliderLabel'", "'@checkbox'", "':'", "'@isPinConnected'", "'@isTrue'", "'@else'", "'@endif'", "'@getInputDefault'", "'@getDelayScaleControl'", "'@getBaseAddress'", "'@setOutputPin'", "'rdax'", "','", "'wrlx'", "'wrhx'", "'wrax'", "'maxx'", "'rdfx'", "'mulx'", "'ldax'", "'exp'", "'log'", "'sof'", "'wra'", "'wrap'", "'rda'", "'wlds'", "'wldr'", "'cho rda'", "'cho rdal'", "'cho sof'", "'rmpa'", "'and'", "'or'", "'xor'", "'jam'", "'clr'", "'not'", "'absa'", "'skp'", "'.'", "'|'", "'%'", "'$'"
    };
    public static final int RULE_SC_COMMENT=6;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int RULE_ID=4;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__29=29;
    public static final int T__65=65;
    public static final int T__28=28;
    public static final int T__62=62;
    public static final int T__27=27;
    public static final int T__63=63;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int EOF=-1;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__19=19;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__16=16;
    public static final int T__52=52;
    public static final int T__15=15;
    public static final int T__53=53;
    public static final int T__18=18;
    public static final int T__54=54;
    public static final int T__17=17;
    public static final int T__12=12;
    public static final int T__14=14;
    public static final int T__13=13;
    public static final int T__59=59;
    public static final int RULE_INT=5;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_SL_COMMENT=9;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int RULE_STRING=7;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__70=70;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_WS=10;

    // delegates
    // delegators


        public InternalSpinCADParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSpinCADParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSpinCADParser.tokenNames; }
    public String getGrammarFileName() { return "../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g"; }


     
     	private SpinCADGrammarAccess grammarAccess;
     	
        public void setGrammarAccess(SpinCADGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }
        
        @Override
        protected String getValueForTokenName(String tokenName) {
        	return tokenName;
        }




    // $ANTLR start "entryRuleProgram"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:60:1: entryRuleProgram : ruleProgram EOF ;
    public final void entryRuleProgram() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:61:1: ( ruleProgram EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:62:1: ruleProgram EOF
            {
             before(grammarAccess.getProgramRule()); 
            pushFollow(FOLLOW_ruleProgram_in_entryRuleProgram61);
            ruleProgram();

            state._fsp--;

             after(grammarAccess.getProgramRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleProgram68); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProgram"


    // $ANTLR start "ruleProgram"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:69:1: ruleProgram : ( ( rule__Program__Group__0 ) ) ;
    public final void ruleProgram() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:73:2: ( ( ( rule__Program__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:74:1: ( ( rule__Program__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:74:1: ( ( rule__Program__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:75:1: ( rule__Program__Group__0 )
            {
             before(grammarAccess.getProgramAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:76:1: ( rule__Program__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:76:2: rule__Program__Group__0
            {
            pushFollow(FOLLOW_rule__Program__Group__0_in_ruleProgram94);
            rule__Program__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProgram"


    // $ANTLR start "entryRulePin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:88:1: entryRulePin : rulePin EOF ;
    public final void entryRulePin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:89:1: ( rulePin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:90:1: rulePin EOF
            {
             before(grammarAccess.getPinRule()); 
            pushFollow(FOLLOW_rulePin_in_entryRulePin121);
            rulePin();

            state._fsp--;

             after(grammarAccess.getPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePin128); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePin"


    // $ANTLR start "rulePin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:97:1: rulePin : ( ( rule__Pin__Alternatives ) ) ;
    public final void rulePin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:101:2: ( ( ( rule__Pin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:102:1: ( ( rule__Pin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:102:1: ( ( rule__Pin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:103:1: ( rule__Pin__Alternatives )
            {
             before(grammarAccess.getPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:104:1: ( rule__Pin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:104:2: rule__Pin__Alternatives
            {
            pushFollow(FOLLOW_rule__Pin__Alternatives_in_rulePin154);
            rule__Pin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePin"


    // $ANTLR start "entryRuleInputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:116:1: entryRuleInputPin : ruleInputPin EOF ;
    public final void entryRuleInputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:117:1: ( ruleInputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:118:1: ruleInputPin EOF
            {
             before(grammarAccess.getInputPinRule()); 
            pushFollow(FOLLOW_ruleInputPin_in_entryRuleInputPin181);
            ruleInputPin();

            state._fsp--;

             after(grammarAccess.getInputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInputPin188); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInputPin"


    // $ANTLR start "ruleInputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:125:1: ruleInputPin : ( ( rule__InputPin__Alternatives ) ) ;
    public final void ruleInputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:129:2: ( ( ( rule__InputPin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:130:1: ( ( rule__InputPin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:130:1: ( ( rule__InputPin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:131:1: ( rule__InputPin__Alternatives )
            {
             before(grammarAccess.getInputPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:132:1: ( rule__InputPin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:132:2: rule__InputPin__Alternatives
            {
            pushFollow(FOLLOW_rule__InputPin__Alternatives_in_ruleInputPin214);
            rule__InputPin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInputPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInputPin"


    // $ANTLR start "entryRuleOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:144:1: entryRuleOutputPin : ruleOutputPin EOF ;
    public final void entryRuleOutputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:145:1: ( ruleOutputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:146:1: ruleOutputPin EOF
            {
             before(grammarAccess.getOutputPinRule()); 
            pushFollow(FOLLOW_ruleOutputPin_in_entryRuleOutputPin241);
            ruleOutputPin();

            state._fsp--;

             after(grammarAccess.getOutputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOutputPin248); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOutputPin"


    // $ANTLR start "ruleOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:153:1: ruleOutputPin : ( ( rule__OutputPin__Alternatives ) ) ;
    public final void ruleOutputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:157:2: ( ( ( rule__OutputPin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:158:1: ( ( rule__OutputPin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:158:1: ( ( rule__OutputPin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:159:1: ( rule__OutputPin__Alternatives )
            {
             before(grammarAccess.getOutputPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:160:1: ( rule__OutputPin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:160:2: rule__OutputPin__Alternatives
            {
            pushFollow(FOLLOW_rule__OutputPin__Alternatives_in_ruleOutputPin274);
            rule__OutputPin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getOutputPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOutputPin"


    // $ANTLR start "entryRuleAudioInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:172:1: entryRuleAudioInput : ruleAudioInput EOF ;
    public final void entryRuleAudioInput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:173:1: ( ruleAudioInput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:174:1: ruleAudioInput EOF
            {
             before(grammarAccess.getAudioInputRule()); 
            pushFollow(FOLLOW_ruleAudioInput_in_entryRuleAudioInput301);
            ruleAudioInput();

            state._fsp--;

             after(grammarAccess.getAudioInputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAudioInput308); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAudioInput"


    // $ANTLR start "ruleAudioInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:181:1: ruleAudioInput : ( ( rule__AudioInput__Group__0 ) ) ;
    public final void ruleAudioInput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:185:2: ( ( ( rule__AudioInput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:186:1: ( ( rule__AudioInput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:186:1: ( ( rule__AudioInput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:187:1: ( rule__AudioInput__Group__0 )
            {
             before(grammarAccess.getAudioInputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:188:1: ( rule__AudioInput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:188:2: rule__AudioInput__Group__0
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__0_in_ruleAudioInput334);
            rule__AudioInput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAudioInput"


    // $ANTLR start "entryRuleAudioOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:200:1: entryRuleAudioOutput : ruleAudioOutput EOF ;
    public final void entryRuleAudioOutput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:201:1: ( ruleAudioOutput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:202:1: ruleAudioOutput EOF
            {
             before(grammarAccess.getAudioOutputRule()); 
            pushFollow(FOLLOW_ruleAudioOutput_in_entryRuleAudioOutput361);
            ruleAudioOutput();

            state._fsp--;

             after(grammarAccess.getAudioOutputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAudioOutput368); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAudioOutput"


    // $ANTLR start "ruleAudioOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:209:1: ruleAudioOutput : ( ( rule__AudioOutput__Group__0 ) ) ;
    public final void ruleAudioOutput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:213:2: ( ( ( rule__AudioOutput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:214:1: ( ( rule__AudioOutput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:214:1: ( ( rule__AudioOutput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:215:1: ( rule__AudioOutput__Group__0 )
            {
             before(grammarAccess.getAudioOutputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:216:1: ( rule__AudioOutput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:216:2: rule__AudioOutput__Group__0
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__0_in_ruleAudioOutput394);
            rule__AudioOutput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAudioOutput"


    // $ANTLR start "entryRuleControlInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:228:1: entryRuleControlInput : ruleControlInput EOF ;
    public final void entryRuleControlInput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:229:1: ( ruleControlInput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:230:1: ruleControlInput EOF
            {
             before(grammarAccess.getControlInputRule()); 
            pushFollow(FOLLOW_ruleControlInput_in_entryRuleControlInput421);
            ruleControlInput();

            state._fsp--;

             after(grammarAccess.getControlInputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControlInput428); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControlInput"


    // $ANTLR start "ruleControlInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:237:1: ruleControlInput : ( ( rule__ControlInput__Group__0 ) ) ;
    public final void ruleControlInput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:241:2: ( ( ( rule__ControlInput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:242:1: ( ( rule__ControlInput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:242:1: ( ( rule__ControlInput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:243:1: ( rule__ControlInput__Group__0 )
            {
             before(grammarAccess.getControlInputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:244:1: ( rule__ControlInput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:244:2: rule__ControlInput__Group__0
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__0_in_ruleControlInput454);
            rule__ControlInput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControlInput"


    // $ANTLR start "entryRuleControlOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:256:1: entryRuleControlOutput : ruleControlOutput EOF ;
    public final void entryRuleControlOutput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:257:1: ( ruleControlOutput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:258:1: ruleControlOutput EOF
            {
             before(grammarAccess.getControlOutputRule()); 
            pushFollow(FOLLOW_ruleControlOutput_in_entryRuleControlOutput481);
            ruleControlOutput();

            state._fsp--;

             after(grammarAccess.getControlOutputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControlOutput488); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControlOutput"


    // $ANTLR start "ruleControlOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:265:1: ruleControlOutput : ( ( rule__ControlOutput__Group__0 ) ) ;
    public final void ruleControlOutput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:269:2: ( ( ( rule__ControlOutput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:270:1: ( ( rule__ControlOutput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:270:1: ( ( rule__ControlOutput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:271:1: ( rule__ControlOutput__Group__0 )
            {
             before(grammarAccess.getControlOutputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:272:1: ( rule__ControlOutput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:272:2: rule__ControlOutput__Group__0
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__0_in_ruleControlOutput514);
            rule__ControlOutput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControlOutput"


    // $ANTLR start "entryRuleSpinElement"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:284:1: entryRuleSpinElement : ruleSpinElement EOF ;
    public final void entryRuleSpinElement() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:285:1: ( ruleSpinElement EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:286:1: ruleSpinElement EOF
            {
             before(grammarAccess.getSpinElementRule()); 
            pushFollow(FOLLOW_ruleSpinElement_in_entryRuleSpinElement541);
            ruleSpinElement();

            state._fsp--;

             after(grammarAccess.getSpinElementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSpinElement548); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpinElement"


    // $ANTLR start "ruleSpinElement"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:293:1: ruleSpinElement : ( ( rule__SpinElement__Alternatives ) ) ;
    public final void ruleSpinElement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:297:2: ( ( ( rule__SpinElement__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:298:1: ( ( rule__SpinElement__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:298:1: ( ( rule__SpinElement__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:299:1: ( rule__SpinElement__Alternatives )
            {
             before(grammarAccess.getSpinElementAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:300:1: ( rule__SpinElement__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:300:2: rule__SpinElement__Alternatives
            {
            pushFollow(FOLLOW_rule__SpinElement__Alternatives_in_ruleSpinElement574);
            rule__SpinElement__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSpinElementAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpinElement"


    // $ANTLR start "entryRuleSpinEquate"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:312:1: entryRuleSpinEquate : ruleSpinEquate EOF ;
    public final void entryRuleSpinEquate() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:313:1: ( ruleSpinEquate EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:314:1: ruleSpinEquate EOF
            {
             before(grammarAccess.getSpinEquateRule()); 
            pushFollow(FOLLOW_ruleSpinEquate_in_entryRuleSpinEquate601);
            ruleSpinEquate();

            state._fsp--;

             after(grammarAccess.getSpinEquateRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSpinEquate608); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpinEquate"


    // $ANTLR start "ruleSpinEquate"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:321:1: ruleSpinEquate : ( ( rule__SpinEquate__Group__0 ) ) ;
    public final void ruleSpinEquate() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:325:2: ( ( ( rule__SpinEquate__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:326:1: ( ( rule__SpinEquate__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:326:1: ( ( rule__SpinEquate__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:327:1: ( rule__SpinEquate__Group__0 )
            {
             before(grammarAccess.getSpinEquateAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:328:1: ( rule__SpinEquate__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:328:2: rule__SpinEquate__Group__0
            {
            pushFollow(FOLLOW_rule__SpinEquate__Group__0_in_ruleSpinEquate634);
            rule__SpinEquate__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSpinEquateAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpinEquate"


    // $ANTLR start "entryRuleMem"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:340:1: entryRuleMem : ruleMem EOF ;
    public final void entryRuleMem() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:341:1: ( ruleMem EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:342:1: ruleMem EOF
            {
             before(grammarAccess.getMemRule()); 
            pushFollow(FOLLOW_ruleMem_in_entryRuleMem661);
            ruleMem();

            state._fsp--;

             after(grammarAccess.getMemRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMem668); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMem"


    // $ANTLR start "ruleMem"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:349:1: ruleMem : ( ( rule__Mem__Group__0 ) ) ;
    public final void ruleMem() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:353:2: ( ( ( rule__Mem__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:354:1: ( ( rule__Mem__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:354:1: ( ( rule__Mem__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:355:1: ( rule__Mem__Group__0 )
            {
             before(grammarAccess.getMemAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:356:1: ( rule__Mem__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:356:2: rule__Mem__Group__0
            {
            pushFollow(FOLLOW_rule__Mem__Group__0_in_ruleMem694);
            rule__Mem__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMem"


    // $ANTLR start "entryRuleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:368:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:369:1: ( ruleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:370:1: ruleOffset EOF
            {
             before(grammarAccess.getOffsetRule()); 
            pushFollow(FOLLOW_ruleOffset_in_entryRuleOffset721);
            ruleOffset();

            state._fsp--;

             after(grammarAccess.getOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOffset728); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:377:1: ruleOffset : ( ( rule__Offset__Group__0 ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:381:2: ( ( ( rule__Offset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:382:1: ( ( rule__Offset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:382:1: ( ( rule__Offset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:383:1: ( rule__Offset__Group__0 )
            {
             before(grammarAccess.getOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:384:1: ( rule__Offset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:384:2: rule__Offset__Group__0
            {
            pushFollow(FOLLOW_rule__Offset__Group__0_in_ruleOffset754);
            rule__Offset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleSpinBool"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:396:1: entryRuleSpinBool : ruleSpinBool EOF ;
    public final void entryRuleSpinBool() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:397:1: ( ruleSpinBool EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:398:1: ruleSpinBool EOF
            {
             before(grammarAccess.getSpinBoolRule()); 
            pushFollow(FOLLOW_ruleSpinBool_in_entryRuleSpinBool781);
            ruleSpinBool();

            state._fsp--;

             after(grammarAccess.getSpinBoolRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSpinBool788); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpinBool"


    // $ANTLR start "ruleSpinBool"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:405:1: ruleSpinBool : ( ( rule__SpinBool__Group__0 ) ) ;
    public final void ruleSpinBool() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:409:2: ( ( ( rule__SpinBool__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:410:1: ( ( rule__SpinBool__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:410:1: ( ( rule__SpinBool__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:411:1: ( rule__SpinBool__Group__0 )
            {
             before(grammarAccess.getSpinBoolAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:412:1: ( rule__SpinBool__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:412:2: rule__SpinBool__Group__0
            {
            pushFollow(FOLLOW_rule__SpinBool__Group__0_in_ruleSpinBool814);
            rule__SpinBool__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSpinBoolAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpinBool"


    // $ANTLR start "entryRuleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:424:1: entryRuleControl : ruleControl EOF ;
    public final void entryRuleControl() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:425:1: ( ruleControl EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:426:1: ruleControl EOF
            {
             before(grammarAccess.getControlRule()); 
            pushFollow(FOLLOW_ruleControl_in_entryRuleControl841);
            ruleControl();

            state._fsp--;

             after(grammarAccess.getControlRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControl848); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControl"


    // $ANTLR start "ruleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:433:1: ruleControl : ( ( rule__Control__Alternatives ) ) ;
    public final void ruleControl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:437:2: ( ( ( rule__Control__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:438:1: ( ( rule__Control__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:438:1: ( ( rule__Control__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:439:1: ( rule__Control__Alternatives )
            {
             before(grammarAccess.getControlAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:440:1: ( rule__Control__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:440:2: rule__Control__Alternatives
            {
            pushFollow(FOLLOW_rule__Control__Alternatives_in_ruleControl874);
            rule__Control__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getControlAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControl"


    // $ANTLR start "entryRuleSpinSliderLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:452:1: entryRuleSpinSliderLabel : ruleSpinSliderLabel EOF ;
    public final void entryRuleSpinSliderLabel() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:453:1: ( ruleSpinSliderLabel EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:454:1: ruleSpinSliderLabel EOF
            {
             before(grammarAccess.getSpinSliderLabelRule()); 
            pushFollow(FOLLOW_ruleSpinSliderLabel_in_entryRuleSpinSliderLabel901);
            ruleSpinSliderLabel();

            state._fsp--;

             after(grammarAccess.getSpinSliderLabelRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSpinSliderLabel908); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpinSliderLabel"


    // $ANTLR start "ruleSpinSliderLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:461:1: ruleSpinSliderLabel : ( ( rule__SpinSliderLabel__Group__0 ) ) ;
    public final void ruleSpinSliderLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:465:2: ( ( ( rule__SpinSliderLabel__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:466:1: ( ( rule__SpinSliderLabel__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:466:1: ( ( rule__SpinSliderLabel__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:467:1: ( rule__SpinSliderLabel__Group__0 )
            {
             before(grammarAccess.getSpinSliderLabelAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:468:1: ( rule__SpinSliderLabel__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:468:2: rule__SpinSliderLabel__Group__0
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group__0_in_ruleSpinSliderLabel934);
            rule__SpinSliderLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSpinSliderLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpinSliderLabel"


    // $ANTLR start "entryRuleSpinCheckBox"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:480:1: entryRuleSpinCheckBox : ruleSpinCheckBox EOF ;
    public final void entryRuleSpinCheckBox() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:481:1: ( ruleSpinCheckBox EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:482:1: ruleSpinCheckBox EOF
            {
             before(grammarAccess.getSpinCheckBoxRule()); 
            pushFollow(FOLLOW_ruleSpinCheckBox_in_entryRuleSpinCheckBox961);
            ruleSpinCheckBox();

            state._fsp--;

             after(grammarAccess.getSpinCheckBoxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSpinCheckBox968); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpinCheckBox"


    // $ANTLR start "ruleSpinCheckBox"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:489:1: ruleSpinCheckBox : ( ( rule__SpinCheckBox__Group__0 ) ) ;
    public final void ruleSpinCheckBox() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:493:2: ( ( ( rule__SpinCheckBox__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:494:1: ( ( rule__SpinCheckBox__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:494:1: ( ( rule__SpinCheckBox__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:495:1: ( rule__SpinCheckBox__Group__0 )
            {
             before(grammarAccess.getSpinCheckBoxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:496:1: ( rule__SpinCheckBox__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:496:2: rule__SpinCheckBox__Group__0
            {
            pushFollow(FOLLOW_rule__SpinCheckBox__Group__0_in_ruleSpinCheckBox994);
            rule__SpinCheckBox__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSpinCheckBoxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpinCheckBox"


    // $ANTLR start "entryRuleComment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:508:1: entryRuleComment : ruleComment EOF ;
    public final void entryRuleComment() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:509:1: ( ruleComment EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:510:1: ruleComment EOF
            {
             before(grammarAccess.getCommentRule()); 
            pushFollow(FOLLOW_ruleComment_in_entryRuleComment1021);
            ruleComment();

            state._fsp--;

             after(grammarAccess.getCommentRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleComment1028); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:517:1: ruleComment : ( ( rule__Comment__RemarkAssignment ) ) ;
    public final void ruleComment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:521:2: ( ( ( rule__Comment__RemarkAssignment ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:522:1: ( ( rule__Comment__RemarkAssignment ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:522:1: ( ( rule__Comment__RemarkAssignment ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:523:1: ( rule__Comment__RemarkAssignment )
            {
             before(grammarAccess.getCommentAccess().getRemarkAssignment()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:524:1: ( rule__Comment__RemarkAssignment )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:524:2: rule__Comment__RemarkAssignment
            {
            pushFollow(FOLLOW_rule__Comment__RemarkAssignment_in_ruleComment1054);
            rule__Comment__RemarkAssignment();

            state._fsp--;


            }

             after(grammarAccess.getCommentAccess().getRemarkAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRuleLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:536:1: entryRuleLabel : ruleLabel EOF ;
    public final void entryRuleLabel() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:537:1: ( ruleLabel EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:538:1: ruleLabel EOF
            {
             before(grammarAccess.getLabelRule()); 
            pushFollow(FOLLOW_ruleLabel_in_entryRuleLabel1081);
            ruleLabel();

            state._fsp--;

             after(grammarAccess.getLabelRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabel1088); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:545:1: ruleLabel : ( ( rule__Label__Group__0 ) ) ;
    public final void ruleLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:549:2: ( ( ( rule__Label__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:550:1: ( ( rule__Label__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:550:1: ( ( rule__Label__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:551:1: ( rule__Label__Group__0 )
            {
             before(grammarAccess.getLabelAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:552:1: ( rule__Label__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:552:2: rule__Label__Group__0
            {
            pushFollow(FOLLOW_rule__Label__Group__0_in_ruleLabel1114);
            rule__Label__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleMacro"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:564:1: entryRuleMacro : ruleMacro EOF ;
    public final void entryRuleMacro() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:565:1: ( ruleMacro EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:566:1: ruleMacro EOF
            {
             before(grammarAccess.getMacroRule()); 
            pushFollow(FOLLOW_ruleMacro_in_entryRuleMacro1141);
            ruleMacro();

            state._fsp--;

             after(grammarAccess.getMacroRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMacro1148); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMacro"


    // $ANTLR start "ruleMacro"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:573:1: ruleMacro : ( ( rule__Macro__Alternatives ) ) ;
    public final void ruleMacro() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:577:2: ( ( ( rule__Macro__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:578:1: ( ( rule__Macro__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:578:1: ( ( rule__Macro__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:579:1: ( rule__Macro__Alternatives )
            {
             before(grammarAccess.getMacroAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:580:1: ( rule__Macro__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:580:2: rule__Macro__Alternatives
            {
            pushFollow(FOLLOW_rule__Macro__Alternatives_in_ruleMacro1174);
            rule__Macro__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getMacroAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMacro"


    // $ANTLR start "entryRuleIsPinConnected"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:592:1: entryRuleIsPinConnected : ruleIsPinConnected EOF ;
    public final void entryRuleIsPinConnected() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:593:1: ( ruleIsPinConnected EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:594:1: ruleIsPinConnected EOF
            {
             before(grammarAccess.getIsPinConnectedRule()); 
            pushFollow(FOLLOW_ruleIsPinConnected_in_entryRuleIsPinConnected1201);
            ruleIsPinConnected();

            state._fsp--;

             after(grammarAccess.getIsPinConnectedRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsPinConnected1208); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsPinConnected"


    // $ANTLR start "ruleIsPinConnected"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:601:1: ruleIsPinConnected : ( ( rule__IsPinConnected__Group__0 ) ) ;
    public final void ruleIsPinConnected() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:605:2: ( ( ( rule__IsPinConnected__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:606:1: ( ( rule__IsPinConnected__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:606:1: ( ( rule__IsPinConnected__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:607:1: ( rule__IsPinConnected__Group__0 )
            {
             before(grammarAccess.getIsPinConnectedAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:608:1: ( rule__IsPinConnected__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:608:2: rule__IsPinConnected__Group__0
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__0_in_ruleIsPinConnected1234);
            rule__IsPinConnected__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsPinConnectedAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsPinConnected"


    // $ANTLR start "entryRuleIsTrue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:620:1: entryRuleIsTrue : ruleIsTrue EOF ;
    public final void entryRuleIsTrue() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:621:1: ( ruleIsTrue EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:622:1: ruleIsTrue EOF
            {
             before(grammarAccess.getIsTrueRule()); 
            pushFollow(FOLLOW_ruleIsTrue_in_entryRuleIsTrue1261);
            ruleIsTrue();

            state._fsp--;

             after(grammarAccess.getIsTrueRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsTrue1268); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsTrue"


    // $ANTLR start "ruleIsTrue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:629:1: ruleIsTrue : ( ( rule__IsTrue__Group__0 ) ) ;
    public final void ruleIsTrue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:633:2: ( ( ( rule__IsTrue__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:634:1: ( ( rule__IsTrue__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:634:1: ( ( rule__IsTrue__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:635:1: ( rule__IsTrue__Group__0 )
            {
             before(grammarAccess.getIsTrueAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:636:1: ( rule__IsTrue__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:636:2: rule__IsTrue__Group__0
            {
            pushFollow(FOLLOW_rule__IsTrue__Group__0_in_ruleIsTrue1294);
            rule__IsTrue__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsTrueAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsTrue"


    // $ANTLR start "entryRuleIsElse"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:648:1: entryRuleIsElse : ruleIsElse EOF ;
    public final void entryRuleIsElse() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:649:1: ( ruleIsElse EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:650:1: ruleIsElse EOF
            {
             before(grammarAccess.getIsElseRule()); 
            pushFollow(FOLLOW_ruleIsElse_in_entryRuleIsElse1321);
            ruleIsElse();

            state._fsp--;

             after(grammarAccess.getIsElseRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsElse1328); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsElse"


    // $ANTLR start "ruleIsElse"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:657:1: ruleIsElse : ( ( rule__IsElse__Group__0 ) ) ;
    public final void ruleIsElse() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:661:2: ( ( ( rule__IsElse__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:662:1: ( ( rule__IsElse__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:662:1: ( ( rule__IsElse__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:663:1: ( rule__IsElse__Group__0 )
            {
             before(grammarAccess.getIsElseAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:664:1: ( rule__IsElse__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:664:2: rule__IsElse__Group__0
            {
            pushFollow(FOLLOW_rule__IsElse__Group__0_in_ruleIsElse1354);
            rule__IsElse__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsElseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsElse"


    // $ANTLR start "entryRuleIsEndif"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:676:1: entryRuleIsEndif : ruleIsEndif EOF ;
    public final void entryRuleIsEndif() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:677:1: ( ruleIsEndif EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:678:1: ruleIsEndif EOF
            {
             before(grammarAccess.getIsEndifRule()); 
            pushFollow(FOLLOW_ruleIsEndif_in_entryRuleIsEndif1381);
            ruleIsEndif();

            state._fsp--;

             after(grammarAccess.getIsEndifRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsEndif1388); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsEndif"


    // $ANTLR start "ruleIsEndif"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:685:1: ruleIsEndif : ( ( rule__IsEndif__Group__0 ) ) ;
    public final void ruleIsEndif() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:689:2: ( ( ( rule__IsEndif__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:690:1: ( ( rule__IsEndif__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:690:1: ( ( rule__IsEndif__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:691:1: ( rule__IsEndif__Group__0 )
            {
             before(grammarAccess.getIsEndifAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:692:1: ( rule__IsEndif__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:692:2: rule__IsEndif__Group__0
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__0_in_ruleIsEndif1414);
            rule__IsEndif__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsEndifAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsEndif"


    // $ANTLR start "entryRuleGetInputDefault"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:704:1: entryRuleGetInputDefault : ruleGetInputDefault EOF ;
    public final void entryRuleGetInputDefault() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:705:1: ( ruleGetInputDefault EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:706:1: ruleGetInputDefault EOF
            {
             before(grammarAccess.getGetInputDefaultRule()); 
            pushFollow(FOLLOW_ruleGetInputDefault_in_entryRuleGetInputDefault1441);
            ruleGetInputDefault();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetInputDefault1448); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetInputDefault"


    // $ANTLR start "ruleGetInputDefault"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:713:1: ruleGetInputDefault : ( ( rule__GetInputDefault__Group__0 ) ) ;
    public final void ruleGetInputDefault() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:717:2: ( ( ( rule__GetInputDefault__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:718:1: ( ( rule__GetInputDefault__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:718:1: ( ( rule__GetInputDefault__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:719:1: ( rule__GetInputDefault__Group__0 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:720:1: ( rule__GetInputDefault__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:720:2: rule__GetInputDefault__Group__0
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__0_in_ruleGetInputDefault1474);
            rule__GetInputDefault__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetInputDefault"


    // $ANTLR start "entryRuleGetDelayScaleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:732:1: entryRuleGetDelayScaleControl : ruleGetDelayScaleControl EOF ;
    public final void entryRuleGetDelayScaleControl() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:733:1: ( ruleGetDelayScaleControl EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:734:1: ruleGetDelayScaleControl EOF
            {
             before(grammarAccess.getGetDelayScaleControlRule()); 
            pushFollow(FOLLOW_ruleGetDelayScaleControl_in_entryRuleGetDelayScaleControl1501);
            ruleGetDelayScaleControl();

            state._fsp--;

             after(grammarAccess.getGetDelayScaleControlRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetDelayScaleControl1508); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetDelayScaleControl"


    // $ANTLR start "ruleGetDelayScaleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:741:1: ruleGetDelayScaleControl : ( ( rule__GetDelayScaleControl__Group__0 ) ) ;
    public final void ruleGetDelayScaleControl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:745:2: ( ( ( rule__GetDelayScaleControl__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:746:1: ( ( rule__GetDelayScaleControl__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:746:1: ( ( rule__GetDelayScaleControl__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:747:1: ( rule__GetDelayScaleControl__Group__0 )
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:748:1: ( rule__GetDelayScaleControl__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:748:2: rule__GetDelayScaleControl__Group__0
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__0_in_ruleGetDelayScaleControl1534);
            rule__GetDelayScaleControl__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleControlAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetDelayScaleControl"


    // $ANTLR start "entryRuleGetBaseAddress"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:760:1: entryRuleGetBaseAddress : ruleGetBaseAddress EOF ;
    public final void entryRuleGetBaseAddress() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:761:1: ( ruleGetBaseAddress EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:762:1: ruleGetBaseAddress EOF
            {
             before(grammarAccess.getGetBaseAddressRule()); 
            pushFollow(FOLLOW_ruleGetBaseAddress_in_entryRuleGetBaseAddress1561);
            ruleGetBaseAddress();

            state._fsp--;

             after(grammarAccess.getGetBaseAddressRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetBaseAddress1568); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetBaseAddress"


    // $ANTLR start "ruleGetBaseAddress"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:769:1: ruleGetBaseAddress : ( ( rule__GetBaseAddress__Group__0 ) ) ;
    public final void ruleGetBaseAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:773:2: ( ( ( rule__GetBaseAddress__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:774:1: ( ( rule__GetBaseAddress__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:774:1: ( ( rule__GetBaseAddress__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:775:1: ( rule__GetBaseAddress__Group__0 )
            {
             before(grammarAccess.getGetBaseAddressAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:776:1: ( rule__GetBaseAddress__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:776:2: rule__GetBaseAddress__Group__0
            {
            pushFollow(FOLLOW_rule__GetBaseAddress__Group__0_in_ruleGetBaseAddress1594);
            rule__GetBaseAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetBaseAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetBaseAddress"


    // $ANTLR start "entryRuleSetOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:788:1: entryRuleSetOutputPin : ruleSetOutputPin EOF ;
    public final void entryRuleSetOutputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:789:1: ( ruleSetOutputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:790:1: ruleSetOutputPin EOF
            {
             before(grammarAccess.getSetOutputPinRule()); 
            pushFollow(FOLLOW_ruleSetOutputPin_in_entryRuleSetOutputPin1621);
            ruleSetOutputPin();

            state._fsp--;

             after(grammarAccess.getSetOutputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSetOutputPin1628); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSetOutputPin"


    // $ANTLR start "ruleSetOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:797:1: ruleSetOutputPin : ( ( rule__SetOutputPin__Group__0 ) ) ;
    public final void ruleSetOutputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:801:2: ( ( ( rule__SetOutputPin__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:802:1: ( ( rule__SetOutputPin__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:802:1: ( ( rule__SetOutputPin__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:803:1: ( rule__SetOutputPin__Group__0 )
            {
             before(grammarAccess.getSetOutputPinAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:804:1: ( rule__SetOutputPin__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:804:2: rule__SetOutputPin__Group__0
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__0_in_ruleSetOutputPin1654);
            rule__SetOutputPin__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSetOutputPinAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSetOutputPin"


    // $ANTLR start "entryRuleInstruction"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:816:1: entryRuleInstruction : ruleInstruction EOF ;
    public final void entryRuleInstruction() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:817:1: ( ruleInstruction EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:818:1: ruleInstruction EOF
            {
             before(grammarAccess.getInstructionRule()); 
            pushFollow(FOLLOW_ruleInstruction_in_entryRuleInstruction1681);
            ruleInstruction();

            state._fsp--;

             after(grammarAccess.getInstructionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInstruction1688); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInstruction"


    // $ANTLR start "ruleInstruction"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:825:1: ruleInstruction : ( ( rule__Instruction__Alternatives ) ) ;
    public final void ruleInstruction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:829:2: ( ( ( rule__Instruction__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:830:1: ( ( rule__Instruction__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:830:1: ( ( rule__Instruction__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:831:1: ( rule__Instruction__Alternatives )
            {
             before(grammarAccess.getInstructionAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:832:1: ( rule__Instruction__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:832:2: rule__Instruction__Alternatives
            {
            pushFollow(FOLLOW_rule__Instruction__Alternatives_in_ruleInstruction1714);
            rule__Instruction__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInstructionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInstruction"


    // $ANTLR start "entryRuleInst_B6_S1_14"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:844:1: entryRuleInst_B6_S1_14 : ruleInst_B6_S1_14 EOF ;
    public final void entryRuleInst_B6_S1_14() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:845:1: ( ruleInst_B6_S1_14 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:846:1: ruleInst_B6_S1_14 EOF
            {
             before(grammarAccess.getInst_B6_S1_14Rule()); 
            pushFollow(FOLLOW_ruleInst_B6_S1_14_in_entryRuleInst_B6_S1_141741);
            ruleInst_B6_S1_14();

            state._fsp--;

             after(grammarAccess.getInst_B6_S1_14Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B6_S1_141748); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B6_S1_14"


    // $ANTLR start "ruleInst_B6_S1_14"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:853:1: ruleInst_B6_S1_14 : ( ( rule__Inst_B6_S1_14__Alternatives ) ) ;
    public final void ruleInst_B6_S1_14() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:857:2: ( ( ( rule__Inst_B6_S1_14__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:858:1: ( ( rule__Inst_B6_S1_14__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:858:1: ( ( rule__Inst_B6_S1_14__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:859:1: ( rule__Inst_B6_S1_14__Alternatives )
            {
             before(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:860:1: ( rule__Inst_B6_S1_14__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:860:2: rule__Inst_B6_S1_14__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B6_S1_14__Alternatives_in_ruleInst_B6_S1_141774);
            rule__Inst_B6_S1_14__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B6_S1_14"


    // $ANTLR start "entryRuleInst_B15_S1_9"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:872:1: entryRuleInst_B15_S1_9 : ruleInst_B15_S1_9 EOF ;
    public final void entryRuleInst_B15_S1_9() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:873:1: ( ruleInst_B15_S1_9 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:874:1: ruleInst_B15_S1_9 EOF
            {
             before(grammarAccess.getInst_B15_S1_9Rule()); 
            pushFollow(FOLLOW_ruleInst_B15_S1_9_in_entryRuleInst_B15_S1_91801);
            ruleInst_B15_S1_9();

            state._fsp--;

             after(grammarAccess.getInst_B15_S1_9Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B15_S1_91808); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B15_S1_9"


    // $ANTLR start "ruleInst_B15_S1_9"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:881:1: ruleInst_B15_S1_9 : ( ( rule__Inst_B15_S1_9__Alternatives ) ) ;
    public final void ruleInst_B15_S1_9() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:885:2: ( ( ( rule__Inst_B15_S1_9__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:886:1: ( ( rule__Inst_B15_S1_9__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:886:1: ( ( rule__Inst_B15_S1_9__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:887:1: ( rule__Inst_B15_S1_9__Alternatives )
            {
             before(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:888:1: ( rule__Inst_B15_S1_9__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:888:2: rule__Inst_B15_S1_9__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B15_S1_9__Alternatives_in_ruleInst_B15_S1_91834);
            rule__Inst_B15_S1_9__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B15_S1_9"


    // $ANTLR start "entryRuleInst_B6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:900:1: entryRuleInst_B6 : ruleInst_B6 EOF ;
    public final void entryRuleInst_B6() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:901:1: ( ruleInst_B6 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:902:1: ruleInst_B6 EOF
            {
             before(grammarAccess.getInst_B6Rule()); 
            pushFollow(FOLLOW_ruleInst_B6_in_entryRuleInst_B61861);
            ruleInst_B6();

            state._fsp--;

             after(grammarAccess.getInst_B6Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B61868); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B6"


    // $ANTLR start "ruleInst_B6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:909:1: ruleInst_B6 : ( ( rule__Inst_B6__Alternatives ) ) ;
    public final void ruleInst_B6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:913:2: ( ( ( rule__Inst_B6__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:914:1: ( ( rule__Inst_B6__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:914:1: ( ( rule__Inst_B6__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:915:1: ( rule__Inst_B6__Alternatives )
            {
             before(grammarAccess.getInst_B6Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:916:1: ( rule__Inst_B6__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:916:2: rule__Inst_B6__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B6__Alternatives_in_ruleInst_B61894);
            rule__Inst_B6__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B6Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B6"


    // $ANTLR start "entryRuleInst_B24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:928:1: entryRuleInst_B24 : ruleInst_B24 EOF ;
    public final void entryRuleInst_B24() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:929:1: ( ruleInst_B24 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:930:1: ruleInst_B24 EOF
            {
             before(grammarAccess.getInst_B24Rule()); 
            pushFollow(FOLLOW_ruleInst_B24_in_entryRuleInst_B241921);
            ruleInst_B24();

            state._fsp--;

             after(grammarAccess.getInst_B24Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B241928); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B24"


    // $ANTLR start "ruleInst_B24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:937:1: ruleInst_B24 : ( ( rule__Inst_B24__Alternatives ) ) ;
    public final void ruleInst_B24() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:941:2: ( ( ( rule__Inst_B24__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:942:1: ( ( rule__Inst_B24__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:942:1: ( ( rule__Inst_B24__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:943:1: ( rule__Inst_B24__Alternatives )
            {
             before(grammarAccess.getInst_B24Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:944:1: ( rule__Inst_B24__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:944:2: rule__Inst_B24__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B24__Alternatives_in_ruleInst_B241954);
            rule__Inst_B24__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B24Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B24"


    // $ANTLR start "entryRuleInst_X0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:956:1: entryRuleInst_X0 : ruleInst_X0 EOF ;
    public final void entryRuleInst_X0() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:957:1: ( ruleInst_X0 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:958:1: ruleInst_X0 EOF
            {
             before(grammarAccess.getInst_X0Rule()); 
            pushFollow(FOLLOW_ruleInst_X0_in_entryRuleInst_X01981);
            ruleInst_X0();

            state._fsp--;

             after(grammarAccess.getInst_X0Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_X01988); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_X0"


    // $ANTLR start "ruleInst_X0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:965:1: ruleInst_X0 : ( ( rule__Inst_X0__Alternatives ) ) ;
    public final void ruleInst_X0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:969:2: ( ( ( rule__Inst_X0__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:970:1: ( ( rule__Inst_X0__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:970:1: ( ( rule__Inst_X0__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:971:1: ( rule__Inst_X0__Alternatives )
            {
             before(grammarAccess.getInst_X0Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:972:1: ( rule__Inst_X0__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:972:2: rule__Inst_X0__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_X0__Alternatives_in_ruleInst_X02014);
            rule__Inst_X0__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_X0Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_X0"


    // $ANTLR start "entryRuleInst_S1_14_S1_10"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:984:1: entryRuleInst_S1_14_S1_10 : ruleInst_S1_14_S1_10 EOF ;
    public final void entryRuleInst_S1_14_S1_10() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:985:1: ( ruleInst_S1_14_S1_10 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:986:1: ruleInst_S1_14_S1_10 EOF
            {
             before(grammarAccess.getInst_S1_14_S1_10Rule()); 
            pushFollow(FOLLOW_ruleInst_S1_14_S1_10_in_entryRuleInst_S1_14_S1_102041);
            ruleInst_S1_14_S1_10();

            state._fsp--;

             after(grammarAccess.getInst_S1_14_S1_10Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_S1_14_S1_102048); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_S1_14_S1_10"


    // $ANTLR start "ruleInst_S1_14_S1_10"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:993:1: ruleInst_S1_14_S1_10 : ( ( rule__Inst_S1_14_S1_10__Alternatives ) ) ;
    public final void ruleInst_S1_14_S1_10() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:997:2: ( ( ( rule__Inst_S1_14_S1_10__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:998:1: ( ( rule__Inst_S1_14_S1_10__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:998:1: ( ( rule__Inst_S1_14_S1_10__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:999:1: ( rule__Inst_S1_14_S1_10__Alternatives )
            {
             before(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1000:1: ( rule__Inst_S1_14_S1_10__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1000:2: rule__Inst_S1_14_S1_10__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_S1_14_S1_10__Alternatives_in_ruleInst_S1_14_S1_102074);
            rule__Inst_S1_14_S1_10__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_S1_14_S1_10"


    // $ANTLR start "entryRuleReadRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1012:1: entryRuleReadRegister : ruleReadRegister EOF ;
    public final void entryRuleReadRegister() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1013:1: ( ruleReadRegister EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1014:1: ruleReadRegister EOF
            {
             before(grammarAccess.getReadRegisterRule()); 
            pushFollow(FOLLOW_ruleReadRegister_in_entryRuleReadRegister2101);
            ruleReadRegister();

            state._fsp--;

             after(grammarAccess.getReadRegisterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadRegister2108); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadRegister"


    // $ANTLR start "ruleReadRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1021:1: ruleReadRegister : ( ( rule__ReadRegister__Group__0 ) ) ;
    public final void ruleReadRegister() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1025:2: ( ( ( rule__ReadRegister__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1026:1: ( ( rule__ReadRegister__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1026:1: ( ( rule__ReadRegister__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1027:1: ( rule__ReadRegister__Group__0 )
            {
             before(grammarAccess.getReadRegisterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1028:1: ( rule__ReadRegister__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1028:2: rule__ReadRegister__Group__0
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__0_in_ruleReadRegister2134);
            rule__ReadRegister__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadRegister"


    // $ANTLR start "entryRuleWriteRegisterLowshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1040:1: entryRuleWriteRegisterLowshelf : ruleWriteRegisterLowshelf EOF ;
    public final void entryRuleWriteRegisterLowshelf() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1041:1: ( ruleWriteRegisterLowshelf EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1042:1: ruleWriteRegisterLowshelf EOF
            {
             before(grammarAccess.getWriteRegisterLowshelfRule()); 
            pushFollow(FOLLOW_ruleWriteRegisterLowshelf_in_entryRuleWriteRegisterLowshelf2161);
            ruleWriteRegisterLowshelf();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegisterLowshelf2168); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegisterLowshelf"


    // $ANTLR start "ruleWriteRegisterLowshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1049:1: ruleWriteRegisterLowshelf : ( ( rule__WriteRegisterLowshelf__Group__0 ) ) ;
    public final void ruleWriteRegisterLowshelf() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1053:2: ( ( ( rule__WriteRegisterLowshelf__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1054:1: ( ( rule__WriteRegisterLowshelf__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1054:1: ( ( rule__WriteRegisterLowshelf__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1055:1: ( rule__WriteRegisterLowshelf__Group__0 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1056:1: ( rule__WriteRegisterLowshelf__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1056:2: rule__WriteRegisterLowshelf__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__0_in_ruleWriteRegisterLowshelf2194);
            rule__WriteRegisterLowshelf__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegisterLowshelf"


    // $ANTLR start "entryRuleWriteRegisterHighshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1068:1: entryRuleWriteRegisterHighshelf : ruleWriteRegisterHighshelf EOF ;
    public final void entryRuleWriteRegisterHighshelf() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1069:1: ( ruleWriteRegisterHighshelf EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1070:1: ruleWriteRegisterHighshelf EOF
            {
             before(grammarAccess.getWriteRegisterHighshelfRule()); 
            pushFollow(FOLLOW_ruleWriteRegisterHighshelf_in_entryRuleWriteRegisterHighshelf2221);
            ruleWriteRegisterHighshelf();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegisterHighshelf2228); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegisterHighshelf"


    // $ANTLR start "ruleWriteRegisterHighshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1077:1: ruleWriteRegisterHighshelf : ( ( rule__WriteRegisterHighshelf__Group__0 ) ) ;
    public final void ruleWriteRegisterHighshelf() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1081:2: ( ( ( rule__WriteRegisterHighshelf__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1082:1: ( ( rule__WriteRegisterHighshelf__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1082:1: ( ( rule__WriteRegisterHighshelf__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1083:1: ( rule__WriteRegisterHighshelf__Group__0 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1084:1: ( rule__WriteRegisterHighshelf__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1084:2: rule__WriteRegisterHighshelf__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__0_in_ruleWriteRegisterHighshelf2254);
            rule__WriteRegisterHighshelf__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegisterHighshelf"


    // $ANTLR start "entryRuleWriteRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1096:1: entryRuleWriteRegister : ruleWriteRegister EOF ;
    public final void entryRuleWriteRegister() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1097:1: ( ruleWriteRegister EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1098:1: ruleWriteRegister EOF
            {
             before(grammarAccess.getWriteRegisterRule()); 
            pushFollow(FOLLOW_ruleWriteRegister_in_entryRuleWriteRegister2281);
            ruleWriteRegister();

            state._fsp--;

             after(grammarAccess.getWriteRegisterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegister2288); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegister"


    // $ANTLR start "ruleWriteRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1105:1: ruleWriteRegister : ( ( rule__WriteRegister__Group__0 ) ) ;
    public final void ruleWriteRegister() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1109:2: ( ( ( rule__WriteRegister__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1110:1: ( ( rule__WriteRegister__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1110:1: ( ( rule__WriteRegister__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1111:1: ( rule__WriteRegister__Group__0 )
            {
             before(grammarAccess.getWriteRegisterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1112:1: ( rule__WriteRegister__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1112:2: rule__WriteRegister__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__0_in_ruleWriteRegister2314);
            rule__WriteRegister__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegister"


    // $ANTLR start "entryRuleMaxx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1124:1: entryRuleMaxx : ruleMaxx EOF ;
    public final void entryRuleMaxx() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1125:1: ( ruleMaxx EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1126:1: ruleMaxx EOF
            {
             before(grammarAccess.getMaxxRule()); 
            pushFollow(FOLLOW_ruleMaxx_in_entryRuleMaxx2341);
            ruleMaxx();

            state._fsp--;

             after(grammarAccess.getMaxxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMaxx2348); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMaxx"


    // $ANTLR start "ruleMaxx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1133:1: ruleMaxx : ( ( rule__Maxx__Group__0 ) ) ;
    public final void ruleMaxx() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1137:2: ( ( ( rule__Maxx__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1138:1: ( ( rule__Maxx__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1138:1: ( ( rule__Maxx__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1139:1: ( rule__Maxx__Group__0 )
            {
             before(grammarAccess.getMaxxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1140:1: ( rule__Maxx__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1140:2: rule__Maxx__Group__0
            {
            pushFollow(FOLLOW_rule__Maxx__Group__0_in_ruleMaxx2374);
            rule__Maxx__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMaxx"


    // $ANTLR start "entryRuleReadRegisterFilter"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1152:1: entryRuleReadRegisterFilter : ruleReadRegisterFilter EOF ;
    public final void entryRuleReadRegisterFilter() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1153:1: ( ruleReadRegisterFilter EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1154:1: ruleReadRegisterFilter EOF
            {
             before(grammarAccess.getReadRegisterFilterRule()); 
            pushFollow(FOLLOW_ruleReadRegisterFilter_in_entryRuleReadRegisterFilter2401);
            ruleReadRegisterFilter();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadRegisterFilter2408); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadRegisterFilter"


    // $ANTLR start "ruleReadRegisterFilter"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1161:1: ruleReadRegisterFilter : ( ( rule__ReadRegisterFilter__Group__0 ) ) ;
    public final void ruleReadRegisterFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1165:2: ( ( ( rule__ReadRegisterFilter__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1166:1: ( ( rule__ReadRegisterFilter__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1166:1: ( ( rule__ReadRegisterFilter__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1167:1: ( rule__ReadRegisterFilter__Group__0 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1168:1: ( rule__ReadRegisterFilter__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1168:2: rule__ReadRegisterFilter__Group__0
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__0_in_ruleReadRegisterFilter2434);
            rule__ReadRegisterFilter__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadRegisterFilter"


    // $ANTLR start "entryRuleMulx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1180:1: entryRuleMulx : ruleMulx EOF ;
    public final void entryRuleMulx() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1181:1: ( ruleMulx EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1182:1: ruleMulx EOF
            {
             before(grammarAccess.getMulxRule()); 
            pushFollow(FOLLOW_ruleMulx_in_entryRuleMulx2461);
            ruleMulx();

            state._fsp--;

             after(grammarAccess.getMulxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMulx2468); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMulx"


    // $ANTLR start "ruleMulx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1189:1: ruleMulx : ( ( rule__Mulx__Group__0 ) ) ;
    public final void ruleMulx() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1193:2: ( ( ( rule__Mulx__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1194:1: ( ( rule__Mulx__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1194:1: ( ( rule__Mulx__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1195:1: ( rule__Mulx__Group__0 )
            {
             before(grammarAccess.getMulxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1196:1: ( rule__Mulx__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1196:2: rule__Mulx__Group__0
            {
            pushFollow(FOLLOW_rule__Mulx__Group__0_in_ruleMulx2494);
            rule__Mulx__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMulxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulx"


    // $ANTLR start "entryRuleLdax"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1208:1: entryRuleLdax : ruleLdax EOF ;
    public final void entryRuleLdax() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1209:1: ( ruleLdax EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1210:1: ruleLdax EOF
            {
             before(grammarAccess.getLdaxRule()); 
            pushFollow(FOLLOW_ruleLdax_in_entryRuleLdax2521);
            ruleLdax();

            state._fsp--;

             after(grammarAccess.getLdaxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLdax2528); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLdax"


    // $ANTLR start "ruleLdax"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1217:1: ruleLdax : ( ( rule__Ldax__Group__0 ) ) ;
    public final void ruleLdax() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1221:2: ( ( ( rule__Ldax__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1222:1: ( ( rule__Ldax__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1222:1: ( ( rule__Ldax__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1223:1: ( rule__Ldax__Group__0 )
            {
             before(grammarAccess.getLdaxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1224:1: ( rule__Ldax__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1224:2: rule__Ldax__Group__0
            {
            pushFollow(FOLLOW_rule__Ldax__Group__0_in_ruleLdax2554);
            rule__Ldax__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLdaxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLdax"


    // $ANTLR start "entryRuleExp"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1236:1: entryRuleExp : ruleExp EOF ;
    public final void entryRuleExp() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1237:1: ( ruleExp EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1238:1: ruleExp EOF
            {
             before(grammarAccess.getExpRule()); 
            pushFollow(FOLLOW_ruleExp_in_entryRuleExp2581);
            ruleExp();

            state._fsp--;

             after(grammarAccess.getExpRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExp2588); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExp"


    // $ANTLR start "ruleExp"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1245:1: ruleExp : ( ( rule__Exp__Group__0 ) ) ;
    public final void ruleExp() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1249:2: ( ( ( rule__Exp__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1250:1: ( ( rule__Exp__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1250:1: ( ( rule__Exp__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1251:1: ( rule__Exp__Group__0 )
            {
             before(grammarAccess.getExpAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1252:1: ( rule__Exp__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1252:2: rule__Exp__Group__0
            {
            pushFollow(FOLLOW_rule__Exp__Group__0_in_ruleExp2614);
            rule__Exp__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExp"


    // $ANTLR start "entryRuleLog"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1264:1: entryRuleLog : ruleLog EOF ;
    public final void entryRuleLog() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1265:1: ( ruleLog EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1266:1: ruleLog EOF
            {
             before(grammarAccess.getLogRule()); 
            pushFollow(FOLLOW_ruleLog_in_entryRuleLog2641);
            ruleLog();

            state._fsp--;

             after(grammarAccess.getLogRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLog2648); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLog"


    // $ANTLR start "ruleLog"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1273:1: ruleLog : ( ( rule__Log__Group__0 ) ) ;
    public final void ruleLog() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1277:2: ( ( ( rule__Log__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1278:1: ( ( rule__Log__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1278:1: ( ( rule__Log__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1279:1: ( rule__Log__Group__0 )
            {
             before(grammarAccess.getLogAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1280:1: ( rule__Log__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1280:2: rule__Log__Group__0
            {
            pushFollow(FOLLOW_rule__Log__Group__0_in_ruleLog2674);
            rule__Log__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLog"


    // $ANTLR start "entryRuleScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1292:1: entryRuleScaleOffset : ruleScaleOffset EOF ;
    public final void entryRuleScaleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1293:1: ( ruleScaleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1294:1: ruleScaleOffset EOF
            {
             before(grammarAccess.getScaleOffsetRule()); 
            pushFollow(FOLLOW_ruleScaleOffset_in_entryRuleScaleOffset2701);
            ruleScaleOffset();

            state._fsp--;

             after(grammarAccess.getScaleOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleScaleOffset2708); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScaleOffset"


    // $ANTLR start "ruleScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1301:1: ruleScaleOffset : ( ( rule__ScaleOffset__Group__0 ) ) ;
    public final void ruleScaleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1305:2: ( ( ( rule__ScaleOffset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1306:1: ( ( rule__ScaleOffset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1306:1: ( ( rule__ScaleOffset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1307:1: ( rule__ScaleOffset__Group__0 )
            {
             before(grammarAccess.getScaleOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1308:1: ( rule__ScaleOffset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1308:2: rule__ScaleOffset__Group__0
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__0_in_ruleScaleOffset2734);
            rule__ScaleOffset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScaleOffset"


    // $ANTLR start "entryRuleWriteDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1320:1: entryRuleWriteDelay : ruleWriteDelay EOF ;
    public final void entryRuleWriteDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1321:1: ( ruleWriteDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1322:1: ruleWriteDelay EOF
            {
             before(grammarAccess.getWriteDelayRule()); 
            pushFollow(FOLLOW_ruleWriteDelay_in_entryRuleWriteDelay2761);
            ruleWriteDelay();

            state._fsp--;

             after(grammarAccess.getWriteDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteDelay2768); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteDelay"


    // $ANTLR start "ruleWriteDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1329:1: ruleWriteDelay : ( ( rule__WriteDelay__Group__0 ) ) ;
    public final void ruleWriteDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1333:2: ( ( ( rule__WriteDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1334:1: ( ( rule__WriteDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1334:1: ( ( rule__WriteDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1335:1: ( rule__WriteDelay__Group__0 )
            {
             before(grammarAccess.getWriteDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1336:1: ( rule__WriteDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1336:2: rule__WriteDelay__Group__0
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__0_in_ruleWriteDelay2794);
            rule__WriteDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteDelay"


    // $ANTLR start "entryRuleWriteAllpass"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1348:1: entryRuleWriteAllpass : ruleWriteAllpass EOF ;
    public final void entryRuleWriteAllpass() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1349:1: ( ruleWriteAllpass EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1350:1: ruleWriteAllpass EOF
            {
             before(grammarAccess.getWriteAllpassRule()); 
            pushFollow(FOLLOW_ruleWriteAllpass_in_entryRuleWriteAllpass2821);
            ruleWriteAllpass();

            state._fsp--;

             after(grammarAccess.getWriteAllpassRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteAllpass2828); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteAllpass"


    // $ANTLR start "ruleWriteAllpass"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1357:1: ruleWriteAllpass : ( ( rule__WriteAllpass__Group__0 ) ) ;
    public final void ruleWriteAllpass() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1361:2: ( ( ( rule__WriteAllpass__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1362:1: ( ( rule__WriteAllpass__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1362:1: ( ( rule__WriteAllpass__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1363:1: ( rule__WriteAllpass__Group__0 )
            {
             before(grammarAccess.getWriteAllpassAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1364:1: ( rule__WriteAllpass__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1364:2: rule__WriteAllpass__Group__0
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__0_in_ruleWriteAllpass2854);
            rule__WriteAllpass__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteAllpass"


    // $ANTLR start "entryRuleReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1376:1: entryRuleReadDelay : ruleReadDelay EOF ;
    public final void entryRuleReadDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1377:1: ( ruleReadDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1378:1: ruleReadDelay EOF
            {
             before(grammarAccess.getReadDelayRule()); 
            pushFollow(FOLLOW_ruleReadDelay_in_entryRuleReadDelay2881);
            ruleReadDelay();

            state._fsp--;

             after(grammarAccess.getReadDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadDelay2888); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadDelay"


    // $ANTLR start "ruleReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1385:1: ruleReadDelay : ( ( rule__ReadDelay__Group__0 ) ) ;
    public final void ruleReadDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1389:2: ( ( ( rule__ReadDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1390:1: ( ( rule__ReadDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1390:1: ( ( rule__ReadDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1391:1: ( rule__ReadDelay__Group__0 )
            {
             before(grammarAccess.getReadDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1392:1: ( rule__ReadDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1392:2: rule__ReadDelay__Group__0
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__0_in_ruleReadDelay2914);
            rule__ReadDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadDelay"


    // $ANTLR start "entryRuleLoadSinLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1404:1: entryRuleLoadSinLFO : ruleLoadSinLFO EOF ;
    public final void entryRuleLoadSinLFO() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1405:1: ( ruleLoadSinLFO EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1406:1: ruleLoadSinLFO EOF
            {
             before(grammarAccess.getLoadSinLFORule()); 
            pushFollow(FOLLOW_ruleLoadSinLFO_in_entryRuleLoadSinLFO2941);
            ruleLoadSinLFO();

            state._fsp--;

             after(grammarAccess.getLoadSinLFORule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLoadSinLFO2948); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLoadSinLFO"


    // $ANTLR start "ruleLoadSinLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1413:1: ruleLoadSinLFO : ( ( rule__LoadSinLFO__Group__0 ) ) ;
    public final void ruleLoadSinLFO() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1417:2: ( ( ( rule__LoadSinLFO__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1418:1: ( ( rule__LoadSinLFO__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1418:1: ( ( rule__LoadSinLFO__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1419:1: ( rule__LoadSinLFO__Group__0 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1420:1: ( rule__LoadSinLFO__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1420:2: rule__LoadSinLFO__Group__0
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__0_in_ruleLoadSinLFO2974);
            rule__LoadSinLFO__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLoadSinLFO"


    // $ANTLR start "entryRuleLoadRampLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1432:1: entryRuleLoadRampLFO : ruleLoadRampLFO EOF ;
    public final void entryRuleLoadRampLFO() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1433:1: ( ruleLoadRampLFO EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1434:1: ruleLoadRampLFO EOF
            {
             before(grammarAccess.getLoadRampLFORule()); 
            pushFollow(FOLLOW_ruleLoadRampLFO_in_entryRuleLoadRampLFO3001);
            ruleLoadRampLFO();

            state._fsp--;

             after(grammarAccess.getLoadRampLFORule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLoadRampLFO3008); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLoadRampLFO"


    // $ANTLR start "ruleLoadRampLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1441:1: ruleLoadRampLFO : ( ( rule__LoadRampLFO__Group__0 ) ) ;
    public final void ruleLoadRampLFO() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1445:2: ( ( ( rule__LoadRampLFO__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1446:1: ( ( rule__LoadRampLFO__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1446:1: ( ( rule__LoadRampLFO__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1447:1: ( rule__LoadRampLFO__Group__0 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1448:1: ( rule__LoadRampLFO__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1448:2: rule__LoadRampLFO__Group__0
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__0_in_ruleLoadRampLFO3034);
            rule__LoadRampLFO__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLoadRampLFO"


    // $ANTLR start "entryRuleChorusReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1460:1: entryRuleChorusReadDelay : ruleChorusReadDelay EOF ;
    public final void entryRuleChorusReadDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1461:1: ( ruleChorusReadDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1462:1: ruleChorusReadDelay EOF
            {
             before(grammarAccess.getChorusReadDelayRule()); 
            pushFollow(FOLLOW_ruleChorusReadDelay_in_entryRuleChorusReadDelay3061);
            ruleChorusReadDelay();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusReadDelay3068); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusReadDelay"


    // $ANTLR start "ruleChorusReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1469:1: ruleChorusReadDelay : ( ( rule__ChorusReadDelay__Group__0 ) ) ;
    public final void ruleChorusReadDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1473:2: ( ( ( rule__ChorusReadDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1474:1: ( ( rule__ChorusReadDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1474:1: ( ( rule__ChorusReadDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1475:1: ( rule__ChorusReadDelay__Group__0 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1476:1: ( rule__ChorusReadDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1476:2: rule__ChorusReadDelay__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__0_in_ruleChorusReadDelay3094);
            rule__ChorusReadDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusReadDelay"


    // $ANTLR start "entryRuleChorusReadValue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1488:1: entryRuleChorusReadValue : ruleChorusReadValue EOF ;
    public final void entryRuleChorusReadValue() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1489:1: ( ruleChorusReadValue EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1490:1: ruleChorusReadValue EOF
            {
             before(grammarAccess.getChorusReadValueRule()); 
            pushFollow(FOLLOW_ruleChorusReadValue_in_entryRuleChorusReadValue3121);
            ruleChorusReadValue();

            state._fsp--;

             after(grammarAccess.getChorusReadValueRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusReadValue3128); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusReadValue"


    // $ANTLR start "ruleChorusReadValue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1497:1: ruleChorusReadValue : ( ( rule__ChorusReadValue__Group__0 ) ) ;
    public final void ruleChorusReadValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1501:2: ( ( ( rule__ChorusReadValue__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1502:1: ( ( rule__ChorusReadValue__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1502:1: ( ( rule__ChorusReadValue__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1503:1: ( rule__ChorusReadValue__Group__0 )
            {
             before(grammarAccess.getChorusReadValueAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1504:1: ( rule__ChorusReadValue__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1504:2: rule__ChorusReadValue__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__0_in_ruleChorusReadValue3154);
            rule__ChorusReadValue__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadValueAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusReadValue"


    // $ANTLR start "entryRuleChorusScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1516:1: entryRuleChorusScaleOffset : ruleChorusScaleOffset EOF ;
    public final void entryRuleChorusScaleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1517:1: ( ruleChorusScaleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1518:1: ruleChorusScaleOffset EOF
            {
             before(grammarAccess.getChorusScaleOffsetRule()); 
            pushFollow(FOLLOW_ruleChorusScaleOffset_in_entryRuleChorusScaleOffset3181);
            ruleChorusScaleOffset();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusScaleOffset3188); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusScaleOffset"


    // $ANTLR start "ruleChorusScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1525:1: ruleChorusScaleOffset : ( ( rule__ChorusScaleOffset__Group__0 ) ) ;
    public final void ruleChorusScaleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1529:2: ( ( ( rule__ChorusScaleOffset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1530:1: ( ( rule__ChorusScaleOffset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1530:1: ( ( rule__ChorusScaleOffset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1531:1: ( rule__ChorusScaleOffset__Group__0 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1532:1: ( rule__ChorusScaleOffset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1532:2: rule__ChorusScaleOffset__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__0_in_ruleChorusScaleOffset3214);
            rule__ChorusScaleOffset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusScaleOffset"


    // $ANTLR start "entryRuleReadDelayPointer"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1544:1: entryRuleReadDelayPointer : ruleReadDelayPointer EOF ;
    public final void entryRuleReadDelayPointer() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1545:1: ( ruleReadDelayPointer EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1546:1: ruleReadDelayPointer EOF
            {
             before(grammarAccess.getReadDelayPointerRule()); 
            pushFollow(FOLLOW_ruleReadDelayPointer_in_entryRuleReadDelayPointer3241);
            ruleReadDelayPointer();

            state._fsp--;

             after(grammarAccess.getReadDelayPointerRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadDelayPointer3248); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadDelayPointer"


    // $ANTLR start "ruleReadDelayPointer"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1553:1: ruleReadDelayPointer : ( ( rule__ReadDelayPointer__Group__0 ) ) ;
    public final void ruleReadDelayPointer() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1557:2: ( ( ( rule__ReadDelayPointer__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1558:1: ( ( rule__ReadDelayPointer__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1558:1: ( ( rule__ReadDelayPointer__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1559:1: ( rule__ReadDelayPointer__Group__0 )
            {
             before(grammarAccess.getReadDelayPointerAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1560:1: ( rule__ReadDelayPointer__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1560:2: rule__ReadDelayPointer__Group__0
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__0_in_ruleReadDelayPointer3274);
            rule__ReadDelayPointer__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayPointerAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadDelayPointer"


    // $ANTLR start "entryRuleAnd"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1572:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1573:1: ( ruleAnd EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1574:1: ruleAnd EOF
            {
             before(grammarAccess.getAndRule()); 
            pushFollow(FOLLOW_ruleAnd_in_entryRuleAnd3301);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getAndRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAnd3308); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1581:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1585:2: ( ( ( rule__And__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1586:1: ( ( rule__And__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1586:1: ( ( rule__And__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1587:1: ( rule__And__Group__0 )
            {
             before(grammarAccess.getAndAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1588:1: ( rule__And__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1588:2: rule__And__Group__0
            {
            pushFollow(FOLLOW_rule__And__Group__0_in_ruleAnd3334);
            rule__And__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleOr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1600:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1601:1: ( ruleOr EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1602:1: ruleOr EOF
            {
             before(grammarAccess.getOrRule()); 
            pushFollow(FOLLOW_ruleOr_in_entryRuleOr3361);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getOrRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOr3368); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1609:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1613:2: ( ( ( rule__Or__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1614:1: ( ( rule__Or__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1614:1: ( ( rule__Or__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1615:1: ( rule__Or__Group__0 )
            {
             before(grammarAccess.getOrAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1616:1: ( rule__Or__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1616:2: rule__Or__Group__0
            {
            pushFollow(FOLLOW_rule__Or__Group__0_in_ruleOr3394);
            rule__Or__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleXor"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1628:1: entryRuleXor : ruleXor EOF ;
    public final void entryRuleXor() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1629:1: ( ruleXor EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1630:1: ruleXor EOF
            {
             before(grammarAccess.getXorRule()); 
            pushFollow(FOLLOW_ruleXor_in_entryRuleXor3421);
            ruleXor();

            state._fsp--;

             after(grammarAccess.getXorRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleXor3428); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXor"


    // $ANTLR start "ruleXor"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1637:1: ruleXor : ( ( rule__Xor__Group__0 ) ) ;
    public final void ruleXor() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1641:2: ( ( ( rule__Xor__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1642:1: ( ( rule__Xor__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1642:1: ( ( rule__Xor__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1643:1: ( rule__Xor__Group__0 )
            {
             before(grammarAccess.getXorAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1644:1: ( rule__Xor__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1644:2: rule__Xor__Group__0
            {
            pushFollow(FOLLOW_rule__Xor__Group__0_in_ruleXor3454);
            rule__Xor__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXor"


    // $ANTLR start "entryRuleJam"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1656:1: entryRuleJam : ruleJam EOF ;
    public final void entryRuleJam() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1657:1: ( ruleJam EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1658:1: ruleJam EOF
            {
             before(grammarAccess.getJamRule()); 
            pushFollow(FOLLOW_ruleJam_in_entryRuleJam3481);
            ruleJam();

            state._fsp--;

             after(grammarAccess.getJamRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleJam3488); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJam"


    // $ANTLR start "ruleJam"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1665:1: ruleJam : ( ( rule__Jam__Group__0 ) ) ;
    public final void ruleJam() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1669:2: ( ( ( rule__Jam__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1670:1: ( ( rule__Jam__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1670:1: ( ( rule__Jam__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1671:1: ( rule__Jam__Group__0 )
            {
             before(grammarAccess.getJamAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1672:1: ( rule__Jam__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1672:2: rule__Jam__Group__0
            {
            pushFollow(FOLLOW_rule__Jam__Group__0_in_ruleJam3514);
            rule__Jam__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getJamAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJam"


    // $ANTLR start "entryRuleClr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1684:1: entryRuleClr : ruleClr EOF ;
    public final void entryRuleClr() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1685:1: ( ruleClr EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1686:1: ruleClr EOF
            {
             before(grammarAccess.getClrRule()); 
            pushFollow(FOLLOW_ruleClr_in_entryRuleClr3541);
            ruleClr();

            state._fsp--;

             after(grammarAccess.getClrRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleClr3548); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleClr"


    // $ANTLR start "ruleClr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1693:1: ruleClr : ( ( rule__Clr__Group__0 ) ) ;
    public final void ruleClr() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1697:2: ( ( ( rule__Clr__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1698:1: ( ( rule__Clr__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1698:1: ( ( rule__Clr__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1699:1: ( rule__Clr__Group__0 )
            {
             before(grammarAccess.getClrAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1700:1: ( rule__Clr__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1700:2: rule__Clr__Group__0
            {
            pushFollow(FOLLOW_rule__Clr__Group__0_in_ruleClr3574);
            rule__Clr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getClrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClr"


    // $ANTLR start "entryRuleNot"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1712:1: entryRuleNot : ruleNot EOF ;
    public final void entryRuleNot() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1713:1: ( ruleNot EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1714:1: ruleNot EOF
            {
             before(grammarAccess.getNotRule()); 
            pushFollow(FOLLOW_ruleNot_in_entryRuleNot3601);
            ruleNot();

            state._fsp--;

             after(grammarAccess.getNotRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNot3608); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNot"


    // $ANTLR start "ruleNot"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1721:1: ruleNot : ( ( rule__Not__Group__0 ) ) ;
    public final void ruleNot() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1725:2: ( ( ( rule__Not__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1726:1: ( ( rule__Not__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1726:1: ( ( rule__Not__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1727:1: ( rule__Not__Group__0 )
            {
             before(grammarAccess.getNotAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1728:1: ( rule__Not__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1728:2: rule__Not__Group__0
            {
            pushFollow(FOLLOW_rule__Not__Group__0_in_ruleNot3634);
            rule__Not__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNotAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNot"


    // $ANTLR start "entryRuleAbsa"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1740:1: entryRuleAbsa : ruleAbsa EOF ;
    public final void entryRuleAbsa() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1741:1: ( ruleAbsa EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1742:1: ruleAbsa EOF
            {
             before(grammarAccess.getAbsaRule()); 
            pushFollow(FOLLOW_ruleAbsa_in_entryRuleAbsa3661);
            ruleAbsa();

            state._fsp--;

             after(grammarAccess.getAbsaRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbsa3668); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAbsa"


    // $ANTLR start "ruleAbsa"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1749:1: ruleAbsa : ( ( rule__Absa__Group__0 ) ) ;
    public final void ruleAbsa() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1753:2: ( ( ( rule__Absa__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1754:1: ( ( rule__Absa__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1754:1: ( ( rule__Absa__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1755:1: ( rule__Absa__Group__0 )
            {
             before(grammarAccess.getAbsaAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1756:1: ( rule__Absa__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1756:2: rule__Absa__Group__0
            {
            pushFollow(FOLLOW_rule__Absa__Group__0_in_ruleAbsa3694);
            rule__Absa__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAbsaAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAbsa"


    // $ANTLR start "entryRuleSkip"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1768:1: entryRuleSkip : ruleSkip EOF ;
    public final void entryRuleSkip() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1769:1: ( ruleSkip EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1770:1: ruleSkip EOF
            {
             before(grammarAccess.getSkipRule()); 
            pushFollow(FOLLOW_ruleSkip_in_entryRuleSkip3721);
            ruleSkip();

            state._fsp--;

             after(grammarAccess.getSkipRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSkip3728); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSkip"


    // $ANTLR start "ruleSkip"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1777:1: ruleSkip : ( ( rule__Skip__Group__0 ) ) ;
    public final void ruleSkip() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1781:2: ( ( ( rule__Skip__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1782:1: ( ( rule__Skip__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1782:1: ( ( rule__Skip__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1783:1: ( rule__Skip__Group__0 )
            {
             before(grammarAccess.getSkipAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1784:1: ( rule__Skip__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1784:2: rule__Skip__Group__0
            {
            pushFollow(FOLLOW_rule__Skip__Group__0_in_ruleSkip3754);
            rule__Skip__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSkip"


    // $ANTLR start "entryRuleSPINDOUBLE"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1796:1: entryRuleSPINDOUBLE : ruleSPINDOUBLE EOF ;
    public final void entryRuleSPINDOUBLE() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1797:1: ( ruleSPINDOUBLE EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1798:1: ruleSPINDOUBLE EOF
            {
             before(grammarAccess.getSPINDOUBLERule()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_entryRuleSPINDOUBLE3781);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getSPINDOUBLERule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINDOUBLE3788); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINDOUBLE"


    // $ANTLR start "ruleSPINDOUBLE"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1805:1: ruleSPINDOUBLE : ( ( rule__SPINDOUBLE__Group__0 ) ) ;
    public final void ruleSPINDOUBLE() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1809:2: ( ( ( rule__SPINDOUBLE__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1810:1: ( ( rule__SPINDOUBLE__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1810:1: ( ( rule__SPINDOUBLE__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1811:1: ( rule__SPINDOUBLE__Group__0 )
            {
             before(grammarAccess.getSPINDOUBLEAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1812:1: ( rule__SPINDOUBLE__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1812:2: rule__SPINDOUBLE__Group__0
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__0_in_ruleSPINDOUBLE3814);
            rule__SPINDOUBLE__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINDOUBLEAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINDOUBLE"


    // $ANTLR start "entryRuleSPINREGISTER"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1824:1: entryRuleSPINREGISTER : ruleSPINREGISTER EOF ;
    public final void entryRuleSPINREGISTER() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1825:1: ( ruleSPINREGISTER EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1826:1: ruleSPINREGISTER EOF
            {
             before(grammarAccess.getSPINREGISTERRule()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_entryRuleSPINREGISTER3841);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getSPINREGISTERRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINREGISTER3848); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINREGISTER"


    // $ANTLR start "ruleSPINREGISTER"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1833:1: ruleSPINREGISTER : ( ( rule__SPINREGISTER__Alternatives ) ) ;
    public final void ruleSPINREGISTER() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1837:2: ( ( ( rule__SPINREGISTER__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1838:1: ( ( rule__SPINREGISTER__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1838:1: ( ( rule__SPINREGISTER__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1839:1: ( rule__SPINREGISTER__Alternatives )
            {
             before(grammarAccess.getSPINREGISTERAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1840:1: ( rule__SPINREGISTER__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1840:2: rule__SPINREGISTER__Alternatives
            {
            pushFollow(FOLLOW_rule__SPINREGISTER__Alternatives_in_ruleSPINREGISTER3874);
            rule__SPINREGISTER__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSPINREGISTERAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINREGISTER"


    // $ANTLR start "entryRuleSPINCHOREGFLAGS"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1852:1: entryRuleSPINCHOREGFLAGS : ruleSPINCHOREGFLAGS EOF ;
    public final void entryRuleSPINCHOREGFLAGS() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1853:1: ( ruleSPINCHOREGFLAGS EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1854:1: ruleSPINCHOREGFLAGS EOF
            {
             before(grammarAccess.getSPINCHOREGFLAGSRule()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_entryRuleSPINCHOREGFLAGS3901);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getSPINCHOREGFLAGSRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINCHOREGFLAGS3908); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINCHOREGFLAGS"


    // $ANTLR start "ruleSPINCHOREGFLAGS"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1861:1: ruleSPINCHOREGFLAGS : ( ( rule__SPINCHOREGFLAGS__Alternatives ) ) ;
    public final void ruleSPINCHOREGFLAGS() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1865:2: ( ( ( rule__SPINCHOREGFLAGS__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1866:1: ( ( rule__SPINCHOREGFLAGS__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1866:1: ( ( rule__SPINCHOREGFLAGS__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1867:1: ( rule__SPINCHOREGFLAGS__Alternatives )
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1868:1: ( rule__SPINCHOREGFLAGS__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1868:2: rule__SPINCHOREGFLAGS__Alternatives
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Alternatives_in_ruleSPINCHOREGFLAGS3934);
            rule__SPINCHOREGFLAGS__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINCHOREGFLAGS"


    // $ANTLR start "entryRuleSPINMEM"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1880:1: entryRuleSPINMEM : ruleSPINMEM EOF ;
    public final void entryRuleSPINMEM() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1881:1: ( ruleSPINMEM EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1882:1: ruleSPINMEM EOF
            {
             before(grammarAccess.getSPINMEMRule()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_entryRuleSPINMEM3961);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getSPINMEMRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINMEM3968); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINMEM"


    // $ANTLR start "ruleSPINMEM"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1889:1: ruleSPINMEM : ( ( rule__SPINMEM__Group__0 ) ) ;
    public final void ruleSPINMEM() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1893:2: ( ( ( rule__SPINMEM__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1894:1: ( ( rule__SPINMEM__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1894:1: ( ( rule__SPINMEM__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1895:1: ( rule__SPINMEM__Group__0 )
            {
             before(grammarAccess.getSPINMEMAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1896:1: ( rule__SPINMEM__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1896:2: rule__SPINMEM__Group__0
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__0_in_ruleSPINMEM3994);
            rule__SPINMEM__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINMEMAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINMEM"


    // $ANTLR start "entryRuleSPINBUF"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1908:1: entryRuleSPINBUF : ruleSPINBUF EOF ;
    public final void entryRuleSPINBUF() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1909:1: ( ruleSPINBUF EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1910:1: ruleSPINBUF EOF
            {
             before(grammarAccess.getSPINBUFRule()); 
            pushFollow(FOLLOW_ruleSPINBUF_in_entryRuleSPINBUF4021);
            ruleSPINBUF();

            state._fsp--;

             after(grammarAccess.getSPINBUFRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINBUF4028); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINBUF"


    // $ANTLR start "ruleSPINBUF"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1917:1: ruleSPINBUF : ( ( rule__SPINBUF__Group__0 ) ) ;
    public final void ruleSPINBUF() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1921:2: ( ( ( rule__SPINBUF__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1922:1: ( ( rule__SPINBUF__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1922:1: ( ( rule__SPINBUF__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1923:1: ( rule__SPINBUF__Group__0 )
            {
             before(grammarAccess.getSPINBUFAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1924:1: ( rule__SPINBUF__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1924:2: rule__SPINBUF__Group__0
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__0_in_ruleSPINBUF4054);
            rule__SPINBUF__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINBUFAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINBUF"


    // $ANTLR start "entryRuleBINARY24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1936:1: entryRuleBINARY24 : ruleBINARY24 EOF ;
    public final void entryRuleBINARY24() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1937:1: ( ruleBINARY24 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1938:1: ruleBINARY24 EOF
            {
             before(grammarAccess.getBINARY24Rule()); 
            pushFollow(FOLLOW_ruleBINARY24_in_entryRuleBINARY244081);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getBINARY24Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBINARY244088); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBINARY24"


    // $ANTLR start "ruleBINARY24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1945:1: ruleBINARY24 : ( ( rule__BINARY24__Alternatives ) ) ;
    public final void ruleBINARY24() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1949:2: ( ( ( rule__BINARY24__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1950:1: ( ( rule__BINARY24__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1950:1: ( ( rule__BINARY24__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1951:1: ( rule__BINARY24__Alternatives )
            {
             before(grammarAccess.getBINARY24Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1952:1: ( rule__BINARY24__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1952:2: rule__BINARY24__Alternatives
            {
            pushFollow(FOLLOW_rule__BINARY24__Alternatives_in_ruleBINARY244114);
            rule__BINARY24__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBINARY24Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBINARY24"


    // $ANTLR start "entryRuleBOOLEAN"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1964:1: entryRuleBOOLEAN : ruleBOOLEAN EOF ;
    public final void entryRuleBOOLEAN() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1965:1: ( ruleBOOLEAN EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1966:1: ruleBOOLEAN EOF
            {
             before(grammarAccess.getBOOLEANRule()); 
            pushFollow(FOLLOW_ruleBOOLEAN_in_entryRuleBOOLEAN4141);
            ruleBOOLEAN();

            state._fsp--;

             after(grammarAccess.getBOOLEANRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBOOLEAN4148); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBOOLEAN"


    // $ANTLR start "ruleBOOLEAN"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1973:1: ruleBOOLEAN : ( ( rule__BOOLEAN__Alternatives ) ) ;
    public final void ruleBOOLEAN() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1977:2: ( ( ( rule__BOOLEAN__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1978:1: ( ( rule__BOOLEAN__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1978:1: ( ( rule__BOOLEAN__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1979:1: ( rule__BOOLEAN__Alternatives )
            {
             before(grammarAccess.getBOOLEANAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1980:1: ( rule__BOOLEAN__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1980:2: rule__BOOLEAN__Alternatives
            {
            pushFollow(FOLLOW_rule__BOOLEAN__Alternatives_in_ruleBOOLEAN4174);
            rule__BOOLEAN__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBOOLEANAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBOOLEAN"


    // $ANTLR start "rule__Pin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1992:1: rule__Pin__Alternatives : ( ( ruleInputPin ) | ( ruleOutputPin ) );
    public final void rule__Pin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1996:1: ( ( ruleInputPin ) | ( ruleOutputPin ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==19||LA1_0==21) ) {
                alt1=1;
            }
            else if ( (LA1_0==20||LA1_0==22) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1997:1: ( ruleInputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1997:1: ( ruleInputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1998:1: ruleInputPin
                    {
                     before(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleInputPin_in_rule__Pin__Alternatives4210);
                    ruleInputPin();

                    state._fsp--;

                     after(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2003:6: ( ruleOutputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2003:6: ( ruleOutputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2004:1: ruleOutputPin
                    {
                     before(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleOutputPin_in_rule__Pin__Alternatives4227);
                    ruleOutputPin();

                    state._fsp--;

                     after(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pin__Alternatives"


    // $ANTLR start "rule__InputPin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2014:1: rule__InputPin__Alternatives : ( ( ruleAudioInput ) | ( ruleControlInput ) );
    public final void rule__InputPin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2018:1: ( ( ruleAudioInput ) | ( ruleControlInput ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==19) ) {
                alt2=1;
            }
            else if ( (LA2_0==21) ) {
                alt2=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2019:1: ( ruleAudioInput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2019:1: ( ruleAudioInput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2020:1: ruleAudioInput
                    {
                     before(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAudioInput_in_rule__InputPin__Alternatives4259);
                    ruleAudioInput();

                    state._fsp--;

                     after(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2025:6: ( ruleControlInput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2025:6: ( ruleControlInput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2026:1: ruleControlInput
                    {
                     before(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleControlInput_in_rule__InputPin__Alternatives4276);
                    ruleControlInput();

                    state._fsp--;

                     after(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InputPin__Alternatives"


    // $ANTLR start "rule__OutputPin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2036:1: rule__OutputPin__Alternatives : ( ( ruleAudioOutput ) | ( ruleControlOutput ) );
    public final void rule__OutputPin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2040:1: ( ( ruleAudioOutput ) | ( ruleControlOutput ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==20) ) {
                alt3=1;
            }
            else if ( (LA3_0==22) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2041:1: ( ruleAudioOutput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2041:1: ( ruleAudioOutput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2042:1: ruleAudioOutput
                    {
                     before(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAudioOutput_in_rule__OutputPin__Alternatives4308);
                    ruleAudioOutput();

                    state._fsp--;

                     after(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2047:6: ( ruleControlOutput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2047:6: ( ruleControlOutput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2048:1: ruleControlOutput
                    {
                     before(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleControlOutput_in_rule__OutputPin__Alternatives4325);
                    ruleControlOutput();

                    state._fsp--;

                     after(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OutputPin__Alternatives"


    // $ANTLR start "rule__SpinElement__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2058:1: rule__SpinElement__Alternatives : ( ( ruleControl ) | ( ruleSpinEquate ) | ( ruleSpinBool ) | ( ruleMem ) | ( ruleInstruction ) | ( ruleLabel ) | ( ruleComment ) | ( ruleMacro ) | ( ruleOffset ) );
    public final void rule__SpinElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2062:1: ( ( ruleControl ) | ( ruleSpinEquate ) | ( ruleSpinBool ) | ( ruleMem ) | ( ruleInstruction ) | ( ruleLabel ) | ( ruleComment ) | ( ruleMacro ) | ( ruleOffset ) )
            int alt4=9;
            switch ( input.LA(1) ) {
            case 27:
            case 28:
                {
                alt4=1;
                }
                break;
            case 23:
                {
                alt4=2;
                }
                break;
            case 26:
                {
                alt4=3;
                }
                break;
            case 24:
                {
                alt4=4;
                }
                break;
            case 38:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
                {
                alt4=5;
                }
                break;
            case RULE_ID:
                {
                alt4=6;
                }
                break;
            case RULE_SC_COMMENT:
                {
                alt4=7;
                }
                break;
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
                {
                alt4=8;
                }
                break;
            case 25:
                {
                alt4=9;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2063:1: ( ruleControl )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2063:1: ( ruleControl )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2064:1: ruleControl
                    {
                     before(grammarAccess.getSpinElementAccess().getControlParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleControl_in_rule__SpinElement__Alternatives4357);
                    ruleControl();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getControlParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2069:6: ( ruleSpinEquate )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2069:6: ( ruleSpinEquate )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2070:1: ruleSpinEquate
                    {
                     before(grammarAccess.getSpinElementAccess().getSpinEquateParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleSpinEquate_in_rule__SpinElement__Alternatives4374);
                    ruleSpinEquate();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getSpinEquateParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2075:6: ( ruleSpinBool )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2075:6: ( ruleSpinBool )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2076:1: ruleSpinBool
                    {
                     before(grammarAccess.getSpinElementAccess().getSpinBoolParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleSpinBool_in_rule__SpinElement__Alternatives4391);
                    ruleSpinBool();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getSpinBoolParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2081:6: ( ruleMem )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2081:6: ( ruleMem )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2082:1: ruleMem
                    {
                     before(grammarAccess.getSpinElementAccess().getMemParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleMem_in_rule__SpinElement__Alternatives4408);
                    ruleMem();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getMemParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2087:6: ( ruleInstruction )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2087:6: ( ruleInstruction )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2088:1: ruleInstruction
                    {
                     before(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleInstruction_in_rule__SpinElement__Alternatives4425);
                    ruleInstruction();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2093:6: ( ruleLabel )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2093:6: ( ruleLabel )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2094:1: ruleLabel
                    {
                     before(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleLabel_in_rule__SpinElement__Alternatives4442);
                    ruleLabel();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2099:6: ( ruleComment )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2099:6: ( ruleComment )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2100:1: ruleComment
                    {
                     before(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleComment_in_rule__SpinElement__Alternatives4459);
                    ruleComment();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_6()); 

                    }


                    }
                    break;
                case 8 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2105:6: ( ruleMacro )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2105:6: ( ruleMacro )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2106:1: ruleMacro
                    {
                     before(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_7()); 
                    pushFollow(FOLLOW_ruleMacro_in_rule__SpinElement__Alternatives4476);
                    ruleMacro();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_7()); 

                    }


                    }
                    break;
                case 9 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2111:6: ( ruleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2111:6: ( ruleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2112:1: ruleOffset
                    {
                     before(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_8()); 
                    pushFollow(FOLLOW_ruleOffset_in_rule__SpinElement__Alternatives4493);
                    ruleOffset();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_8()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinElement__Alternatives"


    // $ANTLR start "rule__Control__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2122:1: rule__Control__Alternatives : ( ( ruleSpinSliderLabel ) | ( ruleSpinCheckBox ) );
    public final void rule__Control__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2126:1: ( ( ruleSpinSliderLabel ) | ( ruleSpinCheckBox ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==27) ) {
                alt5=1;
            }
            else if ( (LA5_0==28) ) {
                alt5=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2127:1: ( ruleSpinSliderLabel )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2127:1: ( ruleSpinSliderLabel )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2128:1: ruleSpinSliderLabel
                    {
                     before(grammarAccess.getControlAccess().getSpinSliderLabelParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleSpinSliderLabel_in_rule__Control__Alternatives4525);
                    ruleSpinSliderLabel();

                    state._fsp--;

                     after(grammarAccess.getControlAccess().getSpinSliderLabelParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2133:6: ( ruleSpinCheckBox )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2133:6: ( ruleSpinCheckBox )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2134:1: ruleSpinCheckBox
                    {
                     before(grammarAccess.getControlAccess().getSpinCheckBoxParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleSpinCheckBox_in_rule__Control__Alternatives4542);
                    ruleSpinCheckBox();

                    state._fsp--;

                     after(grammarAccess.getControlAccess().getSpinCheckBoxParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Control__Alternatives"


    // $ANTLR start "rule__Macro__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2144:1: rule__Macro__Alternatives : ( ( ruleIsPinConnected ) | ( ruleIsTrue ) | ( ruleIsElse ) | ( ruleIsEndif ) | ( ruleGetInputDefault ) | ( ruleGetDelayScaleControl ) | ( ruleSetOutputPin ) | ( ruleGetBaseAddress ) );
    public final void rule__Macro__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2148:1: ( ( ruleIsPinConnected ) | ( ruleIsTrue ) | ( ruleIsElse ) | ( ruleIsEndif ) | ( ruleGetInputDefault ) | ( ruleGetDelayScaleControl ) | ( ruleSetOutputPin ) | ( ruleGetBaseAddress ) )
            int alt6=8;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt6=1;
                }
                break;
            case 31:
                {
                alt6=2;
                }
                break;
            case 32:
                {
                alt6=3;
                }
                break;
            case 33:
                {
                alt6=4;
                }
                break;
            case 34:
                {
                alt6=5;
                }
                break;
            case 35:
                {
                alt6=6;
                }
                break;
            case 37:
                {
                alt6=7;
                }
                break;
            case 36:
                {
                alt6=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2149:1: ( ruleIsPinConnected )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2149:1: ( ruleIsPinConnected )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2150:1: ruleIsPinConnected
                    {
                     before(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleIsPinConnected_in_rule__Macro__Alternatives4574);
                    ruleIsPinConnected();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2155:6: ( ruleIsTrue )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2155:6: ( ruleIsTrue )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2156:1: ruleIsTrue
                    {
                     before(grammarAccess.getMacroAccess().getIsTrueParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleIsTrue_in_rule__Macro__Alternatives4591);
                    ruleIsTrue();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsTrueParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2161:6: ( ruleIsElse )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2161:6: ( ruleIsElse )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2162:1: ruleIsElse
                    {
                     before(grammarAccess.getMacroAccess().getIsElseParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleIsElse_in_rule__Macro__Alternatives4608);
                    ruleIsElse();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsElseParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2167:6: ( ruleIsEndif )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2167:6: ( ruleIsEndif )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2168:1: ruleIsEndif
                    {
                     before(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleIsEndif_in_rule__Macro__Alternatives4625);
                    ruleIsEndif();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2173:6: ( ruleGetInputDefault )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2173:6: ( ruleGetInputDefault )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2174:1: ruleGetInputDefault
                    {
                     before(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleGetInputDefault_in_rule__Macro__Alternatives4642);
                    ruleGetInputDefault();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2179:6: ( ruleGetDelayScaleControl )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2179:6: ( ruleGetDelayScaleControl )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2180:1: ruleGetDelayScaleControl
                    {
                     before(grammarAccess.getMacroAccess().getGetDelayScaleControlParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleGetDelayScaleControl_in_rule__Macro__Alternatives4659);
                    ruleGetDelayScaleControl();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetDelayScaleControlParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2185:6: ( ruleSetOutputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2185:6: ( ruleSetOutputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2186:1: ruleSetOutputPin
                    {
                     before(grammarAccess.getMacroAccess().getSetOutputPinParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleSetOutputPin_in_rule__Macro__Alternatives4676);
                    ruleSetOutputPin();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getSetOutputPinParserRuleCall_6()); 

                    }


                    }
                    break;
                case 8 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2191:6: ( ruleGetBaseAddress )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2191:6: ( ruleGetBaseAddress )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2192:1: ruleGetBaseAddress
                    {
                     before(grammarAccess.getMacroAccess().getGetBaseAddressParserRuleCall_7()); 
                    pushFollow(FOLLOW_ruleGetBaseAddress_in_rule__Macro__Alternatives4693);
                    ruleGetBaseAddress();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetBaseAddressParserRuleCall_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Macro__Alternatives"


    // $ANTLR start "rule__Instruction__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2202:1: rule__Instruction__Alternatives : ( ( ruleInst_B15_S1_9 ) | ( ruleInst_B6_S1_14 ) | ( ruleInst_S1_14_S1_10 ) | ( ruleInst_B6 ) | ( ruleInst_B24 ) | ( ruleSkip ) | ( ruleJam ) | ( ruleInst_X0 ) | ( ruleLoadSinLFO ) | ( ruleLoadRampLFO ) | ( ruleChorusReadDelay ) | ( ruleChorusReadValue ) | ( ruleChorusScaleOffset ) | ( ruleLog ) | ( ruleReadDelayPointer ) );
    public final void rule__Instruction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2206:1: ( ( ruleInst_B15_S1_9 ) | ( ruleInst_B6_S1_14 ) | ( ruleInst_S1_14_S1_10 ) | ( ruleInst_B6 ) | ( ruleInst_B24 ) | ( ruleSkip ) | ( ruleJam ) | ( ruleInst_X0 ) | ( ruleLoadSinLFO ) | ( ruleLoadRampLFO ) | ( ruleChorusReadDelay ) | ( ruleChorusReadValue ) | ( ruleChorusScaleOffset ) | ( ruleLog ) | ( ruleReadDelayPointer ) )
            int alt7=15;
            switch ( input.LA(1) ) {
            case 50:
            case 51:
            case 52:
                {
                alt7=1;
                }
                break;
            case 38:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
                {
                alt7=2;
                }
                break;
            case 47:
            case 49:
                {
                alt7=3;
                }
                break;
            case 45:
            case 46:
                {
                alt7=4;
                }
                break;
            case 59:
            case 60:
            case 61:
                {
                alt7=5;
                }
                break;
            case 66:
                {
                alt7=6;
                }
                break;
            case 62:
                {
                alt7=7;
                }
                break;
            case 63:
            case 64:
            case 65:
                {
                alt7=8;
                }
                break;
            case 53:
                {
                alt7=9;
                }
                break;
            case 54:
                {
                alt7=10;
                }
                break;
            case 55:
                {
                alt7=11;
                }
                break;
            case 56:
                {
                alt7=12;
                }
                break;
            case 57:
                {
                alt7=13;
                }
                break;
            case 48:
                {
                alt7=14;
                }
                break;
            case 58:
                {
                alt7=15;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2207:1: ( ruleInst_B15_S1_9 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2207:1: ( ruleInst_B15_S1_9 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2208:1: ruleInst_B15_S1_9
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleInst_B15_S1_9_in_rule__Instruction__Alternatives4725);
                    ruleInst_B15_S1_9();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2213:6: ( ruleInst_B6_S1_14 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2213:6: ( ruleInst_B6_S1_14 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2214:1: ruleInst_B6_S1_14
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleInst_B6_S1_14_in_rule__Instruction__Alternatives4742);
                    ruleInst_B6_S1_14();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2219:6: ( ruleInst_S1_14_S1_10 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2219:6: ( ruleInst_S1_14_S1_10 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2220:1: ruleInst_S1_14_S1_10
                    {
                     before(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleInst_S1_14_S1_10_in_rule__Instruction__Alternatives4759);
                    ruleInst_S1_14_S1_10();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2225:6: ( ruleInst_B6 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2225:6: ( ruleInst_B6 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2226:1: ruleInst_B6
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleInst_B6_in_rule__Instruction__Alternatives4776);
                    ruleInst_B6();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2231:6: ( ruleInst_B24 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2231:6: ( ruleInst_B24 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2232:1: ruleInst_B24
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleInst_B24_in_rule__Instruction__Alternatives4793);
                    ruleInst_B24();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2237:6: ( ruleSkip )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2237:6: ( ruleSkip )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2238:1: ruleSkip
                    {
                     before(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleSkip_in_rule__Instruction__Alternatives4810);
                    ruleSkip();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2243:6: ( ruleJam )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2243:6: ( ruleJam )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2244:1: ruleJam
                    {
                     before(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleJam_in_rule__Instruction__Alternatives4827);
                    ruleJam();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); 

                    }


                    }
                    break;
                case 8 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2249:6: ( ruleInst_X0 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2249:6: ( ruleInst_X0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2250:1: ruleInst_X0
                    {
                     before(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); 
                    pushFollow(FOLLOW_ruleInst_X0_in_rule__Instruction__Alternatives4844);
                    ruleInst_X0();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); 

                    }


                    }
                    break;
                case 9 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2255:6: ( ruleLoadSinLFO )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2255:6: ( ruleLoadSinLFO )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2256:1: ruleLoadSinLFO
                    {
                     before(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); 
                    pushFollow(FOLLOW_ruleLoadSinLFO_in_rule__Instruction__Alternatives4861);
                    ruleLoadSinLFO();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); 

                    }


                    }
                    break;
                case 10 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2261:6: ( ruleLoadRampLFO )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2261:6: ( ruleLoadRampLFO )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2262:1: ruleLoadRampLFO
                    {
                     before(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); 
                    pushFollow(FOLLOW_ruleLoadRampLFO_in_rule__Instruction__Alternatives4878);
                    ruleLoadRampLFO();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); 

                    }


                    }
                    break;
                case 11 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2267:6: ( ruleChorusReadDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2267:6: ( ruleChorusReadDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2268:1: ruleChorusReadDelay
                    {
                     before(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); 
                    pushFollow(FOLLOW_ruleChorusReadDelay_in_rule__Instruction__Alternatives4895);
                    ruleChorusReadDelay();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); 

                    }


                    }
                    break;
                case 12 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2273:6: ( ruleChorusReadValue )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2273:6: ( ruleChorusReadValue )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2274:1: ruleChorusReadValue
                    {
                     before(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); 
                    pushFollow(FOLLOW_ruleChorusReadValue_in_rule__Instruction__Alternatives4912);
                    ruleChorusReadValue();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); 

                    }


                    }
                    break;
                case 13 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2279:6: ( ruleChorusScaleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2279:6: ( ruleChorusScaleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2280:1: ruleChorusScaleOffset
                    {
                     before(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); 
                    pushFollow(FOLLOW_ruleChorusScaleOffset_in_rule__Instruction__Alternatives4929);
                    ruleChorusScaleOffset();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); 

                    }


                    }
                    break;
                case 14 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2285:6: ( ruleLog )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2285:6: ( ruleLog )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2286:1: ruleLog
                    {
                     before(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); 
                    pushFollow(FOLLOW_ruleLog_in_rule__Instruction__Alternatives4946);
                    ruleLog();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); 

                    }


                    }
                    break;
                case 15 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2291:6: ( ruleReadDelayPointer )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2291:6: ( ruleReadDelayPointer )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2292:1: ruleReadDelayPointer
                    {
                     before(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); 
                    pushFollow(FOLLOW_ruleReadDelayPointer_in_rule__Instruction__Alternatives4963);
                    ruleReadDelayPointer();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Alternatives"


    // $ANTLR start "rule__Inst_B6_S1_14__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2302:1: rule__Inst_B6_S1_14__Alternatives : ( ( ruleReadRegister ) | ( ruleWriteRegister ) | ( ruleReadRegisterFilter ) | ( ruleMaxx ) | ( ruleWriteRegisterHighshelf ) | ( ruleWriteRegisterLowshelf ) );
    public final void rule__Inst_B6_S1_14__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2306:1: ( ( ruleReadRegister ) | ( ruleWriteRegister ) | ( ruleReadRegisterFilter ) | ( ruleMaxx ) | ( ruleWriteRegisterHighshelf ) | ( ruleWriteRegisterLowshelf ) )
            int alt8=6;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt8=1;
                }
                break;
            case 42:
                {
                alt8=2;
                }
                break;
            case 44:
                {
                alt8=3;
                }
                break;
            case 43:
                {
                alt8=4;
                }
                break;
            case 41:
                {
                alt8=5;
                }
                break;
            case 40:
                {
                alt8=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2307:1: ( ruleReadRegister )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2307:1: ( ruleReadRegister )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2308:1: ruleReadRegister
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleReadRegister_in_rule__Inst_B6_S1_14__Alternatives4995);
                    ruleReadRegister();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2313:6: ( ruleWriteRegister )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2313:6: ( ruleWriteRegister )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2314:1: ruleWriteRegister
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleWriteRegister_in_rule__Inst_B6_S1_14__Alternatives5012);
                    ruleWriteRegister();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2319:6: ( ruleReadRegisterFilter )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2319:6: ( ruleReadRegisterFilter )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2320:1: ruleReadRegisterFilter
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleReadRegisterFilter_in_rule__Inst_B6_S1_14__Alternatives5029);
                    ruleReadRegisterFilter();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2325:6: ( ruleMaxx )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2325:6: ( ruleMaxx )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2326:1: ruleMaxx
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleMaxx_in_rule__Inst_B6_S1_14__Alternatives5046);
                    ruleMaxx();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2331:6: ( ruleWriteRegisterHighshelf )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2331:6: ( ruleWriteRegisterHighshelf )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2332:1: ruleWriteRegisterHighshelf
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleWriteRegisterHighshelf_in_rule__Inst_B6_S1_14__Alternatives5063);
                    ruleWriteRegisterHighshelf();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2337:6: ( ruleWriteRegisterLowshelf )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2337:6: ( ruleWriteRegisterLowshelf )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2338:1: ruleWriteRegisterLowshelf
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleWriteRegisterLowshelf_in_rule__Inst_B6_S1_14__Alternatives5080);
                    ruleWriteRegisterLowshelf();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B6_S1_14__Alternatives"


    // $ANTLR start "rule__Inst_B15_S1_9__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2348:1: rule__Inst_B15_S1_9__Alternatives : ( ( ruleReadDelay ) | ( ruleWriteDelay ) | ( ruleWriteAllpass ) );
    public final void rule__Inst_B15_S1_9__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2352:1: ( ( ruleReadDelay ) | ( ruleWriteDelay ) | ( ruleWriteAllpass ) )
            int alt9=3;
            switch ( input.LA(1) ) {
            case 52:
                {
                alt9=1;
                }
                break;
            case 50:
                {
                alt9=2;
                }
                break;
            case 51:
                {
                alt9=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2353:1: ( ruleReadDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2353:1: ( ruleReadDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2354:1: ruleReadDelay
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleReadDelay_in_rule__Inst_B15_S1_9__Alternatives5112);
                    ruleReadDelay();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2359:6: ( ruleWriteDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2359:6: ( ruleWriteDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2360:1: ruleWriteDelay
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleWriteDelay_in_rule__Inst_B15_S1_9__Alternatives5129);
                    ruleWriteDelay();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2365:6: ( ruleWriteAllpass )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2365:6: ( ruleWriteAllpass )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2366:1: ruleWriteAllpass
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleWriteAllpass_in_rule__Inst_B15_S1_9__Alternatives5146);
                    ruleWriteAllpass();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B15_S1_9__Alternatives"


    // $ANTLR start "rule__Inst_B6__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2376:1: rule__Inst_B6__Alternatives : ( ( ruleMulx ) | ( ruleLdax ) );
    public final void rule__Inst_B6__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2380:1: ( ( ruleMulx ) | ( ruleLdax ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==45) ) {
                alt10=1;
            }
            else if ( (LA10_0==46) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2381:1: ( ruleMulx )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2381:1: ( ruleMulx )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2382:1: ruleMulx
                    {
                     before(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleMulx_in_rule__Inst_B6__Alternatives5178);
                    ruleMulx();

                    state._fsp--;

                     after(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2387:6: ( ruleLdax )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2387:6: ( ruleLdax )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2388:1: ruleLdax
                    {
                     before(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleLdax_in_rule__Inst_B6__Alternatives5195);
                    ruleLdax();

                    state._fsp--;

                     after(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B6__Alternatives"


    // $ANTLR start "rule__Inst_B24__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2398:1: rule__Inst_B24__Alternatives : ( ( ruleAnd ) | ( ruleOr ) | ( ruleXor ) );
    public final void rule__Inst_B24__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2402:1: ( ( ruleAnd ) | ( ruleOr ) | ( ruleXor ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt11=1;
                }
                break;
            case 60:
                {
                alt11=2;
                }
                break;
            case 61:
                {
                alt11=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2403:1: ( ruleAnd )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2403:1: ( ruleAnd )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2404:1: ruleAnd
                    {
                     before(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAnd_in_rule__Inst_B24__Alternatives5227);
                    ruleAnd();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2409:6: ( ruleOr )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2409:6: ( ruleOr )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2410:1: ruleOr
                    {
                     before(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleOr_in_rule__Inst_B24__Alternatives5244);
                    ruleOr();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2415:6: ( ruleXor )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2415:6: ( ruleXor )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2416:1: ruleXor
                    {
                     before(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleXor_in_rule__Inst_B24__Alternatives5261);
                    ruleXor();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B24__Alternatives"


    // $ANTLR start "rule__Inst_X0__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2426:1: rule__Inst_X0__Alternatives : ( ( ruleClr ) | ( ruleNot ) | ( ruleAbsa ) );
    public final void rule__Inst_X0__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2430:1: ( ( ruleClr ) | ( ruleNot ) | ( ruleAbsa ) )
            int alt12=3;
            switch ( input.LA(1) ) {
            case 63:
                {
                alt12=1;
                }
                break;
            case 64:
                {
                alt12=2;
                }
                break;
            case 65:
                {
                alt12=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2431:1: ( ruleClr )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2431:1: ( ruleClr )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2432:1: ruleClr
                    {
                     before(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleClr_in_rule__Inst_X0__Alternatives5293);
                    ruleClr();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2437:6: ( ruleNot )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2437:6: ( ruleNot )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2438:1: ruleNot
                    {
                     before(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleNot_in_rule__Inst_X0__Alternatives5310);
                    ruleNot();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2443:6: ( ruleAbsa )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2443:6: ( ruleAbsa )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2444:1: ruleAbsa
                    {
                     before(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleAbsa_in_rule__Inst_X0__Alternatives5327);
                    ruleAbsa();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_X0__Alternatives"


    // $ANTLR start "rule__Inst_S1_14_S1_10__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2454:1: rule__Inst_S1_14_S1_10__Alternatives : ( ( ruleExp ) | ( ruleScaleOffset ) );
    public final void rule__Inst_S1_14_S1_10__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2458:1: ( ( ruleExp ) | ( ruleScaleOffset ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==47) ) {
                alt13=1;
            }
            else if ( (LA13_0==49) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2459:1: ( ruleExp )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2459:1: ( ruleExp )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2460:1: ruleExp
                    {
                     before(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleExp_in_rule__Inst_S1_14_S1_10__Alternatives5359);
                    ruleExp();

                    state._fsp--;

                     after(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2465:6: ( ruleScaleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2465:6: ( ruleScaleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2466:1: ruleScaleOffset
                    {
                     before(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleScaleOffset_in_rule__Inst_S1_14_S1_10__Alternatives5376);
                    ruleScaleOffset();

                    state._fsp--;

                     after(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_S1_14_S1_10__Alternatives"


    // $ANTLR start "rule__SPINDOUBLE__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2476:1: rule__SPINDOUBLE__Alternatives_1 : ( ( RULE_ID ) | ( ( rule__SPINDOUBLE__Group_1_1__0 ) ) );
    public final void rule__SPINDOUBLE__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2480:1: ( ( RULE_ID ) | ( ( rule__SPINDOUBLE__Group_1_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_ID) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_INT) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2481:1: ( RULE_ID )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2481:1: ( RULE_ID )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2482:1: RULE_ID
                    {
                     before(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); 
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINDOUBLE__Alternatives_15408); 
                     after(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2487:6: ( ( rule__SPINDOUBLE__Group_1_1__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2487:6: ( ( rule__SPINDOUBLE__Group_1_1__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2488:1: ( rule__SPINDOUBLE__Group_1_1__0 )
                    {
                     before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2489:1: ( rule__SPINDOUBLE__Group_1_1__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2489:2: rule__SPINDOUBLE__Group_1_1__0
                    {
                    pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__0_in_rule__SPINDOUBLE__Alternatives_15425);
                    rule__SPINDOUBLE__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Alternatives_1"


    // $ANTLR start "rule__SPINREGISTER__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2498:1: rule__SPINREGISTER__Alternatives : ( ( RULE_ID ) | ( RULE_INT ) );
    public final void rule__SPINREGISTER__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2502:1: ( ( RULE_ID ) | ( RULE_INT ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_ID) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_INT) ) {
                alt15=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2503:1: ( RULE_ID )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2503:1: ( RULE_ID )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2504:1: RULE_ID
                    {
                     before(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); 
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINREGISTER__Alternatives5458); 
                     after(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2509:6: ( RULE_INT )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2509:6: ( RULE_INT )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2510:1: RULE_INT
                    {
                     before(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); 
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINREGISTER__Alternatives5475); 
                     after(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINREGISTER__Alternatives"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2520:1: rule__SPINCHOREGFLAGS__Alternatives : ( ( RULE_INT ) | ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? ) );
    public final void rule__SPINCHOREGFLAGS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2524:1: ( ( RULE_INT ) | ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_INT) ) {
                alt17=1;
            }
            else if ( (LA17_0==EOF||LA17_0==RULE_ID||LA17_0==39) ) {
                alt17=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2525:1: ( RULE_INT )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2525:1: ( RULE_INT )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2526:1: RULE_INT
                    {
                     before(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); 
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINCHOREGFLAGS__Alternatives5507); 
                     after(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2531:6: ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2531:6: ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2532:1: ( rule__SPINCHOREGFLAGS__Group_1__0 )?
                    {
                     before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2533:1: ( rule__SPINCHOREGFLAGS__Group_1__0 )?
                    int alt16=2;
                    int LA16_0 = input.LA(1);

                    if ( (LA16_0==RULE_ID) ) {
                        alt16=1;
                    }
                    switch (alt16) {
                        case 1 :
                            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2533:2: rule__SPINCHOREGFLAGS__Group_1__0
                            {
                            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0_in_rule__SPINCHOREGFLAGS__Alternatives5524);
                            rule__SPINCHOREGFLAGS__Group_1__0();

                            state._fsp--;


                            }
                            break;

                    }

                     after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Alternatives"


    // $ANTLR start "rule__SPINMEM__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2542:1: rule__SPINMEM__Alternatives_1 : ( ( ( rule__SPINMEM__ValueAssignment_1_0 ) ) | ( ( rule__SPINMEM__OffsetAssignment_1_1 ) ) );
    public final void rule__SPINMEM__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2546:1: ( ( ( rule__SPINMEM__ValueAssignment_1_0 ) ) | ( ( rule__SPINMEM__OffsetAssignment_1_1 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_INT) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_ID) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2547:1: ( ( rule__SPINMEM__ValueAssignment_1_0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2547:1: ( ( rule__SPINMEM__ValueAssignment_1_0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2548:1: ( rule__SPINMEM__ValueAssignment_1_0 )
                    {
                     before(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2549:1: ( rule__SPINMEM__ValueAssignment_1_0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2549:2: rule__SPINMEM__ValueAssignment_1_0
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__ValueAssignment_1_0_in_rule__SPINMEM__Alternatives_15558);
                    rule__SPINMEM__ValueAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2553:6: ( ( rule__SPINMEM__OffsetAssignment_1_1 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2553:6: ( ( rule__SPINMEM__OffsetAssignment_1_1 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2554:1: ( rule__SPINMEM__OffsetAssignment_1_1 )
                    {
                     before(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2555:1: ( rule__SPINMEM__OffsetAssignment_1_1 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2555:2: rule__SPINMEM__OffsetAssignment_1_1
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__OffsetAssignment_1_1_in_rule__SPINMEM__Alternatives_15576);
                    rule__SPINMEM__OffsetAssignment_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Alternatives_1"


    // $ANTLR start "rule__SPINBUF__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2564:1: rule__SPINBUF__Alternatives_1 : ( ( '#' ) | ( '^' ) );
    public final void rule__SPINBUF__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2568:1: ( ( '#' ) | ( '^' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==12) ) {
                alt19=1;
            }
            else if ( (LA19_0==13) ) {
                alt19=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2569:1: ( '#' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2569:1: ( '#' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2570:1: '#'
                    {
                     before(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); 
                    match(input,12,FOLLOW_12_in_rule__SPINBUF__Alternatives_15610); 
                     after(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2577:6: ( '^' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2577:6: ( '^' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2578:1: '^'
                    {
                     before(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); 
                    match(input,13,FOLLOW_13_in_rule__SPINBUF__Alternatives_15630); 
                     after(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Alternatives_1"


    // $ANTLR start "rule__SPINBUF__Alternatives_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2590:1: rule__SPINBUF__Alternatives_2 : ( ( '+' ) | ( '-' ) );
    public final void rule__SPINBUF__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2594:1: ( ( '+' ) | ( '-' ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==14) ) {
                alt20=1;
            }
            else if ( (LA20_0==15) ) {
                alt20=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2595:1: ( '+' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2595:1: ( '+' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2596:1: '+'
                    {
                     before(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); 
                    match(input,14,FOLLOW_14_in_rule__SPINBUF__Alternatives_25665); 
                     after(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2603:6: ( '-' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2603:6: ( '-' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2604:1: '-'
                    {
                     before(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); 
                    match(input,15,FOLLOW_15_in_rule__SPINBUF__Alternatives_25685); 
                     after(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Alternatives_2"


    // $ANTLR start "rule__BINARY24__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2616:1: rule__BINARY24__Alternatives : ( ( ( rule__BINARY24__Group_0__0 ) ) | ( ( rule__BINARY24__Group_1__0 ) ) );
    public final void rule__BINARY24__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2620:1: ( ( ( rule__BINARY24__Group_0__0 ) ) | ( ( rule__BINARY24__Group_1__0 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==69) ) {
                alt21=1;
            }
            else if ( (LA21_0==70) ) {
                alt21=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2621:1: ( ( rule__BINARY24__Group_0__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2621:1: ( ( rule__BINARY24__Group_0__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2622:1: ( rule__BINARY24__Group_0__0 )
                    {
                     before(grammarAccess.getBINARY24Access().getGroup_0()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2623:1: ( rule__BINARY24__Group_0__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2623:2: rule__BINARY24__Group_0__0
                    {
                    pushFollow(FOLLOW_rule__BINARY24__Group_0__0_in_rule__BINARY24__Alternatives5719);
                    rule__BINARY24__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBINARY24Access().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2627:6: ( ( rule__BINARY24__Group_1__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2627:6: ( ( rule__BINARY24__Group_1__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2628:1: ( rule__BINARY24__Group_1__0 )
                    {
                     before(grammarAccess.getBINARY24Access().getGroup_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2629:1: ( rule__BINARY24__Group_1__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2629:2: rule__BINARY24__Group_1__0
                    {
                    pushFollow(FOLLOW_rule__BINARY24__Group_1__0_in_rule__BINARY24__Alternatives5737);
                    rule__BINARY24__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBINARY24Access().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Alternatives"


    // $ANTLR start "rule__BOOLEAN__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2638:1: rule__BOOLEAN__Alternatives : ( ( 'true' ) | ( 'false' ) );
    public final void rule__BOOLEAN__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2642:1: ( ( 'true' ) | ( 'false' ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==16) ) {
                alt22=1;
            }
            else if ( (LA22_0==17) ) {
                alt22=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2643:1: ( 'true' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2643:1: ( 'true' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2644:1: 'true'
                    {
                     before(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); 
                    match(input,16,FOLLOW_16_in_rule__BOOLEAN__Alternatives5771); 
                     after(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2651:6: ( 'false' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2651:6: ( 'false' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2652:1: 'false'
                    {
                     before(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); 
                    match(input,17,FOLLOW_17_in_rule__BOOLEAN__Alternatives5791); 
                     after(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOLEAN__Alternatives"


    // $ANTLR start "rule__Program__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2666:1: rule__Program__Group__0 : rule__Program__Group__0__Impl rule__Program__Group__1 ;
    public final void rule__Program__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2670:1: ( rule__Program__Group__0__Impl rule__Program__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2671:2: rule__Program__Group__0__Impl rule__Program__Group__1
            {
            pushFollow(FOLLOW_rule__Program__Group__0__Impl_in_rule__Program__Group__05823);
            rule__Program__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__1_in_rule__Program__Group__05826);
            rule__Program__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0"


    // $ANTLR start "rule__Program__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2678:1: rule__Program__Group__0__Impl : ( '@name' ) ;
    public final void rule__Program__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2682:1: ( ( '@name' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2683:1: ( '@name' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2683:1: ( '@name' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2684:1: '@name'
            {
             before(grammarAccess.getProgramAccess().getNameKeyword_0()); 
            match(input,18,FOLLOW_18_in_rule__Program__Group__0__Impl5854); 
             after(grammarAccess.getProgramAccess().getNameKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0__Impl"


    // $ANTLR start "rule__Program__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2697:1: rule__Program__Group__1 : rule__Program__Group__1__Impl rule__Program__Group__2 ;
    public final void rule__Program__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2701:1: ( rule__Program__Group__1__Impl rule__Program__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2702:2: rule__Program__Group__1__Impl rule__Program__Group__2
            {
            pushFollow(FOLLOW_rule__Program__Group__1__Impl_in_rule__Program__Group__15885);
            rule__Program__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__2_in_rule__Program__Group__15888);
            rule__Program__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1"


    // $ANTLR start "rule__Program__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2709:1: rule__Program__Group__1__Impl : ( ( rule__Program__NameAssignment_1 ) ) ;
    public final void rule__Program__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2713:1: ( ( ( rule__Program__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2714:1: ( ( rule__Program__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2714:1: ( ( rule__Program__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2715:1: ( rule__Program__NameAssignment_1 )
            {
             before(grammarAccess.getProgramAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2716:1: ( rule__Program__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2716:2: rule__Program__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__Program__NameAssignment_1_in_rule__Program__Group__1__Impl5915);
            rule__Program__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1__Impl"


    // $ANTLR start "rule__Program__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2726:1: rule__Program__Group__2 : rule__Program__Group__2__Impl rule__Program__Group__3 ;
    public final void rule__Program__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2730:1: ( rule__Program__Group__2__Impl rule__Program__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2731:2: rule__Program__Group__2__Impl rule__Program__Group__3
            {
            pushFollow(FOLLOW_rule__Program__Group__2__Impl_in_rule__Program__Group__25945);
            rule__Program__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__3_in_rule__Program__Group__25948);
            rule__Program__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2"


    // $ANTLR start "rule__Program__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2738:1: rule__Program__Group__2__Impl : ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) ) ;
    public final void rule__Program__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2742:1: ( ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2743:1: ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2743:1: ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2744:1: ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2744:1: ( ( rule__Program__PinsAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2745:1: ( rule__Program__PinsAssignment_2 )
            {
             before(grammarAccess.getProgramAccess().getPinsAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2746:1: ( rule__Program__PinsAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2746:2: rule__Program__PinsAssignment_2
            {
            pushFollow(FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5977);
            rule__Program__PinsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getPinsAssignment_2()); 

            }

            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2749:1: ( ( rule__Program__PinsAssignment_2 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2750:1: ( rule__Program__PinsAssignment_2 )*
            {
             before(grammarAccess.getProgramAccess().getPinsAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2751:1: ( rule__Program__PinsAssignment_2 )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( ((LA23_0>=19 && LA23_0<=22)) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2751:2: rule__Program__PinsAssignment_2
            	    {
            	    pushFollow(FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5989);
            	    rule__Program__PinsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getPinsAssignment_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2__Impl"


    // $ANTLR start "rule__Program__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2762:1: rule__Program__Group__3 : rule__Program__Group__3__Impl ;
    public final void rule__Program__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2766:1: ( rule__Program__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2767:2: rule__Program__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Program__Group__3__Impl_in_rule__Program__Group__36022);
            rule__Program__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3"


    // $ANTLR start "rule__Program__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2773:1: rule__Program__Group__3__Impl : ( ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* ) ) ;
    public final void rule__Program__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2777:1: ( ( ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2778:1: ( ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2778:1: ( ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2779:1: ( ( rule__Program__ElementsAssignment_3 ) ) ( ( rule__Program__ElementsAssignment_3 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2779:1: ( ( rule__Program__ElementsAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2780:1: ( rule__Program__ElementsAssignment_3 )
            {
             before(grammarAccess.getProgramAccess().getElementsAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2781:1: ( rule__Program__ElementsAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2781:2: rule__Program__ElementsAssignment_3
            {
            pushFollow(FOLLOW_rule__Program__ElementsAssignment_3_in_rule__Program__Group__3__Impl6051);
            rule__Program__ElementsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getElementsAssignment_3()); 

            }

            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2784:1: ( ( rule__Program__ElementsAssignment_3 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2785:1: ( rule__Program__ElementsAssignment_3 )*
            {
             before(grammarAccess.getProgramAccess().getElementsAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2786:1: ( rule__Program__ElementsAssignment_3 )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==RULE_ID||LA24_0==RULE_SC_COMMENT||(LA24_0>=23 && LA24_0<=28)||(LA24_0>=30 && LA24_0<=38)||(LA24_0>=40 && LA24_0<=66)) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2786:2: rule__Program__ElementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_rule__Program__ElementsAssignment_3_in_rule__Program__Group__3__Impl6063);
            	    rule__Program__ElementsAssignment_3();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getElementsAssignment_3()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3__Impl"


    // $ANTLR start "rule__AudioInput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2805:1: rule__AudioInput__Group__0 : rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1 ;
    public final void rule__AudioInput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2809:1: ( rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2810:2: rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__0__Impl_in_rule__AudioInput__Group__06104);
            rule__AudioInput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioInput__Group__1_in_rule__AudioInput__Group__06107);
            rule__AudioInput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__0"


    // $ANTLR start "rule__AudioInput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2817:1: rule__AudioInput__Group__0__Impl : ( '@audioInput' ) ;
    public final void rule__AudioInput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2821:1: ( ( '@audioInput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2822:1: ( '@audioInput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2822:1: ( '@audioInput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2823:1: '@audioInput'
            {
             before(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); 
            match(input,19,FOLLOW_19_in_rule__AudioInput__Group__0__Impl6135); 
             after(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__0__Impl"


    // $ANTLR start "rule__AudioInput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2836:1: rule__AudioInput__Group__1 : rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2 ;
    public final void rule__AudioInput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2840:1: ( rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2841:2: rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__1__Impl_in_rule__AudioInput__Group__16166);
            rule__AudioInput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioInput__Group__2_in_rule__AudioInput__Group__16169);
            rule__AudioInput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__1"


    // $ANTLR start "rule__AudioInput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2848:1: rule__AudioInput__Group__1__Impl : ( ( rule__AudioInput__VarNameAssignment_1 ) ) ;
    public final void rule__AudioInput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2852:1: ( ( ( rule__AudioInput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2853:1: ( ( rule__AudioInput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2853:1: ( ( rule__AudioInput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2854:1: ( rule__AudioInput__VarNameAssignment_1 )
            {
             before(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2855:1: ( rule__AudioInput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2855:2: rule__AudioInput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__AudioInput__VarNameAssignment_1_in_rule__AudioInput__Group__1__Impl6196);
            rule__AudioInput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__1__Impl"


    // $ANTLR start "rule__AudioInput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2865:1: rule__AudioInput__Group__2 : rule__AudioInput__Group__2__Impl ;
    public final void rule__AudioInput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2869:1: ( rule__AudioInput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2870:2: rule__AudioInput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__2__Impl_in_rule__AudioInput__Group__26226);
            rule__AudioInput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__2"


    // $ANTLR start "rule__AudioInput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2876:1: rule__AudioInput__Group__2__Impl : ( ( rule__AudioInput__NameAssignment_2 ) ) ;
    public final void rule__AudioInput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2880:1: ( ( ( rule__AudioInput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2881:1: ( ( rule__AudioInput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2881:1: ( ( rule__AudioInput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2882:1: ( rule__AudioInput__NameAssignment_2 )
            {
             before(grammarAccess.getAudioInputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2883:1: ( rule__AudioInput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2883:2: rule__AudioInput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__AudioInput__NameAssignment_2_in_rule__AudioInput__Group__2__Impl6253);
            rule__AudioInput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__2__Impl"


    // $ANTLR start "rule__AudioOutput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2899:1: rule__AudioOutput__Group__0 : rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1 ;
    public final void rule__AudioOutput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2903:1: ( rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2904:2: rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__0__Impl_in_rule__AudioOutput__Group__06289);
            rule__AudioOutput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioOutput__Group__1_in_rule__AudioOutput__Group__06292);
            rule__AudioOutput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__0"


    // $ANTLR start "rule__AudioOutput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2911:1: rule__AudioOutput__Group__0__Impl : ( '@audioOutput' ) ;
    public final void rule__AudioOutput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2915:1: ( ( '@audioOutput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2916:1: ( '@audioOutput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2916:1: ( '@audioOutput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2917:1: '@audioOutput'
            {
             before(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); 
            match(input,20,FOLLOW_20_in_rule__AudioOutput__Group__0__Impl6320); 
             after(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__0__Impl"


    // $ANTLR start "rule__AudioOutput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2930:1: rule__AudioOutput__Group__1 : rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2 ;
    public final void rule__AudioOutput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2934:1: ( rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2935:2: rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__1__Impl_in_rule__AudioOutput__Group__16351);
            rule__AudioOutput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioOutput__Group__2_in_rule__AudioOutput__Group__16354);
            rule__AudioOutput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__1"


    // $ANTLR start "rule__AudioOutput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2942:1: rule__AudioOutput__Group__1__Impl : ( ( rule__AudioOutput__VarNameAssignment_1 ) ) ;
    public final void rule__AudioOutput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2946:1: ( ( ( rule__AudioOutput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2947:1: ( ( rule__AudioOutput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2947:1: ( ( rule__AudioOutput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2948:1: ( rule__AudioOutput__VarNameAssignment_1 )
            {
             before(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2949:1: ( rule__AudioOutput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2949:2: rule__AudioOutput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__AudioOutput__VarNameAssignment_1_in_rule__AudioOutput__Group__1__Impl6381);
            rule__AudioOutput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__1__Impl"


    // $ANTLR start "rule__AudioOutput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2959:1: rule__AudioOutput__Group__2 : rule__AudioOutput__Group__2__Impl ;
    public final void rule__AudioOutput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2963:1: ( rule__AudioOutput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2964:2: rule__AudioOutput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__2__Impl_in_rule__AudioOutput__Group__26411);
            rule__AudioOutput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__2"


    // $ANTLR start "rule__AudioOutput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2970:1: rule__AudioOutput__Group__2__Impl : ( ( rule__AudioOutput__NameAssignment_2 ) ) ;
    public final void rule__AudioOutput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2974:1: ( ( ( rule__AudioOutput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2975:1: ( ( rule__AudioOutput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2975:1: ( ( rule__AudioOutput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2976:1: ( rule__AudioOutput__NameAssignment_2 )
            {
             before(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2977:1: ( rule__AudioOutput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2977:2: rule__AudioOutput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__AudioOutput__NameAssignment_2_in_rule__AudioOutput__Group__2__Impl6438);
            rule__AudioOutput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__2__Impl"


    // $ANTLR start "rule__ControlInput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2993:1: rule__ControlInput__Group__0 : rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1 ;
    public final void rule__ControlInput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2997:1: ( rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2998:2: rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__0__Impl_in_rule__ControlInput__Group__06474);
            rule__ControlInput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlInput__Group__1_in_rule__ControlInput__Group__06477);
            rule__ControlInput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__0"


    // $ANTLR start "rule__ControlInput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3005:1: rule__ControlInput__Group__0__Impl : ( '@controlInput' ) ;
    public final void rule__ControlInput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3009:1: ( ( '@controlInput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3010:1: ( '@controlInput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3010:1: ( '@controlInput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3011:1: '@controlInput'
            {
             before(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); 
            match(input,21,FOLLOW_21_in_rule__ControlInput__Group__0__Impl6505); 
             after(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__0__Impl"


    // $ANTLR start "rule__ControlInput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3024:1: rule__ControlInput__Group__1 : rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2 ;
    public final void rule__ControlInput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3028:1: ( rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3029:2: rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__1__Impl_in_rule__ControlInput__Group__16536);
            rule__ControlInput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlInput__Group__2_in_rule__ControlInput__Group__16539);
            rule__ControlInput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__1"


    // $ANTLR start "rule__ControlInput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3036:1: rule__ControlInput__Group__1__Impl : ( ( rule__ControlInput__VarNameAssignment_1 ) ) ;
    public final void rule__ControlInput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3040:1: ( ( ( rule__ControlInput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3041:1: ( ( rule__ControlInput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3041:1: ( ( rule__ControlInput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3042:1: ( rule__ControlInput__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3043:1: ( rule__ControlInput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3043:2: rule__ControlInput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlInput__VarNameAssignment_1_in_rule__ControlInput__Group__1__Impl6566);
            rule__ControlInput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__1__Impl"


    // $ANTLR start "rule__ControlInput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3053:1: rule__ControlInput__Group__2 : rule__ControlInput__Group__2__Impl ;
    public final void rule__ControlInput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3057:1: ( rule__ControlInput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3058:2: rule__ControlInput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__2__Impl_in_rule__ControlInput__Group__26596);
            rule__ControlInput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__2"


    // $ANTLR start "rule__ControlInput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3064:1: rule__ControlInput__Group__2__Impl : ( ( rule__ControlInput__NameAssignment_2 ) ) ;
    public final void rule__ControlInput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3068:1: ( ( ( rule__ControlInput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3069:1: ( ( rule__ControlInput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3069:1: ( ( rule__ControlInput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3070:1: ( rule__ControlInput__NameAssignment_2 )
            {
             before(grammarAccess.getControlInputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3071:1: ( rule__ControlInput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3071:2: rule__ControlInput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlInput__NameAssignment_2_in_rule__ControlInput__Group__2__Impl6623);
            rule__ControlInput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__2__Impl"


    // $ANTLR start "rule__ControlOutput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3087:1: rule__ControlOutput__Group__0 : rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1 ;
    public final void rule__ControlOutput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3091:1: ( rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3092:2: rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__0__Impl_in_rule__ControlOutput__Group__06659);
            rule__ControlOutput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlOutput__Group__1_in_rule__ControlOutput__Group__06662);
            rule__ControlOutput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__0"


    // $ANTLR start "rule__ControlOutput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3099:1: rule__ControlOutput__Group__0__Impl : ( '@controlOutput' ) ;
    public final void rule__ControlOutput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3103:1: ( ( '@controlOutput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3104:1: ( '@controlOutput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3104:1: ( '@controlOutput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3105:1: '@controlOutput'
            {
             before(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); 
            match(input,22,FOLLOW_22_in_rule__ControlOutput__Group__0__Impl6690); 
             after(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__0__Impl"


    // $ANTLR start "rule__ControlOutput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3118:1: rule__ControlOutput__Group__1 : rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2 ;
    public final void rule__ControlOutput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3122:1: ( rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3123:2: rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__1__Impl_in_rule__ControlOutput__Group__16721);
            rule__ControlOutput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlOutput__Group__2_in_rule__ControlOutput__Group__16724);
            rule__ControlOutput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__1"


    // $ANTLR start "rule__ControlOutput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3130:1: rule__ControlOutput__Group__1__Impl : ( ( rule__ControlOutput__VarNameAssignment_1 ) ) ;
    public final void rule__ControlOutput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3134:1: ( ( ( rule__ControlOutput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3135:1: ( ( rule__ControlOutput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3135:1: ( ( rule__ControlOutput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3136:1: ( rule__ControlOutput__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3137:1: ( rule__ControlOutput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3137:2: rule__ControlOutput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlOutput__VarNameAssignment_1_in_rule__ControlOutput__Group__1__Impl6751);
            rule__ControlOutput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__1__Impl"


    // $ANTLR start "rule__ControlOutput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3147:1: rule__ControlOutput__Group__2 : rule__ControlOutput__Group__2__Impl ;
    public final void rule__ControlOutput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3151:1: ( rule__ControlOutput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3152:2: rule__ControlOutput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__2__Impl_in_rule__ControlOutput__Group__26781);
            rule__ControlOutput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__2"


    // $ANTLR start "rule__ControlOutput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3158:1: rule__ControlOutput__Group__2__Impl : ( ( rule__ControlOutput__NameAssignment_2 ) ) ;
    public final void rule__ControlOutput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3162:1: ( ( ( rule__ControlOutput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3163:1: ( ( rule__ControlOutput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3163:1: ( ( rule__ControlOutput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3164:1: ( rule__ControlOutput__NameAssignment_2 )
            {
             before(grammarAccess.getControlOutputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3165:1: ( rule__ControlOutput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3165:2: rule__ControlOutput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlOutput__NameAssignment_2_in_rule__ControlOutput__Group__2__Impl6808);
            rule__ControlOutput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__2__Impl"


    // $ANTLR start "rule__SpinEquate__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3181:1: rule__SpinEquate__Group__0 : rule__SpinEquate__Group__0__Impl rule__SpinEquate__Group__1 ;
    public final void rule__SpinEquate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3185:1: ( rule__SpinEquate__Group__0__Impl rule__SpinEquate__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3186:2: rule__SpinEquate__Group__0__Impl rule__SpinEquate__Group__1
            {
            pushFollow(FOLLOW_rule__SpinEquate__Group__0__Impl_in_rule__SpinEquate__Group__06844);
            rule__SpinEquate__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinEquate__Group__1_in_rule__SpinEquate__Group__06847);
            rule__SpinEquate__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinEquate__Group__0"


    // $ANTLR start "rule__SpinEquate__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3193:1: rule__SpinEquate__Group__0__Impl : ( 'equ' ) ;
    public final void rule__SpinEquate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3197:1: ( ( 'equ' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3198:1: ( 'equ' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3198:1: ( 'equ' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3199:1: 'equ'
            {
             before(grammarAccess.getSpinEquateAccess().getEquKeyword_0()); 
            match(input,23,FOLLOW_23_in_rule__SpinEquate__Group__0__Impl6875); 
             after(grammarAccess.getSpinEquateAccess().getEquKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinEquate__Group__0__Impl"


    // $ANTLR start "rule__SpinEquate__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3212:1: rule__SpinEquate__Group__1 : rule__SpinEquate__Group__1__Impl rule__SpinEquate__Group__2 ;
    public final void rule__SpinEquate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3216:1: ( rule__SpinEquate__Group__1__Impl rule__SpinEquate__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3217:2: rule__SpinEquate__Group__1__Impl rule__SpinEquate__Group__2
            {
            pushFollow(FOLLOW_rule__SpinEquate__Group__1__Impl_in_rule__SpinEquate__Group__16906);
            rule__SpinEquate__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinEquate__Group__2_in_rule__SpinEquate__Group__16909);
            rule__SpinEquate__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinEquate__Group__1"


    // $ANTLR start "rule__SpinEquate__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3224:1: rule__SpinEquate__Group__1__Impl : ( ( rule__SpinEquate__EnameAssignment_1 ) ) ;
    public final void rule__SpinEquate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3228:1: ( ( ( rule__SpinEquate__EnameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3229:1: ( ( rule__SpinEquate__EnameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3229:1: ( ( rule__SpinEquate__EnameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3230:1: ( rule__SpinEquate__EnameAssignment_1 )
            {
             before(grammarAccess.getSpinEquateAccess().getEnameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3231:1: ( rule__SpinEquate__EnameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3231:2: rule__SpinEquate__EnameAssignment_1
            {
            pushFollow(FOLLOW_rule__SpinEquate__EnameAssignment_1_in_rule__SpinEquate__Group__1__Impl6936);
            rule__SpinEquate__EnameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSpinEquateAccess().getEnameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinEquate__Group__1__Impl"


    // $ANTLR start "rule__SpinEquate__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3241:1: rule__SpinEquate__Group__2 : rule__SpinEquate__Group__2__Impl ;
    public final void rule__SpinEquate__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3245:1: ( rule__SpinEquate__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3246:2: rule__SpinEquate__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SpinEquate__Group__2__Impl_in_rule__SpinEquate__Group__26966);
            rule__SpinEquate__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinEquate__Group__2"


    // $ANTLR start "rule__SpinEquate__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3252:1: rule__SpinEquate__Group__2__Impl : ( ( rule__SpinEquate__ValueAssignment_2 ) ) ;
    public final void rule__SpinEquate__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3256:1: ( ( ( rule__SpinEquate__ValueAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3257:1: ( ( rule__SpinEquate__ValueAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3257:1: ( ( rule__SpinEquate__ValueAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3258:1: ( rule__SpinEquate__ValueAssignment_2 )
            {
             before(grammarAccess.getSpinEquateAccess().getValueAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3259:1: ( rule__SpinEquate__ValueAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3259:2: rule__SpinEquate__ValueAssignment_2
            {
            pushFollow(FOLLOW_rule__SpinEquate__ValueAssignment_2_in_rule__SpinEquate__Group__2__Impl6993);
            rule__SpinEquate__ValueAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSpinEquateAccess().getValueAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinEquate__Group__2__Impl"


    // $ANTLR start "rule__Mem__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3275:1: rule__Mem__Group__0 : rule__Mem__Group__0__Impl rule__Mem__Group__1 ;
    public final void rule__Mem__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3279:1: ( rule__Mem__Group__0__Impl rule__Mem__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3280:2: rule__Mem__Group__0__Impl rule__Mem__Group__1
            {
            pushFollow(FOLLOW_rule__Mem__Group__0__Impl_in_rule__Mem__Group__07029);
            rule__Mem__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mem__Group__1_in_rule__Mem__Group__07032);
            rule__Mem__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__0"


    // $ANTLR start "rule__Mem__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3287:1: rule__Mem__Group__0__Impl : ( 'mem' ) ;
    public final void rule__Mem__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3291:1: ( ( 'mem' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3292:1: ( 'mem' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3292:1: ( 'mem' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3293:1: 'mem'
            {
             before(grammarAccess.getMemAccess().getMemKeyword_0()); 
            match(input,24,FOLLOW_24_in_rule__Mem__Group__0__Impl7060); 
             after(grammarAccess.getMemAccess().getMemKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__0__Impl"


    // $ANTLR start "rule__Mem__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3306:1: rule__Mem__Group__1 : rule__Mem__Group__1__Impl rule__Mem__Group__2 ;
    public final void rule__Mem__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3310:1: ( rule__Mem__Group__1__Impl rule__Mem__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3311:2: rule__Mem__Group__1__Impl rule__Mem__Group__2
            {
            pushFollow(FOLLOW_rule__Mem__Group__1__Impl_in_rule__Mem__Group__17091);
            rule__Mem__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mem__Group__2_in_rule__Mem__Group__17094);
            rule__Mem__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__1"


    // $ANTLR start "rule__Mem__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3318:1: rule__Mem__Group__1__Impl : ( ( rule__Mem__BufferAssignment_1 ) ) ;
    public final void rule__Mem__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3322:1: ( ( ( rule__Mem__BufferAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3323:1: ( ( rule__Mem__BufferAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3323:1: ( ( rule__Mem__BufferAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3324:1: ( rule__Mem__BufferAssignment_1 )
            {
             before(grammarAccess.getMemAccess().getBufferAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3325:1: ( rule__Mem__BufferAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3325:2: rule__Mem__BufferAssignment_1
            {
            pushFollow(FOLLOW_rule__Mem__BufferAssignment_1_in_rule__Mem__Group__1__Impl7121);
            rule__Mem__BufferAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getBufferAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__1__Impl"


    // $ANTLR start "rule__Mem__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3335:1: rule__Mem__Group__2 : rule__Mem__Group__2__Impl ;
    public final void rule__Mem__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3339:1: ( rule__Mem__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3340:2: rule__Mem__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Mem__Group__2__Impl_in_rule__Mem__Group__27151);
            rule__Mem__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__2"


    // $ANTLR start "rule__Mem__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3346:1: rule__Mem__Group__2__Impl : ( ( rule__Mem__LengthAssignment_2 ) ) ;
    public final void rule__Mem__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3350:1: ( ( ( rule__Mem__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3351:1: ( ( rule__Mem__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3351:1: ( ( rule__Mem__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3352:1: ( rule__Mem__LengthAssignment_2 )
            {
             before(grammarAccess.getMemAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3353:1: ( rule__Mem__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3353:2: rule__Mem__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__Mem__LengthAssignment_2_in_rule__Mem__Group__2__Impl7178);
            rule__Mem__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__2__Impl"


    // $ANTLR start "rule__Offset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3369:1: rule__Offset__Group__0 : rule__Offset__Group__0__Impl rule__Offset__Group__1 ;
    public final void rule__Offset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3373:1: ( rule__Offset__Group__0__Impl rule__Offset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3374:2: rule__Offset__Group__0__Impl rule__Offset__Group__1
            {
            pushFollow(FOLLOW_rule__Offset__Group__0__Impl_in_rule__Offset__Group__07214);
            rule__Offset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Offset__Group__1_in_rule__Offset__Group__07217);
            rule__Offset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__0"


    // $ANTLR start "rule__Offset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3381:1: rule__Offset__Group__0__Impl : ( 'offset' ) ;
    public final void rule__Offset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3385:1: ( ( 'offset' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3386:1: ( 'offset' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3386:1: ( 'offset' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3387:1: 'offset'
            {
             before(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); 
            match(input,25,FOLLOW_25_in_rule__Offset__Group__0__Impl7245); 
             after(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__0__Impl"


    // $ANTLR start "rule__Offset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3400:1: rule__Offset__Group__1 : rule__Offset__Group__1__Impl rule__Offset__Group__2 ;
    public final void rule__Offset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3404:1: ( rule__Offset__Group__1__Impl rule__Offset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3405:2: rule__Offset__Group__1__Impl rule__Offset__Group__2
            {
            pushFollow(FOLLOW_rule__Offset__Group__1__Impl_in_rule__Offset__Group__17276);
            rule__Offset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Offset__Group__2_in_rule__Offset__Group__17279);
            rule__Offset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__1"


    // $ANTLR start "rule__Offset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3412:1: rule__Offset__Group__1__Impl : ( ( rule__Offset__NameAssignment_1 ) ) ;
    public final void rule__Offset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3416:1: ( ( ( rule__Offset__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3417:1: ( ( rule__Offset__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3417:1: ( ( rule__Offset__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3418:1: ( rule__Offset__NameAssignment_1 )
            {
             before(grammarAccess.getOffsetAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3419:1: ( rule__Offset__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3419:2: rule__Offset__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__Offset__NameAssignment_1_in_rule__Offset__Group__1__Impl7306);
            rule__Offset__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__1__Impl"


    // $ANTLR start "rule__Offset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3429:1: rule__Offset__Group__2 : rule__Offset__Group__2__Impl ;
    public final void rule__Offset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3433:1: ( rule__Offset__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3434:2: rule__Offset__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Offset__Group__2__Impl_in_rule__Offset__Group__27336);
            rule__Offset__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__2"


    // $ANTLR start "rule__Offset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3440:1: rule__Offset__Group__2__Impl : ( ( rule__Offset__LengthAssignment_2 ) ) ;
    public final void rule__Offset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3444:1: ( ( ( rule__Offset__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3445:1: ( ( rule__Offset__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3445:1: ( ( rule__Offset__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3446:1: ( rule__Offset__LengthAssignment_2 )
            {
             before(grammarAccess.getOffsetAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3447:1: ( rule__Offset__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3447:2: rule__Offset__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__Offset__LengthAssignment_2_in_rule__Offset__Group__2__Impl7363);
            rule__Offset__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__2__Impl"


    // $ANTLR start "rule__SpinBool__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3463:1: rule__SpinBool__Group__0 : rule__SpinBool__Group__0__Impl rule__SpinBool__Group__1 ;
    public final void rule__SpinBool__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3467:1: ( rule__SpinBool__Group__0__Impl rule__SpinBool__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3468:2: rule__SpinBool__Group__0__Impl rule__SpinBool__Group__1
            {
            pushFollow(FOLLOW_rule__SpinBool__Group__0__Impl_in_rule__SpinBool__Group__07399);
            rule__SpinBool__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinBool__Group__1_in_rule__SpinBool__Group__07402);
            rule__SpinBool__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinBool__Group__0"


    // $ANTLR start "rule__SpinBool__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3475:1: rule__SpinBool__Group__0__Impl : ( 'bool' ) ;
    public final void rule__SpinBool__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3479:1: ( ( 'bool' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3480:1: ( 'bool' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3480:1: ( 'bool' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3481:1: 'bool'
            {
             before(grammarAccess.getSpinBoolAccess().getBoolKeyword_0()); 
            match(input,26,FOLLOW_26_in_rule__SpinBool__Group__0__Impl7430); 
             after(grammarAccess.getSpinBoolAccess().getBoolKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinBool__Group__0__Impl"


    // $ANTLR start "rule__SpinBool__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3494:1: rule__SpinBool__Group__1 : rule__SpinBool__Group__1__Impl rule__SpinBool__Group__2 ;
    public final void rule__SpinBool__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3498:1: ( rule__SpinBool__Group__1__Impl rule__SpinBool__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3499:2: rule__SpinBool__Group__1__Impl rule__SpinBool__Group__2
            {
            pushFollow(FOLLOW_rule__SpinBool__Group__1__Impl_in_rule__SpinBool__Group__17461);
            rule__SpinBool__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinBool__Group__2_in_rule__SpinBool__Group__17464);
            rule__SpinBool__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinBool__Group__1"


    // $ANTLR start "rule__SpinBool__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3506:1: rule__SpinBool__Group__1__Impl : ( ( rule__SpinBool__NameAssignment_1 ) ) ;
    public final void rule__SpinBool__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3510:1: ( ( ( rule__SpinBool__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3511:1: ( ( rule__SpinBool__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3511:1: ( ( rule__SpinBool__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3512:1: ( rule__SpinBool__NameAssignment_1 )
            {
             before(grammarAccess.getSpinBoolAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3513:1: ( rule__SpinBool__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3513:2: rule__SpinBool__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__SpinBool__NameAssignment_1_in_rule__SpinBool__Group__1__Impl7491);
            rule__SpinBool__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSpinBoolAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinBool__Group__1__Impl"


    // $ANTLR start "rule__SpinBool__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3523:1: rule__SpinBool__Group__2 : rule__SpinBool__Group__2__Impl ;
    public final void rule__SpinBool__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3527:1: ( rule__SpinBool__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3528:2: rule__SpinBool__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SpinBool__Group__2__Impl_in_rule__SpinBool__Group__27521);
            rule__SpinBool__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinBool__Group__2"


    // $ANTLR start "rule__SpinBool__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3534:1: rule__SpinBool__Group__2__Impl : ( ( rule__SpinBool__ValueAssignment_2 ) ) ;
    public final void rule__SpinBool__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3538:1: ( ( ( rule__SpinBool__ValueAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3539:1: ( ( rule__SpinBool__ValueAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3539:1: ( ( rule__SpinBool__ValueAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3540:1: ( rule__SpinBool__ValueAssignment_2 )
            {
             before(grammarAccess.getSpinBoolAccess().getValueAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3541:1: ( rule__SpinBool__ValueAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3541:2: rule__SpinBool__ValueAssignment_2
            {
            pushFollow(FOLLOW_rule__SpinBool__ValueAssignment_2_in_rule__SpinBool__Group__2__Impl7548);
            rule__SpinBool__ValueAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSpinBoolAccess().getValueAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinBool__Group__2__Impl"


    // $ANTLR start "rule__SpinSliderLabel__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3557:1: rule__SpinSliderLabel__Group__0 : rule__SpinSliderLabel__Group__0__Impl rule__SpinSliderLabel__Group__1 ;
    public final void rule__SpinSliderLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3561:1: ( rule__SpinSliderLabel__Group__0__Impl rule__SpinSliderLabel__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3562:2: rule__SpinSliderLabel__Group__0__Impl rule__SpinSliderLabel__Group__1
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group__0__Impl_in_rule__SpinSliderLabel__Group__07584);
            rule__SpinSliderLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinSliderLabel__Group__1_in_rule__SpinSliderLabel__Group__07587);
            rule__SpinSliderLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group__0"


    // $ANTLR start "rule__SpinSliderLabel__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3569:1: rule__SpinSliderLabel__Group__0__Impl : ( '@sliderLabel' ) ;
    public final void rule__SpinSliderLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3573:1: ( ( '@sliderLabel' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3574:1: ( '@sliderLabel' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3574:1: ( '@sliderLabel' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3575:1: '@sliderLabel'
            {
             before(grammarAccess.getSpinSliderLabelAccess().getSliderLabelKeyword_0()); 
            match(input,27,FOLLOW_27_in_rule__SpinSliderLabel__Group__0__Impl7615); 
             after(grammarAccess.getSpinSliderLabelAccess().getSliderLabelKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group__0__Impl"


    // $ANTLR start "rule__SpinSliderLabel__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3588:1: rule__SpinSliderLabel__Group__1 : rule__SpinSliderLabel__Group__1__Impl rule__SpinSliderLabel__Group__2 ;
    public final void rule__SpinSliderLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3592:1: ( rule__SpinSliderLabel__Group__1__Impl rule__SpinSliderLabel__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3593:2: rule__SpinSliderLabel__Group__1__Impl rule__SpinSliderLabel__Group__2
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group__1__Impl_in_rule__SpinSliderLabel__Group__17646);
            rule__SpinSliderLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinSliderLabel__Group__2_in_rule__SpinSliderLabel__Group__17649);
            rule__SpinSliderLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group__1"


    // $ANTLR start "rule__SpinSliderLabel__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3600:1: rule__SpinSliderLabel__Group__1__Impl : ( ( rule__SpinSliderLabel__EnameAssignment_1 ) ) ;
    public final void rule__SpinSliderLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3604:1: ( ( ( rule__SpinSliderLabel__EnameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3605:1: ( ( rule__SpinSliderLabel__EnameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3605:1: ( ( rule__SpinSliderLabel__EnameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3606:1: ( rule__SpinSliderLabel__EnameAssignment_1 )
            {
             before(grammarAccess.getSpinSliderLabelAccess().getEnameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3607:1: ( rule__SpinSliderLabel__EnameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3607:2: rule__SpinSliderLabel__EnameAssignment_1
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__EnameAssignment_1_in_rule__SpinSliderLabel__Group__1__Impl7676);
            rule__SpinSliderLabel__EnameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSpinSliderLabelAccess().getEnameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group__1__Impl"


    // $ANTLR start "rule__SpinSliderLabel__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3617:1: rule__SpinSliderLabel__Group__2 : rule__SpinSliderLabel__Group__2__Impl rule__SpinSliderLabel__Group__3 ;
    public final void rule__SpinSliderLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3621:1: ( rule__SpinSliderLabel__Group__2__Impl rule__SpinSliderLabel__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3622:2: rule__SpinSliderLabel__Group__2__Impl rule__SpinSliderLabel__Group__3
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group__2__Impl_in_rule__SpinSliderLabel__Group__27706);
            rule__SpinSliderLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinSliderLabel__Group__3_in_rule__SpinSliderLabel__Group__27709);
            rule__SpinSliderLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group__2"


    // $ANTLR start "rule__SpinSliderLabel__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3629:1: rule__SpinSliderLabel__Group__2__Impl : ( ( rule__SpinSliderLabel__ControlNameAssignment_2 ) ) ;
    public final void rule__SpinSliderLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3633:1: ( ( ( rule__SpinSliderLabel__ControlNameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3634:1: ( ( rule__SpinSliderLabel__ControlNameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3634:1: ( ( rule__SpinSliderLabel__ControlNameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3635:1: ( rule__SpinSliderLabel__ControlNameAssignment_2 )
            {
             before(grammarAccess.getSpinSliderLabelAccess().getControlNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3636:1: ( rule__SpinSliderLabel__ControlNameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3636:2: rule__SpinSliderLabel__ControlNameAssignment_2
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__ControlNameAssignment_2_in_rule__SpinSliderLabel__Group__2__Impl7736);
            rule__SpinSliderLabel__ControlNameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSpinSliderLabelAccess().getControlNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group__2__Impl"


    // $ANTLR start "rule__SpinSliderLabel__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3646:1: rule__SpinSliderLabel__Group__3 : rule__SpinSliderLabel__Group__3__Impl ;
    public final void rule__SpinSliderLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3650:1: ( rule__SpinSliderLabel__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3651:2: rule__SpinSliderLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group__3__Impl_in_rule__SpinSliderLabel__Group__37766);
            rule__SpinSliderLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group__3"


    // $ANTLR start "rule__SpinSliderLabel__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3657:1: rule__SpinSliderLabel__Group__3__Impl : ( ( rule__SpinSliderLabel__Group_3__0 )? ) ;
    public final void rule__SpinSliderLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3661:1: ( ( ( rule__SpinSliderLabel__Group_3__0 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3662:1: ( ( rule__SpinSliderLabel__Group_3__0 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3662:1: ( ( rule__SpinSliderLabel__Group_3__0 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3663:1: ( rule__SpinSliderLabel__Group_3__0 )?
            {
             before(grammarAccess.getSpinSliderLabelAccess().getGroup_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3664:1: ( rule__SpinSliderLabel__Group_3__0 )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_INT||LA25_0==15) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_ID) ) {
                int LA25_2 = input.LA(2);

                if ( ((LA25_2>=RULE_ID && LA25_2<=RULE_INT)||LA25_2==15) ) {
                    alt25=1;
                }
            }
            switch (alt25) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3664:2: rule__SpinSliderLabel__Group_3__0
                    {
                    pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__0_in_rule__SpinSliderLabel__Group__3__Impl7793);
                    rule__SpinSliderLabel__Group_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSpinSliderLabelAccess().getGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group__3__Impl"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3682:1: rule__SpinSliderLabel__Group_3__0 : rule__SpinSliderLabel__Group_3__0__Impl rule__SpinSliderLabel__Group_3__1 ;
    public final void rule__SpinSliderLabel__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3686:1: ( rule__SpinSliderLabel__Group_3__0__Impl rule__SpinSliderLabel__Group_3__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3687:2: rule__SpinSliderLabel__Group_3__0__Impl rule__SpinSliderLabel__Group_3__1
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__0__Impl_in_rule__SpinSliderLabel__Group_3__07832);
            rule__SpinSliderLabel__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__1_in_rule__SpinSliderLabel__Group_3__07835);
            rule__SpinSliderLabel__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__0"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3694:1: rule__SpinSliderLabel__Group_3__0__Impl : ( ( rule__SpinSliderLabel__MinValAssignment_3_0 ) ) ;
    public final void rule__SpinSliderLabel__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3698:1: ( ( ( rule__SpinSliderLabel__MinValAssignment_3_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3699:1: ( ( rule__SpinSliderLabel__MinValAssignment_3_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3699:1: ( ( rule__SpinSliderLabel__MinValAssignment_3_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3700:1: ( rule__SpinSliderLabel__MinValAssignment_3_0 )
            {
             before(grammarAccess.getSpinSliderLabelAccess().getMinValAssignment_3_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3701:1: ( rule__SpinSliderLabel__MinValAssignment_3_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3701:2: rule__SpinSliderLabel__MinValAssignment_3_0
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__MinValAssignment_3_0_in_rule__SpinSliderLabel__Group_3__0__Impl7862);
            rule__SpinSliderLabel__MinValAssignment_3_0();

            state._fsp--;


            }

             after(grammarAccess.getSpinSliderLabelAccess().getMinValAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__0__Impl"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3711:1: rule__SpinSliderLabel__Group_3__1 : rule__SpinSliderLabel__Group_3__1__Impl rule__SpinSliderLabel__Group_3__2 ;
    public final void rule__SpinSliderLabel__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3715:1: ( rule__SpinSliderLabel__Group_3__1__Impl rule__SpinSliderLabel__Group_3__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3716:2: rule__SpinSliderLabel__Group_3__1__Impl rule__SpinSliderLabel__Group_3__2
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__1__Impl_in_rule__SpinSliderLabel__Group_3__17892);
            rule__SpinSliderLabel__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__2_in_rule__SpinSliderLabel__Group_3__17895);
            rule__SpinSliderLabel__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__1"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3723:1: rule__SpinSliderLabel__Group_3__1__Impl : ( ( rule__SpinSliderLabel__MaxValAssignment_3_1 ) ) ;
    public final void rule__SpinSliderLabel__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3727:1: ( ( ( rule__SpinSliderLabel__MaxValAssignment_3_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3728:1: ( ( rule__SpinSliderLabel__MaxValAssignment_3_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3728:1: ( ( rule__SpinSliderLabel__MaxValAssignment_3_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3729:1: ( rule__SpinSliderLabel__MaxValAssignment_3_1 )
            {
             before(grammarAccess.getSpinSliderLabelAccess().getMaxValAssignment_3_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3730:1: ( rule__SpinSliderLabel__MaxValAssignment_3_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3730:2: rule__SpinSliderLabel__MaxValAssignment_3_1
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__MaxValAssignment_3_1_in_rule__SpinSliderLabel__Group_3__1__Impl7922);
            rule__SpinSliderLabel__MaxValAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSpinSliderLabelAccess().getMaxValAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__1__Impl"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3740:1: rule__SpinSliderLabel__Group_3__2 : rule__SpinSliderLabel__Group_3__2__Impl rule__SpinSliderLabel__Group_3__3 ;
    public final void rule__SpinSliderLabel__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3744:1: ( rule__SpinSliderLabel__Group_3__2__Impl rule__SpinSliderLabel__Group_3__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3745:2: rule__SpinSliderLabel__Group_3__2__Impl rule__SpinSliderLabel__Group_3__3
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__2__Impl_in_rule__SpinSliderLabel__Group_3__27952);
            rule__SpinSliderLabel__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__3_in_rule__SpinSliderLabel__Group_3__27955);
            rule__SpinSliderLabel__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__2"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3752:1: rule__SpinSliderLabel__Group_3__2__Impl : ( ( rule__SpinSliderLabel__MultiplierAssignment_3_2 ) ) ;
    public final void rule__SpinSliderLabel__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3756:1: ( ( ( rule__SpinSliderLabel__MultiplierAssignment_3_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3757:1: ( ( rule__SpinSliderLabel__MultiplierAssignment_3_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3757:1: ( ( rule__SpinSliderLabel__MultiplierAssignment_3_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3758:1: ( rule__SpinSliderLabel__MultiplierAssignment_3_2 )
            {
             before(grammarAccess.getSpinSliderLabelAccess().getMultiplierAssignment_3_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3759:1: ( rule__SpinSliderLabel__MultiplierAssignment_3_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3759:2: rule__SpinSliderLabel__MultiplierAssignment_3_2
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__MultiplierAssignment_3_2_in_rule__SpinSliderLabel__Group_3__2__Impl7982);
            rule__SpinSliderLabel__MultiplierAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getSpinSliderLabelAccess().getMultiplierAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__2__Impl"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3769:1: rule__SpinSliderLabel__Group_3__3 : rule__SpinSliderLabel__Group_3__3__Impl rule__SpinSliderLabel__Group_3__4 ;
    public final void rule__SpinSliderLabel__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3773:1: ( rule__SpinSliderLabel__Group_3__3__Impl rule__SpinSliderLabel__Group_3__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3774:2: rule__SpinSliderLabel__Group_3__3__Impl rule__SpinSliderLabel__Group_3__4
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__3__Impl_in_rule__SpinSliderLabel__Group_3__38012);
            rule__SpinSliderLabel__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__4_in_rule__SpinSliderLabel__Group_3__38015);
            rule__SpinSliderLabel__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__3"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3781:1: rule__SpinSliderLabel__Group_3__3__Impl : ( ( rule__SpinSliderLabel__PrecisionAssignment_3_3 ) ) ;
    public final void rule__SpinSliderLabel__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3785:1: ( ( ( rule__SpinSliderLabel__PrecisionAssignment_3_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3786:1: ( ( rule__SpinSliderLabel__PrecisionAssignment_3_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3786:1: ( ( rule__SpinSliderLabel__PrecisionAssignment_3_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3787:1: ( rule__SpinSliderLabel__PrecisionAssignment_3_3 )
            {
             before(grammarAccess.getSpinSliderLabelAccess().getPrecisionAssignment_3_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3788:1: ( rule__SpinSliderLabel__PrecisionAssignment_3_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3788:2: rule__SpinSliderLabel__PrecisionAssignment_3_3
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__PrecisionAssignment_3_3_in_rule__SpinSliderLabel__Group_3__3__Impl8042);
            rule__SpinSliderLabel__PrecisionAssignment_3_3();

            state._fsp--;


            }

             after(grammarAccess.getSpinSliderLabelAccess().getPrecisionAssignment_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__3__Impl"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3798:1: rule__SpinSliderLabel__Group_3__4 : rule__SpinSliderLabel__Group_3__4__Impl ;
    public final void rule__SpinSliderLabel__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3802:1: ( rule__SpinSliderLabel__Group_3__4__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3803:2: rule__SpinSliderLabel__Group_3__4__Impl
            {
            pushFollow(FOLLOW_rule__SpinSliderLabel__Group_3__4__Impl_in_rule__SpinSliderLabel__Group_3__48072);
            rule__SpinSliderLabel__Group_3__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__4"


    // $ANTLR start "rule__SpinSliderLabel__Group_3__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3809:1: rule__SpinSliderLabel__Group_3__4__Impl : ( ( rule__SpinSliderLabel__OptionAssignment_3_4 )? ) ;
    public final void rule__SpinSliderLabel__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3813:1: ( ( ( rule__SpinSliderLabel__OptionAssignment_3_4 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3814:1: ( ( rule__SpinSliderLabel__OptionAssignment_3_4 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3814:1: ( ( rule__SpinSliderLabel__OptionAssignment_3_4 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3815:1: ( rule__SpinSliderLabel__OptionAssignment_3_4 )?
            {
             before(grammarAccess.getSpinSliderLabelAccess().getOptionAssignment_3_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3816:1: ( rule__SpinSliderLabel__OptionAssignment_3_4 )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_ID) ) {
                int LA26_1 = input.LA(2);

                if ( (LA26_1==EOF||LA26_1==RULE_ID||LA26_1==RULE_SC_COMMENT||(LA26_1>=23 && LA26_1<=28)||(LA26_1>=30 && LA26_1<=38)||(LA26_1>=40 && LA26_1<=66)) ) {
                    alt26=1;
                }
            }
            switch (alt26) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3816:2: rule__SpinSliderLabel__OptionAssignment_3_4
                    {
                    pushFollow(FOLLOW_rule__SpinSliderLabel__OptionAssignment_3_4_in_rule__SpinSliderLabel__Group_3__4__Impl8099);
                    rule__SpinSliderLabel__OptionAssignment_3_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSpinSliderLabelAccess().getOptionAssignment_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__Group_3__4__Impl"


    // $ANTLR start "rule__SpinCheckBox__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3836:1: rule__SpinCheckBox__Group__0 : rule__SpinCheckBox__Group__0__Impl rule__SpinCheckBox__Group__1 ;
    public final void rule__SpinCheckBox__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3840:1: ( rule__SpinCheckBox__Group__0__Impl rule__SpinCheckBox__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3841:2: rule__SpinCheckBox__Group__0__Impl rule__SpinCheckBox__Group__1
            {
            pushFollow(FOLLOW_rule__SpinCheckBox__Group__0__Impl_in_rule__SpinCheckBox__Group__08140);
            rule__SpinCheckBox__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinCheckBox__Group__1_in_rule__SpinCheckBox__Group__08143);
            rule__SpinCheckBox__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinCheckBox__Group__0"


    // $ANTLR start "rule__SpinCheckBox__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3848:1: rule__SpinCheckBox__Group__0__Impl : ( '@checkbox' ) ;
    public final void rule__SpinCheckBox__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3852:1: ( ( '@checkbox' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3853:1: ( '@checkbox' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3853:1: ( '@checkbox' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3854:1: '@checkbox'
            {
             before(grammarAccess.getSpinCheckBoxAccess().getCheckboxKeyword_0()); 
            match(input,28,FOLLOW_28_in_rule__SpinCheckBox__Group__0__Impl8171); 
             after(grammarAccess.getSpinCheckBoxAccess().getCheckboxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinCheckBox__Group__0__Impl"


    // $ANTLR start "rule__SpinCheckBox__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3867:1: rule__SpinCheckBox__Group__1 : rule__SpinCheckBox__Group__1__Impl rule__SpinCheckBox__Group__2 ;
    public final void rule__SpinCheckBox__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3871:1: ( rule__SpinCheckBox__Group__1__Impl rule__SpinCheckBox__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3872:2: rule__SpinCheckBox__Group__1__Impl rule__SpinCheckBox__Group__2
            {
            pushFollow(FOLLOW_rule__SpinCheckBox__Group__1__Impl_in_rule__SpinCheckBox__Group__18202);
            rule__SpinCheckBox__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SpinCheckBox__Group__2_in_rule__SpinCheckBox__Group__18205);
            rule__SpinCheckBox__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinCheckBox__Group__1"


    // $ANTLR start "rule__SpinCheckBox__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3879:1: rule__SpinCheckBox__Group__1__Impl : ( ( rule__SpinCheckBox__EnameAssignment_1 ) ) ;
    public final void rule__SpinCheckBox__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3883:1: ( ( ( rule__SpinCheckBox__EnameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3884:1: ( ( rule__SpinCheckBox__EnameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3884:1: ( ( rule__SpinCheckBox__EnameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3885:1: ( rule__SpinCheckBox__EnameAssignment_1 )
            {
             before(grammarAccess.getSpinCheckBoxAccess().getEnameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3886:1: ( rule__SpinCheckBox__EnameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3886:2: rule__SpinCheckBox__EnameAssignment_1
            {
            pushFollow(FOLLOW_rule__SpinCheckBox__EnameAssignment_1_in_rule__SpinCheckBox__Group__1__Impl8232);
            rule__SpinCheckBox__EnameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSpinCheckBoxAccess().getEnameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinCheckBox__Group__1__Impl"


    // $ANTLR start "rule__SpinCheckBox__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3896:1: rule__SpinCheckBox__Group__2 : rule__SpinCheckBox__Group__2__Impl ;
    public final void rule__SpinCheckBox__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3900:1: ( rule__SpinCheckBox__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3901:2: rule__SpinCheckBox__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SpinCheckBox__Group__2__Impl_in_rule__SpinCheckBox__Group__28262);
            rule__SpinCheckBox__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinCheckBox__Group__2"


    // $ANTLR start "rule__SpinCheckBox__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3907:1: rule__SpinCheckBox__Group__2__Impl : ( ( rule__SpinCheckBox__ControlNameAssignment_2 ) ) ;
    public final void rule__SpinCheckBox__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3911:1: ( ( ( rule__SpinCheckBox__ControlNameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3912:1: ( ( rule__SpinCheckBox__ControlNameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3912:1: ( ( rule__SpinCheckBox__ControlNameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3913:1: ( rule__SpinCheckBox__ControlNameAssignment_2 )
            {
             before(grammarAccess.getSpinCheckBoxAccess().getControlNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3914:1: ( rule__SpinCheckBox__ControlNameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3914:2: rule__SpinCheckBox__ControlNameAssignment_2
            {
            pushFollow(FOLLOW_rule__SpinCheckBox__ControlNameAssignment_2_in_rule__SpinCheckBox__Group__2__Impl8289);
            rule__SpinCheckBox__ControlNameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSpinCheckBoxAccess().getControlNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinCheckBox__Group__2__Impl"


    // $ANTLR start "rule__Label__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3930:1: rule__Label__Group__0 : rule__Label__Group__0__Impl rule__Label__Group__1 ;
    public final void rule__Label__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3934:1: ( rule__Label__Group__0__Impl rule__Label__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3935:2: rule__Label__Group__0__Impl rule__Label__Group__1
            {
            pushFollow(FOLLOW_rule__Label__Group__0__Impl_in_rule__Label__Group__08325);
            rule__Label__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Label__Group__1_in_rule__Label__Group__08328);
            rule__Label__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__0"


    // $ANTLR start "rule__Label__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3942:1: rule__Label__Group__0__Impl : ( ( rule__Label__NameAssignment_0 ) ) ;
    public final void rule__Label__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3946:1: ( ( ( rule__Label__NameAssignment_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3947:1: ( ( rule__Label__NameAssignment_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3947:1: ( ( rule__Label__NameAssignment_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3948:1: ( rule__Label__NameAssignment_0 )
            {
             before(grammarAccess.getLabelAccess().getNameAssignment_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3949:1: ( rule__Label__NameAssignment_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3949:2: rule__Label__NameAssignment_0
            {
            pushFollow(FOLLOW_rule__Label__NameAssignment_0_in_rule__Label__Group__0__Impl8355);
            rule__Label__NameAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getLabelAccess().getNameAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__0__Impl"


    // $ANTLR start "rule__Label__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3959:1: rule__Label__Group__1 : rule__Label__Group__1__Impl ;
    public final void rule__Label__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3963:1: ( rule__Label__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3964:2: rule__Label__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Label__Group__1__Impl_in_rule__Label__Group__18385);
            rule__Label__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__1"


    // $ANTLR start "rule__Label__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3970:1: rule__Label__Group__1__Impl : ( ':' ) ;
    public final void rule__Label__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3974:1: ( ( ':' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3975:1: ( ':' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3975:1: ( ':' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3976:1: ':'
            {
             before(grammarAccess.getLabelAccess().getColonKeyword_1()); 
            match(input,29,FOLLOW_29_in_rule__Label__Group__1__Impl8413); 
             after(grammarAccess.getLabelAccess().getColonKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__1__Impl"


    // $ANTLR start "rule__IsPinConnected__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3993:1: rule__IsPinConnected__Group__0 : rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1 ;
    public final void rule__IsPinConnected__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3997:1: ( rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3998:2: rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__0__Impl_in_rule__IsPinConnected__Group__08448);
            rule__IsPinConnected__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsPinConnected__Group__1_in_rule__IsPinConnected__Group__08451);
            rule__IsPinConnected__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__0"


    // $ANTLR start "rule__IsPinConnected__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4005:1: rule__IsPinConnected__Group__0__Impl : ( '@isPinConnected' ) ;
    public final void rule__IsPinConnected__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4009:1: ( ( '@isPinConnected' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4010:1: ( '@isPinConnected' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4010:1: ( '@isPinConnected' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4011:1: '@isPinConnected'
            {
             before(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); 
            match(input,30,FOLLOW_30_in_rule__IsPinConnected__Group__0__Impl8479); 
             after(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__0__Impl"


    // $ANTLR start "rule__IsPinConnected__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4024:1: rule__IsPinConnected__Group__1 : rule__IsPinConnected__Group__1__Impl ;
    public final void rule__IsPinConnected__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4028:1: ( rule__IsPinConnected__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4029:2: rule__IsPinConnected__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__1__Impl_in_rule__IsPinConnected__Group__18510);
            rule__IsPinConnected__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__1"


    // $ANTLR start "rule__IsPinConnected__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4035:1: rule__IsPinConnected__Group__1__Impl : ( ( rule__IsPinConnected__Arg1Assignment_1 ) ) ;
    public final void rule__IsPinConnected__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4039:1: ( ( ( rule__IsPinConnected__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4040:1: ( ( rule__IsPinConnected__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4040:1: ( ( rule__IsPinConnected__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4041:1: ( rule__IsPinConnected__Arg1Assignment_1 )
            {
             before(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4042:1: ( rule__IsPinConnected__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4042:2: rule__IsPinConnected__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Arg1Assignment_1_in_rule__IsPinConnected__Group__1__Impl8537);
            rule__IsPinConnected__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__1__Impl"


    // $ANTLR start "rule__IsTrue__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4056:1: rule__IsTrue__Group__0 : rule__IsTrue__Group__0__Impl rule__IsTrue__Group__1 ;
    public final void rule__IsTrue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4060:1: ( rule__IsTrue__Group__0__Impl rule__IsTrue__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4061:2: rule__IsTrue__Group__0__Impl rule__IsTrue__Group__1
            {
            pushFollow(FOLLOW_rule__IsTrue__Group__0__Impl_in_rule__IsTrue__Group__08571);
            rule__IsTrue__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsTrue__Group__1_in_rule__IsTrue__Group__08574);
            rule__IsTrue__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsTrue__Group__0"


    // $ANTLR start "rule__IsTrue__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4068:1: rule__IsTrue__Group__0__Impl : ( '@isTrue' ) ;
    public final void rule__IsTrue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4072:1: ( ( '@isTrue' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4073:1: ( '@isTrue' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4073:1: ( '@isTrue' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4074:1: '@isTrue'
            {
             before(grammarAccess.getIsTrueAccess().getIsTrueKeyword_0()); 
            match(input,31,FOLLOW_31_in_rule__IsTrue__Group__0__Impl8602); 
             after(grammarAccess.getIsTrueAccess().getIsTrueKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsTrue__Group__0__Impl"


    // $ANTLR start "rule__IsTrue__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4087:1: rule__IsTrue__Group__1 : rule__IsTrue__Group__1__Impl ;
    public final void rule__IsTrue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4091:1: ( rule__IsTrue__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4092:2: rule__IsTrue__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsTrue__Group__1__Impl_in_rule__IsTrue__Group__18633);
            rule__IsTrue__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsTrue__Group__1"


    // $ANTLR start "rule__IsTrue__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4098:1: rule__IsTrue__Group__1__Impl : ( ( rule__IsTrue__VariableAssignment_1 ) ) ;
    public final void rule__IsTrue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4102:1: ( ( ( rule__IsTrue__VariableAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4103:1: ( ( rule__IsTrue__VariableAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4103:1: ( ( rule__IsTrue__VariableAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4104:1: ( rule__IsTrue__VariableAssignment_1 )
            {
             before(grammarAccess.getIsTrueAccess().getVariableAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4105:1: ( rule__IsTrue__VariableAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4105:2: rule__IsTrue__VariableAssignment_1
            {
            pushFollow(FOLLOW_rule__IsTrue__VariableAssignment_1_in_rule__IsTrue__Group__1__Impl8660);
            rule__IsTrue__VariableAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsTrueAccess().getVariableAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsTrue__Group__1__Impl"


    // $ANTLR start "rule__IsElse__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4119:1: rule__IsElse__Group__0 : rule__IsElse__Group__0__Impl rule__IsElse__Group__1 ;
    public final void rule__IsElse__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4123:1: ( rule__IsElse__Group__0__Impl rule__IsElse__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4124:2: rule__IsElse__Group__0__Impl rule__IsElse__Group__1
            {
            pushFollow(FOLLOW_rule__IsElse__Group__0__Impl_in_rule__IsElse__Group__08694);
            rule__IsElse__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsElse__Group__1_in_rule__IsElse__Group__08697);
            rule__IsElse__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__0"


    // $ANTLR start "rule__IsElse__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4131:1: rule__IsElse__Group__0__Impl : ( () ) ;
    public final void rule__IsElse__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4135:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4136:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4136:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4137:1: ()
            {
             before(grammarAccess.getIsElseAccess().getIsElseAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4138:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4140:1: 
            {
            }

             after(grammarAccess.getIsElseAccess().getIsElseAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__0__Impl"


    // $ANTLR start "rule__IsElse__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4150:1: rule__IsElse__Group__1 : rule__IsElse__Group__1__Impl ;
    public final void rule__IsElse__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4154:1: ( rule__IsElse__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4155:2: rule__IsElse__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsElse__Group__1__Impl_in_rule__IsElse__Group__18755);
            rule__IsElse__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__1"


    // $ANTLR start "rule__IsElse__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4161:1: rule__IsElse__Group__1__Impl : ( '@else' ) ;
    public final void rule__IsElse__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4165:1: ( ( '@else' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4166:1: ( '@else' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4166:1: ( '@else' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4167:1: '@else'
            {
             before(grammarAccess.getIsElseAccess().getElseKeyword_1()); 
            match(input,32,FOLLOW_32_in_rule__IsElse__Group__1__Impl8783); 
             after(grammarAccess.getIsElseAccess().getElseKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__1__Impl"


    // $ANTLR start "rule__IsEndif__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4184:1: rule__IsEndif__Group__0 : rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1 ;
    public final void rule__IsEndif__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4188:1: ( rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4189:2: rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__0__Impl_in_rule__IsEndif__Group__08818);
            rule__IsEndif__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsEndif__Group__1_in_rule__IsEndif__Group__08821);
            rule__IsEndif__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__0"


    // $ANTLR start "rule__IsEndif__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4196:1: rule__IsEndif__Group__0__Impl : ( () ) ;
    public final void rule__IsEndif__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4200:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4201:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4201:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4202:1: ()
            {
             before(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4203:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4205:1: 
            {
            }

             after(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__0__Impl"


    // $ANTLR start "rule__IsEndif__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4215:1: rule__IsEndif__Group__1 : rule__IsEndif__Group__1__Impl ;
    public final void rule__IsEndif__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4219:1: ( rule__IsEndif__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4220:2: rule__IsEndif__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__1__Impl_in_rule__IsEndif__Group__18879);
            rule__IsEndif__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__1"


    // $ANTLR start "rule__IsEndif__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4226:1: rule__IsEndif__Group__1__Impl : ( '@endif' ) ;
    public final void rule__IsEndif__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4230:1: ( ( '@endif' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4231:1: ( '@endif' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4231:1: ( '@endif' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4232:1: '@endif'
            {
             before(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); 
            match(input,33,FOLLOW_33_in_rule__IsEndif__Group__1__Impl8907); 
             after(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__1__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4249:1: rule__GetInputDefault__Group__0 : rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1 ;
    public final void rule__GetInputDefault__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4253:1: ( rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4254:2: rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__0__Impl_in_rule__GetInputDefault__Group__08942);
            rule__GetInputDefault__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__1_in_rule__GetInputDefault__Group__08945);
            rule__GetInputDefault__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__0"


    // $ANTLR start "rule__GetInputDefault__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4261:1: rule__GetInputDefault__Group__0__Impl : ( '@getInputDefault' ) ;
    public final void rule__GetInputDefault__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4265:1: ( ( '@getInputDefault' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4266:1: ( '@getInputDefault' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4266:1: ( '@getInputDefault' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4267:1: '@getInputDefault'
            {
             before(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); 
            match(input,34,FOLLOW_34_in_rule__GetInputDefault__Group__0__Impl8973); 
             after(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__0__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4280:1: rule__GetInputDefault__Group__1 : rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2 ;
    public final void rule__GetInputDefault__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4284:1: ( rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4285:2: rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__1__Impl_in_rule__GetInputDefault__Group__19004);
            rule__GetInputDefault__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__2_in_rule__GetInputDefault__Group__19007);
            rule__GetInputDefault__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__1"


    // $ANTLR start "rule__GetInputDefault__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4292:1: rule__GetInputDefault__Group__1__Impl : ( ( rule__GetInputDefault__NameAssignment_1 ) ) ;
    public final void rule__GetInputDefault__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4296:1: ( ( ( rule__GetInputDefault__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4297:1: ( ( rule__GetInputDefault__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4297:1: ( ( rule__GetInputDefault__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4298:1: ( rule__GetInputDefault__NameAssignment_1 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4299:1: ( rule__GetInputDefault__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4299:2: rule__GetInputDefault__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__GetInputDefault__NameAssignment_1_in_rule__GetInputDefault__Group__1__Impl9034);
            rule__GetInputDefault__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__1__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4309:1: rule__GetInputDefault__Group__2 : rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3 ;
    public final void rule__GetInputDefault__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4313:1: ( rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4314:2: rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__2__Impl_in_rule__GetInputDefault__Group__29064);
            rule__GetInputDefault__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__3_in_rule__GetInputDefault__Group__29067);
            rule__GetInputDefault__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__2"


    // $ANTLR start "rule__GetInputDefault__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4321:1: rule__GetInputDefault__Group__2__Impl : ( ( rule__GetInputDefault__VariableAssignment_2 ) ) ;
    public final void rule__GetInputDefault__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4325:1: ( ( ( rule__GetInputDefault__VariableAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4326:1: ( ( rule__GetInputDefault__VariableAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4326:1: ( ( rule__GetInputDefault__VariableAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4327:1: ( rule__GetInputDefault__VariableAssignment_2 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4328:1: ( rule__GetInputDefault__VariableAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4328:2: rule__GetInputDefault__VariableAssignment_2
            {
            pushFollow(FOLLOW_rule__GetInputDefault__VariableAssignment_2_in_rule__GetInputDefault__Group__2__Impl9094);
            rule__GetInputDefault__VariableAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__2__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4338:1: rule__GetInputDefault__Group__3 : rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4 ;
    public final void rule__GetInputDefault__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4342:1: ( rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4343:2: rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__3__Impl_in_rule__GetInputDefault__Group__39124);
            rule__GetInputDefault__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__4_in_rule__GetInputDefault__Group__39127);
            rule__GetInputDefault__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__3"


    // $ANTLR start "rule__GetInputDefault__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4350:1: rule__GetInputDefault__Group__3__Impl : ( ( rule__GetInputDefault__ScaleAssignment_3 ) ) ;
    public final void rule__GetInputDefault__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4354:1: ( ( ( rule__GetInputDefault__ScaleAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4355:1: ( ( rule__GetInputDefault__ScaleAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4355:1: ( ( rule__GetInputDefault__ScaleAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4356:1: ( rule__GetInputDefault__ScaleAssignment_3 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4357:1: ( rule__GetInputDefault__ScaleAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4357:2: rule__GetInputDefault__ScaleAssignment_3
            {
            pushFollow(FOLLOW_rule__GetInputDefault__ScaleAssignment_3_in_rule__GetInputDefault__Group__3__Impl9154);
            rule__GetInputDefault__ScaleAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__3__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4367:1: rule__GetInputDefault__Group__4 : rule__GetInputDefault__Group__4__Impl ;
    public final void rule__GetInputDefault__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4371:1: ( rule__GetInputDefault__Group__4__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4372:2: rule__GetInputDefault__Group__4__Impl
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__4__Impl_in_rule__GetInputDefault__Group__49184);
            rule__GetInputDefault__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__4"


    // $ANTLR start "rule__GetInputDefault__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4378:1: rule__GetInputDefault__Group__4__Impl : ( ( rule__GetInputDefault__DefaultValAssignment_4 ) ) ;
    public final void rule__GetInputDefault__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4382:1: ( ( ( rule__GetInputDefault__DefaultValAssignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4383:1: ( ( rule__GetInputDefault__DefaultValAssignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4383:1: ( ( rule__GetInputDefault__DefaultValAssignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4384:1: ( rule__GetInputDefault__DefaultValAssignment_4 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4385:1: ( rule__GetInputDefault__DefaultValAssignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4385:2: rule__GetInputDefault__DefaultValAssignment_4
            {
            pushFollow(FOLLOW_rule__GetInputDefault__DefaultValAssignment_4_in_rule__GetInputDefault__Group__4__Impl9211);
            rule__GetInputDefault__DefaultValAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__4__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4405:1: rule__GetDelayScaleControl__Group__0 : rule__GetDelayScaleControl__Group__0__Impl rule__GetDelayScaleControl__Group__1 ;
    public final void rule__GetDelayScaleControl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4409:1: ( rule__GetDelayScaleControl__Group__0__Impl rule__GetDelayScaleControl__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4410:2: rule__GetDelayScaleControl__Group__0__Impl rule__GetDelayScaleControl__Group__1
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__0__Impl_in_rule__GetDelayScaleControl__Group__09251);
            rule__GetDelayScaleControl__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__1_in_rule__GetDelayScaleControl__Group__09254);
            rule__GetDelayScaleControl__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__0"


    // $ANTLR start "rule__GetDelayScaleControl__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4417:1: rule__GetDelayScaleControl__Group__0__Impl : ( '@getDelayScaleControl' ) ;
    public final void rule__GetDelayScaleControl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4421:1: ( ( '@getDelayScaleControl' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4422:1: ( '@getDelayScaleControl' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4422:1: ( '@getDelayScaleControl' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4423:1: '@getDelayScaleControl'
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getGetDelayScaleControlKeyword_0()); 
            match(input,35,FOLLOW_35_in_rule__GetDelayScaleControl__Group__0__Impl9282); 
             after(grammarAccess.getGetDelayScaleControlAccess().getGetDelayScaleControlKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__0__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4436:1: rule__GetDelayScaleControl__Group__1 : rule__GetDelayScaleControl__Group__1__Impl rule__GetDelayScaleControl__Group__2 ;
    public final void rule__GetDelayScaleControl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4440:1: ( rule__GetDelayScaleControl__Group__1__Impl rule__GetDelayScaleControl__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4441:2: rule__GetDelayScaleControl__Group__1__Impl rule__GetDelayScaleControl__Group__2
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__1__Impl_in_rule__GetDelayScaleControl__Group__19313);
            rule__GetDelayScaleControl__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__2_in_rule__GetDelayScaleControl__Group__19316);
            rule__GetDelayScaleControl__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__1"


    // $ANTLR start "rule__GetDelayScaleControl__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4448:1: rule__GetDelayScaleControl__Group__1__Impl : ( ( rule__GetDelayScaleControl__RatioAssignment_1 ) ) ;
    public final void rule__GetDelayScaleControl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4452:1: ( ( ( rule__GetDelayScaleControl__RatioAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4453:1: ( ( rule__GetDelayScaleControl__RatioAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4453:1: ( ( rule__GetDelayScaleControl__RatioAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4454:1: ( rule__GetDelayScaleControl__RatioAssignment_1 )
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getRatioAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4455:1: ( rule__GetDelayScaleControl__RatioAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4455:2: rule__GetDelayScaleControl__RatioAssignment_1
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__RatioAssignment_1_in_rule__GetDelayScaleControl__Group__1__Impl9343);
            rule__GetDelayScaleControl__RatioAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleControlAccess().getRatioAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__1__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4465:1: rule__GetDelayScaleControl__Group__2 : rule__GetDelayScaleControl__Group__2__Impl rule__GetDelayScaleControl__Group__3 ;
    public final void rule__GetDelayScaleControl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4469:1: ( rule__GetDelayScaleControl__Group__2__Impl rule__GetDelayScaleControl__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4470:2: rule__GetDelayScaleControl__Group__2__Impl rule__GetDelayScaleControl__Group__3
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__2__Impl_in_rule__GetDelayScaleControl__Group__29373);
            rule__GetDelayScaleControl__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__3_in_rule__GetDelayScaleControl__Group__29376);
            rule__GetDelayScaleControl__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__2"


    // $ANTLR start "rule__GetDelayScaleControl__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4477:1: rule__GetDelayScaleControl__Group__2__Impl : ( ( rule__GetDelayScaleControl__LengthAssignment_2 ) ) ;
    public final void rule__GetDelayScaleControl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4481:1: ( ( ( rule__GetDelayScaleControl__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4482:1: ( ( rule__GetDelayScaleControl__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4482:1: ( ( rule__GetDelayScaleControl__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4483:1: ( rule__GetDelayScaleControl__LengthAssignment_2 )
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4484:1: ( rule__GetDelayScaleControl__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4484:2: rule__GetDelayScaleControl__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__LengthAssignment_2_in_rule__GetDelayScaleControl__Group__2__Impl9403);
            rule__GetDelayScaleControl__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleControlAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__2__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4494:1: rule__GetDelayScaleControl__Group__3 : rule__GetDelayScaleControl__Group__3__Impl rule__GetDelayScaleControl__Group__4 ;
    public final void rule__GetDelayScaleControl__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4498:1: ( rule__GetDelayScaleControl__Group__3__Impl rule__GetDelayScaleControl__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4499:2: rule__GetDelayScaleControl__Group__3__Impl rule__GetDelayScaleControl__Group__4
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__3__Impl_in_rule__GetDelayScaleControl__Group__39433);
            rule__GetDelayScaleControl__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__4_in_rule__GetDelayScaleControl__Group__39436);
            rule__GetDelayScaleControl__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__3"


    // $ANTLR start "rule__GetDelayScaleControl__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4506:1: rule__GetDelayScaleControl__Group__3__Impl : ( ( rule__GetDelayScaleControl__OffsetAssignment_3 ) ) ;
    public final void rule__GetDelayScaleControl__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4510:1: ( ( ( rule__GetDelayScaleControl__OffsetAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4511:1: ( ( rule__GetDelayScaleControl__OffsetAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4511:1: ( ( rule__GetDelayScaleControl__OffsetAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4512:1: ( rule__GetDelayScaleControl__OffsetAssignment_3 )
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getOffsetAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4513:1: ( rule__GetDelayScaleControl__OffsetAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4513:2: rule__GetDelayScaleControl__OffsetAssignment_3
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__OffsetAssignment_3_in_rule__GetDelayScaleControl__Group__3__Impl9463);
            rule__GetDelayScaleControl__OffsetAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleControlAccess().getOffsetAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__3__Impl"


    // $ANTLR start "rule__GetDelayScaleControl__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4523:1: rule__GetDelayScaleControl__Group__4 : rule__GetDelayScaleControl__Group__4__Impl ;
    public final void rule__GetDelayScaleControl__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4527:1: ( rule__GetDelayScaleControl__Group__4__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4528:2: rule__GetDelayScaleControl__Group__4__Impl
            {
            pushFollow(FOLLOW_rule__GetDelayScaleControl__Group__4__Impl_in_rule__GetDelayScaleControl__Group__49493);
            rule__GetDelayScaleControl__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__4"


    // $ANTLR start "rule__GetDelayScaleControl__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4534:1: rule__GetDelayScaleControl__Group__4__Impl : ( ( rule__GetDelayScaleControl__ControlAssignment_4 )? ) ;
    public final void rule__GetDelayScaleControl__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4538:1: ( ( ( rule__GetDelayScaleControl__ControlAssignment_4 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4539:1: ( ( rule__GetDelayScaleControl__ControlAssignment_4 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4539:1: ( ( rule__GetDelayScaleControl__ControlAssignment_4 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4540:1: ( rule__GetDelayScaleControl__ControlAssignment_4 )?
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getControlAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4541:1: ( rule__GetDelayScaleControl__ControlAssignment_4 )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_ID) ) {
                int LA27_1 = input.LA(2);

                if ( (LA27_1==EOF||LA27_1==RULE_ID||LA27_1==RULE_SC_COMMENT||(LA27_1>=23 && LA27_1<=28)||(LA27_1>=30 && LA27_1<=38)||(LA27_1>=40 && LA27_1<=66)) ) {
                    alt27=1;
                }
            }
            switch (alt27) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4541:2: rule__GetDelayScaleControl__ControlAssignment_4
                    {
                    pushFollow(FOLLOW_rule__GetDelayScaleControl__ControlAssignment_4_in_rule__GetDelayScaleControl__Group__4__Impl9520);
                    rule__GetDelayScaleControl__ControlAssignment_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getGetDelayScaleControlAccess().getControlAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__Group__4__Impl"


    // $ANTLR start "rule__GetBaseAddress__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4561:1: rule__GetBaseAddress__Group__0 : rule__GetBaseAddress__Group__0__Impl rule__GetBaseAddress__Group__1 ;
    public final void rule__GetBaseAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4565:1: ( rule__GetBaseAddress__Group__0__Impl rule__GetBaseAddress__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4566:2: rule__GetBaseAddress__Group__0__Impl rule__GetBaseAddress__Group__1
            {
            pushFollow(FOLLOW_rule__GetBaseAddress__Group__0__Impl_in_rule__GetBaseAddress__Group__09561);
            rule__GetBaseAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetBaseAddress__Group__1_in_rule__GetBaseAddress__Group__09564);
            rule__GetBaseAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetBaseAddress__Group__0"


    // $ANTLR start "rule__GetBaseAddress__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4573:1: rule__GetBaseAddress__Group__0__Impl : ( () ) ;
    public final void rule__GetBaseAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4577:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4578:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4578:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4579:1: ()
            {
             before(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4580:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4582:1: 
            {
            }

             after(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetBaseAddress__Group__0__Impl"


    // $ANTLR start "rule__GetBaseAddress__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4592:1: rule__GetBaseAddress__Group__1 : rule__GetBaseAddress__Group__1__Impl ;
    public final void rule__GetBaseAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4596:1: ( rule__GetBaseAddress__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4597:2: rule__GetBaseAddress__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__GetBaseAddress__Group__1__Impl_in_rule__GetBaseAddress__Group__19622);
            rule__GetBaseAddress__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetBaseAddress__Group__1"


    // $ANTLR start "rule__GetBaseAddress__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4603:1: rule__GetBaseAddress__Group__1__Impl : ( '@getBaseAddress' ) ;
    public final void rule__GetBaseAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4607:1: ( ( '@getBaseAddress' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4608:1: ( '@getBaseAddress' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4608:1: ( '@getBaseAddress' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4609:1: '@getBaseAddress'
            {
             before(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressKeyword_1()); 
            match(input,36,FOLLOW_36_in_rule__GetBaseAddress__Group__1__Impl9650); 
             after(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetBaseAddress__Group__1__Impl"


    // $ANTLR start "rule__SetOutputPin__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4626:1: rule__SetOutputPin__Group__0 : rule__SetOutputPin__Group__0__Impl rule__SetOutputPin__Group__1 ;
    public final void rule__SetOutputPin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4630:1: ( rule__SetOutputPin__Group__0__Impl rule__SetOutputPin__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4631:2: rule__SetOutputPin__Group__0__Impl rule__SetOutputPin__Group__1
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__0__Impl_in_rule__SetOutputPin__Group__09685);
            rule__SetOutputPin__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SetOutputPin__Group__1_in_rule__SetOutputPin__Group__09688);
            rule__SetOutputPin__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__0"


    // $ANTLR start "rule__SetOutputPin__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4638:1: rule__SetOutputPin__Group__0__Impl : ( '@setOutputPin' ) ;
    public final void rule__SetOutputPin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4642:1: ( ( '@setOutputPin' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4643:1: ( '@setOutputPin' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4643:1: ( '@setOutputPin' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4644:1: '@setOutputPin'
            {
             before(grammarAccess.getSetOutputPinAccess().getSetOutputPinKeyword_0()); 
            match(input,37,FOLLOW_37_in_rule__SetOutputPin__Group__0__Impl9716); 
             after(grammarAccess.getSetOutputPinAccess().getSetOutputPinKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__0__Impl"


    // $ANTLR start "rule__SetOutputPin__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4657:1: rule__SetOutputPin__Group__1 : rule__SetOutputPin__Group__1__Impl rule__SetOutputPin__Group__2 ;
    public final void rule__SetOutputPin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4661:1: ( rule__SetOutputPin__Group__1__Impl rule__SetOutputPin__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4662:2: rule__SetOutputPin__Group__1__Impl rule__SetOutputPin__Group__2
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__1__Impl_in_rule__SetOutputPin__Group__19747);
            rule__SetOutputPin__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SetOutputPin__Group__2_in_rule__SetOutputPin__Group__19750);
            rule__SetOutputPin__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__1"


    // $ANTLR start "rule__SetOutputPin__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4669:1: rule__SetOutputPin__Group__1__Impl : ( ( rule__SetOutputPin__PinNameAssignment_1 ) ) ;
    public final void rule__SetOutputPin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4673:1: ( ( ( rule__SetOutputPin__PinNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4674:1: ( ( rule__SetOutputPin__PinNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4674:1: ( ( rule__SetOutputPin__PinNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4675:1: ( rule__SetOutputPin__PinNameAssignment_1 )
            {
             before(grammarAccess.getSetOutputPinAccess().getPinNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4676:1: ( rule__SetOutputPin__PinNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4676:2: rule__SetOutputPin__PinNameAssignment_1
            {
            pushFollow(FOLLOW_rule__SetOutputPin__PinNameAssignment_1_in_rule__SetOutputPin__Group__1__Impl9777);
            rule__SetOutputPin__PinNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSetOutputPinAccess().getPinNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__1__Impl"


    // $ANTLR start "rule__SetOutputPin__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4686:1: rule__SetOutputPin__Group__2 : rule__SetOutputPin__Group__2__Impl ;
    public final void rule__SetOutputPin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4690:1: ( rule__SetOutputPin__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4691:2: rule__SetOutputPin__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SetOutputPin__Group__2__Impl_in_rule__SetOutputPin__Group__29807);
            rule__SetOutputPin__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__2"


    // $ANTLR start "rule__SetOutputPin__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4697:1: rule__SetOutputPin__Group__2__Impl : ( ( rule__SetOutputPin__VarNameAssignment_2 ) ) ;
    public final void rule__SetOutputPin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4701:1: ( ( ( rule__SetOutputPin__VarNameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4702:1: ( ( rule__SetOutputPin__VarNameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4702:1: ( ( rule__SetOutputPin__VarNameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4703:1: ( rule__SetOutputPin__VarNameAssignment_2 )
            {
             before(grammarAccess.getSetOutputPinAccess().getVarNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4704:1: ( rule__SetOutputPin__VarNameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4704:2: rule__SetOutputPin__VarNameAssignment_2
            {
            pushFollow(FOLLOW_rule__SetOutputPin__VarNameAssignment_2_in_rule__SetOutputPin__Group__2__Impl9834);
            rule__SetOutputPin__VarNameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSetOutputPinAccess().getVarNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__Group__2__Impl"


    // $ANTLR start "rule__ReadRegister__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4720:1: rule__ReadRegister__Group__0 : rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1 ;
    public final void rule__ReadRegister__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4724:1: ( rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4725:2: rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__0__Impl_in_rule__ReadRegister__Group__09870);
            rule__ReadRegister__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__1_in_rule__ReadRegister__Group__09873);
            rule__ReadRegister__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__0"


    // $ANTLR start "rule__ReadRegister__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4732:1: rule__ReadRegister__Group__0__Impl : ( 'rdax' ) ;
    public final void rule__ReadRegister__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4736:1: ( ( 'rdax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4737:1: ( 'rdax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4737:1: ( 'rdax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4738:1: 'rdax'
            {
             before(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); 
            match(input,38,FOLLOW_38_in_rule__ReadRegister__Group__0__Impl9901); 
             after(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__0__Impl"


    // $ANTLR start "rule__ReadRegister__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4751:1: rule__ReadRegister__Group__1 : rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2 ;
    public final void rule__ReadRegister__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4755:1: ( rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4756:2: rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__1__Impl_in_rule__ReadRegister__Group__19932);
            rule__ReadRegister__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__2_in_rule__ReadRegister__Group__19935);
            rule__ReadRegister__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__1"


    // $ANTLR start "rule__ReadRegister__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4763:1: rule__ReadRegister__Group__1__Impl : ( ( rule__ReadRegister__Arg1Assignment_1 ) ) ;
    public final void rule__ReadRegister__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4767:1: ( ( ( rule__ReadRegister__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4768:1: ( ( rule__ReadRegister__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4768:1: ( ( rule__ReadRegister__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4769:1: ( rule__ReadRegister__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4770:1: ( rule__ReadRegister__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4770:2: rule__ReadRegister__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadRegister__Arg1Assignment_1_in_rule__ReadRegister__Group__1__Impl9962);
            rule__ReadRegister__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__1__Impl"


    // $ANTLR start "rule__ReadRegister__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4780:1: rule__ReadRegister__Group__2 : rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3 ;
    public final void rule__ReadRegister__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4784:1: ( rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4785:2: rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__2__Impl_in_rule__ReadRegister__Group__29992);
            rule__ReadRegister__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__3_in_rule__ReadRegister__Group__29995);
            rule__ReadRegister__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__2"


    // $ANTLR start "rule__ReadRegister__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4792:1: rule__ReadRegister__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadRegister__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4796:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4797:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4797:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4798:1: ','
            {
             before(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__ReadRegister__Group__2__Impl10023); 
             after(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__2__Impl"


    // $ANTLR start "rule__ReadRegister__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4811:1: rule__ReadRegister__Group__3 : rule__ReadRegister__Group__3__Impl ;
    public final void rule__ReadRegister__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4815:1: ( rule__ReadRegister__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4816:2: rule__ReadRegister__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__3__Impl_in_rule__ReadRegister__Group__310054);
            rule__ReadRegister__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__3"


    // $ANTLR start "rule__ReadRegister__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4822:1: rule__ReadRegister__Group__3__Impl : ( ( rule__ReadRegister__Arg2Assignment_3 ) ) ;
    public final void rule__ReadRegister__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4826:1: ( ( ( rule__ReadRegister__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4827:1: ( ( rule__ReadRegister__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4827:1: ( ( rule__ReadRegister__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4828:1: ( rule__ReadRegister__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4829:1: ( rule__ReadRegister__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4829:2: rule__ReadRegister__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadRegister__Arg2Assignment_3_in_rule__ReadRegister__Group__3__Impl10081);
            rule__ReadRegister__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__3__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4847:1: rule__WriteRegisterLowshelf__Group__0 : rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1 ;
    public final void rule__WriteRegisterLowshelf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4851:1: ( rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4852:2: rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__0__Impl_in_rule__WriteRegisterLowshelf__Group__010119);
            rule__WriteRegisterLowshelf__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__1_in_rule__WriteRegisterLowshelf__Group__010122);
            rule__WriteRegisterLowshelf__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__0"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4859:1: rule__WriteRegisterLowshelf__Group__0__Impl : ( 'wrlx' ) ;
    public final void rule__WriteRegisterLowshelf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4863:1: ( ( 'wrlx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4864:1: ( 'wrlx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4864:1: ( 'wrlx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4865:1: 'wrlx'
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); 
            match(input,40,FOLLOW_40_in_rule__WriteRegisterLowshelf__Group__0__Impl10150); 
             after(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__0__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4878:1: rule__WriteRegisterLowshelf__Group__1 : rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2 ;
    public final void rule__WriteRegisterLowshelf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4882:1: ( rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4883:2: rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__1__Impl_in_rule__WriteRegisterLowshelf__Group__110181);
            rule__WriteRegisterLowshelf__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__2_in_rule__WriteRegisterLowshelf__Group__110184);
            rule__WriteRegisterLowshelf__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__1"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4890:1: rule__WriteRegisterLowshelf__Group__1__Impl : ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegisterLowshelf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4894:1: ( ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4895:1: ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4895:1: ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4896:1: ( rule__WriteRegisterLowshelf__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4897:1: ( rule__WriteRegisterLowshelf__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4897:2: rule__WriteRegisterLowshelf__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Arg1Assignment_1_in_rule__WriteRegisterLowshelf__Group__1__Impl10211);
            rule__WriteRegisterLowshelf__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__1__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4907:1: rule__WriteRegisterLowshelf__Group__2 : rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3 ;
    public final void rule__WriteRegisterLowshelf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4911:1: ( rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4912:2: rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__2__Impl_in_rule__WriteRegisterLowshelf__Group__210241);
            rule__WriteRegisterLowshelf__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__3_in_rule__WriteRegisterLowshelf__Group__210244);
            rule__WriteRegisterLowshelf__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__2"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4919:1: rule__WriteRegisterLowshelf__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegisterLowshelf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4923:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4924:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4924:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4925:1: ','
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__WriteRegisterLowshelf__Group__2__Impl10272); 
             after(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__2__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4938:1: rule__WriteRegisterLowshelf__Group__3 : rule__WriteRegisterLowshelf__Group__3__Impl ;
    public final void rule__WriteRegisterLowshelf__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4942:1: ( rule__WriteRegisterLowshelf__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4943:2: rule__WriteRegisterLowshelf__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__3__Impl_in_rule__WriteRegisterLowshelf__Group__310303);
            rule__WriteRegisterLowshelf__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__3"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4949:1: rule__WriteRegisterLowshelf__Group__3__Impl : ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegisterLowshelf__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4953:1: ( ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4954:1: ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4954:1: ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4955:1: ( rule__WriteRegisterLowshelf__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4956:1: ( rule__WriteRegisterLowshelf__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4956:2: rule__WriteRegisterLowshelf__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Arg2Assignment_3_in_rule__WriteRegisterLowshelf__Group__3__Impl10330);
            rule__WriteRegisterLowshelf__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__3__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4974:1: rule__WriteRegisterHighshelf__Group__0 : rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1 ;
    public final void rule__WriteRegisterHighshelf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4978:1: ( rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4979:2: rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__0__Impl_in_rule__WriteRegisterHighshelf__Group__010368);
            rule__WriteRegisterHighshelf__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__1_in_rule__WriteRegisterHighshelf__Group__010371);
            rule__WriteRegisterHighshelf__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__0"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4986:1: rule__WriteRegisterHighshelf__Group__0__Impl : ( 'wrhx' ) ;
    public final void rule__WriteRegisterHighshelf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4990:1: ( ( 'wrhx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4991:1: ( 'wrhx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4991:1: ( 'wrhx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4992:1: 'wrhx'
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); 
            match(input,41,FOLLOW_41_in_rule__WriteRegisterHighshelf__Group__0__Impl10399); 
             after(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__0__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5005:1: rule__WriteRegisterHighshelf__Group__1 : rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2 ;
    public final void rule__WriteRegisterHighshelf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5009:1: ( rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5010:2: rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__1__Impl_in_rule__WriteRegisterHighshelf__Group__110430);
            rule__WriteRegisterHighshelf__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__2_in_rule__WriteRegisterHighshelf__Group__110433);
            rule__WriteRegisterHighshelf__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__1"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5017:1: rule__WriteRegisterHighshelf__Group__1__Impl : ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegisterHighshelf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5021:1: ( ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5022:1: ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5022:1: ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5023:1: ( rule__WriteRegisterHighshelf__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5024:1: ( rule__WriteRegisterHighshelf__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5024:2: rule__WriteRegisterHighshelf__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Arg1Assignment_1_in_rule__WriteRegisterHighshelf__Group__1__Impl10460);
            rule__WriteRegisterHighshelf__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__1__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5034:1: rule__WriteRegisterHighshelf__Group__2 : rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3 ;
    public final void rule__WriteRegisterHighshelf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5038:1: ( rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5039:2: rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__2__Impl_in_rule__WriteRegisterHighshelf__Group__210490);
            rule__WriteRegisterHighshelf__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__3_in_rule__WriteRegisterHighshelf__Group__210493);
            rule__WriteRegisterHighshelf__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__2"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5046:1: rule__WriteRegisterHighshelf__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegisterHighshelf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5050:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5051:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5051:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5052:1: ','
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__WriteRegisterHighshelf__Group__2__Impl10521); 
             after(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__2__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5065:1: rule__WriteRegisterHighshelf__Group__3 : rule__WriteRegisterHighshelf__Group__3__Impl ;
    public final void rule__WriteRegisterHighshelf__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5069:1: ( rule__WriteRegisterHighshelf__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5070:2: rule__WriteRegisterHighshelf__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__3__Impl_in_rule__WriteRegisterHighshelf__Group__310552);
            rule__WriteRegisterHighshelf__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__3"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5076:1: rule__WriteRegisterHighshelf__Group__3__Impl : ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegisterHighshelf__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5080:1: ( ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5081:1: ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5081:1: ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5082:1: ( rule__WriteRegisterHighshelf__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5083:1: ( rule__WriteRegisterHighshelf__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5083:2: rule__WriteRegisterHighshelf__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Arg2Assignment_3_in_rule__WriteRegisterHighshelf__Group__3__Impl10579);
            rule__WriteRegisterHighshelf__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__3__Impl"


    // $ANTLR start "rule__WriteRegister__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5101:1: rule__WriteRegister__Group__0 : rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1 ;
    public final void rule__WriteRegister__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5105:1: ( rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5106:2: rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__0__Impl_in_rule__WriteRegister__Group__010617);
            rule__WriteRegister__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__1_in_rule__WriteRegister__Group__010620);
            rule__WriteRegister__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__0"


    // $ANTLR start "rule__WriteRegister__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5113:1: rule__WriteRegister__Group__0__Impl : ( 'wrax' ) ;
    public final void rule__WriteRegister__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5117:1: ( ( 'wrax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5118:1: ( 'wrax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5118:1: ( 'wrax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5119:1: 'wrax'
            {
             before(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); 
            match(input,42,FOLLOW_42_in_rule__WriteRegister__Group__0__Impl10648); 
             after(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__0__Impl"


    // $ANTLR start "rule__WriteRegister__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5132:1: rule__WriteRegister__Group__1 : rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2 ;
    public final void rule__WriteRegister__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5136:1: ( rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5137:2: rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__1__Impl_in_rule__WriteRegister__Group__110679);
            rule__WriteRegister__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__2_in_rule__WriteRegister__Group__110682);
            rule__WriteRegister__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__1"


    // $ANTLR start "rule__WriteRegister__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5144:1: rule__WriteRegister__Group__1__Impl : ( ( rule__WriteRegister__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegister__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5148:1: ( ( ( rule__WriteRegister__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5149:1: ( ( rule__WriteRegister__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5149:1: ( ( rule__WriteRegister__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5150:1: ( rule__WriteRegister__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5151:1: ( rule__WriteRegister__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5151:2: rule__WriteRegister__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegister__Arg1Assignment_1_in_rule__WriteRegister__Group__1__Impl10709);
            rule__WriteRegister__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__1__Impl"


    // $ANTLR start "rule__WriteRegister__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5161:1: rule__WriteRegister__Group__2 : rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3 ;
    public final void rule__WriteRegister__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5165:1: ( rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5166:2: rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__2__Impl_in_rule__WriteRegister__Group__210739);
            rule__WriteRegister__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__3_in_rule__WriteRegister__Group__210742);
            rule__WriteRegister__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__2"


    // $ANTLR start "rule__WriteRegister__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5173:1: rule__WriteRegister__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegister__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5177:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5178:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5178:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5179:1: ','
            {
             before(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__WriteRegister__Group__2__Impl10770); 
             after(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__2__Impl"


    // $ANTLR start "rule__WriteRegister__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5192:1: rule__WriteRegister__Group__3 : rule__WriteRegister__Group__3__Impl ;
    public final void rule__WriteRegister__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5196:1: ( rule__WriteRegister__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5197:2: rule__WriteRegister__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__3__Impl_in_rule__WriteRegister__Group__310801);
            rule__WriteRegister__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__3"


    // $ANTLR start "rule__WriteRegister__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5203:1: rule__WriteRegister__Group__3__Impl : ( ( rule__WriteRegister__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegister__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5207:1: ( ( ( rule__WriteRegister__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5208:1: ( ( rule__WriteRegister__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5208:1: ( ( rule__WriteRegister__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5209:1: ( rule__WriteRegister__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5210:1: ( rule__WriteRegister__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5210:2: rule__WriteRegister__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegister__Arg2Assignment_3_in_rule__WriteRegister__Group__3__Impl10828);
            rule__WriteRegister__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__3__Impl"


    // $ANTLR start "rule__Maxx__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5228:1: rule__Maxx__Group__0 : rule__Maxx__Group__0__Impl rule__Maxx__Group__1 ;
    public final void rule__Maxx__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5232:1: ( rule__Maxx__Group__0__Impl rule__Maxx__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5233:2: rule__Maxx__Group__0__Impl rule__Maxx__Group__1
            {
            pushFollow(FOLLOW_rule__Maxx__Group__0__Impl_in_rule__Maxx__Group__010866);
            rule__Maxx__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__1_in_rule__Maxx__Group__010869);
            rule__Maxx__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__0"


    // $ANTLR start "rule__Maxx__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5240:1: rule__Maxx__Group__0__Impl : ( 'maxx' ) ;
    public final void rule__Maxx__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5244:1: ( ( 'maxx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5245:1: ( 'maxx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5245:1: ( 'maxx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5246:1: 'maxx'
            {
             before(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); 
            match(input,43,FOLLOW_43_in_rule__Maxx__Group__0__Impl10897); 
             after(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__0__Impl"


    // $ANTLR start "rule__Maxx__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5259:1: rule__Maxx__Group__1 : rule__Maxx__Group__1__Impl rule__Maxx__Group__2 ;
    public final void rule__Maxx__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5263:1: ( rule__Maxx__Group__1__Impl rule__Maxx__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5264:2: rule__Maxx__Group__1__Impl rule__Maxx__Group__2
            {
            pushFollow(FOLLOW_rule__Maxx__Group__1__Impl_in_rule__Maxx__Group__110928);
            rule__Maxx__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__2_in_rule__Maxx__Group__110931);
            rule__Maxx__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__1"


    // $ANTLR start "rule__Maxx__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5271:1: rule__Maxx__Group__1__Impl : ( ( rule__Maxx__Arg1Assignment_1 ) ) ;
    public final void rule__Maxx__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5275:1: ( ( ( rule__Maxx__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5276:1: ( ( rule__Maxx__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5276:1: ( ( rule__Maxx__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5277:1: ( rule__Maxx__Arg1Assignment_1 )
            {
             before(grammarAccess.getMaxxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5278:1: ( rule__Maxx__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5278:2: rule__Maxx__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Maxx__Arg1Assignment_1_in_rule__Maxx__Group__1__Impl10958);
            rule__Maxx__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__1__Impl"


    // $ANTLR start "rule__Maxx__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5288:1: rule__Maxx__Group__2 : rule__Maxx__Group__2__Impl rule__Maxx__Group__3 ;
    public final void rule__Maxx__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5292:1: ( rule__Maxx__Group__2__Impl rule__Maxx__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5293:2: rule__Maxx__Group__2__Impl rule__Maxx__Group__3
            {
            pushFollow(FOLLOW_rule__Maxx__Group__2__Impl_in_rule__Maxx__Group__210988);
            rule__Maxx__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__3_in_rule__Maxx__Group__210991);
            rule__Maxx__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__2"


    // $ANTLR start "rule__Maxx__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5300:1: rule__Maxx__Group__2__Impl : ( ',' ) ;
    public final void rule__Maxx__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5304:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5305:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5305:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5306:1: ','
            {
             before(grammarAccess.getMaxxAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__Maxx__Group__2__Impl11019); 
             after(grammarAccess.getMaxxAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__2__Impl"


    // $ANTLR start "rule__Maxx__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5319:1: rule__Maxx__Group__3 : rule__Maxx__Group__3__Impl ;
    public final void rule__Maxx__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5323:1: ( rule__Maxx__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5324:2: rule__Maxx__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Maxx__Group__3__Impl_in_rule__Maxx__Group__311050);
            rule__Maxx__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__3"


    // $ANTLR start "rule__Maxx__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5330:1: rule__Maxx__Group__3__Impl : ( ( rule__Maxx__Arg2Assignment_3 ) ) ;
    public final void rule__Maxx__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5334:1: ( ( ( rule__Maxx__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5335:1: ( ( rule__Maxx__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5335:1: ( ( rule__Maxx__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5336:1: ( rule__Maxx__Arg2Assignment_3 )
            {
             before(grammarAccess.getMaxxAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5337:1: ( rule__Maxx__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5337:2: rule__Maxx__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Maxx__Arg2Assignment_3_in_rule__Maxx__Group__3__Impl11077);
            rule__Maxx__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__3__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5355:1: rule__ReadRegisterFilter__Group__0 : rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1 ;
    public final void rule__ReadRegisterFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5359:1: ( rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5360:2: rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__0__Impl_in_rule__ReadRegisterFilter__Group__011115);
            rule__ReadRegisterFilter__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__1_in_rule__ReadRegisterFilter__Group__011118);
            rule__ReadRegisterFilter__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__0"


    // $ANTLR start "rule__ReadRegisterFilter__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5367:1: rule__ReadRegisterFilter__Group__0__Impl : ( 'rdfx' ) ;
    public final void rule__ReadRegisterFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5371:1: ( ( 'rdfx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5372:1: ( 'rdfx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5372:1: ( 'rdfx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5373:1: 'rdfx'
            {
             before(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); 
            match(input,44,FOLLOW_44_in_rule__ReadRegisterFilter__Group__0__Impl11146); 
             after(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__0__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5386:1: rule__ReadRegisterFilter__Group__1 : rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2 ;
    public final void rule__ReadRegisterFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5390:1: ( rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5391:2: rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__1__Impl_in_rule__ReadRegisterFilter__Group__111177);
            rule__ReadRegisterFilter__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__2_in_rule__ReadRegisterFilter__Group__111180);
            rule__ReadRegisterFilter__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__1"


    // $ANTLR start "rule__ReadRegisterFilter__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5398:1: rule__ReadRegisterFilter__Group__1__Impl : ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) ) ;
    public final void rule__ReadRegisterFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5402:1: ( ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5403:1: ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5403:1: ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5404:1: ( rule__ReadRegisterFilter__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5405:1: ( rule__ReadRegisterFilter__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5405:2: rule__ReadRegisterFilter__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Arg1Assignment_1_in_rule__ReadRegisterFilter__Group__1__Impl11207);
            rule__ReadRegisterFilter__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__1__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5415:1: rule__ReadRegisterFilter__Group__2 : rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3 ;
    public final void rule__ReadRegisterFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5419:1: ( rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5420:2: rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__2__Impl_in_rule__ReadRegisterFilter__Group__211237);
            rule__ReadRegisterFilter__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__3_in_rule__ReadRegisterFilter__Group__211240);
            rule__ReadRegisterFilter__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__2"


    // $ANTLR start "rule__ReadRegisterFilter__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5427:1: rule__ReadRegisterFilter__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadRegisterFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5431:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5432:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5432:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5433:1: ','
            {
             before(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__ReadRegisterFilter__Group__2__Impl11268); 
             after(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__2__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5446:1: rule__ReadRegisterFilter__Group__3 : rule__ReadRegisterFilter__Group__3__Impl ;
    public final void rule__ReadRegisterFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5450:1: ( rule__ReadRegisterFilter__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5451:2: rule__ReadRegisterFilter__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__3__Impl_in_rule__ReadRegisterFilter__Group__311299);
            rule__ReadRegisterFilter__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__3"


    // $ANTLR start "rule__ReadRegisterFilter__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5457:1: rule__ReadRegisterFilter__Group__3__Impl : ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) ) ;
    public final void rule__ReadRegisterFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5461:1: ( ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5462:1: ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5462:1: ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5463:1: ( rule__ReadRegisterFilter__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5464:1: ( rule__ReadRegisterFilter__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5464:2: rule__ReadRegisterFilter__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Arg2Assignment_3_in_rule__ReadRegisterFilter__Group__3__Impl11326);
            rule__ReadRegisterFilter__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__3__Impl"


    // $ANTLR start "rule__Mulx__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5482:1: rule__Mulx__Group__0 : rule__Mulx__Group__0__Impl rule__Mulx__Group__1 ;
    public final void rule__Mulx__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5486:1: ( rule__Mulx__Group__0__Impl rule__Mulx__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5487:2: rule__Mulx__Group__0__Impl rule__Mulx__Group__1
            {
            pushFollow(FOLLOW_rule__Mulx__Group__0__Impl_in_rule__Mulx__Group__011364);
            rule__Mulx__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mulx__Group__1_in_rule__Mulx__Group__011367);
            rule__Mulx__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__0"


    // $ANTLR start "rule__Mulx__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5494:1: rule__Mulx__Group__0__Impl : ( 'mulx' ) ;
    public final void rule__Mulx__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5498:1: ( ( 'mulx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5499:1: ( 'mulx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5499:1: ( 'mulx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5500:1: 'mulx'
            {
             before(grammarAccess.getMulxAccess().getMulxKeyword_0()); 
            match(input,45,FOLLOW_45_in_rule__Mulx__Group__0__Impl11395); 
             after(grammarAccess.getMulxAccess().getMulxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__0__Impl"


    // $ANTLR start "rule__Mulx__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5513:1: rule__Mulx__Group__1 : rule__Mulx__Group__1__Impl ;
    public final void rule__Mulx__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5517:1: ( rule__Mulx__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5518:2: rule__Mulx__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Mulx__Group__1__Impl_in_rule__Mulx__Group__111426);
            rule__Mulx__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__1"


    // $ANTLR start "rule__Mulx__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5524:1: rule__Mulx__Group__1__Impl : ( ( rule__Mulx__Arg1Assignment_1 ) ) ;
    public final void rule__Mulx__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5528:1: ( ( ( rule__Mulx__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5529:1: ( ( rule__Mulx__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5529:1: ( ( rule__Mulx__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5530:1: ( rule__Mulx__Arg1Assignment_1 )
            {
             before(grammarAccess.getMulxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5531:1: ( rule__Mulx__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5531:2: rule__Mulx__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Mulx__Arg1Assignment_1_in_rule__Mulx__Group__1__Impl11453);
            rule__Mulx__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMulxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__1__Impl"


    // $ANTLR start "rule__Ldax__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5545:1: rule__Ldax__Group__0 : rule__Ldax__Group__0__Impl rule__Ldax__Group__1 ;
    public final void rule__Ldax__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5549:1: ( rule__Ldax__Group__0__Impl rule__Ldax__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5550:2: rule__Ldax__Group__0__Impl rule__Ldax__Group__1
            {
            pushFollow(FOLLOW_rule__Ldax__Group__0__Impl_in_rule__Ldax__Group__011487);
            rule__Ldax__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Ldax__Group__1_in_rule__Ldax__Group__011490);
            rule__Ldax__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__0"


    // $ANTLR start "rule__Ldax__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5557:1: rule__Ldax__Group__0__Impl : ( 'ldax' ) ;
    public final void rule__Ldax__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5561:1: ( ( 'ldax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5562:1: ( 'ldax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5562:1: ( 'ldax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5563:1: 'ldax'
            {
             before(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); 
            match(input,46,FOLLOW_46_in_rule__Ldax__Group__0__Impl11518); 
             after(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__0__Impl"


    // $ANTLR start "rule__Ldax__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5576:1: rule__Ldax__Group__1 : rule__Ldax__Group__1__Impl ;
    public final void rule__Ldax__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5580:1: ( rule__Ldax__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5581:2: rule__Ldax__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Ldax__Group__1__Impl_in_rule__Ldax__Group__111549);
            rule__Ldax__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__1"


    // $ANTLR start "rule__Ldax__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5587:1: rule__Ldax__Group__1__Impl : ( ( rule__Ldax__Arg1Assignment_1 ) ) ;
    public final void rule__Ldax__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5591:1: ( ( ( rule__Ldax__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5592:1: ( ( rule__Ldax__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5592:1: ( ( rule__Ldax__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5593:1: ( rule__Ldax__Arg1Assignment_1 )
            {
             before(grammarAccess.getLdaxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5594:1: ( rule__Ldax__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5594:2: rule__Ldax__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Ldax__Arg1Assignment_1_in_rule__Ldax__Group__1__Impl11576);
            rule__Ldax__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLdaxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__1__Impl"


    // $ANTLR start "rule__Exp__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5608:1: rule__Exp__Group__0 : rule__Exp__Group__0__Impl rule__Exp__Group__1 ;
    public final void rule__Exp__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5612:1: ( rule__Exp__Group__0__Impl rule__Exp__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5613:2: rule__Exp__Group__0__Impl rule__Exp__Group__1
            {
            pushFollow(FOLLOW_rule__Exp__Group__0__Impl_in_rule__Exp__Group__011610);
            rule__Exp__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__1_in_rule__Exp__Group__011613);
            rule__Exp__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__0"


    // $ANTLR start "rule__Exp__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5620:1: rule__Exp__Group__0__Impl : ( 'exp' ) ;
    public final void rule__Exp__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5624:1: ( ( 'exp' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5625:1: ( 'exp' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5625:1: ( 'exp' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5626:1: 'exp'
            {
             before(grammarAccess.getExpAccess().getExpKeyword_0()); 
            match(input,47,FOLLOW_47_in_rule__Exp__Group__0__Impl11641); 
             after(grammarAccess.getExpAccess().getExpKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__0__Impl"


    // $ANTLR start "rule__Exp__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5639:1: rule__Exp__Group__1 : rule__Exp__Group__1__Impl rule__Exp__Group__2 ;
    public final void rule__Exp__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5643:1: ( rule__Exp__Group__1__Impl rule__Exp__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5644:2: rule__Exp__Group__1__Impl rule__Exp__Group__2
            {
            pushFollow(FOLLOW_rule__Exp__Group__1__Impl_in_rule__Exp__Group__111672);
            rule__Exp__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__2_in_rule__Exp__Group__111675);
            rule__Exp__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__1"


    // $ANTLR start "rule__Exp__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5651:1: rule__Exp__Group__1__Impl : ( ( rule__Exp__Arg1Assignment_1 ) ) ;
    public final void rule__Exp__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5655:1: ( ( ( rule__Exp__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5656:1: ( ( rule__Exp__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5656:1: ( ( rule__Exp__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5657:1: ( rule__Exp__Arg1Assignment_1 )
            {
             before(grammarAccess.getExpAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5658:1: ( rule__Exp__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5658:2: rule__Exp__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Exp__Arg1Assignment_1_in_rule__Exp__Group__1__Impl11702);
            rule__Exp__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__1__Impl"


    // $ANTLR start "rule__Exp__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5668:1: rule__Exp__Group__2 : rule__Exp__Group__2__Impl rule__Exp__Group__3 ;
    public final void rule__Exp__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5672:1: ( rule__Exp__Group__2__Impl rule__Exp__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5673:2: rule__Exp__Group__2__Impl rule__Exp__Group__3
            {
            pushFollow(FOLLOW_rule__Exp__Group__2__Impl_in_rule__Exp__Group__211732);
            rule__Exp__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__3_in_rule__Exp__Group__211735);
            rule__Exp__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__2"


    // $ANTLR start "rule__Exp__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5680:1: rule__Exp__Group__2__Impl : ( ',' ) ;
    public final void rule__Exp__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5684:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5685:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5685:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5686:1: ','
            {
             before(grammarAccess.getExpAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__Exp__Group__2__Impl11763); 
             after(grammarAccess.getExpAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__2__Impl"


    // $ANTLR start "rule__Exp__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5699:1: rule__Exp__Group__3 : rule__Exp__Group__3__Impl ;
    public final void rule__Exp__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5703:1: ( rule__Exp__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5704:2: rule__Exp__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Exp__Group__3__Impl_in_rule__Exp__Group__311794);
            rule__Exp__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__3"


    // $ANTLR start "rule__Exp__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5710:1: rule__Exp__Group__3__Impl : ( ( rule__Exp__Arg2Assignment_3 ) ) ;
    public final void rule__Exp__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5714:1: ( ( ( rule__Exp__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5715:1: ( ( rule__Exp__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5715:1: ( ( rule__Exp__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5716:1: ( rule__Exp__Arg2Assignment_3 )
            {
             before(grammarAccess.getExpAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5717:1: ( rule__Exp__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5717:2: rule__Exp__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Exp__Arg2Assignment_3_in_rule__Exp__Group__3__Impl11821);
            rule__Exp__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__3__Impl"


    // $ANTLR start "rule__Log__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5735:1: rule__Log__Group__0 : rule__Log__Group__0__Impl rule__Log__Group__1 ;
    public final void rule__Log__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5739:1: ( rule__Log__Group__0__Impl rule__Log__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5740:2: rule__Log__Group__0__Impl rule__Log__Group__1
            {
            pushFollow(FOLLOW_rule__Log__Group__0__Impl_in_rule__Log__Group__011859);
            rule__Log__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__1_in_rule__Log__Group__011862);
            rule__Log__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__0"


    // $ANTLR start "rule__Log__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5747:1: rule__Log__Group__0__Impl : ( 'log' ) ;
    public final void rule__Log__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5751:1: ( ( 'log' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5752:1: ( 'log' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5752:1: ( 'log' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5753:1: 'log'
            {
             before(grammarAccess.getLogAccess().getLogKeyword_0()); 
            match(input,48,FOLLOW_48_in_rule__Log__Group__0__Impl11890); 
             after(grammarAccess.getLogAccess().getLogKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__0__Impl"


    // $ANTLR start "rule__Log__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5766:1: rule__Log__Group__1 : rule__Log__Group__1__Impl rule__Log__Group__2 ;
    public final void rule__Log__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5770:1: ( rule__Log__Group__1__Impl rule__Log__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5771:2: rule__Log__Group__1__Impl rule__Log__Group__2
            {
            pushFollow(FOLLOW_rule__Log__Group__1__Impl_in_rule__Log__Group__111921);
            rule__Log__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__2_in_rule__Log__Group__111924);
            rule__Log__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__1"


    // $ANTLR start "rule__Log__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5778:1: rule__Log__Group__1__Impl : ( ( rule__Log__Arg1Assignment_1 ) ) ;
    public final void rule__Log__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5782:1: ( ( ( rule__Log__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5783:1: ( ( rule__Log__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5783:1: ( ( rule__Log__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5784:1: ( rule__Log__Arg1Assignment_1 )
            {
             before(grammarAccess.getLogAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5785:1: ( rule__Log__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5785:2: rule__Log__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Log__Arg1Assignment_1_in_rule__Log__Group__1__Impl11951);
            rule__Log__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__1__Impl"


    // $ANTLR start "rule__Log__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5795:1: rule__Log__Group__2 : rule__Log__Group__2__Impl rule__Log__Group__3 ;
    public final void rule__Log__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5799:1: ( rule__Log__Group__2__Impl rule__Log__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5800:2: rule__Log__Group__2__Impl rule__Log__Group__3
            {
            pushFollow(FOLLOW_rule__Log__Group__2__Impl_in_rule__Log__Group__211981);
            rule__Log__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__3_in_rule__Log__Group__211984);
            rule__Log__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__2"


    // $ANTLR start "rule__Log__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5807:1: rule__Log__Group__2__Impl : ( ',' ) ;
    public final void rule__Log__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5811:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5812:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5812:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5813:1: ','
            {
             before(grammarAccess.getLogAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__Log__Group__2__Impl12012); 
             after(grammarAccess.getLogAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__2__Impl"


    // $ANTLR start "rule__Log__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5826:1: rule__Log__Group__3 : rule__Log__Group__3__Impl ;
    public final void rule__Log__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5830:1: ( rule__Log__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5831:2: rule__Log__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Log__Group__3__Impl_in_rule__Log__Group__312043);
            rule__Log__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__3"


    // $ANTLR start "rule__Log__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5837:1: rule__Log__Group__3__Impl : ( ( rule__Log__Arg2Assignment_3 ) ) ;
    public final void rule__Log__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5841:1: ( ( ( rule__Log__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5842:1: ( ( rule__Log__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5842:1: ( ( rule__Log__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5843:1: ( rule__Log__Arg2Assignment_3 )
            {
             before(grammarAccess.getLogAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5844:1: ( rule__Log__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5844:2: rule__Log__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Log__Arg2Assignment_3_in_rule__Log__Group__3__Impl12070);
            rule__Log__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__3__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5862:1: rule__ScaleOffset__Group__0 : rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1 ;
    public final void rule__ScaleOffset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5866:1: ( rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5867:2: rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__0__Impl_in_rule__ScaleOffset__Group__012108);
            rule__ScaleOffset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__1_in_rule__ScaleOffset__Group__012111);
            rule__ScaleOffset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__0"


    // $ANTLR start "rule__ScaleOffset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5874:1: rule__ScaleOffset__Group__0__Impl : ( 'sof' ) ;
    public final void rule__ScaleOffset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5878:1: ( ( 'sof' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5879:1: ( 'sof' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5879:1: ( 'sof' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5880:1: 'sof'
            {
             before(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); 
            match(input,49,FOLLOW_49_in_rule__ScaleOffset__Group__0__Impl12139); 
             after(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__0__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5893:1: rule__ScaleOffset__Group__1 : rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2 ;
    public final void rule__ScaleOffset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5897:1: ( rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5898:2: rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__1__Impl_in_rule__ScaleOffset__Group__112170);
            rule__ScaleOffset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__2_in_rule__ScaleOffset__Group__112173);
            rule__ScaleOffset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__1"


    // $ANTLR start "rule__ScaleOffset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5905:1: rule__ScaleOffset__Group__1__Impl : ( ( rule__ScaleOffset__Arg1Assignment_1 ) ) ;
    public final void rule__ScaleOffset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5909:1: ( ( ( rule__ScaleOffset__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5910:1: ( ( rule__ScaleOffset__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5910:1: ( ( rule__ScaleOffset__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5911:1: ( rule__ScaleOffset__Arg1Assignment_1 )
            {
             before(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5912:1: ( rule__ScaleOffset__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5912:2: rule__ScaleOffset__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Arg1Assignment_1_in_rule__ScaleOffset__Group__1__Impl12200);
            rule__ScaleOffset__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__1__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5922:1: rule__ScaleOffset__Group__2 : rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3 ;
    public final void rule__ScaleOffset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5926:1: ( rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5927:2: rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__2__Impl_in_rule__ScaleOffset__Group__212230);
            rule__ScaleOffset__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__3_in_rule__ScaleOffset__Group__212233);
            rule__ScaleOffset__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__2"


    // $ANTLR start "rule__ScaleOffset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5934:1: rule__ScaleOffset__Group__2__Impl : ( ',' ) ;
    public final void rule__ScaleOffset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5938:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5939:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5939:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5940:1: ','
            {
             before(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__ScaleOffset__Group__2__Impl12261); 
             after(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__2__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5953:1: rule__ScaleOffset__Group__3 : rule__ScaleOffset__Group__3__Impl ;
    public final void rule__ScaleOffset__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5957:1: ( rule__ScaleOffset__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5958:2: rule__ScaleOffset__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__3__Impl_in_rule__ScaleOffset__Group__312292);
            rule__ScaleOffset__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__3"


    // $ANTLR start "rule__ScaleOffset__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5964:1: rule__ScaleOffset__Group__3__Impl : ( ( rule__ScaleOffset__Arg2Assignment_3 ) ) ;
    public final void rule__ScaleOffset__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5968:1: ( ( ( rule__ScaleOffset__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5969:1: ( ( rule__ScaleOffset__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5969:1: ( ( rule__ScaleOffset__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5970:1: ( rule__ScaleOffset__Arg2Assignment_3 )
            {
             before(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5971:1: ( rule__ScaleOffset__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5971:2: rule__ScaleOffset__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Arg2Assignment_3_in_rule__ScaleOffset__Group__3__Impl12319);
            rule__ScaleOffset__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__3__Impl"


    // $ANTLR start "rule__WriteDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5989:1: rule__WriteDelay__Group__0 : rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1 ;
    public final void rule__WriteDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5993:1: ( rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5994:2: rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__0__Impl_in_rule__WriteDelay__Group__012357);
            rule__WriteDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__1_in_rule__WriteDelay__Group__012360);
            rule__WriteDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__0"


    // $ANTLR start "rule__WriteDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6001:1: rule__WriteDelay__Group__0__Impl : ( 'wra' ) ;
    public final void rule__WriteDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6005:1: ( ( 'wra' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6006:1: ( 'wra' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6006:1: ( 'wra' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6007:1: 'wra'
            {
             before(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); 
            match(input,50,FOLLOW_50_in_rule__WriteDelay__Group__0__Impl12388); 
             after(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__0__Impl"


    // $ANTLR start "rule__WriteDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6020:1: rule__WriteDelay__Group__1 : rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2 ;
    public final void rule__WriteDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6024:1: ( rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6025:2: rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__1__Impl_in_rule__WriteDelay__Group__112419);
            rule__WriteDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__2_in_rule__WriteDelay__Group__112422);
            rule__WriteDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__1"


    // $ANTLR start "rule__WriteDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6032:1: rule__WriteDelay__Group__1__Impl : ( ( rule__WriteDelay__Arg1Assignment_1 ) ) ;
    public final void rule__WriteDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6036:1: ( ( ( rule__WriteDelay__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6037:1: ( ( rule__WriteDelay__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6037:1: ( ( rule__WriteDelay__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6038:1: ( rule__WriteDelay__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6039:1: ( rule__WriteDelay__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6039:2: rule__WriteDelay__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteDelay__Arg1Assignment_1_in_rule__WriteDelay__Group__1__Impl12449);
            rule__WriteDelay__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__1__Impl"


    // $ANTLR start "rule__WriteDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6049:1: rule__WriteDelay__Group__2 : rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3 ;
    public final void rule__WriteDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6053:1: ( rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6054:2: rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__2__Impl_in_rule__WriteDelay__Group__212479);
            rule__WriteDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__3_in_rule__WriteDelay__Group__212482);
            rule__WriteDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__2"


    // $ANTLR start "rule__WriteDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6061:1: rule__WriteDelay__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6065:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6066:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6066:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6067:1: ','
            {
             before(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__WriteDelay__Group__2__Impl12510); 
             after(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__2__Impl"


    // $ANTLR start "rule__WriteDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6080:1: rule__WriteDelay__Group__3 : rule__WriteDelay__Group__3__Impl ;
    public final void rule__WriteDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6084:1: ( rule__WriteDelay__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6085:2: rule__WriteDelay__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__3__Impl_in_rule__WriteDelay__Group__312541);
            rule__WriteDelay__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__3"


    // $ANTLR start "rule__WriteDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6091:1: rule__WriteDelay__Group__3__Impl : ( ( rule__WriteDelay__Arg2Assignment_3 ) ) ;
    public final void rule__WriteDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6095:1: ( ( ( rule__WriteDelay__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6096:1: ( ( rule__WriteDelay__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6096:1: ( ( rule__WriteDelay__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6097:1: ( rule__WriteDelay__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6098:1: ( rule__WriteDelay__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6098:2: rule__WriteDelay__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteDelay__Arg2Assignment_3_in_rule__WriteDelay__Group__3__Impl12568);
            rule__WriteDelay__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__3__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6116:1: rule__WriteAllpass__Group__0 : rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1 ;
    public final void rule__WriteAllpass__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6120:1: ( rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6121:2: rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__0__Impl_in_rule__WriteAllpass__Group__012606);
            rule__WriteAllpass__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__1_in_rule__WriteAllpass__Group__012609);
            rule__WriteAllpass__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__0"


    // $ANTLR start "rule__WriteAllpass__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6128:1: rule__WriteAllpass__Group__0__Impl : ( 'wrap' ) ;
    public final void rule__WriteAllpass__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6132:1: ( ( 'wrap' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6133:1: ( 'wrap' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6133:1: ( 'wrap' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6134:1: 'wrap'
            {
             before(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); 
            match(input,51,FOLLOW_51_in_rule__WriteAllpass__Group__0__Impl12637); 
             after(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__0__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6147:1: rule__WriteAllpass__Group__1 : rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2 ;
    public final void rule__WriteAllpass__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6151:1: ( rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6152:2: rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__1__Impl_in_rule__WriteAllpass__Group__112668);
            rule__WriteAllpass__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__2_in_rule__WriteAllpass__Group__112671);
            rule__WriteAllpass__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__1"


    // $ANTLR start "rule__WriteAllpass__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6159:1: rule__WriteAllpass__Group__1__Impl : ( ( rule__WriteAllpass__Arg1Assignment_1 ) ) ;
    public final void rule__WriteAllpass__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6163:1: ( ( ( rule__WriteAllpass__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6164:1: ( ( rule__WriteAllpass__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6164:1: ( ( rule__WriteAllpass__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6165:1: ( rule__WriteAllpass__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6166:1: ( rule__WriteAllpass__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6166:2: rule__WriteAllpass__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Arg1Assignment_1_in_rule__WriteAllpass__Group__1__Impl12698);
            rule__WriteAllpass__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__1__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6176:1: rule__WriteAllpass__Group__2 : rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3 ;
    public final void rule__WriteAllpass__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6180:1: ( rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6181:2: rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__2__Impl_in_rule__WriteAllpass__Group__212728);
            rule__WriteAllpass__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__3_in_rule__WriteAllpass__Group__212731);
            rule__WriteAllpass__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__2"


    // $ANTLR start "rule__WriteAllpass__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6188:1: rule__WriteAllpass__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteAllpass__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6192:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6193:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6193:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6194:1: ','
            {
             before(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__WriteAllpass__Group__2__Impl12759); 
             after(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__2__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6207:1: rule__WriteAllpass__Group__3 : rule__WriteAllpass__Group__3__Impl ;
    public final void rule__WriteAllpass__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6211:1: ( rule__WriteAllpass__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6212:2: rule__WriteAllpass__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__3__Impl_in_rule__WriteAllpass__Group__312790);
            rule__WriteAllpass__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__3"


    // $ANTLR start "rule__WriteAllpass__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6218:1: rule__WriteAllpass__Group__3__Impl : ( ( rule__WriteAllpass__Arg2Assignment_3 ) ) ;
    public final void rule__WriteAllpass__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6222:1: ( ( ( rule__WriteAllpass__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6223:1: ( ( rule__WriteAllpass__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6223:1: ( ( rule__WriteAllpass__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6224:1: ( rule__WriteAllpass__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6225:1: ( rule__WriteAllpass__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6225:2: rule__WriteAllpass__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Arg2Assignment_3_in_rule__WriteAllpass__Group__3__Impl12817);
            rule__WriteAllpass__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__3__Impl"


    // $ANTLR start "rule__ReadDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6243:1: rule__ReadDelay__Group__0 : rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1 ;
    public final void rule__ReadDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6247:1: ( rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6248:2: rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__0__Impl_in_rule__ReadDelay__Group__012855);
            rule__ReadDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__1_in_rule__ReadDelay__Group__012858);
            rule__ReadDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__0"


    // $ANTLR start "rule__ReadDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6255:1: rule__ReadDelay__Group__0__Impl : ( 'rda' ) ;
    public final void rule__ReadDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6259:1: ( ( 'rda' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6260:1: ( 'rda' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6260:1: ( 'rda' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6261:1: 'rda'
            {
             before(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); 
            match(input,52,FOLLOW_52_in_rule__ReadDelay__Group__0__Impl12886); 
             after(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__0__Impl"


    // $ANTLR start "rule__ReadDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6274:1: rule__ReadDelay__Group__1 : rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2 ;
    public final void rule__ReadDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6278:1: ( rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6279:2: rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__1__Impl_in_rule__ReadDelay__Group__112917);
            rule__ReadDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__2_in_rule__ReadDelay__Group__112920);
            rule__ReadDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__1"


    // $ANTLR start "rule__ReadDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6286:1: rule__ReadDelay__Group__1__Impl : ( ( rule__ReadDelay__Arg1Assignment_1 ) ) ;
    public final void rule__ReadDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6290:1: ( ( ( rule__ReadDelay__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6291:1: ( ( rule__ReadDelay__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6291:1: ( ( rule__ReadDelay__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6292:1: ( rule__ReadDelay__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6293:1: ( rule__ReadDelay__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6293:2: rule__ReadDelay__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadDelay__Arg1Assignment_1_in_rule__ReadDelay__Group__1__Impl12947);
            rule__ReadDelay__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__1__Impl"


    // $ANTLR start "rule__ReadDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6303:1: rule__ReadDelay__Group__2 : rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3 ;
    public final void rule__ReadDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6307:1: ( rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6308:2: rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__2__Impl_in_rule__ReadDelay__Group__212977);
            rule__ReadDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__3_in_rule__ReadDelay__Group__212980);
            rule__ReadDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__2"


    // $ANTLR start "rule__ReadDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6315:1: rule__ReadDelay__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6319:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6320:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6320:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6321:1: ','
            {
             before(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__ReadDelay__Group__2__Impl13008); 
             after(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__2__Impl"


    // $ANTLR start "rule__ReadDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6334:1: rule__ReadDelay__Group__3 : rule__ReadDelay__Group__3__Impl ;
    public final void rule__ReadDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6338:1: ( rule__ReadDelay__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6339:2: rule__ReadDelay__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__3__Impl_in_rule__ReadDelay__Group__313039);
            rule__ReadDelay__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__3"


    // $ANTLR start "rule__ReadDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6345:1: rule__ReadDelay__Group__3__Impl : ( ( rule__ReadDelay__Arg2Assignment_3 ) ) ;
    public final void rule__ReadDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6349:1: ( ( ( rule__ReadDelay__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6350:1: ( ( rule__ReadDelay__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6350:1: ( ( rule__ReadDelay__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6351:1: ( rule__ReadDelay__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6352:1: ( rule__ReadDelay__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6352:2: rule__ReadDelay__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadDelay__Arg2Assignment_3_in_rule__ReadDelay__Group__3__Impl13066);
            rule__ReadDelay__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__3__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6370:1: rule__LoadSinLFO__Group__0 : rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1 ;
    public final void rule__LoadSinLFO__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6374:1: ( rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6375:2: rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__0__Impl_in_rule__LoadSinLFO__Group__013104);
            rule__LoadSinLFO__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__1_in_rule__LoadSinLFO__Group__013107);
            rule__LoadSinLFO__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__0"


    // $ANTLR start "rule__LoadSinLFO__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6382:1: rule__LoadSinLFO__Group__0__Impl : ( 'wlds' ) ;
    public final void rule__LoadSinLFO__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6386:1: ( ( 'wlds' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6387:1: ( 'wlds' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6387:1: ( 'wlds' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6388:1: 'wlds'
            {
             before(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); 
            match(input,53,FOLLOW_53_in_rule__LoadSinLFO__Group__0__Impl13135); 
             after(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__0__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6401:1: rule__LoadSinLFO__Group__1 : rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2 ;
    public final void rule__LoadSinLFO__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6405:1: ( rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6406:2: rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__1__Impl_in_rule__LoadSinLFO__Group__113166);
            rule__LoadSinLFO__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__2_in_rule__LoadSinLFO__Group__113169);
            rule__LoadSinLFO__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__1"


    // $ANTLR start "rule__LoadSinLFO__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6413:1: rule__LoadSinLFO__Group__1__Impl : ( ( rule__LoadSinLFO__Arg1Assignment_1 ) ) ;
    public final void rule__LoadSinLFO__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6417:1: ( ( ( rule__LoadSinLFO__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6418:1: ( ( rule__LoadSinLFO__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6418:1: ( ( rule__LoadSinLFO__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6419:1: ( rule__LoadSinLFO__Arg1Assignment_1 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6420:1: ( rule__LoadSinLFO__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6420:2: rule__LoadSinLFO__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg1Assignment_1_in_rule__LoadSinLFO__Group__1__Impl13196);
            rule__LoadSinLFO__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__1__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6430:1: rule__LoadSinLFO__Group__2 : rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3 ;
    public final void rule__LoadSinLFO__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6434:1: ( rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6435:2: rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__2__Impl_in_rule__LoadSinLFO__Group__213226);
            rule__LoadSinLFO__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__3_in_rule__LoadSinLFO__Group__213229);
            rule__LoadSinLFO__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__2"


    // $ANTLR start "rule__LoadSinLFO__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6442:1: rule__LoadSinLFO__Group__2__Impl : ( ',' ) ;
    public final void rule__LoadSinLFO__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6446:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6447:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6447:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6448:1: ','
            {
             before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__LoadSinLFO__Group__2__Impl13257); 
             after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__2__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6461:1: rule__LoadSinLFO__Group__3 : rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4 ;
    public final void rule__LoadSinLFO__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6465:1: ( rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6466:2: rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__3__Impl_in_rule__LoadSinLFO__Group__313288);
            rule__LoadSinLFO__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__4_in_rule__LoadSinLFO__Group__313291);
            rule__LoadSinLFO__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__3"


    // $ANTLR start "rule__LoadSinLFO__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6473:1: rule__LoadSinLFO__Group__3__Impl : ( ( rule__LoadSinLFO__Arg2Assignment_3 ) ) ;
    public final void rule__LoadSinLFO__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6477:1: ( ( ( rule__LoadSinLFO__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6478:1: ( ( rule__LoadSinLFO__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6478:1: ( ( rule__LoadSinLFO__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6479:1: ( rule__LoadSinLFO__Arg2Assignment_3 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6480:1: ( rule__LoadSinLFO__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6480:2: rule__LoadSinLFO__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg2Assignment_3_in_rule__LoadSinLFO__Group__3__Impl13318);
            rule__LoadSinLFO__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__3__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6490:1: rule__LoadSinLFO__Group__4 : rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5 ;
    public final void rule__LoadSinLFO__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6494:1: ( rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6495:2: rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__4__Impl_in_rule__LoadSinLFO__Group__413348);
            rule__LoadSinLFO__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__5_in_rule__LoadSinLFO__Group__413351);
            rule__LoadSinLFO__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__4"


    // $ANTLR start "rule__LoadSinLFO__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6502:1: rule__LoadSinLFO__Group__4__Impl : ( ',' ) ;
    public final void rule__LoadSinLFO__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6506:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6507:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6507:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6508:1: ','
            {
             before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); 
            match(input,39,FOLLOW_39_in_rule__LoadSinLFO__Group__4__Impl13379); 
             after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__4__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6521:1: rule__LoadSinLFO__Group__5 : rule__LoadSinLFO__Group__5__Impl ;
    public final void rule__LoadSinLFO__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6525:1: ( rule__LoadSinLFO__Group__5__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6526:2: rule__LoadSinLFO__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__5__Impl_in_rule__LoadSinLFO__Group__513410);
            rule__LoadSinLFO__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__5"


    // $ANTLR start "rule__LoadSinLFO__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6532:1: rule__LoadSinLFO__Group__5__Impl : ( ( rule__LoadSinLFO__Arg3Assignment_5 ) ) ;
    public final void rule__LoadSinLFO__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6536:1: ( ( ( rule__LoadSinLFO__Arg3Assignment_5 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6537:1: ( ( rule__LoadSinLFO__Arg3Assignment_5 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6537:1: ( ( rule__LoadSinLFO__Arg3Assignment_5 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6538:1: ( rule__LoadSinLFO__Arg3Assignment_5 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6539:1: ( rule__LoadSinLFO__Arg3Assignment_5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6539:2: rule__LoadSinLFO__Arg3Assignment_5
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg3Assignment_5_in_rule__LoadSinLFO__Group__5__Impl13437);
            rule__LoadSinLFO__Arg3Assignment_5();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__5__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6561:1: rule__LoadRampLFO__Group__0 : rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1 ;
    public final void rule__LoadRampLFO__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6565:1: ( rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6566:2: rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__0__Impl_in_rule__LoadRampLFO__Group__013479);
            rule__LoadRampLFO__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__1_in_rule__LoadRampLFO__Group__013482);
            rule__LoadRampLFO__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__0"


    // $ANTLR start "rule__LoadRampLFO__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6573:1: rule__LoadRampLFO__Group__0__Impl : ( 'wldr' ) ;
    public final void rule__LoadRampLFO__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6577:1: ( ( 'wldr' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6578:1: ( 'wldr' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6578:1: ( 'wldr' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6579:1: 'wldr'
            {
             before(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); 
            match(input,54,FOLLOW_54_in_rule__LoadRampLFO__Group__0__Impl13510); 
             after(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__0__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6592:1: rule__LoadRampLFO__Group__1 : rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2 ;
    public final void rule__LoadRampLFO__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6596:1: ( rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6597:2: rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__1__Impl_in_rule__LoadRampLFO__Group__113541);
            rule__LoadRampLFO__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__2_in_rule__LoadRampLFO__Group__113544);
            rule__LoadRampLFO__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__1"


    // $ANTLR start "rule__LoadRampLFO__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6604:1: rule__LoadRampLFO__Group__1__Impl : ( ( rule__LoadRampLFO__Arg1Assignment_1 ) ) ;
    public final void rule__LoadRampLFO__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6608:1: ( ( ( rule__LoadRampLFO__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6609:1: ( ( rule__LoadRampLFO__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6609:1: ( ( rule__LoadRampLFO__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6610:1: ( rule__LoadRampLFO__Arg1Assignment_1 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6611:1: ( rule__LoadRampLFO__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6611:2: rule__LoadRampLFO__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg1Assignment_1_in_rule__LoadRampLFO__Group__1__Impl13571);
            rule__LoadRampLFO__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__1__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6621:1: rule__LoadRampLFO__Group__2 : rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3 ;
    public final void rule__LoadRampLFO__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6625:1: ( rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6626:2: rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__2__Impl_in_rule__LoadRampLFO__Group__213601);
            rule__LoadRampLFO__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__3_in_rule__LoadRampLFO__Group__213604);
            rule__LoadRampLFO__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__2"


    // $ANTLR start "rule__LoadRampLFO__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6633:1: rule__LoadRampLFO__Group__2__Impl : ( ',' ) ;
    public final void rule__LoadRampLFO__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6637:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6638:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6638:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6639:1: ','
            {
             before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__LoadRampLFO__Group__2__Impl13632); 
             after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__2__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6652:1: rule__LoadRampLFO__Group__3 : rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4 ;
    public final void rule__LoadRampLFO__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6656:1: ( rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6657:2: rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__3__Impl_in_rule__LoadRampLFO__Group__313663);
            rule__LoadRampLFO__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__4_in_rule__LoadRampLFO__Group__313666);
            rule__LoadRampLFO__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__3"


    // $ANTLR start "rule__LoadRampLFO__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6664:1: rule__LoadRampLFO__Group__3__Impl : ( ( rule__LoadRampLFO__Arg2Assignment_3 ) ) ;
    public final void rule__LoadRampLFO__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6668:1: ( ( ( rule__LoadRampLFO__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6669:1: ( ( rule__LoadRampLFO__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6669:1: ( ( rule__LoadRampLFO__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6670:1: ( rule__LoadRampLFO__Arg2Assignment_3 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6671:1: ( rule__LoadRampLFO__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6671:2: rule__LoadRampLFO__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg2Assignment_3_in_rule__LoadRampLFO__Group__3__Impl13693);
            rule__LoadRampLFO__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__3__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6681:1: rule__LoadRampLFO__Group__4 : rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5 ;
    public final void rule__LoadRampLFO__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6685:1: ( rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6686:2: rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__4__Impl_in_rule__LoadRampLFO__Group__413723);
            rule__LoadRampLFO__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__5_in_rule__LoadRampLFO__Group__413726);
            rule__LoadRampLFO__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__4"


    // $ANTLR start "rule__LoadRampLFO__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6693:1: rule__LoadRampLFO__Group__4__Impl : ( ',' ) ;
    public final void rule__LoadRampLFO__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6697:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6698:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6698:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6699:1: ','
            {
             before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); 
            match(input,39,FOLLOW_39_in_rule__LoadRampLFO__Group__4__Impl13754); 
             after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__4__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6712:1: rule__LoadRampLFO__Group__5 : rule__LoadRampLFO__Group__5__Impl ;
    public final void rule__LoadRampLFO__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6716:1: ( rule__LoadRampLFO__Group__5__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6717:2: rule__LoadRampLFO__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__5__Impl_in_rule__LoadRampLFO__Group__513785);
            rule__LoadRampLFO__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__5"


    // $ANTLR start "rule__LoadRampLFO__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6723:1: rule__LoadRampLFO__Group__5__Impl : ( ( rule__LoadRampLFO__Arg3Assignment_5 ) ) ;
    public final void rule__LoadRampLFO__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6727:1: ( ( ( rule__LoadRampLFO__Arg3Assignment_5 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6728:1: ( ( rule__LoadRampLFO__Arg3Assignment_5 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6728:1: ( ( rule__LoadRampLFO__Arg3Assignment_5 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6729:1: ( rule__LoadRampLFO__Arg3Assignment_5 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6730:1: ( rule__LoadRampLFO__Arg3Assignment_5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6730:2: rule__LoadRampLFO__Arg3Assignment_5
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg3Assignment_5_in_rule__LoadRampLFO__Group__5__Impl13812);
            rule__LoadRampLFO__Arg3Assignment_5();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__5__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6752:1: rule__ChorusReadDelay__Group__0 : rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1 ;
    public final void rule__ChorusReadDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6756:1: ( rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6757:2: rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__0__Impl_in_rule__ChorusReadDelay__Group__013854);
            rule__ChorusReadDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__1_in_rule__ChorusReadDelay__Group__013857);
            rule__ChorusReadDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__0"


    // $ANTLR start "rule__ChorusReadDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6764:1: rule__ChorusReadDelay__Group__0__Impl : ( 'cho rda' ) ;
    public final void rule__ChorusReadDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6768:1: ( ( 'cho rda' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6769:1: ( 'cho rda' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6769:1: ( 'cho rda' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6770:1: 'cho rda'
            {
             before(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); 
            match(input,55,FOLLOW_55_in_rule__ChorusReadDelay__Group__0__Impl13885); 
             after(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__0__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6783:1: rule__ChorusReadDelay__Group__1 : rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2 ;
    public final void rule__ChorusReadDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6787:1: ( rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6788:2: rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__1__Impl_in_rule__ChorusReadDelay__Group__113916);
            rule__ChorusReadDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__2_in_rule__ChorusReadDelay__Group__113919);
            rule__ChorusReadDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__1"


    // $ANTLR start "rule__ChorusReadDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6795:1: rule__ChorusReadDelay__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6799:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6800:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6800:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6801:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); 
            match(input,39,FOLLOW_39_in_rule__ChorusReadDelay__Group__1__Impl13947); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__1__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6814:1: rule__ChorusReadDelay__Group__2 : rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3 ;
    public final void rule__ChorusReadDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6818:1: ( rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6819:2: rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__2__Impl_in_rule__ChorusReadDelay__Group__213978);
            rule__ChorusReadDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__3_in_rule__ChorusReadDelay__Group__213981);
            rule__ChorusReadDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__2"


    // $ANTLR start "rule__ChorusReadDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6826:1: rule__ChorusReadDelay__Group__2__Impl : ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusReadDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6830:1: ( ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6831:1: ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6831:1: ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6832:1: ( rule__ChorusReadDelay__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6833:1: ( rule__ChorusReadDelay__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6833:2: rule__ChorusReadDelay__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg1Assignment_2_in_rule__ChorusReadDelay__Group__2__Impl14008);
            rule__ChorusReadDelay__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__2__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6843:1: rule__ChorusReadDelay__Group__3 : rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4 ;
    public final void rule__ChorusReadDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6847:1: ( rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6848:2: rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__3__Impl_in_rule__ChorusReadDelay__Group__314038);
            rule__ChorusReadDelay__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__4_in_rule__ChorusReadDelay__Group__314041);
            rule__ChorusReadDelay__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__3"


    // $ANTLR start "rule__ChorusReadDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6855:1: rule__ChorusReadDelay__Group__3__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6859:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6860:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6860:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6861:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); 
            match(input,39,FOLLOW_39_in_rule__ChorusReadDelay__Group__3__Impl14069); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__3__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6874:1: rule__ChorusReadDelay__Group__4 : rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5 ;
    public final void rule__ChorusReadDelay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6878:1: ( rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6879:2: rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__4__Impl_in_rule__ChorusReadDelay__Group__414100);
            rule__ChorusReadDelay__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__5_in_rule__ChorusReadDelay__Group__414103);
            rule__ChorusReadDelay__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__4"


    // $ANTLR start "rule__ChorusReadDelay__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6886:1: rule__ChorusReadDelay__Group__4__Impl : ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) ) ;
    public final void rule__ChorusReadDelay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6890:1: ( ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6891:1: ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6891:1: ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6892:1: ( rule__ChorusReadDelay__Arg2Assignment_4 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6893:1: ( rule__ChorusReadDelay__Arg2Assignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6893:2: rule__ChorusReadDelay__Arg2Assignment_4
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg2Assignment_4_in_rule__ChorusReadDelay__Group__4__Impl14130);
            rule__ChorusReadDelay__Arg2Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__4__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6903:1: rule__ChorusReadDelay__Group__5 : rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6 ;
    public final void rule__ChorusReadDelay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6907:1: ( rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6908:2: rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__5__Impl_in_rule__ChorusReadDelay__Group__514160);
            rule__ChorusReadDelay__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__6_in_rule__ChorusReadDelay__Group__514163);
            rule__ChorusReadDelay__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__5"


    // $ANTLR start "rule__ChorusReadDelay__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6915:1: rule__ChorusReadDelay__Group__5__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6919:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6920:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6920:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6921:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); 
            match(input,39,FOLLOW_39_in_rule__ChorusReadDelay__Group__5__Impl14191); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__5__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6934:1: rule__ChorusReadDelay__Group__6 : rule__ChorusReadDelay__Group__6__Impl ;
    public final void rule__ChorusReadDelay__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6938:1: ( rule__ChorusReadDelay__Group__6__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6939:2: rule__ChorusReadDelay__Group__6__Impl
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__6__Impl_in_rule__ChorusReadDelay__Group__614222);
            rule__ChorusReadDelay__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__6"


    // $ANTLR start "rule__ChorusReadDelay__Group__6__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6945:1: rule__ChorusReadDelay__Group__6__Impl : ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) ) ;
    public final void rule__ChorusReadDelay__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6949:1: ( ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6950:1: ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6950:1: ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6951:1: ( rule__ChorusReadDelay__Arg3Assignment_6 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6952:1: ( rule__ChorusReadDelay__Arg3Assignment_6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6952:2: rule__ChorusReadDelay__Arg3Assignment_6
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg3Assignment_6_in_rule__ChorusReadDelay__Group__6__Impl14249);
            rule__ChorusReadDelay__Arg3Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__6__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6976:1: rule__ChorusReadValue__Group__0 : rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1 ;
    public final void rule__ChorusReadValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6980:1: ( rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6981:2: rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__0__Impl_in_rule__ChorusReadValue__Group__014293);
            rule__ChorusReadValue__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadValue__Group__1_in_rule__ChorusReadValue__Group__014296);
            rule__ChorusReadValue__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__0"


    // $ANTLR start "rule__ChorusReadValue__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6988:1: rule__ChorusReadValue__Group__0__Impl : ( 'cho rdal' ) ;
    public final void rule__ChorusReadValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6992:1: ( ( 'cho rdal' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6993:1: ( 'cho rdal' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6993:1: ( 'cho rdal' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6994:1: 'cho rdal'
            {
             before(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); 
            match(input,56,FOLLOW_56_in_rule__ChorusReadValue__Group__0__Impl14324); 
             after(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__0__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7007:1: rule__ChorusReadValue__Group__1 : rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2 ;
    public final void rule__ChorusReadValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7011:1: ( rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7012:2: rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__1__Impl_in_rule__ChorusReadValue__Group__114355);
            rule__ChorusReadValue__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadValue__Group__2_in_rule__ChorusReadValue__Group__114358);
            rule__ChorusReadValue__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__1"


    // $ANTLR start "rule__ChorusReadValue__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7019:1: rule__ChorusReadValue__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusReadValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7023:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7024:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7024:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7025:1: ','
            {
             before(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); 
            match(input,39,FOLLOW_39_in_rule__ChorusReadValue__Group__1__Impl14386); 
             after(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__1__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7038:1: rule__ChorusReadValue__Group__2 : rule__ChorusReadValue__Group__2__Impl ;
    public final void rule__ChorusReadValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7042:1: ( rule__ChorusReadValue__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7043:2: rule__ChorusReadValue__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__2__Impl_in_rule__ChorusReadValue__Group__214417);
            rule__ChorusReadValue__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__2"


    // $ANTLR start "rule__ChorusReadValue__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7049:1: rule__ChorusReadValue__Group__2__Impl : ( ( rule__ChorusReadValue__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusReadValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7053:1: ( ( ( rule__ChorusReadValue__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7054:1: ( ( rule__ChorusReadValue__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7054:1: ( ( rule__ChorusReadValue__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7055:1: ( rule__ChorusReadValue__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7056:1: ( rule__ChorusReadValue__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7056:2: rule__ChorusReadValue__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Arg1Assignment_2_in_rule__ChorusReadValue__Group__2__Impl14444);
            rule__ChorusReadValue__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__2__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7072:1: rule__ChorusScaleOffset__Group__0 : rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1 ;
    public final void rule__ChorusScaleOffset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7076:1: ( rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7077:2: rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__0__Impl_in_rule__ChorusScaleOffset__Group__014480);
            rule__ChorusScaleOffset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__1_in_rule__ChorusScaleOffset__Group__014483);
            rule__ChorusScaleOffset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__0"


    // $ANTLR start "rule__ChorusScaleOffset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7084:1: rule__ChorusScaleOffset__Group__0__Impl : ( 'cho sof' ) ;
    public final void rule__ChorusScaleOffset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7088:1: ( ( 'cho sof' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7089:1: ( 'cho sof' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7089:1: ( 'cho sof' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7090:1: 'cho sof'
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); 
            match(input,57,FOLLOW_57_in_rule__ChorusScaleOffset__Group__0__Impl14511); 
             after(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__0__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7103:1: rule__ChorusScaleOffset__Group__1 : rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2 ;
    public final void rule__ChorusScaleOffset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7107:1: ( rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7108:2: rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__1__Impl_in_rule__ChorusScaleOffset__Group__114542);
            rule__ChorusScaleOffset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__2_in_rule__ChorusScaleOffset__Group__114545);
            rule__ChorusScaleOffset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__1"


    // $ANTLR start "rule__ChorusScaleOffset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7115:1: rule__ChorusScaleOffset__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7119:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7120:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7120:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7121:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); 
            match(input,39,FOLLOW_39_in_rule__ChorusScaleOffset__Group__1__Impl14573); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__1__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7134:1: rule__ChorusScaleOffset__Group__2 : rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3 ;
    public final void rule__ChorusScaleOffset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7138:1: ( rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7139:2: rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__2__Impl_in_rule__ChorusScaleOffset__Group__214604);
            rule__ChorusScaleOffset__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__3_in_rule__ChorusScaleOffset__Group__214607);
            rule__ChorusScaleOffset__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__2"


    // $ANTLR start "rule__ChorusScaleOffset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7146:1: rule__ChorusScaleOffset__Group__2__Impl : ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusScaleOffset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7150:1: ( ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7151:1: ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7151:1: ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7152:1: ( rule__ChorusScaleOffset__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7153:1: ( rule__ChorusScaleOffset__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7153:2: rule__ChorusScaleOffset__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg1Assignment_2_in_rule__ChorusScaleOffset__Group__2__Impl14634);
            rule__ChorusScaleOffset__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__2__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7163:1: rule__ChorusScaleOffset__Group__3 : rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4 ;
    public final void rule__ChorusScaleOffset__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7167:1: ( rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7168:2: rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__3__Impl_in_rule__ChorusScaleOffset__Group__314664);
            rule__ChorusScaleOffset__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__4_in_rule__ChorusScaleOffset__Group__314667);
            rule__ChorusScaleOffset__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__3"


    // $ANTLR start "rule__ChorusScaleOffset__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7175:1: rule__ChorusScaleOffset__Group__3__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7179:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7180:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7180:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7181:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); 
            match(input,39,FOLLOW_39_in_rule__ChorusScaleOffset__Group__3__Impl14695); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__3__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7194:1: rule__ChorusScaleOffset__Group__4 : rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5 ;
    public final void rule__ChorusScaleOffset__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7198:1: ( rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7199:2: rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__4__Impl_in_rule__ChorusScaleOffset__Group__414726);
            rule__ChorusScaleOffset__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__5_in_rule__ChorusScaleOffset__Group__414729);
            rule__ChorusScaleOffset__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__4"


    // $ANTLR start "rule__ChorusScaleOffset__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7206:1: rule__ChorusScaleOffset__Group__4__Impl : ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) ) ;
    public final void rule__ChorusScaleOffset__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7210:1: ( ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7211:1: ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7211:1: ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7212:1: ( rule__ChorusScaleOffset__Arg2Assignment_4 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7213:1: ( rule__ChorusScaleOffset__Arg2Assignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7213:2: rule__ChorusScaleOffset__Arg2Assignment_4
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg2Assignment_4_in_rule__ChorusScaleOffset__Group__4__Impl14756);
            rule__ChorusScaleOffset__Arg2Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__4__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7223:1: rule__ChorusScaleOffset__Group__5 : rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6 ;
    public final void rule__ChorusScaleOffset__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7227:1: ( rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7228:2: rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__5__Impl_in_rule__ChorusScaleOffset__Group__514786);
            rule__ChorusScaleOffset__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__6_in_rule__ChorusScaleOffset__Group__514789);
            rule__ChorusScaleOffset__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__5"


    // $ANTLR start "rule__ChorusScaleOffset__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7235:1: rule__ChorusScaleOffset__Group__5__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7239:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7240:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7240:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7241:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); 
            match(input,39,FOLLOW_39_in_rule__ChorusScaleOffset__Group__5__Impl14817); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__5__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7254:1: rule__ChorusScaleOffset__Group__6 : rule__ChorusScaleOffset__Group__6__Impl ;
    public final void rule__ChorusScaleOffset__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7258:1: ( rule__ChorusScaleOffset__Group__6__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7259:2: rule__ChorusScaleOffset__Group__6__Impl
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__6__Impl_in_rule__ChorusScaleOffset__Group__614848);
            rule__ChorusScaleOffset__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__6"


    // $ANTLR start "rule__ChorusScaleOffset__Group__6__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7265:1: rule__ChorusScaleOffset__Group__6__Impl : ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) ) ;
    public final void rule__ChorusScaleOffset__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7269:1: ( ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7270:1: ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7270:1: ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7271:1: ( rule__ChorusScaleOffset__Arg3Assignment_6 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7272:1: ( rule__ChorusScaleOffset__Arg3Assignment_6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7272:2: rule__ChorusScaleOffset__Arg3Assignment_6
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg3Assignment_6_in_rule__ChorusScaleOffset__Group__6__Impl14875);
            rule__ChorusScaleOffset__Arg3Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__6__Impl"


    // $ANTLR start "rule__ReadDelayPointer__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7296:1: rule__ReadDelayPointer__Group__0 : rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1 ;
    public final void rule__ReadDelayPointer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7300:1: ( rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7301:2: rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__0__Impl_in_rule__ReadDelayPointer__Group__014919);
            rule__ReadDelayPointer__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__1_in_rule__ReadDelayPointer__Group__014922);
            rule__ReadDelayPointer__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__0"


    // $ANTLR start "rule__ReadDelayPointer__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7308:1: rule__ReadDelayPointer__Group__0__Impl : ( 'rmpa' ) ;
    public final void rule__ReadDelayPointer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7312:1: ( ( 'rmpa' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7313:1: ( 'rmpa' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7313:1: ( 'rmpa' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7314:1: 'rmpa'
            {
             before(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); 
            match(input,58,FOLLOW_58_in_rule__ReadDelayPointer__Group__0__Impl14950); 
             after(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__0__Impl"


    // $ANTLR start "rule__ReadDelayPointer__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7327:1: rule__ReadDelayPointer__Group__1 : rule__ReadDelayPointer__Group__1__Impl ;
    public final void rule__ReadDelayPointer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7331:1: ( rule__ReadDelayPointer__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7332:2: rule__ReadDelayPointer__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__1__Impl_in_rule__ReadDelayPointer__Group__114981);
            rule__ReadDelayPointer__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__1"


    // $ANTLR start "rule__ReadDelayPointer__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7338:1: rule__ReadDelayPointer__Group__1__Impl : ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) ) ;
    public final void rule__ReadDelayPointer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7342:1: ( ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7343:1: ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7343:1: ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7344:1: ( rule__ReadDelayPointer__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7345:1: ( rule__ReadDelayPointer__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7345:2: rule__ReadDelayPointer__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Arg1Assignment_1_in_rule__ReadDelayPointer__Group__1__Impl15008);
            rule__ReadDelayPointer__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__1__Impl"


    // $ANTLR start "rule__And__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7359:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7363:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7364:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_rule__And__Group__0__Impl_in_rule__And__Group__015042);
            rule__And__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__And__Group__1_in_rule__And__Group__015045);
            rule__And__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7371:1: rule__And__Group__0__Impl : ( 'and' ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7375:1: ( ( 'and' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7376:1: ( 'and' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7376:1: ( 'and' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7377:1: 'and'
            {
             before(grammarAccess.getAndAccess().getAndKeyword_0()); 
            match(input,59,FOLLOW_59_in_rule__And__Group__0__Impl15073); 
             after(grammarAccess.getAndAccess().getAndKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7390:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7394:1: ( rule__And__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7395:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__And__Group__1__Impl_in_rule__And__Group__115104);
            rule__And__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7401:1: rule__And__Group__1__Impl : ( ( rule__And__Arg1Assignment_1 ) ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7405:1: ( ( ( rule__And__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7406:1: ( ( rule__And__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7406:1: ( ( rule__And__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7407:1: ( rule__And__Arg1Assignment_1 )
            {
             before(grammarAccess.getAndAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7408:1: ( rule__And__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7408:2: rule__And__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__And__Arg1Assignment_1_in_rule__And__Group__1__Impl15131);
            rule__And__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7422:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7426:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7427:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_rule__Or__Group__0__Impl_in_rule__Or__Group__015165);
            rule__Or__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Or__Group__1_in_rule__Or__Group__015168);
            rule__Or__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7434:1: rule__Or__Group__0__Impl : ( 'or' ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7438:1: ( ( 'or' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7439:1: ( 'or' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7439:1: ( 'or' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7440:1: 'or'
            {
             before(grammarAccess.getOrAccess().getOrKeyword_0()); 
            match(input,60,FOLLOW_60_in_rule__Or__Group__0__Impl15196); 
             after(grammarAccess.getOrAccess().getOrKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7453:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7457:1: ( rule__Or__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7458:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Or__Group__1__Impl_in_rule__Or__Group__115227);
            rule__Or__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7464:1: rule__Or__Group__1__Impl : ( ( rule__Or__Arg1Assignment_1 ) ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7468:1: ( ( ( rule__Or__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7469:1: ( ( rule__Or__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7469:1: ( ( rule__Or__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7470:1: ( rule__Or__Arg1Assignment_1 )
            {
             before(grammarAccess.getOrAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7471:1: ( rule__Or__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7471:2: rule__Or__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Or__Arg1Assignment_1_in_rule__Or__Group__1__Impl15254);
            rule__Or__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Xor__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7485:1: rule__Xor__Group__0 : rule__Xor__Group__0__Impl rule__Xor__Group__1 ;
    public final void rule__Xor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7489:1: ( rule__Xor__Group__0__Impl rule__Xor__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7490:2: rule__Xor__Group__0__Impl rule__Xor__Group__1
            {
            pushFollow(FOLLOW_rule__Xor__Group__0__Impl_in_rule__Xor__Group__015288);
            rule__Xor__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Xor__Group__1_in_rule__Xor__Group__015291);
            rule__Xor__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__0"


    // $ANTLR start "rule__Xor__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7497:1: rule__Xor__Group__0__Impl : ( 'xor' ) ;
    public final void rule__Xor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7501:1: ( ( 'xor' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7502:1: ( 'xor' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7502:1: ( 'xor' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7503:1: 'xor'
            {
             before(grammarAccess.getXorAccess().getXorKeyword_0()); 
            match(input,61,FOLLOW_61_in_rule__Xor__Group__0__Impl15319); 
             after(grammarAccess.getXorAccess().getXorKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__0__Impl"


    // $ANTLR start "rule__Xor__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7516:1: rule__Xor__Group__1 : rule__Xor__Group__1__Impl ;
    public final void rule__Xor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7520:1: ( rule__Xor__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7521:2: rule__Xor__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Xor__Group__1__Impl_in_rule__Xor__Group__115350);
            rule__Xor__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__1"


    // $ANTLR start "rule__Xor__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7527:1: rule__Xor__Group__1__Impl : ( ( rule__Xor__Arg1Assignment_1 ) ) ;
    public final void rule__Xor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7531:1: ( ( ( rule__Xor__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7532:1: ( ( rule__Xor__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7532:1: ( ( rule__Xor__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7533:1: ( rule__Xor__Arg1Assignment_1 )
            {
             before(grammarAccess.getXorAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7534:1: ( rule__Xor__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7534:2: rule__Xor__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Xor__Arg1Assignment_1_in_rule__Xor__Group__1__Impl15377);
            rule__Xor__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getXorAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__1__Impl"


    // $ANTLR start "rule__Jam__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7548:1: rule__Jam__Group__0 : rule__Jam__Group__0__Impl rule__Jam__Group__1 ;
    public final void rule__Jam__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7552:1: ( rule__Jam__Group__0__Impl rule__Jam__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7553:2: rule__Jam__Group__0__Impl rule__Jam__Group__1
            {
            pushFollow(FOLLOW_rule__Jam__Group__0__Impl_in_rule__Jam__Group__015411);
            rule__Jam__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Jam__Group__1_in_rule__Jam__Group__015414);
            rule__Jam__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__0"


    // $ANTLR start "rule__Jam__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7560:1: rule__Jam__Group__0__Impl : ( 'jam' ) ;
    public final void rule__Jam__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7564:1: ( ( 'jam' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7565:1: ( 'jam' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7565:1: ( 'jam' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7566:1: 'jam'
            {
             before(grammarAccess.getJamAccess().getJamKeyword_0()); 
            match(input,62,FOLLOW_62_in_rule__Jam__Group__0__Impl15442); 
             after(grammarAccess.getJamAccess().getJamKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__0__Impl"


    // $ANTLR start "rule__Jam__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7579:1: rule__Jam__Group__1 : rule__Jam__Group__1__Impl ;
    public final void rule__Jam__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7583:1: ( rule__Jam__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7584:2: rule__Jam__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Jam__Group__1__Impl_in_rule__Jam__Group__115473);
            rule__Jam__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__1"


    // $ANTLR start "rule__Jam__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7590:1: rule__Jam__Group__1__Impl : ( ( rule__Jam__Arg1Assignment_1 ) ) ;
    public final void rule__Jam__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7594:1: ( ( ( rule__Jam__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7595:1: ( ( rule__Jam__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7595:1: ( ( rule__Jam__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7596:1: ( rule__Jam__Arg1Assignment_1 )
            {
             before(grammarAccess.getJamAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7597:1: ( rule__Jam__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7597:2: rule__Jam__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Jam__Arg1Assignment_1_in_rule__Jam__Group__1__Impl15500);
            rule__Jam__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getJamAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__1__Impl"


    // $ANTLR start "rule__Clr__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7611:1: rule__Clr__Group__0 : rule__Clr__Group__0__Impl rule__Clr__Group__1 ;
    public final void rule__Clr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7615:1: ( rule__Clr__Group__0__Impl rule__Clr__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7616:2: rule__Clr__Group__0__Impl rule__Clr__Group__1
            {
            pushFollow(FOLLOW_rule__Clr__Group__0__Impl_in_rule__Clr__Group__015534);
            rule__Clr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Clr__Group__1_in_rule__Clr__Group__015537);
            rule__Clr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__0"


    // $ANTLR start "rule__Clr__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7623:1: rule__Clr__Group__0__Impl : ( () ) ;
    public final void rule__Clr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7627:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7628:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7628:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7629:1: ()
            {
             before(grammarAccess.getClrAccess().getClrAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7630:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7632:1: 
            {
            }

             after(grammarAccess.getClrAccess().getClrAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__0__Impl"


    // $ANTLR start "rule__Clr__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7642:1: rule__Clr__Group__1 : rule__Clr__Group__1__Impl ;
    public final void rule__Clr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7646:1: ( rule__Clr__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7647:2: rule__Clr__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Clr__Group__1__Impl_in_rule__Clr__Group__115595);
            rule__Clr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__1"


    // $ANTLR start "rule__Clr__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7653:1: rule__Clr__Group__1__Impl : ( 'clr' ) ;
    public final void rule__Clr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7657:1: ( ( 'clr' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7658:1: ( 'clr' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7658:1: ( 'clr' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7659:1: 'clr'
            {
             before(grammarAccess.getClrAccess().getClrKeyword_1()); 
            match(input,63,FOLLOW_63_in_rule__Clr__Group__1__Impl15623); 
             after(grammarAccess.getClrAccess().getClrKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__1__Impl"


    // $ANTLR start "rule__Not__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7676:1: rule__Not__Group__0 : rule__Not__Group__0__Impl rule__Not__Group__1 ;
    public final void rule__Not__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7680:1: ( rule__Not__Group__0__Impl rule__Not__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7681:2: rule__Not__Group__0__Impl rule__Not__Group__1
            {
            pushFollow(FOLLOW_rule__Not__Group__0__Impl_in_rule__Not__Group__015658);
            rule__Not__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Not__Group__1_in_rule__Not__Group__015661);
            rule__Not__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__0"


    // $ANTLR start "rule__Not__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7688:1: rule__Not__Group__0__Impl : ( () ) ;
    public final void rule__Not__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7692:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7693:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7693:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7694:1: ()
            {
             before(grammarAccess.getNotAccess().getNotAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7695:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7697:1: 
            {
            }

             after(grammarAccess.getNotAccess().getNotAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__0__Impl"


    // $ANTLR start "rule__Not__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7707:1: rule__Not__Group__1 : rule__Not__Group__1__Impl ;
    public final void rule__Not__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7711:1: ( rule__Not__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7712:2: rule__Not__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Not__Group__1__Impl_in_rule__Not__Group__115719);
            rule__Not__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__1"


    // $ANTLR start "rule__Not__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7718:1: rule__Not__Group__1__Impl : ( 'not' ) ;
    public final void rule__Not__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7722:1: ( ( 'not' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7723:1: ( 'not' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7723:1: ( 'not' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7724:1: 'not'
            {
             before(grammarAccess.getNotAccess().getNotKeyword_1()); 
            match(input,64,FOLLOW_64_in_rule__Not__Group__1__Impl15747); 
             after(grammarAccess.getNotAccess().getNotKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__1__Impl"


    // $ANTLR start "rule__Absa__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7741:1: rule__Absa__Group__0 : rule__Absa__Group__0__Impl rule__Absa__Group__1 ;
    public final void rule__Absa__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7745:1: ( rule__Absa__Group__0__Impl rule__Absa__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7746:2: rule__Absa__Group__0__Impl rule__Absa__Group__1
            {
            pushFollow(FOLLOW_rule__Absa__Group__0__Impl_in_rule__Absa__Group__015782);
            rule__Absa__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Absa__Group__1_in_rule__Absa__Group__015785);
            rule__Absa__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__0"


    // $ANTLR start "rule__Absa__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7753:1: rule__Absa__Group__0__Impl : ( () ) ;
    public final void rule__Absa__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7757:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7758:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7758:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7759:1: ()
            {
             before(grammarAccess.getAbsaAccess().getAbsaAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7760:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7762:1: 
            {
            }

             after(grammarAccess.getAbsaAccess().getAbsaAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__0__Impl"


    // $ANTLR start "rule__Absa__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7772:1: rule__Absa__Group__1 : rule__Absa__Group__1__Impl ;
    public final void rule__Absa__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7776:1: ( rule__Absa__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7777:2: rule__Absa__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Absa__Group__1__Impl_in_rule__Absa__Group__115843);
            rule__Absa__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__1"


    // $ANTLR start "rule__Absa__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7783:1: rule__Absa__Group__1__Impl : ( 'absa' ) ;
    public final void rule__Absa__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7787:1: ( ( 'absa' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7788:1: ( 'absa' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7788:1: ( 'absa' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7789:1: 'absa'
            {
             before(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); 
            match(input,65,FOLLOW_65_in_rule__Absa__Group__1__Impl15871); 
             after(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__1__Impl"


    // $ANTLR start "rule__Skip__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7806:1: rule__Skip__Group__0 : rule__Skip__Group__0__Impl rule__Skip__Group__1 ;
    public final void rule__Skip__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7810:1: ( rule__Skip__Group__0__Impl rule__Skip__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7811:2: rule__Skip__Group__0__Impl rule__Skip__Group__1
            {
            pushFollow(FOLLOW_rule__Skip__Group__0__Impl_in_rule__Skip__Group__015906);
            rule__Skip__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__1_in_rule__Skip__Group__015909);
            rule__Skip__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__0"


    // $ANTLR start "rule__Skip__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7818:1: rule__Skip__Group__0__Impl : ( 'skp' ) ;
    public final void rule__Skip__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7822:1: ( ( 'skp' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7823:1: ( 'skp' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7823:1: ( 'skp' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7824:1: 'skp'
            {
             before(grammarAccess.getSkipAccess().getSkpKeyword_0()); 
            match(input,66,FOLLOW_66_in_rule__Skip__Group__0__Impl15937); 
             after(grammarAccess.getSkipAccess().getSkpKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__0__Impl"


    // $ANTLR start "rule__Skip__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7837:1: rule__Skip__Group__1 : rule__Skip__Group__1__Impl rule__Skip__Group__2 ;
    public final void rule__Skip__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7841:1: ( rule__Skip__Group__1__Impl rule__Skip__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7842:2: rule__Skip__Group__1__Impl rule__Skip__Group__2
            {
            pushFollow(FOLLOW_rule__Skip__Group__1__Impl_in_rule__Skip__Group__115968);
            rule__Skip__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__2_in_rule__Skip__Group__115971);
            rule__Skip__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__1"


    // $ANTLR start "rule__Skip__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7849:1: rule__Skip__Group__1__Impl : ( ( rule__Skip__FlagsAssignment_1 ) ) ;
    public final void rule__Skip__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7853:1: ( ( ( rule__Skip__FlagsAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7854:1: ( ( rule__Skip__FlagsAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7854:1: ( ( rule__Skip__FlagsAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7855:1: ( rule__Skip__FlagsAssignment_1 )
            {
             before(grammarAccess.getSkipAccess().getFlagsAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7856:1: ( rule__Skip__FlagsAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7856:2: rule__Skip__FlagsAssignment_1
            {
            pushFollow(FOLLOW_rule__Skip__FlagsAssignment_1_in_rule__Skip__Group__1__Impl15998);
            rule__Skip__FlagsAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getFlagsAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__1__Impl"


    // $ANTLR start "rule__Skip__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7866:1: rule__Skip__Group__2 : rule__Skip__Group__2__Impl rule__Skip__Group__3 ;
    public final void rule__Skip__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7870:1: ( rule__Skip__Group__2__Impl rule__Skip__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7871:2: rule__Skip__Group__2__Impl rule__Skip__Group__3
            {
            pushFollow(FOLLOW_rule__Skip__Group__2__Impl_in_rule__Skip__Group__216028);
            rule__Skip__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__3_in_rule__Skip__Group__216031);
            rule__Skip__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__2"


    // $ANTLR start "rule__Skip__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7878:1: rule__Skip__Group__2__Impl : ( ',' ) ;
    public final void rule__Skip__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7882:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7883:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7883:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7884:1: ','
            {
             before(grammarAccess.getSkipAccess().getCommaKeyword_2()); 
            match(input,39,FOLLOW_39_in_rule__Skip__Group__2__Impl16059); 
             after(grammarAccess.getSkipAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__2__Impl"


    // $ANTLR start "rule__Skip__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7897:1: rule__Skip__Group__3 : rule__Skip__Group__3__Impl ;
    public final void rule__Skip__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7901:1: ( rule__Skip__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7902:2: rule__Skip__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Skip__Group__3__Impl_in_rule__Skip__Group__316090);
            rule__Skip__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__3"


    // $ANTLR start "rule__Skip__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7908:1: rule__Skip__Group__3__Impl : ( ( rule__Skip__LabelAssignment_3 ) ) ;
    public final void rule__Skip__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7912:1: ( ( ( rule__Skip__LabelAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7913:1: ( ( rule__Skip__LabelAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7913:1: ( ( rule__Skip__LabelAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7914:1: ( rule__Skip__LabelAssignment_3 )
            {
             before(grammarAccess.getSkipAccess().getLabelAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7915:1: ( rule__Skip__LabelAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7915:2: rule__Skip__LabelAssignment_3
            {
            pushFollow(FOLLOW_rule__Skip__LabelAssignment_3_in_rule__Skip__Group__3__Impl16117);
            rule__Skip__LabelAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getLabelAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__3__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7933:1: rule__SPINDOUBLE__Group__0 : rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1 ;
    public final void rule__SPINDOUBLE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7937:1: ( rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7938:2: rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__0__Impl_in_rule__SPINDOUBLE__Group__016155);
            rule__SPINDOUBLE__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__1_in_rule__SPINDOUBLE__Group__016158);
            rule__SPINDOUBLE__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__0"


    // $ANTLR start "rule__SPINDOUBLE__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7945:1: rule__SPINDOUBLE__Group__0__Impl : ( ( '-' )? ) ;
    public final void rule__SPINDOUBLE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7949:1: ( ( ( '-' )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7950:1: ( ( '-' )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7950:1: ( ( '-' )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7951:1: ( '-' )?
            {
             before(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7952:1: ( '-' )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==15) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7953:2: '-'
                    {
                    match(input,15,FOLLOW_15_in_rule__SPINDOUBLE__Group__0__Impl16187); 

                    }
                    break;

            }

             after(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7964:1: rule__SPINDOUBLE__Group__1 : rule__SPINDOUBLE__Group__1__Impl ;
    public final void rule__SPINDOUBLE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7968:1: ( rule__SPINDOUBLE__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7969:2: rule__SPINDOUBLE__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__1__Impl_in_rule__SPINDOUBLE__Group__116220);
            rule__SPINDOUBLE__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__1"


    // $ANTLR start "rule__SPINDOUBLE__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7975:1: rule__SPINDOUBLE__Group__1__Impl : ( ( rule__SPINDOUBLE__Alternatives_1 ) ) ;
    public final void rule__SPINDOUBLE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7979:1: ( ( ( rule__SPINDOUBLE__Alternatives_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7980:1: ( ( rule__SPINDOUBLE__Alternatives_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7980:1: ( ( rule__SPINDOUBLE__Alternatives_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7981:1: ( rule__SPINDOUBLE__Alternatives_1 )
            {
             before(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7982:1: ( rule__SPINDOUBLE__Alternatives_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7982:2: rule__SPINDOUBLE__Alternatives_1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Alternatives_1_in_rule__SPINDOUBLE__Group__1__Impl16247);
            rule__SPINDOUBLE__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__1__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7996:1: rule__SPINDOUBLE__Group_1_1__0 : rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1 ;
    public final void rule__SPINDOUBLE__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8000:1: ( rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8001:2: rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1__016281);
            rule__SPINDOUBLE__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__1_in_rule__SPINDOUBLE__Group_1_1__016284);
            rule__SPINDOUBLE__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__0"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8008:1: rule__SPINDOUBLE__Group_1_1__0__Impl : ( RULE_INT ) ;
    public final void rule__SPINDOUBLE__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8012:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8013:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8013:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8014:1: RULE_INT
            {
             before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1__0__Impl16311); 
             after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8025:1: rule__SPINDOUBLE__Group_1_1__1 : rule__SPINDOUBLE__Group_1_1__1__Impl ;
    public final void rule__SPINDOUBLE__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8029:1: ( rule__SPINDOUBLE__Group_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8030:2: rule__SPINDOUBLE__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1__116340);
            rule__SPINDOUBLE__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__1"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8036:1: rule__SPINDOUBLE__Group_1_1__1__Impl : ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? ) ;
    public final void rule__SPINDOUBLE__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8040:1: ( ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8041:1: ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8041:1: ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8042:1: ( rule__SPINDOUBLE__Group_1_1_1__0 )?
            {
             before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8043:1: ( rule__SPINDOUBLE__Group_1_1_1__0 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==67) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8043:2: rule__SPINDOUBLE__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0_in_rule__SPINDOUBLE__Group_1_1__1__Impl16367);
                    rule__SPINDOUBLE__Group_1_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__1__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8057:1: rule__SPINDOUBLE__Group_1_1_1__0 : rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1 ;
    public final void rule__SPINDOUBLE__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8061:1: ( rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8062:2: rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1_1__016402);
            rule__SPINDOUBLE__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1_in_rule__SPINDOUBLE__Group_1_1_1__016405);
            rule__SPINDOUBLE__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__0"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8069:1: rule__SPINDOUBLE__Group_1_1_1__0__Impl : ( '.' ) ;
    public final void rule__SPINDOUBLE__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8073:1: ( ( '.' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8074:1: ( '.' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8074:1: ( '.' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8075:1: '.'
            {
             before(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); 
            match(input,67,FOLLOW_67_in_rule__SPINDOUBLE__Group_1_1_1__0__Impl16433); 
             after(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8088:1: rule__SPINDOUBLE__Group_1_1_1__1 : rule__SPINDOUBLE__Group_1_1_1__1__Impl ;
    public final void rule__SPINDOUBLE__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8092:1: ( rule__SPINDOUBLE__Group_1_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8093:2: rule__SPINDOUBLE__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1_1__116464);
            rule__SPINDOUBLE__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__1"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8099:1: rule__SPINDOUBLE__Group_1_1_1__1__Impl : ( RULE_INT ) ;
    public final void rule__SPINDOUBLE__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8103:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8104:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8104:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8105:1: RULE_INT
            {
             before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1_1__1__Impl16491); 
             after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8120:1: rule__SPINCHOREGFLAGS__Group_1__0 : rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1 ;
    public final void rule__SPINCHOREGFLAGS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8124:1: ( rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8125:2: rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1__016524);
            rule__SPINCHOREGFLAGS__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1_in_rule__SPINCHOREGFLAGS__Group_1__016527);
            rule__SPINCHOREGFLAGS__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__0"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8132:1: rule__SPINCHOREGFLAGS__Group_1__0__Impl : ( RULE_ID ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8136:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8137:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8137:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8138:1: RULE_ID
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1__0__Impl16554); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__0__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8149:1: rule__SPINCHOREGFLAGS__Group_1__1 : rule__SPINCHOREGFLAGS__Group_1__1__Impl ;
    public final void rule__SPINCHOREGFLAGS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8153:1: ( rule__SPINCHOREGFLAGS__Group_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8154:2: rule__SPINCHOREGFLAGS__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1__116583);
            rule__SPINCHOREGFLAGS__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__1"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8160:1: rule__SPINCHOREGFLAGS__Group_1__1__Impl : ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8164:1: ( ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8165:1: ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8165:1: ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8166:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0 )*
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8167:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==68) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8167:2: rule__SPINCHOREGFLAGS__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0_in_rule__SPINCHOREGFLAGS__Group_1__1__Impl16610);
            	    rule__SPINCHOREGFLAGS__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

             after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__1__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8181:1: rule__SPINCHOREGFLAGS__Group_1_1__0 : rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1 ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8185:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8186:2: rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__016645);
            rule__SPINCHOREGFLAGS__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1_in_rule__SPINCHOREGFLAGS__Group_1_1__016648);
            rule__SPINCHOREGFLAGS__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__0"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8193:1: rule__SPINCHOREGFLAGS__Group_1_1__0__Impl : ( '|' ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8197:1: ( ( '|' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8198:1: ( '|' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8198:1: ( '|' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8199:1: '|'
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); 
            match(input,68,FOLLOW_68_in_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl16676); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__0__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8212:1: rule__SPINCHOREGFLAGS__Group_1_1__1 : rule__SPINCHOREGFLAGS__Group_1_1__1__Impl ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8216:1: ( rule__SPINCHOREGFLAGS__Group_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8217:2: rule__SPINCHOREGFLAGS__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__116707);
            rule__SPINCHOREGFLAGS__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__1"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8223:1: rule__SPINCHOREGFLAGS__Group_1_1__1__Impl : ( RULE_ID ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8227:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8228:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8228:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8229:1: RULE_ID
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl16734); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__1__Impl"


    // $ANTLR start "rule__SPINMEM__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8244:1: rule__SPINMEM__Group__0 : rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1 ;
    public final void rule__SPINMEM__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8248:1: ( rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8249:2: rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__0__Impl_in_rule__SPINMEM__Group__016767);
            rule__SPINMEM__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINMEM__Group__1_in_rule__SPINMEM__Group__016770);
            rule__SPINMEM__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__0"


    // $ANTLR start "rule__SPINMEM__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8256:1: rule__SPINMEM__Group__0__Impl : ( ( rule__SPINMEM__BufferAssignment_0 ) ) ;
    public final void rule__SPINMEM__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8260:1: ( ( ( rule__SPINMEM__BufferAssignment_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8261:1: ( ( rule__SPINMEM__BufferAssignment_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8261:1: ( ( rule__SPINMEM__BufferAssignment_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8262:1: ( rule__SPINMEM__BufferAssignment_0 )
            {
             before(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8263:1: ( rule__SPINMEM__BufferAssignment_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8263:2: rule__SPINMEM__BufferAssignment_0
            {
            pushFollow(FOLLOW_rule__SPINMEM__BufferAssignment_0_in_rule__SPINMEM__Group__0__Impl16797);
            rule__SPINMEM__BufferAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__0__Impl"


    // $ANTLR start "rule__SPINMEM__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8273:1: rule__SPINMEM__Group__1 : rule__SPINMEM__Group__1__Impl ;
    public final void rule__SPINMEM__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8277:1: ( rule__SPINMEM__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8278:2: rule__SPINMEM__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__1__Impl_in_rule__SPINMEM__Group__116827);
            rule__SPINMEM__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__1"


    // $ANTLR start "rule__SPINMEM__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8284:1: rule__SPINMEM__Group__1__Impl : ( ( rule__SPINMEM__Alternatives_1 )? ) ;
    public final void rule__SPINMEM__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8288:1: ( ( ( rule__SPINMEM__Alternatives_1 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8289:1: ( ( rule__SPINMEM__Alternatives_1 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8289:1: ( ( rule__SPINMEM__Alternatives_1 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8290:1: ( rule__SPINMEM__Alternatives_1 )?
            {
             before(grammarAccess.getSPINMEMAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8291:1: ( rule__SPINMEM__Alternatives_1 )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_INT) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_ID) ) {
                int LA31_2 = input.LA(2);

                if ( (LA31_2==EOF||LA31_2==RULE_ID||LA31_2==RULE_SC_COMMENT||(LA31_2>=23 && LA31_2<=28)||(LA31_2>=30 && LA31_2<=66)) ) {
                    alt31=1;
                }
            }
            switch (alt31) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8291:2: rule__SPINMEM__Alternatives_1
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__Alternatives_1_in_rule__SPINMEM__Group__1__Impl16854);
                    rule__SPINMEM__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINMEMAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__1__Impl"


    // $ANTLR start "rule__SPINBUF__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8305:1: rule__SPINBUF__Group__0 : rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1 ;
    public final void rule__SPINBUF__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8309:1: ( rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8310:2: rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__0__Impl_in_rule__SPINBUF__Group__016889);
            rule__SPINBUF__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINBUF__Group__1_in_rule__SPINBUF__Group__016892);
            rule__SPINBUF__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__0"


    // $ANTLR start "rule__SPINBUF__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8317:1: rule__SPINBUF__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__SPINBUF__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8321:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8322:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8322:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8323:1: RULE_ID
            {
             before(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINBUF__Group__0__Impl16919); 
             after(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__0__Impl"


    // $ANTLR start "rule__SPINBUF__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8334:1: rule__SPINBUF__Group__1 : rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2 ;
    public final void rule__SPINBUF__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8338:1: ( rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8339:2: rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__1__Impl_in_rule__SPINBUF__Group__116948);
            rule__SPINBUF__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINBUF__Group__2_in_rule__SPINBUF__Group__116951);
            rule__SPINBUF__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__1"


    // $ANTLR start "rule__SPINBUF__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8346:1: rule__SPINBUF__Group__1__Impl : ( ( rule__SPINBUF__Alternatives_1 )? ) ;
    public final void rule__SPINBUF__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8350:1: ( ( ( rule__SPINBUF__Alternatives_1 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8351:1: ( ( rule__SPINBUF__Alternatives_1 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8351:1: ( ( rule__SPINBUF__Alternatives_1 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8352:1: ( rule__SPINBUF__Alternatives_1 )?
            {
             before(grammarAccess.getSPINBUFAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8353:1: ( rule__SPINBUF__Alternatives_1 )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=12 && LA32_0<=13)) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8353:2: rule__SPINBUF__Alternatives_1
                    {
                    pushFollow(FOLLOW_rule__SPINBUF__Alternatives_1_in_rule__SPINBUF__Group__1__Impl16978);
                    rule__SPINBUF__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINBUFAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__1__Impl"


    // $ANTLR start "rule__SPINBUF__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8363:1: rule__SPINBUF__Group__2 : rule__SPINBUF__Group__2__Impl ;
    public final void rule__SPINBUF__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8367:1: ( rule__SPINBUF__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8368:2: rule__SPINBUF__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__2__Impl_in_rule__SPINBUF__Group__217009);
            rule__SPINBUF__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__2"


    // $ANTLR start "rule__SPINBUF__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8374:1: rule__SPINBUF__Group__2__Impl : ( ( rule__SPINBUF__Alternatives_2 )? ) ;
    public final void rule__SPINBUF__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8378:1: ( ( ( rule__SPINBUF__Alternatives_2 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8379:1: ( ( rule__SPINBUF__Alternatives_2 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8379:1: ( ( rule__SPINBUF__Alternatives_2 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8380:1: ( rule__SPINBUF__Alternatives_2 )?
            {
             before(grammarAccess.getSPINBUFAccess().getAlternatives_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8381:1: ( rule__SPINBUF__Alternatives_2 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( ((LA33_0>=14 && LA33_0<=15)) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8381:2: rule__SPINBUF__Alternatives_2
                    {
                    pushFollow(FOLLOW_rule__SPINBUF__Alternatives_2_in_rule__SPINBUF__Group__2__Impl17036);
                    rule__SPINBUF__Alternatives_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINBUFAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__2__Impl"


    // $ANTLR start "rule__BINARY24__Group_0__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8397:1: rule__BINARY24__Group_0__0 : rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1 ;
    public final void rule__BINARY24__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8401:1: ( rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8402:2: rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0__0__Impl_in_rule__BINARY24__Group_0__017073);
            rule__BINARY24__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_0__1_in_rule__BINARY24__Group_0__017076);
            rule__BINARY24__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__0"


    // $ANTLR start "rule__BINARY24__Group_0__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8409:1: rule__BINARY24__Group_0__0__Impl : ( ( rule__BINARY24__Group_0_0__0 ) ) ;
    public final void rule__BINARY24__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8413:1: ( ( ( rule__BINARY24__Group_0_0__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8414:1: ( ( rule__BINARY24__Group_0_0__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8414:1: ( ( rule__BINARY24__Group_0_0__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8415:1: ( rule__BINARY24__Group_0_0__0 )
            {
             before(grammarAccess.getBINARY24Access().getGroup_0_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8416:1: ( rule__BINARY24__Group_0_0__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8416:2: rule__BINARY24__Group_0_0__0
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__0_in_rule__BINARY24__Group_0__0__Impl17103);
            rule__BINARY24__Group_0_0__0();

            state._fsp--;


            }

             after(grammarAccess.getBINARY24Access().getGroup_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_0__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8426:1: rule__BINARY24__Group_0__1 : rule__BINARY24__Group_0__1__Impl ;
    public final void rule__BINARY24__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8430:1: ( rule__BINARY24__Group_0__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8431:2: rule__BINARY24__Group_0__1__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0__1__Impl_in_rule__BINARY24__Group_0__117133);
            rule__BINARY24__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__1"


    // $ANTLR start "rule__BINARY24__Group_0__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8437:1: rule__BINARY24__Group_0__1__Impl : ( ( RULE_ID )* ) ;
    public final void rule__BINARY24__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8441:1: ( ( ( RULE_ID )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8442:1: ( ( RULE_ID )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8442:1: ( ( RULE_ID )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8443:1: ( RULE_ID )*
            {
             before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8444:1: ( RULE_ID )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==RULE_ID) ) {
                    int LA34_2 = input.LA(2);

                    if ( (LA34_2==EOF||LA34_2==RULE_ID||LA34_2==RULE_SC_COMMENT||(LA34_2>=23 && LA34_2<=28)||(LA34_2>=30 && LA34_2<=38)||(LA34_2>=40 && LA34_2<=66)) ) {
                        alt34=1;
                    }


                }


                switch (alt34) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8444:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__BINARY24__Group_0__1__Impl17161); 

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_0_0__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8458:1: rule__BINARY24__Group_0_0__0 : rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1 ;
    public final void rule__BINARY24__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8462:1: ( rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8463:2: rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__0__Impl_in_rule__BINARY24__Group_0_0__017196);
            rule__BINARY24__Group_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__1_in_rule__BINARY24__Group_0_0__017199);
            rule__BINARY24__Group_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__0"


    // $ANTLR start "rule__BINARY24__Group_0_0__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8470:1: rule__BINARY24__Group_0_0__0__Impl : ( '%' ) ;
    public final void rule__BINARY24__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8474:1: ( ( '%' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8475:1: ( '%' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8475:1: ( '%' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8476:1: '%'
            {
             before(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); 
            match(input,69,FOLLOW_69_in_rule__BINARY24__Group_0_0__0__Impl17227); 
             after(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_0_0__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8489:1: rule__BINARY24__Group_0_0__1 : rule__BINARY24__Group_0_0__1__Impl ;
    public final void rule__BINARY24__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8493:1: ( rule__BINARY24__Group_0_0__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8494:2: rule__BINARY24__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__1__Impl_in_rule__BINARY24__Group_0_0__117258);
            rule__BINARY24__Group_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__1"


    // $ANTLR start "rule__BINARY24__Group_0_0__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8500:1: rule__BINARY24__Group_0_0__1__Impl : ( RULE_INT ) ;
    public final void rule__BINARY24__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8504:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8505:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8505:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8506:1: RULE_INT
            {
             before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__BINARY24__Group_0_0__1__Impl17285); 
             after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8521:1: rule__BINARY24__Group_1__0 : rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1 ;
    public final void rule__BINARY24__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8525:1: ( rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8526:2: rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__0__Impl_in_rule__BINARY24__Group_1__017318);
            rule__BINARY24__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_1__1_in_rule__BINARY24__Group_1__017321);
            rule__BINARY24__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__0"


    // $ANTLR start "rule__BINARY24__Group_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8533:1: rule__BINARY24__Group_1__0__Impl : ( '$' ) ;
    public final void rule__BINARY24__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8537:1: ( ( '$' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8538:1: ( '$' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8538:1: ( '$' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8539:1: '$'
            {
             before(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); 
            match(input,70,FOLLOW_70_in_rule__BINARY24__Group_1__0__Impl17349); 
             after(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8552:1: rule__BINARY24__Group_1__1 : rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2 ;
    public final void rule__BINARY24__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8556:1: ( rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8557:2: rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__1__Impl_in_rule__BINARY24__Group_1__117380);
            rule__BINARY24__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_1__2_in_rule__BINARY24__Group_1__117383);
            rule__BINARY24__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__1"


    // $ANTLR start "rule__BINARY24__Group_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8564:1: rule__BINARY24__Group_1__1__Impl : ( ( RULE_INT )* ) ;
    public final void rule__BINARY24__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8568:1: ( ( ( RULE_INT )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8569:1: ( ( RULE_INT )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8569:1: ( ( RULE_INT )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8570:1: ( RULE_INT )*
            {
             before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8571:1: ( RULE_INT )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==RULE_INT) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8571:3: RULE_INT
            	    {
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__BINARY24__Group_1__1__Impl17411); 

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8581:1: rule__BINARY24__Group_1__2 : rule__BINARY24__Group_1__2__Impl ;
    public final void rule__BINARY24__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8585:1: ( rule__BINARY24__Group_1__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8586:2: rule__BINARY24__Group_1__2__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__2__Impl_in_rule__BINARY24__Group_1__217442);
            rule__BINARY24__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__2"


    // $ANTLR start "rule__BINARY24__Group_1__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8592:1: rule__BINARY24__Group_1__2__Impl : ( ( RULE_ID )* ) ;
    public final void rule__BINARY24__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8596:1: ( ( ( RULE_ID )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8597:1: ( ( RULE_ID )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8597:1: ( ( RULE_ID )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8598:1: ( RULE_ID )*
            {
             before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8599:1: ( RULE_ID )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==RULE_ID) ) {
                    int LA36_2 = input.LA(2);

                    if ( (LA36_2==EOF||LA36_2==RULE_ID||LA36_2==RULE_SC_COMMENT||(LA36_2>=23 && LA36_2<=28)||(LA36_2>=30 && LA36_2<=38)||(LA36_2>=40 && LA36_2<=66)) ) {
                        alt36=1;
                    }


                }


                switch (alt36) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8599:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__BINARY24__Group_1__2__Impl17470); 

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__2__Impl"


    // $ANTLR start "rule__Program__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8616:1: rule__Program__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Program__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8620:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8621:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8621:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8622:1: RULE_ID
            {
             before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Program__NameAssignment_117512); 
             after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__NameAssignment_1"


    // $ANTLR start "rule__Program__PinsAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8631:1: rule__Program__PinsAssignment_2 : ( rulePin ) ;
    public final void rule__Program__PinsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8635:1: ( ( rulePin ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8636:1: ( rulePin )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8636:1: ( rulePin )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8637:1: rulePin
            {
             before(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); 
            pushFollow(FOLLOW_rulePin_in_rule__Program__PinsAssignment_217543);
            rulePin();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__PinsAssignment_2"


    // $ANTLR start "rule__Program__ElementsAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8646:1: rule__Program__ElementsAssignment_3 : ( ruleSpinElement ) ;
    public final void rule__Program__ElementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8650:1: ( ( ruleSpinElement ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8651:1: ( ruleSpinElement )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8651:1: ( ruleSpinElement )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8652:1: ruleSpinElement
            {
             before(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSpinElement_in_rule__Program__ElementsAssignment_317574);
            ruleSpinElement();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__ElementsAssignment_3"


    // $ANTLR start "rule__AudioInput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8661:1: rule__AudioInput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AudioInput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8665:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8666:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8666:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8667:1: RULE_ID
            {
             before(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioInput__VarNameAssignment_117605); 
             after(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__VarNameAssignment_1"


    // $ANTLR start "rule__AudioInput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8676:1: rule__AudioInput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__AudioInput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8680:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8681:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8681:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8682:1: RULE_ID
            {
             before(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioInput__NameAssignment_217636); 
             after(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__NameAssignment_2"


    // $ANTLR start "rule__AudioOutput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8691:1: rule__AudioOutput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AudioOutput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8695:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8696:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8696:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8697:1: RULE_ID
            {
             before(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioOutput__VarNameAssignment_117667); 
             after(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__VarNameAssignment_1"


    // $ANTLR start "rule__AudioOutput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8706:1: rule__AudioOutput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__AudioOutput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8710:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8711:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8711:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8712:1: RULE_ID
            {
             before(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioOutput__NameAssignment_217698); 
             after(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__NameAssignment_2"


    // $ANTLR start "rule__ControlInput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8721:1: rule__ControlInput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlInput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8725:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8726:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8726:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8727:1: RULE_ID
            {
             before(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlInput__VarNameAssignment_117729); 
             after(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__VarNameAssignment_1"


    // $ANTLR start "rule__ControlInput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8736:1: rule__ControlInput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlInput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8740:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8741:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8741:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8742:1: RULE_ID
            {
             before(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlInput__NameAssignment_217760); 
             after(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__NameAssignment_2"


    // $ANTLR start "rule__ControlOutput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8751:1: rule__ControlOutput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlOutput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8755:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8756:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8756:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8757:1: RULE_ID
            {
             before(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlOutput__VarNameAssignment_117791); 
             after(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__VarNameAssignment_1"


    // $ANTLR start "rule__ControlOutput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8766:1: rule__ControlOutput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlOutput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8770:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8771:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8771:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8772:1: RULE_ID
            {
             before(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlOutput__NameAssignment_217822); 
             after(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__NameAssignment_2"


    // $ANTLR start "rule__SpinEquate__EnameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8781:1: rule__SpinEquate__EnameAssignment_1 : ( RULE_ID ) ;
    public final void rule__SpinEquate__EnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8785:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8786:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8786:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8787:1: RULE_ID
            {
             before(grammarAccess.getSpinEquateAccess().getEnameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SpinEquate__EnameAssignment_117853); 
             after(grammarAccess.getSpinEquateAccess().getEnameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinEquate__EnameAssignment_1"


    // $ANTLR start "rule__SpinEquate__ValueAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8796:1: rule__SpinEquate__ValueAssignment_2 : ( ruleSPINDOUBLE ) ;
    public final void rule__SpinEquate__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8800:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8801:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8801:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8802:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getSpinEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__SpinEquate__ValueAssignment_217884);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getSpinEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinEquate__ValueAssignment_2"


    // $ANTLR start "rule__Mem__BufferAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8811:1: rule__Mem__BufferAssignment_1 : ( RULE_ID ) ;
    public final void rule__Mem__BufferAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8815:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8816:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8816:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8817:1: RULE_ID
            {
             before(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Mem__BufferAssignment_117915); 
             after(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__BufferAssignment_1"


    // $ANTLR start "rule__Mem__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8826:1: rule__Mem__LengthAssignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__Mem__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8830:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8831:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8831:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8832:1: ruleSPINREGISTER
            {
             before(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__Mem__LengthAssignment_217946);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__LengthAssignment_2"


    // $ANTLR start "rule__Offset__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8841:1: rule__Offset__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Offset__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8845:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8846:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8846:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8847:1: RULE_ID
            {
             before(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Offset__NameAssignment_117977); 
             after(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__NameAssignment_1"


    // $ANTLR start "rule__Offset__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8856:1: rule__Offset__LengthAssignment_2 : ( RULE_INT ) ;
    public final void rule__Offset__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8860:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8861:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8861:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8862:1: RULE_INT
            {
             before(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__Offset__LengthAssignment_218008); 
             after(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__LengthAssignment_2"


    // $ANTLR start "rule__SpinBool__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8871:1: rule__SpinBool__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__SpinBool__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8875:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8876:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8876:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8877:1: RULE_ID
            {
             before(grammarAccess.getSpinBoolAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SpinBool__NameAssignment_118039); 
             after(grammarAccess.getSpinBoolAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinBool__NameAssignment_1"


    // $ANTLR start "rule__SpinBool__ValueAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8886:1: rule__SpinBool__ValueAssignment_2 : ( ruleBOOLEAN ) ;
    public final void rule__SpinBool__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8890:1: ( ( ruleBOOLEAN ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8891:1: ( ruleBOOLEAN )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8891:1: ( ruleBOOLEAN )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8892:1: ruleBOOLEAN
            {
             before(grammarAccess.getSpinBoolAccess().getValueBOOLEANParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleBOOLEAN_in_rule__SpinBool__ValueAssignment_218070);
            ruleBOOLEAN();

            state._fsp--;

             after(grammarAccess.getSpinBoolAccess().getValueBOOLEANParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinBool__ValueAssignment_2"


    // $ANTLR start "rule__SpinSliderLabel__EnameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8901:1: rule__SpinSliderLabel__EnameAssignment_1 : ( RULE_ID ) ;
    public final void rule__SpinSliderLabel__EnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8905:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8906:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8906:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8907:1: RULE_ID
            {
             before(grammarAccess.getSpinSliderLabelAccess().getEnameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SpinSliderLabel__EnameAssignment_118101); 
             after(grammarAccess.getSpinSliderLabelAccess().getEnameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__EnameAssignment_1"


    // $ANTLR start "rule__SpinSliderLabel__ControlNameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8916:1: rule__SpinSliderLabel__ControlNameAssignment_2 : ( RULE_ID ) ;
    public final void rule__SpinSliderLabel__ControlNameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8920:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8921:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8921:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8922:1: RULE_ID
            {
             before(grammarAccess.getSpinSliderLabelAccess().getControlNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SpinSliderLabel__ControlNameAssignment_218132); 
             after(grammarAccess.getSpinSliderLabelAccess().getControlNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__ControlNameAssignment_2"


    // $ANTLR start "rule__SpinSliderLabel__MinValAssignment_3_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8931:1: rule__SpinSliderLabel__MinValAssignment_3_0 : ( ruleSPINDOUBLE ) ;
    public final void rule__SpinSliderLabel__MinValAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8935:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8936:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8936:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8937:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getSpinSliderLabelAccess().getMinValSPINDOUBLEParserRuleCall_3_0_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__SpinSliderLabel__MinValAssignment_3_018163);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getSpinSliderLabelAccess().getMinValSPINDOUBLEParserRuleCall_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__MinValAssignment_3_0"


    // $ANTLR start "rule__SpinSliderLabel__MaxValAssignment_3_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8946:1: rule__SpinSliderLabel__MaxValAssignment_3_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__SpinSliderLabel__MaxValAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8950:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8951:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8951:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8952:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getSpinSliderLabelAccess().getMaxValSPINDOUBLEParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__SpinSliderLabel__MaxValAssignment_3_118194);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getSpinSliderLabelAccess().getMaxValSPINDOUBLEParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__MaxValAssignment_3_1"


    // $ANTLR start "rule__SpinSliderLabel__MultiplierAssignment_3_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8961:1: rule__SpinSliderLabel__MultiplierAssignment_3_2 : ( ruleSPINDOUBLE ) ;
    public final void rule__SpinSliderLabel__MultiplierAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8965:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8966:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8966:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8967:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getSpinSliderLabelAccess().getMultiplierSPINDOUBLEParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__SpinSliderLabel__MultiplierAssignment_3_218225);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getSpinSliderLabelAccess().getMultiplierSPINDOUBLEParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__MultiplierAssignment_3_2"


    // $ANTLR start "rule__SpinSliderLabel__PrecisionAssignment_3_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8976:1: rule__SpinSliderLabel__PrecisionAssignment_3_3 : ( RULE_INT ) ;
    public final void rule__SpinSliderLabel__PrecisionAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8980:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8981:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8981:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8982:1: RULE_INT
            {
             before(grammarAccess.getSpinSliderLabelAccess().getPrecisionINTTerminalRuleCall_3_3_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SpinSliderLabel__PrecisionAssignment_3_318256); 
             after(grammarAccess.getSpinSliderLabelAccess().getPrecisionINTTerminalRuleCall_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__PrecisionAssignment_3_3"


    // $ANTLR start "rule__SpinSliderLabel__OptionAssignment_3_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8991:1: rule__SpinSliderLabel__OptionAssignment_3_4 : ( RULE_ID ) ;
    public final void rule__SpinSliderLabel__OptionAssignment_3_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8995:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8996:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8996:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8997:1: RULE_ID
            {
             before(grammarAccess.getSpinSliderLabelAccess().getOptionIDTerminalRuleCall_3_4_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SpinSliderLabel__OptionAssignment_3_418287); 
             after(grammarAccess.getSpinSliderLabelAccess().getOptionIDTerminalRuleCall_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinSliderLabel__OptionAssignment_3_4"


    // $ANTLR start "rule__SpinCheckBox__EnameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9006:1: rule__SpinCheckBox__EnameAssignment_1 : ( RULE_ID ) ;
    public final void rule__SpinCheckBox__EnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9010:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9011:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9011:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9012:1: RULE_ID
            {
             before(grammarAccess.getSpinCheckBoxAccess().getEnameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SpinCheckBox__EnameAssignment_118318); 
             after(grammarAccess.getSpinCheckBoxAccess().getEnameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinCheckBox__EnameAssignment_1"


    // $ANTLR start "rule__SpinCheckBox__ControlNameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9021:1: rule__SpinCheckBox__ControlNameAssignment_2 : ( RULE_ID ) ;
    public final void rule__SpinCheckBox__ControlNameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9025:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9026:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9026:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9027:1: RULE_ID
            {
             before(grammarAccess.getSpinCheckBoxAccess().getControlNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SpinCheckBox__ControlNameAssignment_218349); 
             after(grammarAccess.getSpinCheckBoxAccess().getControlNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinCheckBox__ControlNameAssignment_2"


    // $ANTLR start "rule__Comment__RemarkAssignment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9036:1: rule__Comment__RemarkAssignment : ( RULE_SC_COMMENT ) ;
    public final void rule__Comment__RemarkAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9040:1: ( ( RULE_SC_COMMENT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9041:1: ( RULE_SC_COMMENT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9041:1: ( RULE_SC_COMMENT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9042:1: RULE_SC_COMMENT
            {
             before(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); 
            match(input,RULE_SC_COMMENT,FOLLOW_RULE_SC_COMMENT_in_rule__Comment__RemarkAssignment18380); 
             after(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__RemarkAssignment"


    // $ANTLR start "rule__Label__NameAssignment_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9051:1: rule__Label__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Label__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9055:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9056:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9056:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9057:1: RULE_ID
            {
             before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Label__NameAssignment_018411); 
             after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__NameAssignment_0"


    // $ANTLR start "rule__IsPinConnected__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9066:1: rule__IsPinConnected__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__IsPinConnected__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9070:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9071:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9071:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9072:1: RULE_ID
            {
             before(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__IsPinConnected__Arg1Assignment_118442); 
             after(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Arg1Assignment_1"


    // $ANTLR start "rule__IsTrue__VariableAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9081:1: rule__IsTrue__VariableAssignment_1 : ( RULE_ID ) ;
    public final void rule__IsTrue__VariableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9085:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9086:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9086:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9087:1: RULE_ID
            {
             before(grammarAccess.getIsTrueAccess().getVariableIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__IsTrue__VariableAssignment_118473); 
             after(grammarAccess.getIsTrueAccess().getVariableIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsTrue__VariableAssignment_1"


    // $ANTLR start "rule__GetInputDefault__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9096:1: rule__GetInputDefault__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__GetInputDefault__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9100:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9101:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9101:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9102:1: RULE_ID
            {
             before(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetInputDefault__NameAssignment_118504); 
             after(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__NameAssignment_1"


    // $ANTLR start "rule__GetInputDefault__VariableAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9111:1: rule__GetInputDefault__VariableAssignment_2 : ( RULE_ID ) ;
    public final void rule__GetInputDefault__VariableAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9115:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9116:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9116:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9117:1: RULE_ID
            {
             before(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetInputDefault__VariableAssignment_218535); 
             after(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__VariableAssignment_2"


    // $ANTLR start "rule__GetInputDefault__ScaleAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9126:1: rule__GetInputDefault__ScaleAssignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__GetInputDefault__ScaleAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9130:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9131:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9131:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9132:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__ScaleAssignment_318566);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__ScaleAssignment_3"


    // $ANTLR start "rule__GetInputDefault__DefaultValAssignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9141:1: rule__GetInputDefault__DefaultValAssignment_4 : ( ruleSPINDOUBLE ) ;
    public final void rule__GetInputDefault__DefaultValAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9145:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9146:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9146:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9147:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__DefaultValAssignment_418597);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__DefaultValAssignment_4"


    // $ANTLR start "rule__GetDelayScaleControl__RatioAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9156:1: rule__GetDelayScaleControl__RatioAssignment_1 : ( RULE_ID ) ;
    public final void rule__GetDelayScaleControl__RatioAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9160:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9161:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9161:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9162:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getRatioIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__RatioAssignment_118628); 
             after(grammarAccess.getGetDelayScaleControlAccess().getRatioIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__RatioAssignment_1"


    // $ANTLR start "rule__GetDelayScaleControl__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9171:1: rule__GetDelayScaleControl__LengthAssignment_2 : ( RULE_ID ) ;
    public final void rule__GetDelayScaleControl__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9175:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9176:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9176:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9177:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getLengthIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__LengthAssignment_218659); 
             after(grammarAccess.getGetDelayScaleControlAccess().getLengthIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__LengthAssignment_2"


    // $ANTLR start "rule__GetDelayScaleControl__OffsetAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9186:1: rule__GetDelayScaleControl__OffsetAssignment_3 : ( RULE_ID ) ;
    public final void rule__GetDelayScaleControl__OffsetAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9190:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9191:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9191:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9192:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getOffsetIDTerminalRuleCall_3_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__OffsetAssignment_318690); 
             after(grammarAccess.getGetDelayScaleControlAccess().getOffsetIDTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__OffsetAssignment_3"


    // $ANTLR start "rule__GetDelayScaleControl__ControlAssignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9201:1: rule__GetDelayScaleControl__ControlAssignment_4 : ( RULE_ID ) ;
    public final void rule__GetDelayScaleControl__ControlAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9205:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9206:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9206:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9207:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleControlAccess().getControlIDTerminalRuleCall_4_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__ControlAssignment_418721); 
             after(grammarAccess.getGetDelayScaleControlAccess().getControlIDTerminalRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScaleControl__ControlAssignment_4"


    // $ANTLR start "rule__SetOutputPin__PinNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9216:1: rule__SetOutputPin__PinNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__SetOutputPin__PinNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9220:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9221:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9221:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9222:1: RULE_ID
            {
             before(grammarAccess.getSetOutputPinAccess().getPinNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SetOutputPin__PinNameAssignment_118752); 
             after(grammarAccess.getSetOutputPinAccess().getPinNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__PinNameAssignment_1"


    // $ANTLR start "rule__SetOutputPin__VarNameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9231:1: rule__SetOutputPin__VarNameAssignment_2 : ( RULE_ID ) ;
    public final void rule__SetOutputPin__VarNameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9235:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9236:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9236:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9237:1: RULE_ID
            {
             before(grammarAccess.getSetOutputPinAccess().getVarNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SetOutputPin__VarNameAssignment_218783); 
             after(grammarAccess.getSetOutputPinAccess().getVarNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetOutputPin__VarNameAssignment_2"


    // $ANTLR start "rule__ReadRegister__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9246:1: rule__ReadRegister__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__ReadRegister__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9250:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9251:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9251:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9252:1: ruleSPINREGISTER
            {
             before(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ReadRegister__Arg1Assignment_118814);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Arg1Assignment_1"


    // $ANTLR start "rule__ReadRegister__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9261:1: rule__ReadRegister__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadRegister__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9265:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9266:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9266:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9267:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegister__Arg2Assignment_318845);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegisterLowshelf__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9276:1: rule__WriteRegisterLowshelf__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegisterLowshelf__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9280:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9281:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9281:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9282:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterLowshelf__Arg1Assignment_118876);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegisterLowshelf__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9291:1: rule__WriteRegisterLowshelf__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegisterLowshelf__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9295:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9296:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9296:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9297:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterLowshelf__Arg2Assignment_318907);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegisterHighshelf__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9306:1: rule__WriteRegisterHighshelf__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegisterHighshelf__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9310:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9311:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9311:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9312:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterHighshelf__Arg1Assignment_118938);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegisterHighshelf__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9321:1: rule__WriteRegisterHighshelf__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegisterHighshelf__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9325:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9326:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9326:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9327:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterHighshelf__Arg2Assignment_318969);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegister__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9336:1: rule__WriteRegister__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegister__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9340:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9341:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9341:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9342:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegister__Arg1Assignment_119000);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegister__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9351:1: rule__WriteRegister__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegister__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9355:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9356:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9356:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9357:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegister__Arg2Assignment_319031);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Arg2Assignment_3"


    // $ANTLR start "rule__Maxx__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9366:1: rule__Maxx__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__Maxx__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9370:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9371:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9371:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9372:1: ruleSPINREGISTER
            {
             before(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__Maxx__Arg1Assignment_119062);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Arg1Assignment_1"


    // $ANTLR start "rule__Maxx__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9381:1: rule__Maxx__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Maxx__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9385:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9386:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9386:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9387:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Maxx__Arg2Assignment_319093);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Arg2Assignment_3"


    // $ANTLR start "rule__ReadRegisterFilter__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9396:1: rule__ReadRegisterFilter__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__ReadRegisterFilter__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9400:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9401:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9401:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9402:1: ruleSPINREGISTER
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ReadRegisterFilter__Arg1Assignment_119124);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Arg1Assignment_1"


    // $ANTLR start "rule__ReadRegisterFilter__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9411:1: rule__ReadRegisterFilter__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadRegisterFilter__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9415:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9416:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9416:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9417:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegisterFilter__Arg2Assignment_319155);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Arg2Assignment_3"


    // $ANTLR start "rule__Mulx__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9426:1: rule__Mulx__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Mulx__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9430:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9431:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9431:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9432:1: RULE_ID
            {
             before(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Mulx__Arg1Assignment_119186); 
             after(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Arg1Assignment_1"


    // $ANTLR start "rule__Ldax__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9441:1: rule__Ldax__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Ldax__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9445:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9446:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9446:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9447:1: RULE_ID
            {
             before(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Ldax__Arg1Assignment_119217); 
             after(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Arg1Assignment_1"


    // $ANTLR start "rule__Exp__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9456:1: rule__Exp__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__Exp__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9460:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9461:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9461:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9462:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg1Assignment_119248);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Arg1Assignment_1"


    // $ANTLR start "rule__Exp__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9471:1: rule__Exp__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Exp__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9475:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9476:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9476:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9477:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg2Assignment_319279);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Arg2Assignment_3"


    // $ANTLR start "rule__Log__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9486:1: rule__Log__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__Log__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9490:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9491:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9491:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9492:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg1Assignment_119310);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Arg1Assignment_1"


    // $ANTLR start "rule__Log__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9501:1: rule__Log__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Log__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9505:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9506:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9506:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9507:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg2Assignment_319341);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Arg2Assignment_3"


    // $ANTLR start "rule__ScaleOffset__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9516:1: rule__ScaleOffset__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__ScaleOffset__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9520:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9521:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9521:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9522:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg1Assignment_119372);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Arg1Assignment_1"


    // $ANTLR start "rule__ScaleOffset__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9531:1: rule__ScaleOffset__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ScaleOffset__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9535:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9536:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9536:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9537:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg2Assignment_319403);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Arg2Assignment_3"


    // $ANTLR start "rule__WriteDelay__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9546:1: rule__WriteDelay__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__WriteDelay__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9550:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9551:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9551:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9552:1: ruleSPINMEM
            {
             before(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__WriteDelay__Arg1Assignment_119434);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Arg1Assignment_1"


    // $ANTLR start "rule__WriteDelay__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9561:1: rule__WriteDelay__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteDelay__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9565:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9566:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9566:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9567:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteDelay__Arg2Assignment_319465);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Arg2Assignment_3"


    // $ANTLR start "rule__WriteAllpass__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9576:1: rule__WriteAllpass__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__WriteAllpass__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9580:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9581:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9581:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9582:1: ruleSPINMEM
            {
             before(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__WriteAllpass__Arg1Assignment_119496);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Arg1Assignment_1"


    // $ANTLR start "rule__WriteAllpass__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9591:1: rule__WriteAllpass__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteAllpass__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9595:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9596:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9596:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9597:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteAllpass__Arg2Assignment_319527);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Arg2Assignment_3"


    // $ANTLR start "rule__ReadDelay__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9606:1: rule__ReadDelay__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__ReadDelay__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9610:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9611:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9611:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9612:1: ruleSPINMEM
            {
             before(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__ReadDelay__Arg1Assignment_119558);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Arg1Assignment_1"


    // $ANTLR start "rule__ReadDelay__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9621:1: rule__ReadDelay__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadDelay__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9625:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9626:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9626:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9627:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelay__Arg2Assignment_319589);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Arg2Assignment_3"


    // $ANTLR start "rule__LoadSinLFO__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9636:1: rule__LoadSinLFO__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__LoadSinLFO__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9640:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9641:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9641:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9642:1: ruleSPINREGISTER
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__LoadSinLFO__Arg1Assignment_119620);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg1Assignment_1"


    // $ANTLR start "rule__LoadSinLFO__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9651:1: rule__LoadSinLFO__Arg2Assignment_3 : ( RULE_INT ) ;
    public final void rule__LoadSinLFO__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9655:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9656:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9656:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9657:1: RULE_INT
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg2Assignment_319651); 
             after(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg2Assignment_3"


    // $ANTLR start "rule__LoadSinLFO__Arg3Assignment_5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9666:1: rule__LoadSinLFO__Arg3Assignment_5 : ( RULE_INT ) ;
    public final void rule__LoadSinLFO__Arg3Assignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9670:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9671:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9671:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9672:1: RULE_INT
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg3Assignment_519682); 
             after(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg3Assignment_5"


    // $ANTLR start "rule__LoadRampLFO__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9681:1: rule__LoadRampLFO__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__LoadRampLFO__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9685:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9686:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9686:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9687:1: ruleSPINREGISTER
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__LoadRampLFO__Arg1Assignment_119713);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg1Assignment_1"


    // $ANTLR start "rule__LoadRampLFO__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9696:1: rule__LoadRampLFO__Arg2Assignment_3 : ( RULE_INT ) ;
    public final void rule__LoadRampLFO__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9700:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9701:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9701:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9702:1: RULE_INT
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg2Assignment_319744); 
             after(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg2Assignment_3"


    // $ANTLR start "rule__LoadRampLFO__Arg3Assignment_5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9711:1: rule__LoadRampLFO__Arg3Assignment_5 : ( RULE_INT ) ;
    public final void rule__LoadRampLFO__Arg3Assignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9715:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9716:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9716:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9717:1: RULE_INT
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg3Assignment_519775); 
             after(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg3Assignment_5"


    // $ANTLR start "rule__ChorusReadDelay__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9726:1: rule__ChorusReadDelay__Arg1Assignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__ChorusReadDelay__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9730:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9731:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9731:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9732:1: ruleSPINREGISTER
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadDelay__Arg1Assignment_219806);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusReadDelay__Arg2Assignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9741:1: rule__ChorusReadDelay__Arg2Assignment_4 : ( ruleSPINCHOREGFLAGS ) ;
    public final void rule__ChorusReadDelay__Arg2Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9745:1: ( ( ruleSPINCHOREGFLAGS ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9746:1: ( ruleSPINCHOREGFLAGS )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9746:1: ( ruleSPINCHOREGFLAGS )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9747:1: ruleSPINCHOREGFLAGS
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusReadDelay__Arg2Assignment_419837);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg2Assignment_4"


    // $ANTLR start "rule__ChorusReadDelay__Arg3Assignment_6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9756:1: rule__ChorusReadDelay__Arg3Assignment_6 : ( ruleSPINMEM ) ;
    public final void rule__ChorusReadDelay__Arg3Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9760:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9761:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9761:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9762:1: ruleSPINMEM
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__ChorusReadDelay__Arg3Assignment_619868);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg3Assignment_6"


    // $ANTLR start "rule__ChorusReadValue__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9771:1: rule__ChorusReadValue__Arg1Assignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__ChorusReadValue__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9775:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9776:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9776:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9777:1: ruleSPINREGISTER
            {
             before(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadValue__Arg1Assignment_219899);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusScaleOffset__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9786:1: rule__ChorusScaleOffset__Arg1Assignment_2 : ( RULE_ID ) ;
    public final void rule__ChorusScaleOffset__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9790:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9791:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9791:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9792:1: RULE_ID
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ChorusScaleOffset__Arg1Assignment_219930); 
             after(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusScaleOffset__Arg2Assignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9801:1: rule__ChorusScaleOffset__Arg2Assignment_4 : ( ruleSPINCHOREGFLAGS ) ;
    public final void rule__ChorusScaleOffset__Arg2Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9805:1: ( ( ruleSPINCHOREGFLAGS ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9806:1: ( ruleSPINCHOREGFLAGS )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9806:1: ( ruleSPINCHOREGFLAGS )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9807:1: ruleSPINCHOREGFLAGS
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusScaleOffset__Arg2Assignment_419961);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg2Assignment_4"


    // $ANTLR start "rule__ChorusScaleOffset__Arg3Assignment_6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9816:1: rule__ChorusScaleOffset__Arg3Assignment_6 : ( ruleSPINDOUBLE ) ;
    public final void rule__ChorusScaleOffset__Arg3Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9820:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9821:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9821:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9822:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ChorusScaleOffset__Arg3Assignment_619992);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg3Assignment_6"


    // $ANTLR start "rule__ReadDelayPointer__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9831:1: rule__ReadDelayPointer__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadDelayPointer__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9835:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9836:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9836:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9837:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelayPointer__Arg1Assignment_120023);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Arg1Assignment_1"


    // $ANTLR start "rule__And__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9846:1: rule__And__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__And__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9850:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9851:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9851:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9852:1: ruleBINARY24
            {
             before(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__And__Arg1Assignment_120054);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Arg1Assignment_1"


    // $ANTLR start "rule__Or__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9861:1: rule__Or__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__Or__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9865:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9866:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9866:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9867:1: ruleBINARY24
            {
             before(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__Or__Arg1Assignment_120085);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Arg1Assignment_1"


    // $ANTLR start "rule__Xor__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9876:1: rule__Xor__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__Xor__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9880:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9881:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9881:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9882:1: ruleBINARY24
            {
             before(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__Xor__Arg1Assignment_120116);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Arg1Assignment_1"


    // $ANTLR start "rule__Jam__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9891:1: rule__Jam__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Jam__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9895:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9896:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9896:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9897:1: RULE_ID
            {
             before(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Jam__Arg1Assignment_120147); 
             after(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Arg1Assignment_1"


    // $ANTLR start "rule__Skip__FlagsAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9906:1: rule__Skip__FlagsAssignment_1 : ( RULE_ID ) ;
    public final void rule__Skip__FlagsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9910:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9911:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9911:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9912:1: RULE_ID
            {
             before(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Skip__FlagsAssignment_120178); 
             after(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__FlagsAssignment_1"


    // $ANTLR start "rule__Skip__LabelAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9921:1: rule__Skip__LabelAssignment_3 : ( ( RULE_ID ) ) ;
    public final void rule__Skip__LabelAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9925:1: ( ( ( RULE_ID ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9926:1: ( ( RULE_ID ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9926:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9927:1: ( RULE_ID )
            {
             before(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9928:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9929:1: RULE_ID
            {
             before(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Skip__LabelAssignment_320213); 
             after(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); 

            }

             after(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__LabelAssignment_3"


    // $ANTLR start "rule__SPINMEM__BufferAssignment_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9940:1: rule__SPINMEM__BufferAssignment_0 : ( ruleSPINBUF ) ;
    public final void rule__SPINMEM__BufferAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9944:1: ( ( ruleSPINBUF ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9945:1: ( ruleSPINBUF )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9945:1: ( ruleSPINBUF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9946:1: ruleSPINBUF
            {
             before(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); 
            pushFollow(FOLLOW_ruleSPINBUF_in_rule__SPINMEM__BufferAssignment_020248);
            ruleSPINBUF();

            state._fsp--;

             after(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__BufferAssignment_0"


    // $ANTLR start "rule__SPINMEM__ValueAssignment_1_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9955:1: rule__SPINMEM__ValueAssignment_1_0 : ( RULE_INT ) ;
    public final void rule__SPINMEM__ValueAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9959:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9960:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9960:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9961:1: RULE_INT
            {
             before(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINMEM__ValueAssignment_1_020279); 
             after(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__ValueAssignment_1_0"


    // $ANTLR start "rule__SPINMEM__OffsetAssignment_1_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9970:1: rule__SPINMEM__OffsetAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__SPINMEM__OffsetAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9974:1: ( ( ( RULE_ID ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9975:1: ( ( RULE_ID ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9975:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9976:1: ( RULE_ID )
            {
             before(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9977:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9978:1: RULE_ID
            {
             before(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINMEM__OffsetAssignment_1_120314); 
             after(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); 

            }

             after(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__OffsetAssignment_1_1"

    // Delegated rules


 

    public static final BitSet FOLLOW_ruleProgram_in_entryRuleProgram61 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProgram68 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__0_in_ruleProgram94 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePin_in_entryRulePin121 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePin128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Pin__Alternatives_in_rulePin154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInputPin_in_entryRuleInputPin181 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInputPin188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__InputPin__Alternatives_in_ruleInputPin214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutputPin_in_entryRuleOutputPin241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOutputPin248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__OutputPin__Alternatives_in_ruleOutputPin274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioInput_in_entryRuleAudioInput301 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAudioInput308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__0_in_ruleAudioInput334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioOutput_in_entryRuleAudioOutput361 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAudioOutput368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__0_in_ruleAudioOutput394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlInput_in_entryRuleControlInput421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControlInput428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__0_in_ruleControlInput454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlOutput_in_entryRuleControlOutput481 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControlOutput488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__0_in_ruleControlOutput514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinElement_in_entryRuleSpinElement541 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSpinElement548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinElement__Alternatives_in_ruleSpinElement574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinEquate_in_entryRuleSpinEquate601 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSpinEquate608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinEquate__Group__0_in_ruleSpinEquate634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMem_in_entryRuleMem661 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMem668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__0_in_ruleMem694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOffset_in_entryRuleOffset721 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOffset728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__0_in_ruleOffset754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinBool_in_entryRuleSpinBool781 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSpinBool788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinBool__Group__0_in_ruleSpinBool814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControl_in_entryRuleControl841 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControl848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Control__Alternatives_in_ruleControl874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinSliderLabel_in_entryRuleSpinSliderLabel901 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSpinSliderLabel908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group__0_in_ruleSpinSliderLabel934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinCheckBox_in_entryRuleSpinCheckBox961 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSpinCheckBox968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinCheckBox__Group__0_in_ruleSpinCheckBox994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_entryRuleComment1021 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComment1028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comment__RemarkAssignment_in_ruleComment1054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_entryRuleLabel1081 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabel1088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__0_in_ruleLabel1114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMacro_in_entryRuleMacro1141 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMacro1148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Macro__Alternatives_in_ruleMacro1174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsPinConnected_in_entryRuleIsPinConnected1201 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsPinConnected1208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__0_in_ruleIsPinConnected1234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsTrue_in_entryRuleIsTrue1261 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsTrue1268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsTrue__Group__0_in_ruleIsTrue1294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsElse_in_entryRuleIsElse1321 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsElse1328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__0_in_ruleIsElse1354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsEndif_in_entryRuleIsEndif1381 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsEndif1388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__0_in_ruleIsEndif1414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetInputDefault_in_entryRuleGetInputDefault1441 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetInputDefault1448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__0_in_ruleGetInputDefault1474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetDelayScaleControl_in_entryRuleGetDelayScaleControl1501 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetDelayScaleControl1508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__0_in_ruleGetDelayScaleControl1534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetBaseAddress_in_entryRuleGetBaseAddress1561 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetBaseAddress1568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetBaseAddress__Group__0_in_ruleGetBaseAddress1594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetOutputPin_in_entryRuleSetOutputPin1621 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSetOutputPin1628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__0_in_ruleSetOutputPin1654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstruction_in_entryRuleInstruction1681 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInstruction1688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Instruction__Alternatives_in_ruleInstruction1714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_S1_14_in_entryRuleInst_B6_S1_141741 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B6_S1_141748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B6_S1_14__Alternatives_in_ruleInst_B6_S1_141774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B15_S1_9_in_entryRuleInst_B15_S1_91801 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B15_S1_91808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B15_S1_9__Alternatives_in_ruleInst_B15_S1_91834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_in_entryRuleInst_B61861 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B61868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B6__Alternatives_in_ruleInst_B61894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B24_in_entryRuleInst_B241921 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B241928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B24__Alternatives_in_ruleInst_B241954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_X0_in_entryRuleInst_X01981 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_X01988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_X0__Alternatives_in_ruleInst_X02014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_S1_14_S1_10_in_entryRuleInst_S1_14_S1_102041 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_S1_14_S1_102048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_S1_14_S1_10__Alternatives_in_ruleInst_S1_14_S1_102074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegister_in_entryRuleReadRegister2101 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadRegister2108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__0_in_ruleReadRegister2134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterLowshelf_in_entryRuleWriteRegisterLowshelf2161 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegisterLowshelf2168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__0_in_ruleWriteRegisterLowshelf2194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterHighshelf_in_entryRuleWriteRegisterHighshelf2221 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegisterHighshelf2228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__0_in_ruleWriteRegisterHighshelf2254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegister_in_entryRuleWriteRegister2281 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegister2288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__0_in_ruleWriteRegister2314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMaxx_in_entryRuleMaxx2341 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMaxx2348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__0_in_ruleMaxx2374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegisterFilter_in_entryRuleReadRegisterFilter2401 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadRegisterFilter2408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__0_in_ruleReadRegisterFilter2434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulx_in_entryRuleMulx2461 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMulx2468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__0_in_ruleMulx2494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLdax_in_entryRuleLdax2521 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLdax2528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__0_in_ruleLdax2554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExp_in_entryRuleExp2581 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExp2588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__0_in_ruleExp2614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLog_in_entryRuleLog2641 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLog2648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__0_in_ruleLog2674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleScaleOffset_in_entryRuleScaleOffset2701 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleScaleOffset2708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__0_in_ruleScaleOffset2734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteDelay_in_entryRuleWriteDelay2761 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteDelay2768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__0_in_ruleWriteDelay2794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteAllpass_in_entryRuleWriteAllpass2821 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteAllpass2828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__0_in_ruleWriteAllpass2854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelay_in_entryRuleReadDelay2881 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadDelay2888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__0_in_ruleReadDelay2914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadSinLFO_in_entryRuleLoadSinLFO2941 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLoadSinLFO2948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__0_in_ruleLoadSinLFO2974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadRampLFO_in_entryRuleLoadRampLFO3001 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLoadRampLFO3008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__0_in_ruleLoadRampLFO3034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadDelay_in_entryRuleChorusReadDelay3061 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusReadDelay3068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__0_in_ruleChorusReadDelay3094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadValue_in_entryRuleChorusReadValue3121 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusReadValue3128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__0_in_ruleChorusReadValue3154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusScaleOffset_in_entryRuleChorusScaleOffset3181 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusScaleOffset3188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__0_in_ruleChorusScaleOffset3214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelayPointer_in_entryRuleReadDelayPointer3241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadDelayPointer3248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__0_in_ruleReadDelayPointer3274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnd_in_entryRuleAnd3301 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAnd3308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__0_in_ruleAnd3334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOr_in_entryRuleOr3361 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOr3368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__0_in_ruleOr3394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXor_in_entryRuleXor3421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXor3428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__0_in_ruleXor3454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJam_in_entryRuleJam3481 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJam3488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__0_in_ruleJam3514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClr_in_entryRuleClr3541 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleClr3548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__0_in_ruleClr3574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNot_in_entryRuleNot3601 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNot3608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__0_in_ruleNot3634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbsa_in_entryRuleAbsa3661 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbsa3668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__0_in_ruleAbsa3694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSkip_in_entryRuleSkip3721 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSkip3728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__0_in_ruleSkip3754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_entryRuleSPINDOUBLE3781 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINDOUBLE3788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__0_in_ruleSPINDOUBLE3814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_entryRuleSPINREGISTER3841 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINREGISTER3848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINREGISTER__Alternatives_in_ruleSPINREGISTER3874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_entryRuleSPINCHOREGFLAGS3901 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINCHOREGFLAGS3908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Alternatives_in_ruleSPINCHOREGFLAGS3934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_entryRuleSPINMEM3961 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINMEM3968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__0_in_ruleSPINMEM3994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINBUF_in_entryRuleSPINBUF4021 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINBUF4028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__0_in_ruleSPINBUF4054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_entryRuleBINARY244081 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBINARY244088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Alternatives_in_ruleBINARY244114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBOOLEAN_in_entryRuleBOOLEAN4141 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBOOLEAN4148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BOOLEAN__Alternatives_in_ruleBOOLEAN4174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInputPin_in_rule__Pin__Alternatives4210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutputPin_in_rule__Pin__Alternatives4227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioInput_in_rule__InputPin__Alternatives4259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlInput_in_rule__InputPin__Alternatives4276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioOutput_in_rule__OutputPin__Alternatives4308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlOutput_in_rule__OutputPin__Alternatives4325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControl_in_rule__SpinElement__Alternatives4357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinEquate_in_rule__SpinElement__Alternatives4374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinBool_in_rule__SpinElement__Alternatives4391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMem_in_rule__SpinElement__Alternatives4408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstruction_in_rule__SpinElement__Alternatives4425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_rule__SpinElement__Alternatives4442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_rule__SpinElement__Alternatives4459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMacro_in_rule__SpinElement__Alternatives4476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOffset_in_rule__SpinElement__Alternatives4493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinSliderLabel_in_rule__Control__Alternatives4525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinCheckBox_in_rule__Control__Alternatives4542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsPinConnected_in_rule__Macro__Alternatives4574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsTrue_in_rule__Macro__Alternatives4591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsElse_in_rule__Macro__Alternatives4608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsEndif_in_rule__Macro__Alternatives4625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetInputDefault_in_rule__Macro__Alternatives4642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetDelayScaleControl_in_rule__Macro__Alternatives4659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetOutputPin_in_rule__Macro__Alternatives4676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetBaseAddress_in_rule__Macro__Alternatives4693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B15_S1_9_in_rule__Instruction__Alternatives4725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_S1_14_in_rule__Instruction__Alternatives4742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_S1_14_S1_10_in_rule__Instruction__Alternatives4759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_in_rule__Instruction__Alternatives4776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B24_in_rule__Instruction__Alternatives4793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSkip_in_rule__Instruction__Alternatives4810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJam_in_rule__Instruction__Alternatives4827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_X0_in_rule__Instruction__Alternatives4844 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadSinLFO_in_rule__Instruction__Alternatives4861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadRampLFO_in_rule__Instruction__Alternatives4878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadDelay_in_rule__Instruction__Alternatives4895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadValue_in_rule__Instruction__Alternatives4912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusScaleOffset_in_rule__Instruction__Alternatives4929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLog_in_rule__Instruction__Alternatives4946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelayPointer_in_rule__Instruction__Alternatives4963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegister_in_rule__Inst_B6_S1_14__Alternatives4995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegister_in_rule__Inst_B6_S1_14__Alternatives5012 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegisterFilter_in_rule__Inst_B6_S1_14__Alternatives5029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMaxx_in_rule__Inst_B6_S1_14__Alternatives5046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterHighshelf_in_rule__Inst_B6_S1_14__Alternatives5063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterLowshelf_in_rule__Inst_B6_S1_14__Alternatives5080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelay_in_rule__Inst_B15_S1_9__Alternatives5112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteDelay_in_rule__Inst_B15_S1_9__Alternatives5129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteAllpass_in_rule__Inst_B15_S1_9__Alternatives5146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulx_in_rule__Inst_B6__Alternatives5178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLdax_in_rule__Inst_B6__Alternatives5195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnd_in_rule__Inst_B24__Alternatives5227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOr_in_rule__Inst_B24__Alternatives5244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXor_in_rule__Inst_B24__Alternatives5261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClr_in_rule__Inst_X0__Alternatives5293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNot_in_rule__Inst_X0__Alternatives5310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbsa_in_rule__Inst_X0__Alternatives5327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExp_in_rule__Inst_S1_14_S1_10__Alternatives5359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleScaleOffset_in_rule__Inst_S1_14_S1_10__Alternatives5376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINDOUBLE__Alternatives_15408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__0_in_rule__SPINDOUBLE__Alternatives_15425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINREGISTER__Alternatives5458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINREGISTER__Alternatives5475 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINCHOREGFLAGS__Alternatives5507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0_in_rule__SPINCHOREGFLAGS__Alternatives5524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__ValueAssignment_1_0_in_rule__SPINMEM__Alternatives_15558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__OffsetAssignment_1_1_in_rule__SPINMEM__Alternatives_15576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_rule__SPINBUF__Alternatives_15610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_rule__SPINBUF__Alternatives_15630 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_rule__SPINBUF__Alternatives_25665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_rule__SPINBUF__Alternatives_25685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__0_in_rule__BINARY24__Alternatives5719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__0_in_rule__BINARY24__Alternatives5737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_rule__BOOLEAN__Alternatives5771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_rule__BOOLEAN__Alternatives5791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__0__Impl_in_rule__Program__Group__05823 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Program__Group__1_in_rule__Program__Group__05826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_rule__Program__Group__0__Impl5854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__1__Impl_in_rule__Program__Group__15885 = new BitSet(new long[]{0x0000000000780000L});
    public static final BitSet FOLLOW_rule__Program__Group__2_in_rule__Program__Group__15888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__NameAssignment_1_in_rule__Program__Group__1__Impl5915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__2__Impl_in_rule__Program__Group__25945 = new BitSet(new long[]{0xFFFFFF7FDF800050L,0x0000000000000007L});
    public static final BitSet FOLLOW_rule__Program__Group__3_in_rule__Program__Group__25948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5977 = new BitSet(new long[]{0x0000000000780002L});
    public static final BitSet FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5989 = new BitSet(new long[]{0x0000000000780002L});
    public static final BitSet FOLLOW_rule__Program__Group__3__Impl_in_rule__Program__Group__36022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__ElementsAssignment_3_in_rule__Program__Group__3__Impl6051 = new BitSet(new long[]{0xFFFFFF7FDF800052L,0x0000000000000007L});
    public static final BitSet FOLLOW_rule__Program__ElementsAssignment_3_in_rule__Program__Group__3__Impl6063 = new BitSet(new long[]{0xFFFFFF7FDF800052L,0x0000000000000007L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__0__Impl_in_rule__AudioInput__Group__06104 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__1_in_rule__AudioInput__Group__06107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_rule__AudioInput__Group__0__Impl6135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__1__Impl_in_rule__AudioInput__Group__16166 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__2_in_rule__AudioInput__Group__16169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__VarNameAssignment_1_in_rule__AudioInput__Group__1__Impl6196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__2__Impl_in_rule__AudioInput__Group__26226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__NameAssignment_2_in_rule__AudioInput__Group__2__Impl6253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__0__Impl_in_rule__AudioOutput__Group__06289 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__1_in_rule__AudioOutput__Group__06292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_rule__AudioOutput__Group__0__Impl6320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__1__Impl_in_rule__AudioOutput__Group__16351 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__2_in_rule__AudioOutput__Group__16354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__VarNameAssignment_1_in_rule__AudioOutput__Group__1__Impl6381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__2__Impl_in_rule__AudioOutput__Group__26411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__NameAssignment_2_in_rule__AudioOutput__Group__2__Impl6438 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__0__Impl_in_rule__ControlInput__Group__06474 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__1_in_rule__ControlInput__Group__06477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_rule__ControlInput__Group__0__Impl6505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__1__Impl_in_rule__ControlInput__Group__16536 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__2_in_rule__ControlInput__Group__16539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__VarNameAssignment_1_in_rule__ControlInput__Group__1__Impl6566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__2__Impl_in_rule__ControlInput__Group__26596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__NameAssignment_2_in_rule__ControlInput__Group__2__Impl6623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__0__Impl_in_rule__ControlOutput__Group__06659 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__1_in_rule__ControlOutput__Group__06662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_rule__ControlOutput__Group__0__Impl6690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__1__Impl_in_rule__ControlOutput__Group__16721 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__2_in_rule__ControlOutput__Group__16724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__VarNameAssignment_1_in_rule__ControlOutput__Group__1__Impl6751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__2__Impl_in_rule__ControlOutput__Group__26781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__NameAssignment_2_in_rule__ControlOutput__Group__2__Impl6808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinEquate__Group__0__Impl_in_rule__SpinEquate__Group__06844 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SpinEquate__Group__1_in_rule__SpinEquate__Group__06847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_rule__SpinEquate__Group__0__Impl6875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinEquate__Group__1__Impl_in_rule__SpinEquate__Group__16906 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__SpinEquate__Group__2_in_rule__SpinEquate__Group__16909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinEquate__EnameAssignment_1_in_rule__SpinEquate__Group__1__Impl6936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinEquate__Group__2__Impl_in_rule__SpinEquate__Group__26966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinEquate__ValueAssignment_2_in_rule__SpinEquate__Group__2__Impl6993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__0__Impl_in_rule__Mem__Group__07029 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Mem__Group__1_in_rule__Mem__Group__07032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_rule__Mem__Group__0__Impl7060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__1__Impl_in_rule__Mem__Group__17091 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__Mem__Group__2_in_rule__Mem__Group__17094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__BufferAssignment_1_in_rule__Mem__Group__1__Impl7121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__2__Impl_in_rule__Mem__Group__27151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__LengthAssignment_2_in_rule__Mem__Group__2__Impl7178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__0__Impl_in_rule__Offset__Group__07214 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Offset__Group__1_in_rule__Offset__Group__07217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_rule__Offset__Group__0__Impl7245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__1__Impl_in_rule__Offset__Group__17276 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__Offset__Group__2_in_rule__Offset__Group__17279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__NameAssignment_1_in_rule__Offset__Group__1__Impl7306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__2__Impl_in_rule__Offset__Group__27336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__LengthAssignment_2_in_rule__Offset__Group__2__Impl7363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinBool__Group__0__Impl_in_rule__SpinBool__Group__07399 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SpinBool__Group__1_in_rule__SpinBool__Group__07402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_rule__SpinBool__Group__0__Impl7430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinBool__Group__1__Impl_in_rule__SpinBool__Group__17461 = new BitSet(new long[]{0x0000000000030000L});
    public static final BitSet FOLLOW_rule__SpinBool__Group__2_in_rule__SpinBool__Group__17464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinBool__NameAssignment_1_in_rule__SpinBool__Group__1__Impl7491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinBool__Group__2__Impl_in_rule__SpinBool__Group__27521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinBool__ValueAssignment_2_in_rule__SpinBool__Group__2__Impl7548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group__0__Impl_in_rule__SpinSliderLabel__Group__07584 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group__1_in_rule__SpinSliderLabel__Group__07587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_rule__SpinSliderLabel__Group__0__Impl7615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group__1__Impl_in_rule__SpinSliderLabel__Group__17646 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group__2_in_rule__SpinSliderLabel__Group__17649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__EnameAssignment_1_in_rule__SpinSliderLabel__Group__1__Impl7676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group__2__Impl_in_rule__SpinSliderLabel__Group__27706 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group__3_in_rule__SpinSliderLabel__Group__27709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__ControlNameAssignment_2_in_rule__SpinSliderLabel__Group__2__Impl7736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group__3__Impl_in_rule__SpinSliderLabel__Group__37766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__0_in_rule__SpinSliderLabel__Group__3__Impl7793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__0__Impl_in_rule__SpinSliderLabel__Group_3__07832 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__1_in_rule__SpinSliderLabel__Group_3__07835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__MinValAssignment_3_0_in_rule__SpinSliderLabel__Group_3__0__Impl7862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__1__Impl_in_rule__SpinSliderLabel__Group_3__17892 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__2_in_rule__SpinSliderLabel__Group_3__17895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__MaxValAssignment_3_1_in_rule__SpinSliderLabel__Group_3__1__Impl7922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__2__Impl_in_rule__SpinSliderLabel__Group_3__27952 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__3_in_rule__SpinSliderLabel__Group_3__27955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__MultiplierAssignment_3_2_in_rule__SpinSliderLabel__Group_3__2__Impl7982 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__3__Impl_in_rule__SpinSliderLabel__Group_3__38012 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__4_in_rule__SpinSliderLabel__Group_3__38015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__PrecisionAssignment_3_3_in_rule__SpinSliderLabel__Group_3__3__Impl8042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__Group_3__4__Impl_in_rule__SpinSliderLabel__Group_3__48072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinSliderLabel__OptionAssignment_3_4_in_rule__SpinSliderLabel__Group_3__4__Impl8099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinCheckBox__Group__0__Impl_in_rule__SpinCheckBox__Group__08140 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SpinCheckBox__Group__1_in_rule__SpinCheckBox__Group__08143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_rule__SpinCheckBox__Group__0__Impl8171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinCheckBox__Group__1__Impl_in_rule__SpinCheckBox__Group__18202 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SpinCheckBox__Group__2_in_rule__SpinCheckBox__Group__18205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinCheckBox__EnameAssignment_1_in_rule__SpinCheckBox__Group__1__Impl8232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinCheckBox__Group__2__Impl_in_rule__SpinCheckBox__Group__28262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinCheckBox__ControlNameAssignment_2_in_rule__SpinCheckBox__Group__2__Impl8289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__0__Impl_in_rule__Label__Group__08325 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_rule__Label__Group__1_in_rule__Label__Group__08328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__NameAssignment_0_in_rule__Label__Group__0__Impl8355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__1__Impl_in_rule__Label__Group__18385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_rule__Label__Group__1__Impl8413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__0__Impl_in_rule__IsPinConnected__Group__08448 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__1_in_rule__IsPinConnected__Group__08451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_rule__IsPinConnected__Group__0__Impl8479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__1__Impl_in_rule__IsPinConnected__Group__18510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Arg1Assignment_1_in_rule__IsPinConnected__Group__1__Impl8537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsTrue__Group__0__Impl_in_rule__IsTrue__Group__08571 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__IsTrue__Group__1_in_rule__IsTrue__Group__08574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_rule__IsTrue__Group__0__Impl8602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsTrue__Group__1__Impl_in_rule__IsTrue__Group__18633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsTrue__VariableAssignment_1_in_rule__IsTrue__Group__1__Impl8660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__0__Impl_in_rule__IsElse__Group__08694 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_rule__IsElse__Group__1_in_rule__IsElse__Group__08697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__1__Impl_in_rule__IsElse__Group__18755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_rule__IsElse__Group__1__Impl8783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__0__Impl_in_rule__IsEndif__Group__08818 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__1_in_rule__IsEndif__Group__08821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__1__Impl_in_rule__IsEndif__Group__18879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__IsEndif__Group__1__Impl8907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__0__Impl_in_rule__GetInputDefault__Group__08942 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__1_in_rule__GetInputDefault__Group__08945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__GetInputDefault__Group__0__Impl8973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__1__Impl_in_rule__GetInputDefault__Group__19004 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__2_in_rule__GetInputDefault__Group__19007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__NameAssignment_1_in_rule__GetInputDefault__Group__1__Impl9034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__2__Impl_in_rule__GetInputDefault__Group__29064 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__3_in_rule__GetInputDefault__Group__29067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__VariableAssignment_2_in_rule__GetInputDefault__Group__2__Impl9094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__3__Impl_in_rule__GetInputDefault__Group__39124 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__4_in_rule__GetInputDefault__Group__39127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__ScaleAssignment_3_in_rule__GetInputDefault__Group__3__Impl9154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__4__Impl_in_rule__GetInputDefault__Group__49184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__DefaultValAssignment_4_in_rule__GetInputDefault__Group__4__Impl9211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__0__Impl_in_rule__GetDelayScaleControl__Group__09251 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__1_in_rule__GetDelayScaleControl__Group__09254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__GetDelayScaleControl__Group__0__Impl9282 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__1__Impl_in_rule__GetDelayScaleControl__Group__19313 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__2_in_rule__GetDelayScaleControl__Group__19316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__RatioAssignment_1_in_rule__GetDelayScaleControl__Group__1__Impl9343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__2__Impl_in_rule__GetDelayScaleControl__Group__29373 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__3_in_rule__GetDelayScaleControl__Group__29376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__LengthAssignment_2_in_rule__GetDelayScaleControl__Group__2__Impl9403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__3__Impl_in_rule__GetDelayScaleControl__Group__39433 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__4_in_rule__GetDelayScaleControl__Group__39436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__OffsetAssignment_3_in_rule__GetDelayScaleControl__Group__3__Impl9463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__Group__4__Impl_in_rule__GetDelayScaleControl__Group__49493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScaleControl__ControlAssignment_4_in_rule__GetDelayScaleControl__Group__4__Impl9520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetBaseAddress__Group__0__Impl_in_rule__GetBaseAddress__Group__09561 = new BitSet(new long[]{0x0000003FC0000000L});
    public static final BitSet FOLLOW_rule__GetBaseAddress__Group__1_in_rule__GetBaseAddress__Group__09564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetBaseAddress__Group__1__Impl_in_rule__GetBaseAddress__Group__19622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_rule__GetBaseAddress__Group__1__Impl9650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__0__Impl_in_rule__SetOutputPin__Group__09685 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__1_in_rule__SetOutputPin__Group__09688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_rule__SetOutputPin__Group__0__Impl9716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__1__Impl_in_rule__SetOutputPin__Group__19747 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__2_in_rule__SetOutputPin__Group__19750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__PinNameAssignment_1_in_rule__SetOutputPin__Group__1__Impl9777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__Group__2__Impl_in_rule__SetOutputPin__Group__29807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SetOutputPin__VarNameAssignment_2_in_rule__SetOutputPin__Group__2__Impl9834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__0__Impl_in_rule__ReadRegister__Group__09870 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__1_in_rule__ReadRegister__Group__09873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_rule__ReadRegister__Group__0__Impl9901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__1__Impl_in_rule__ReadRegister__Group__19932 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__2_in_rule__ReadRegister__Group__19935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Arg1Assignment_1_in_rule__ReadRegister__Group__1__Impl9962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__2__Impl_in_rule__ReadRegister__Group__29992 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__3_in_rule__ReadRegister__Group__29995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ReadRegister__Group__2__Impl10023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__3__Impl_in_rule__ReadRegister__Group__310054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Arg2Assignment_3_in_rule__ReadRegister__Group__3__Impl10081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__0__Impl_in_rule__WriteRegisterLowshelf__Group__010119 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__1_in_rule__WriteRegisterLowshelf__Group__010122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_rule__WriteRegisterLowshelf__Group__0__Impl10150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__1__Impl_in_rule__WriteRegisterLowshelf__Group__110181 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__2_in_rule__WriteRegisterLowshelf__Group__110184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Arg1Assignment_1_in_rule__WriteRegisterLowshelf__Group__1__Impl10211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__2__Impl_in_rule__WriteRegisterLowshelf__Group__210241 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__3_in_rule__WriteRegisterLowshelf__Group__210244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__WriteRegisterLowshelf__Group__2__Impl10272 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__3__Impl_in_rule__WriteRegisterLowshelf__Group__310303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Arg2Assignment_3_in_rule__WriteRegisterLowshelf__Group__3__Impl10330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__0__Impl_in_rule__WriteRegisterHighshelf__Group__010368 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__1_in_rule__WriteRegisterHighshelf__Group__010371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_rule__WriteRegisterHighshelf__Group__0__Impl10399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__1__Impl_in_rule__WriteRegisterHighshelf__Group__110430 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__2_in_rule__WriteRegisterHighshelf__Group__110433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Arg1Assignment_1_in_rule__WriteRegisterHighshelf__Group__1__Impl10460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__2__Impl_in_rule__WriteRegisterHighshelf__Group__210490 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__3_in_rule__WriteRegisterHighshelf__Group__210493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__WriteRegisterHighshelf__Group__2__Impl10521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__3__Impl_in_rule__WriteRegisterHighshelf__Group__310552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Arg2Assignment_3_in_rule__WriteRegisterHighshelf__Group__3__Impl10579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__0__Impl_in_rule__WriteRegister__Group__010617 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__1_in_rule__WriteRegister__Group__010620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_rule__WriteRegister__Group__0__Impl10648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__1__Impl_in_rule__WriteRegister__Group__110679 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__2_in_rule__WriteRegister__Group__110682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Arg1Assignment_1_in_rule__WriteRegister__Group__1__Impl10709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__2__Impl_in_rule__WriteRegister__Group__210739 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__3_in_rule__WriteRegister__Group__210742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__WriteRegister__Group__2__Impl10770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__3__Impl_in_rule__WriteRegister__Group__310801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Arg2Assignment_3_in_rule__WriteRegister__Group__3__Impl10828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__0__Impl_in_rule__Maxx__Group__010866 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__Maxx__Group__1_in_rule__Maxx__Group__010869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_rule__Maxx__Group__0__Impl10897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__1__Impl_in_rule__Maxx__Group__110928 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__Maxx__Group__2_in_rule__Maxx__Group__110931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Arg1Assignment_1_in_rule__Maxx__Group__1__Impl10958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__2__Impl_in_rule__Maxx__Group__210988 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Maxx__Group__3_in_rule__Maxx__Group__210991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__Maxx__Group__2__Impl11019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__3__Impl_in_rule__Maxx__Group__311050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Arg2Assignment_3_in_rule__Maxx__Group__3__Impl11077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__0__Impl_in_rule__ReadRegisterFilter__Group__011115 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__1_in_rule__ReadRegisterFilter__Group__011118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_rule__ReadRegisterFilter__Group__0__Impl11146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__1__Impl_in_rule__ReadRegisterFilter__Group__111177 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__2_in_rule__ReadRegisterFilter__Group__111180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Arg1Assignment_1_in_rule__ReadRegisterFilter__Group__1__Impl11207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__2__Impl_in_rule__ReadRegisterFilter__Group__211237 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__3_in_rule__ReadRegisterFilter__Group__211240 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ReadRegisterFilter__Group__2__Impl11268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__3__Impl_in_rule__ReadRegisterFilter__Group__311299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Arg2Assignment_3_in_rule__ReadRegisterFilter__Group__3__Impl11326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__0__Impl_in_rule__Mulx__Group__011364 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Mulx__Group__1_in_rule__Mulx__Group__011367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_rule__Mulx__Group__0__Impl11395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__1__Impl_in_rule__Mulx__Group__111426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Arg1Assignment_1_in_rule__Mulx__Group__1__Impl11453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__0__Impl_in_rule__Ldax__Group__011487 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Ldax__Group__1_in_rule__Ldax__Group__011490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_rule__Ldax__Group__0__Impl11518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__1__Impl_in_rule__Ldax__Group__111549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Arg1Assignment_1_in_rule__Ldax__Group__1__Impl11576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__0__Impl_in_rule__Exp__Group__011610 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Exp__Group__1_in_rule__Exp__Group__011613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_rule__Exp__Group__0__Impl11641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__1__Impl_in_rule__Exp__Group__111672 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__Exp__Group__2_in_rule__Exp__Group__111675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Arg1Assignment_1_in_rule__Exp__Group__1__Impl11702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__2__Impl_in_rule__Exp__Group__211732 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Exp__Group__3_in_rule__Exp__Group__211735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__Exp__Group__2__Impl11763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__3__Impl_in_rule__Exp__Group__311794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Arg2Assignment_3_in_rule__Exp__Group__3__Impl11821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__0__Impl_in_rule__Log__Group__011859 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Log__Group__1_in_rule__Log__Group__011862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_rule__Log__Group__0__Impl11890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__1__Impl_in_rule__Log__Group__111921 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__Log__Group__2_in_rule__Log__Group__111924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Arg1Assignment_1_in_rule__Log__Group__1__Impl11951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__2__Impl_in_rule__Log__Group__211981 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Log__Group__3_in_rule__Log__Group__211984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__Log__Group__2__Impl12012 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__3__Impl_in_rule__Log__Group__312043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Arg2Assignment_3_in_rule__Log__Group__3__Impl12070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__0__Impl_in_rule__ScaleOffset__Group__012108 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__1_in_rule__ScaleOffset__Group__012111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_rule__ScaleOffset__Group__0__Impl12139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__1__Impl_in_rule__ScaleOffset__Group__112170 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__2_in_rule__ScaleOffset__Group__112173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Arg1Assignment_1_in_rule__ScaleOffset__Group__1__Impl12200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__2__Impl_in_rule__ScaleOffset__Group__212230 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__3_in_rule__ScaleOffset__Group__212233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ScaleOffset__Group__2__Impl12261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__3__Impl_in_rule__ScaleOffset__Group__312292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Arg2Assignment_3_in_rule__ScaleOffset__Group__3__Impl12319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__0__Impl_in_rule__WriteDelay__Group__012357 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__1_in_rule__WriteDelay__Group__012360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_rule__WriteDelay__Group__0__Impl12388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__1__Impl_in_rule__WriteDelay__Group__112419 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__2_in_rule__WriteDelay__Group__112422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Arg1Assignment_1_in_rule__WriteDelay__Group__1__Impl12449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__2__Impl_in_rule__WriteDelay__Group__212479 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__3_in_rule__WriteDelay__Group__212482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__WriteDelay__Group__2__Impl12510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__3__Impl_in_rule__WriteDelay__Group__312541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Arg2Assignment_3_in_rule__WriteDelay__Group__3__Impl12568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__0__Impl_in_rule__WriteAllpass__Group__012606 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__1_in_rule__WriteAllpass__Group__012609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_rule__WriteAllpass__Group__0__Impl12637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__1__Impl_in_rule__WriteAllpass__Group__112668 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__2_in_rule__WriteAllpass__Group__112671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Arg1Assignment_1_in_rule__WriteAllpass__Group__1__Impl12698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__2__Impl_in_rule__WriteAllpass__Group__212728 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__3_in_rule__WriteAllpass__Group__212731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__WriteAllpass__Group__2__Impl12759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__3__Impl_in_rule__WriteAllpass__Group__312790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Arg2Assignment_3_in_rule__WriteAllpass__Group__3__Impl12817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__0__Impl_in_rule__ReadDelay__Group__012855 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__1_in_rule__ReadDelay__Group__012858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_rule__ReadDelay__Group__0__Impl12886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__1__Impl_in_rule__ReadDelay__Group__112917 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__2_in_rule__ReadDelay__Group__112920 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Arg1Assignment_1_in_rule__ReadDelay__Group__1__Impl12947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__2__Impl_in_rule__ReadDelay__Group__212977 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__3_in_rule__ReadDelay__Group__212980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ReadDelay__Group__2__Impl13008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__3__Impl_in_rule__ReadDelay__Group__313039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Arg2Assignment_3_in_rule__ReadDelay__Group__3__Impl13066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__0__Impl_in_rule__LoadSinLFO__Group__013104 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__1_in_rule__LoadSinLFO__Group__013107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_rule__LoadSinLFO__Group__0__Impl13135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__1__Impl_in_rule__LoadSinLFO__Group__113166 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__2_in_rule__LoadSinLFO__Group__113169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg1Assignment_1_in_rule__LoadSinLFO__Group__1__Impl13196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__2__Impl_in_rule__LoadSinLFO__Group__213226 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__3_in_rule__LoadSinLFO__Group__213229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__LoadSinLFO__Group__2__Impl13257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__3__Impl_in_rule__LoadSinLFO__Group__313288 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__4_in_rule__LoadSinLFO__Group__313291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg2Assignment_3_in_rule__LoadSinLFO__Group__3__Impl13318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__4__Impl_in_rule__LoadSinLFO__Group__413348 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__5_in_rule__LoadSinLFO__Group__413351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__LoadSinLFO__Group__4__Impl13379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__5__Impl_in_rule__LoadSinLFO__Group__513410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg3Assignment_5_in_rule__LoadSinLFO__Group__5__Impl13437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__0__Impl_in_rule__LoadRampLFO__Group__013479 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__1_in_rule__LoadRampLFO__Group__013482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_rule__LoadRampLFO__Group__0__Impl13510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__1__Impl_in_rule__LoadRampLFO__Group__113541 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__2_in_rule__LoadRampLFO__Group__113544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg1Assignment_1_in_rule__LoadRampLFO__Group__1__Impl13571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__2__Impl_in_rule__LoadRampLFO__Group__213601 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__3_in_rule__LoadRampLFO__Group__213604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__LoadRampLFO__Group__2__Impl13632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__3__Impl_in_rule__LoadRampLFO__Group__313663 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__4_in_rule__LoadRampLFO__Group__313666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg2Assignment_3_in_rule__LoadRampLFO__Group__3__Impl13693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__4__Impl_in_rule__LoadRampLFO__Group__413723 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__5_in_rule__LoadRampLFO__Group__413726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__LoadRampLFO__Group__4__Impl13754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__5__Impl_in_rule__LoadRampLFO__Group__513785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg3Assignment_5_in_rule__LoadRampLFO__Group__5__Impl13812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__0__Impl_in_rule__ChorusReadDelay__Group__013854 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__1_in_rule__ChorusReadDelay__Group__013857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_rule__ChorusReadDelay__Group__0__Impl13885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__1__Impl_in_rule__ChorusReadDelay__Group__113916 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__2_in_rule__ChorusReadDelay__Group__113919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ChorusReadDelay__Group__1__Impl13947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__2__Impl_in_rule__ChorusReadDelay__Group__213978 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__3_in_rule__ChorusReadDelay__Group__213981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg1Assignment_2_in_rule__ChorusReadDelay__Group__2__Impl14008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__3__Impl_in_rule__ChorusReadDelay__Group__314038 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__4_in_rule__ChorusReadDelay__Group__314041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ChorusReadDelay__Group__3__Impl14069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__4__Impl_in_rule__ChorusReadDelay__Group__414100 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__5_in_rule__ChorusReadDelay__Group__414103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg2Assignment_4_in_rule__ChorusReadDelay__Group__4__Impl14130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__5__Impl_in_rule__ChorusReadDelay__Group__514160 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__6_in_rule__ChorusReadDelay__Group__514163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ChorusReadDelay__Group__5__Impl14191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__6__Impl_in_rule__ChorusReadDelay__Group__614222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg3Assignment_6_in_rule__ChorusReadDelay__Group__6__Impl14249 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__0__Impl_in_rule__ChorusReadValue__Group__014293 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__1_in_rule__ChorusReadValue__Group__014296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_rule__ChorusReadValue__Group__0__Impl14324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__1__Impl_in_rule__ChorusReadValue__Group__114355 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__2_in_rule__ChorusReadValue__Group__114358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ChorusReadValue__Group__1__Impl14386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__2__Impl_in_rule__ChorusReadValue__Group__214417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Arg1Assignment_2_in_rule__ChorusReadValue__Group__2__Impl14444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__0__Impl_in_rule__ChorusScaleOffset__Group__014480 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__1_in_rule__ChorusScaleOffset__Group__014483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_rule__ChorusScaleOffset__Group__0__Impl14511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__1__Impl_in_rule__ChorusScaleOffset__Group__114542 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__2_in_rule__ChorusScaleOffset__Group__114545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ChorusScaleOffset__Group__1__Impl14573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__2__Impl_in_rule__ChorusScaleOffset__Group__214604 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__3_in_rule__ChorusScaleOffset__Group__214607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg1Assignment_2_in_rule__ChorusScaleOffset__Group__2__Impl14634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__3__Impl_in_rule__ChorusScaleOffset__Group__314664 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__4_in_rule__ChorusScaleOffset__Group__314667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ChorusScaleOffset__Group__3__Impl14695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__4__Impl_in_rule__ChorusScaleOffset__Group__414726 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__5_in_rule__ChorusScaleOffset__Group__414729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg2Assignment_4_in_rule__ChorusScaleOffset__Group__4__Impl14756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__5__Impl_in_rule__ChorusScaleOffset__Group__514786 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__6_in_rule__ChorusScaleOffset__Group__514789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ChorusScaleOffset__Group__5__Impl14817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__6__Impl_in_rule__ChorusScaleOffset__Group__614848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg3Assignment_6_in_rule__ChorusScaleOffset__Group__6__Impl14875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__0__Impl_in_rule__ReadDelayPointer__Group__014919 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__1_in_rule__ReadDelayPointer__Group__014922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_rule__ReadDelayPointer__Group__0__Impl14950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__1__Impl_in_rule__ReadDelayPointer__Group__114981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Arg1Assignment_1_in_rule__ReadDelayPointer__Group__1__Impl15008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__0__Impl_in_rule__And__Group__015042 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_rule__And__Group__1_in_rule__And__Group__015045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_rule__And__Group__0__Impl15073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__1__Impl_in_rule__And__Group__115104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Arg1Assignment_1_in_rule__And__Group__1__Impl15131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__0__Impl_in_rule__Or__Group__015165 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_rule__Or__Group__1_in_rule__Or__Group__015168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_rule__Or__Group__0__Impl15196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__1__Impl_in_rule__Or__Group__115227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Arg1Assignment_1_in_rule__Or__Group__1__Impl15254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__0__Impl_in_rule__Xor__Group__015288 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_rule__Xor__Group__1_in_rule__Xor__Group__015291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_rule__Xor__Group__0__Impl15319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__1__Impl_in_rule__Xor__Group__115350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Arg1Assignment_1_in_rule__Xor__Group__1__Impl15377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__0__Impl_in_rule__Jam__Group__015411 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Jam__Group__1_in_rule__Jam__Group__015414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_rule__Jam__Group__0__Impl15442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__1__Impl_in_rule__Jam__Group__115473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Arg1Assignment_1_in_rule__Jam__Group__1__Impl15500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__0__Impl_in_rule__Clr__Group__015534 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_rule__Clr__Group__1_in_rule__Clr__Group__015537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__1__Impl_in_rule__Clr__Group__115595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_rule__Clr__Group__1__Impl15623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__0__Impl_in_rule__Not__Group__015658 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rule__Not__Group__1_in_rule__Not__Group__015661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__1__Impl_in_rule__Not__Group__115719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_rule__Not__Group__1__Impl15747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__0__Impl_in_rule__Absa__Group__015782 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_rule__Absa__Group__1_in_rule__Absa__Group__015785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__1__Impl_in_rule__Absa__Group__115843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_rule__Absa__Group__1__Impl15871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__0__Impl_in_rule__Skip__Group__015906 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Skip__Group__1_in_rule__Skip__Group__015909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_rule__Skip__Group__0__Impl15937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__1__Impl_in_rule__Skip__Group__115968 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_rule__Skip__Group__2_in_rule__Skip__Group__115971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__FlagsAssignment_1_in_rule__Skip__Group__1__Impl15998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__2__Impl_in_rule__Skip__Group__216028 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Skip__Group__3_in_rule__Skip__Group__216031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__Skip__Group__2__Impl16059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__3__Impl_in_rule__Skip__Group__316090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__LabelAssignment_3_in_rule__Skip__Group__3__Impl16117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__0__Impl_in_rule__SPINDOUBLE__Group__016155 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__1_in_rule__SPINDOUBLE__Group__016158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_rule__SPINDOUBLE__Group__0__Impl16187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__1__Impl_in_rule__SPINDOUBLE__Group__116220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Alternatives_1_in_rule__SPINDOUBLE__Group__1__Impl16247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1__016281 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__1_in_rule__SPINDOUBLE__Group_1_1__016284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1__0__Impl16311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1__116340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0_in_rule__SPINDOUBLE__Group_1_1__1__Impl16367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1_1__016402 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1_in_rule__SPINDOUBLE__Group_1_1_1__016405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_rule__SPINDOUBLE__Group_1_1_1__0__Impl16433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1_1__116464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1_1__1__Impl16491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1__016524 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1_in_rule__SPINCHOREGFLAGS__Group_1__016527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1__0__Impl16554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1__116583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0_in_rule__SPINCHOREGFLAGS__Group_1__1__Impl16610 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__016645 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1_in_rule__SPINCHOREGFLAGS__Group_1_1__016648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl16676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__116707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl16734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__0__Impl_in_rule__SPINMEM__Group__016767 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__1_in_rule__SPINMEM__Group__016770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__BufferAssignment_0_in_rule__SPINMEM__Group__0__Impl16797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__1__Impl_in_rule__SPINMEM__Group__116827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Alternatives_1_in_rule__SPINMEM__Group__1__Impl16854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__0__Impl_in_rule__SPINBUF__Group__016889 = new BitSet(new long[]{0x000000000000F000L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__1_in_rule__SPINBUF__Group__016892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINBUF__Group__0__Impl16919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__1__Impl_in_rule__SPINBUF__Group__116948 = new BitSet(new long[]{0x000000000000F000L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__2_in_rule__SPINBUF__Group__116951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Alternatives_1_in_rule__SPINBUF__Group__1__Impl16978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__2__Impl_in_rule__SPINBUF__Group__217009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Alternatives_2_in_rule__SPINBUF__Group__2__Impl17036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__0__Impl_in_rule__BINARY24__Group_0__017073 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__1_in_rule__BINARY24__Group_0__017076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__0_in_rule__BINARY24__Group_0__0__Impl17103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__1__Impl_in_rule__BINARY24__Group_0__117133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__BINARY24__Group_0__1__Impl17161 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__0__Impl_in_rule__BINARY24__Group_0_0__017196 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__1_in_rule__BINARY24__Group_0_0__017199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_rule__BINARY24__Group_0_0__0__Impl17227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__1__Impl_in_rule__BINARY24__Group_0_0__117258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__BINARY24__Group_0_0__1__Impl17285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__0__Impl_in_rule__BINARY24__Group_1__017318 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__1_in_rule__BINARY24__Group_1__017321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_rule__BINARY24__Group_1__0__Impl17349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__1__Impl_in_rule__BINARY24__Group_1__117380 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__2_in_rule__BINARY24__Group_1__117383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__BINARY24__Group_1__1__Impl17411 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__2__Impl_in_rule__BINARY24__Group_1__217442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__BINARY24__Group_1__2__Impl17470 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Program__NameAssignment_117512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePin_in_rule__Program__PinsAssignment_217543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinElement_in_rule__Program__ElementsAssignment_317574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioInput__VarNameAssignment_117605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioInput__NameAssignment_217636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioOutput__VarNameAssignment_117667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioOutput__NameAssignment_217698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlInput__VarNameAssignment_117729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlInput__NameAssignment_217760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlOutput__VarNameAssignment_117791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlOutput__NameAssignment_217822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SpinEquate__EnameAssignment_117853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__SpinEquate__ValueAssignment_217884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Mem__BufferAssignment_117915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__Mem__LengthAssignment_217946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Offset__NameAssignment_117977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__Offset__LengthAssignment_218008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SpinBool__NameAssignment_118039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBOOLEAN_in_rule__SpinBool__ValueAssignment_218070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SpinSliderLabel__EnameAssignment_118101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SpinSliderLabel__ControlNameAssignment_218132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__SpinSliderLabel__MinValAssignment_3_018163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__SpinSliderLabel__MaxValAssignment_3_118194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__SpinSliderLabel__MultiplierAssignment_3_218225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SpinSliderLabel__PrecisionAssignment_3_318256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SpinSliderLabel__OptionAssignment_3_418287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SpinCheckBox__EnameAssignment_118318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SpinCheckBox__ControlNameAssignment_218349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_SC_COMMENT_in_rule__Comment__RemarkAssignment18380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Label__NameAssignment_018411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__IsPinConnected__Arg1Assignment_118442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__IsTrue__VariableAssignment_118473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetInputDefault__NameAssignment_118504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetInputDefault__VariableAssignment_218535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__ScaleAssignment_318566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__DefaultValAssignment_418597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__RatioAssignment_118628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__LengthAssignment_218659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__OffsetAssignment_318690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScaleControl__ControlAssignment_418721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SetOutputPin__PinNameAssignment_118752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SetOutputPin__VarNameAssignment_218783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ReadRegister__Arg1Assignment_118814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegister__Arg2Assignment_318845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterLowshelf__Arg1Assignment_118876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterLowshelf__Arg2Assignment_318907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterHighshelf__Arg1Assignment_118938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterHighshelf__Arg2Assignment_318969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegister__Arg1Assignment_119000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegister__Arg2Assignment_319031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__Maxx__Arg1Assignment_119062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Maxx__Arg2Assignment_319093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ReadRegisterFilter__Arg1Assignment_119124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegisterFilter__Arg2Assignment_319155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Mulx__Arg1Assignment_119186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Ldax__Arg1Assignment_119217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg1Assignment_119248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg2Assignment_319279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg1Assignment_119310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg2Assignment_319341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg1Assignment_119372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg2Assignment_319403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__WriteDelay__Arg1Assignment_119434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteDelay__Arg2Assignment_319465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__WriteAllpass__Arg1Assignment_119496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteAllpass__Arg2Assignment_319527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__ReadDelay__Arg1Assignment_119558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelay__Arg2Assignment_319589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__LoadSinLFO__Arg1Assignment_119620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg2Assignment_319651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg3Assignment_519682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__LoadRampLFO__Arg1Assignment_119713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg2Assignment_319744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg3Assignment_519775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadDelay__Arg1Assignment_219806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusReadDelay__Arg2Assignment_419837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__ChorusReadDelay__Arg3Assignment_619868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadValue__Arg1Assignment_219899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ChorusScaleOffset__Arg1Assignment_219930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusScaleOffset__Arg2Assignment_419961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ChorusScaleOffset__Arg3Assignment_619992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelayPointer__Arg1Assignment_120023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__And__Arg1Assignment_120054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__Or__Arg1Assignment_120085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__Xor__Arg1Assignment_120116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Jam__Arg1Assignment_120147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Skip__FlagsAssignment_120178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Skip__LabelAssignment_320213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINBUF_in_rule__SPINMEM__BufferAssignment_020248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINMEM__ValueAssignment_1_020279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINMEM__OffsetAssignment_1_120314 = new BitSet(new long[]{0x0000000000000002L});

}