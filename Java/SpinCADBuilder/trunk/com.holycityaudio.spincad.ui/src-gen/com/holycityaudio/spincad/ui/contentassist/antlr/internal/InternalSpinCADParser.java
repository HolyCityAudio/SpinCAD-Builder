package com.holycityaudio.spincad.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.holycityaudio.spincad.services.SpinCADGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalSpinCADParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_SC_COMMENT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'#'", "'^'", "'+'", "'-'", "'@name'", "'@audioInput'", "'@audioOutput'", "'@controlInput'", "'@controlOutput'", "'@slider'", "'@checkbox'", "'@controlLabel'", "'equ'", "'mem'", "'offset'", "':'", "'@isPinConnected'", "'@else'", "'@endif'", "'@getInputDefault'", "'@getDelayScale'", "'rdax'", "','", "'wrlx'", "'wrhx'", "'wrax'", "'maxx'", "'rdfx'", "'mulx'", "'ldax'", "'exp'", "'log'", "'sof'", "'wra'", "'wrap'", "'rda'", "'wlds'", "'wldr'", "'cho rda'", "'cho rdal'", "'cho sof'", "'rmpa'", "'and'", "'or'", "'xor'", "'jam'", "'clr'", "'not'", "'absa'", "'skp'", "'.'", "'|'", "'%'", "'$'"
    };
    public static final int RULE_SC_COMMENT=6;
    public static final int RULE_ID=4;
    public static final int T__64=64;
    public static final int T__29=29;
    public static final int T__65=65;
    public static final int T__28=28;
    public static final int T__62=62;
    public static final int T__27=27;
    public static final int T__63=63;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int EOF=-1;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__19=19;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__16=16;
    public static final int T__52=52;
    public static final int T__15=15;
    public static final int T__53=53;
    public static final int T__18=18;
    public static final int T__54=54;
    public static final int T__17=17;
    public static final int T__12=12;
    public static final int T__14=14;
    public static final int T__13=13;
    public static final int T__59=59;
    public static final int RULE_INT=5;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_SL_COMMENT=9;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int RULE_STRING=7;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_WS=10;

    // delegates
    // delegators


        public InternalSpinCADParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSpinCADParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSpinCADParser.tokenNames; }
    public String getGrammarFileName() { return "../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g"; }


     
     	private SpinCADGrammarAccess grammarAccess;
     	
        public void setGrammarAccess(SpinCADGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }
        
        @Override
        protected String getValueForTokenName(String tokenName) {
        	return tokenName;
        }




    // $ANTLR start "entryRuleProgram"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:60:1: entryRuleProgram : ruleProgram EOF ;
    public final void entryRuleProgram() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:61:1: ( ruleProgram EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:62:1: ruleProgram EOF
            {
             before(grammarAccess.getProgramRule()); 
            pushFollow(FOLLOW_ruleProgram_in_entryRuleProgram61);
            ruleProgram();

            state._fsp--;

             after(grammarAccess.getProgramRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleProgram68); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProgram"


    // $ANTLR start "ruleProgram"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:69:1: ruleProgram : ( ( rule__Program__Group__0 ) ) ;
    public final void ruleProgram() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:73:2: ( ( ( rule__Program__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:74:1: ( ( rule__Program__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:74:1: ( ( rule__Program__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:75:1: ( rule__Program__Group__0 )
            {
             before(grammarAccess.getProgramAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:76:1: ( rule__Program__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:76:2: rule__Program__Group__0
            {
            pushFollow(FOLLOW_rule__Program__Group__0_in_ruleProgram94);
            rule__Program__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProgram"


    // $ANTLR start "entryRulePin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:88:1: entryRulePin : rulePin EOF ;
    public final void entryRulePin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:89:1: ( rulePin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:90:1: rulePin EOF
            {
             before(grammarAccess.getPinRule()); 
            pushFollow(FOLLOW_rulePin_in_entryRulePin121);
            rulePin();

            state._fsp--;

             after(grammarAccess.getPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePin128); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePin"


    // $ANTLR start "rulePin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:97:1: rulePin : ( ( rule__Pin__Alternatives ) ) ;
    public final void rulePin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:101:2: ( ( ( rule__Pin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:102:1: ( ( rule__Pin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:102:1: ( ( rule__Pin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:103:1: ( rule__Pin__Alternatives )
            {
             before(grammarAccess.getPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:104:1: ( rule__Pin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:104:2: rule__Pin__Alternatives
            {
            pushFollow(FOLLOW_rule__Pin__Alternatives_in_rulePin154);
            rule__Pin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePin"


    // $ANTLR start "entryRuleInputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:116:1: entryRuleInputPin : ruleInputPin EOF ;
    public final void entryRuleInputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:117:1: ( ruleInputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:118:1: ruleInputPin EOF
            {
             before(grammarAccess.getInputPinRule()); 
            pushFollow(FOLLOW_ruleInputPin_in_entryRuleInputPin181);
            ruleInputPin();

            state._fsp--;

             after(grammarAccess.getInputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInputPin188); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInputPin"


    // $ANTLR start "ruleInputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:125:1: ruleInputPin : ( ( rule__InputPin__Alternatives ) ) ;
    public final void ruleInputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:129:2: ( ( ( rule__InputPin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:130:1: ( ( rule__InputPin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:130:1: ( ( rule__InputPin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:131:1: ( rule__InputPin__Alternatives )
            {
             before(grammarAccess.getInputPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:132:1: ( rule__InputPin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:132:2: rule__InputPin__Alternatives
            {
            pushFollow(FOLLOW_rule__InputPin__Alternatives_in_ruleInputPin214);
            rule__InputPin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInputPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInputPin"


    // $ANTLR start "entryRuleOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:144:1: entryRuleOutputPin : ruleOutputPin EOF ;
    public final void entryRuleOutputPin() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:145:1: ( ruleOutputPin EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:146:1: ruleOutputPin EOF
            {
             before(grammarAccess.getOutputPinRule()); 
            pushFollow(FOLLOW_ruleOutputPin_in_entryRuleOutputPin241);
            ruleOutputPin();

            state._fsp--;

             after(grammarAccess.getOutputPinRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOutputPin248); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOutputPin"


    // $ANTLR start "ruleOutputPin"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:153:1: ruleOutputPin : ( ( rule__OutputPin__Alternatives ) ) ;
    public final void ruleOutputPin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:157:2: ( ( ( rule__OutputPin__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:158:1: ( ( rule__OutputPin__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:158:1: ( ( rule__OutputPin__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:159:1: ( rule__OutputPin__Alternatives )
            {
             before(grammarAccess.getOutputPinAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:160:1: ( rule__OutputPin__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:160:2: rule__OutputPin__Alternatives
            {
            pushFollow(FOLLOW_rule__OutputPin__Alternatives_in_ruleOutputPin274);
            rule__OutputPin__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getOutputPinAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOutputPin"


    // $ANTLR start "entryRuleAudioInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:172:1: entryRuleAudioInput : ruleAudioInput EOF ;
    public final void entryRuleAudioInput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:173:1: ( ruleAudioInput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:174:1: ruleAudioInput EOF
            {
             before(grammarAccess.getAudioInputRule()); 
            pushFollow(FOLLOW_ruleAudioInput_in_entryRuleAudioInput301);
            ruleAudioInput();

            state._fsp--;

             after(grammarAccess.getAudioInputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAudioInput308); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAudioInput"


    // $ANTLR start "ruleAudioInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:181:1: ruleAudioInput : ( ( rule__AudioInput__Group__0 ) ) ;
    public final void ruleAudioInput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:185:2: ( ( ( rule__AudioInput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:186:1: ( ( rule__AudioInput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:186:1: ( ( rule__AudioInput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:187:1: ( rule__AudioInput__Group__0 )
            {
             before(grammarAccess.getAudioInputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:188:1: ( rule__AudioInput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:188:2: rule__AudioInput__Group__0
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__0_in_ruleAudioInput334);
            rule__AudioInput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAudioInput"


    // $ANTLR start "entryRuleAudioOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:200:1: entryRuleAudioOutput : ruleAudioOutput EOF ;
    public final void entryRuleAudioOutput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:201:1: ( ruleAudioOutput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:202:1: ruleAudioOutput EOF
            {
             before(grammarAccess.getAudioOutputRule()); 
            pushFollow(FOLLOW_ruleAudioOutput_in_entryRuleAudioOutput361);
            ruleAudioOutput();

            state._fsp--;

             after(grammarAccess.getAudioOutputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAudioOutput368); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAudioOutput"


    // $ANTLR start "ruleAudioOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:209:1: ruleAudioOutput : ( ( rule__AudioOutput__Group__0 ) ) ;
    public final void ruleAudioOutput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:213:2: ( ( ( rule__AudioOutput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:214:1: ( ( rule__AudioOutput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:214:1: ( ( rule__AudioOutput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:215:1: ( rule__AudioOutput__Group__0 )
            {
             before(grammarAccess.getAudioOutputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:216:1: ( rule__AudioOutput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:216:2: rule__AudioOutput__Group__0
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__0_in_ruleAudioOutput394);
            rule__AudioOutput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAudioOutput"


    // $ANTLR start "entryRuleControlInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:228:1: entryRuleControlInput : ruleControlInput EOF ;
    public final void entryRuleControlInput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:229:1: ( ruleControlInput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:230:1: ruleControlInput EOF
            {
             before(grammarAccess.getControlInputRule()); 
            pushFollow(FOLLOW_ruleControlInput_in_entryRuleControlInput421);
            ruleControlInput();

            state._fsp--;

             after(grammarAccess.getControlInputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControlInput428); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControlInput"


    // $ANTLR start "ruleControlInput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:237:1: ruleControlInput : ( ( rule__ControlInput__Group__0 ) ) ;
    public final void ruleControlInput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:241:2: ( ( ( rule__ControlInput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:242:1: ( ( rule__ControlInput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:242:1: ( ( rule__ControlInput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:243:1: ( rule__ControlInput__Group__0 )
            {
             before(grammarAccess.getControlInputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:244:1: ( rule__ControlInput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:244:2: rule__ControlInput__Group__0
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__0_in_ruleControlInput454);
            rule__ControlInput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControlInput"


    // $ANTLR start "entryRuleControlOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:256:1: entryRuleControlOutput : ruleControlOutput EOF ;
    public final void entryRuleControlOutput() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:257:1: ( ruleControlOutput EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:258:1: ruleControlOutput EOF
            {
             before(grammarAccess.getControlOutputRule()); 
            pushFollow(FOLLOW_ruleControlOutput_in_entryRuleControlOutput481);
            ruleControlOutput();

            state._fsp--;

             after(grammarAccess.getControlOutputRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControlOutput488); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControlOutput"


    // $ANTLR start "ruleControlOutput"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:265:1: ruleControlOutput : ( ( rule__ControlOutput__Group__0 ) ) ;
    public final void ruleControlOutput() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:269:2: ( ( ( rule__ControlOutput__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:270:1: ( ( rule__ControlOutput__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:270:1: ( ( rule__ControlOutput__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:271:1: ( rule__ControlOutput__Group__0 )
            {
             before(grammarAccess.getControlOutputAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:272:1: ( rule__ControlOutput__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:272:2: rule__ControlOutput__Group__0
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__0_in_ruleControlOutput514);
            rule__ControlOutput__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControlOutput"


    // $ANTLR start "entryRuleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:284:1: entryRuleControl : ruleControl EOF ;
    public final void entryRuleControl() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:285:1: ( ruleControl EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:286:1: ruleControl EOF
            {
             before(grammarAccess.getControlRule()); 
            pushFollow(FOLLOW_ruleControl_in_entryRuleControl541);
            ruleControl();

            state._fsp--;

             after(grammarAccess.getControlRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleControl548); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleControl"


    // $ANTLR start "ruleControl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:293:1: ruleControl : ( ( rule__Control__Alternatives ) ) ;
    public final void ruleControl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:297:2: ( ( ( rule__Control__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:298:1: ( ( rule__Control__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:298:1: ( ( rule__Control__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:299:1: ( rule__Control__Alternatives )
            {
             before(grammarAccess.getControlAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:300:1: ( rule__Control__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:300:2: rule__Control__Alternatives
            {
            pushFollow(FOLLOW_rule__Control__Alternatives_in_ruleControl574);
            rule__Control__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getControlAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleControl"


    // $ANTLR start "entryRuleSlider"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:312:1: entryRuleSlider : ruleSlider EOF ;
    public final void entryRuleSlider() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:313:1: ( ruleSlider EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:314:1: ruleSlider EOF
            {
             before(grammarAccess.getSliderRule()); 
            pushFollow(FOLLOW_ruleSlider_in_entryRuleSlider601);
            ruleSlider();

            state._fsp--;

             after(grammarAccess.getSliderRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSlider608); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlider"


    // $ANTLR start "ruleSlider"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:321:1: ruleSlider : ( ( rule__Slider__Group__0 ) ) ;
    public final void ruleSlider() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:325:2: ( ( ( rule__Slider__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:326:1: ( ( rule__Slider__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:326:1: ( ( rule__Slider__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:327:1: ( rule__Slider__Group__0 )
            {
             before(grammarAccess.getSliderAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:328:1: ( rule__Slider__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:328:2: rule__Slider__Group__0
            {
            pushFollow(FOLLOW_rule__Slider__Group__0_in_ruleSlider634);
            rule__Slider__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSliderAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlider"


    // $ANTLR start "entryRuleCheckBox"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:340:1: entryRuleCheckBox : ruleCheckBox EOF ;
    public final void entryRuleCheckBox() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:341:1: ( ruleCheckBox EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:342:1: ruleCheckBox EOF
            {
             before(grammarAccess.getCheckBoxRule()); 
            pushFollow(FOLLOW_ruleCheckBox_in_entryRuleCheckBox661);
            ruleCheckBox();

            state._fsp--;

             after(grammarAccess.getCheckBoxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCheckBox668); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCheckBox"


    // $ANTLR start "ruleCheckBox"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:349:1: ruleCheckBox : ( ( rule__CheckBox__Group__0 ) ) ;
    public final void ruleCheckBox() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:353:2: ( ( ( rule__CheckBox__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:354:1: ( ( rule__CheckBox__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:354:1: ( ( rule__CheckBox__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:355:1: ( rule__CheckBox__Group__0 )
            {
             before(grammarAccess.getCheckBoxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:356:1: ( rule__CheckBox__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:356:2: rule__CheckBox__Group__0
            {
            pushFollow(FOLLOW_rule__CheckBox__Group__0_in_ruleCheckBox694);
            rule__CheckBox__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getCheckBoxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCheckBox"


    // $ANTLR start "entryRulecontrolLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:368:1: entryRulecontrolLabel : rulecontrolLabel EOF ;
    public final void entryRulecontrolLabel() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:369:1: ( rulecontrolLabel EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:370:1: rulecontrolLabel EOF
            {
             before(grammarAccess.getControlLabelRule()); 
            pushFollow(FOLLOW_rulecontrolLabel_in_entryRulecontrolLabel721);
            rulecontrolLabel();

            state._fsp--;

             after(grammarAccess.getControlLabelRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRulecontrolLabel728); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecontrolLabel"


    // $ANTLR start "rulecontrolLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:377:1: rulecontrolLabel : ( ( rule__ControlLabel__Group__0 ) ) ;
    public final void rulecontrolLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:381:2: ( ( ( rule__ControlLabel__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:382:1: ( ( rule__ControlLabel__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:382:1: ( ( rule__ControlLabel__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:383:1: ( rule__ControlLabel__Group__0 )
            {
             before(grammarAccess.getControlLabelAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:384:1: ( rule__ControlLabel__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:384:2: rule__ControlLabel__Group__0
            {
            pushFollow(FOLLOW_rule__ControlLabel__Group__0_in_rulecontrolLabel754);
            rule__ControlLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getControlLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecontrolLabel"


    // $ANTLR start "entryRuleSpinElement"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:396:1: entryRuleSpinElement : ruleSpinElement EOF ;
    public final void entryRuleSpinElement() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:397:1: ( ruleSpinElement EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:398:1: ruleSpinElement EOF
            {
             before(grammarAccess.getSpinElementRule()); 
            pushFollow(FOLLOW_ruleSpinElement_in_entryRuleSpinElement781);
            ruleSpinElement();

            state._fsp--;

             after(grammarAccess.getSpinElementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSpinElement788); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpinElement"


    // $ANTLR start "ruleSpinElement"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:405:1: ruleSpinElement : ( ( rule__SpinElement__Alternatives ) ) ;
    public final void ruleSpinElement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:409:2: ( ( ( rule__SpinElement__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:410:1: ( ( rule__SpinElement__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:410:1: ( ( rule__SpinElement__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:411:1: ( rule__SpinElement__Alternatives )
            {
             before(grammarAccess.getSpinElementAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:412:1: ( rule__SpinElement__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:412:2: rule__SpinElement__Alternatives
            {
            pushFollow(FOLLOW_rule__SpinElement__Alternatives_in_ruleSpinElement814);
            rule__SpinElement__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSpinElementAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpinElement"


    // $ANTLR start "entryRuleEquate"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:424:1: entryRuleEquate : ruleEquate EOF ;
    public final void entryRuleEquate() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:425:1: ( ruleEquate EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:426:1: ruleEquate EOF
            {
             before(grammarAccess.getEquateRule()); 
            pushFollow(FOLLOW_ruleEquate_in_entryRuleEquate841);
            ruleEquate();

            state._fsp--;

             after(grammarAccess.getEquateRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleEquate848); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquate"


    // $ANTLR start "ruleEquate"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:433:1: ruleEquate : ( ( rule__Equate__Group__0 ) ) ;
    public final void ruleEquate() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:437:2: ( ( ( rule__Equate__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:438:1: ( ( rule__Equate__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:438:1: ( ( rule__Equate__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:439:1: ( rule__Equate__Group__0 )
            {
             before(grammarAccess.getEquateAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:440:1: ( rule__Equate__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:440:2: rule__Equate__Group__0
            {
            pushFollow(FOLLOW_rule__Equate__Group__0_in_ruleEquate874);
            rule__Equate__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquate"


    // $ANTLR start "entryRuleMem"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:452:1: entryRuleMem : ruleMem EOF ;
    public final void entryRuleMem() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:453:1: ( ruleMem EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:454:1: ruleMem EOF
            {
             before(grammarAccess.getMemRule()); 
            pushFollow(FOLLOW_ruleMem_in_entryRuleMem901);
            ruleMem();

            state._fsp--;

             after(grammarAccess.getMemRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMem908); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMem"


    // $ANTLR start "ruleMem"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:461:1: ruleMem : ( ( rule__Mem__Group__0 ) ) ;
    public final void ruleMem() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:465:2: ( ( ( rule__Mem__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:466:1: ( ( rule__Mem__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:466:1: ( ( rule__Mem__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:467:1: ( rule__Mem__Group__0 )
            {
             before(grammarAccess.getMemAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:468:1: ( rule__Mem__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:468:2: rule__Mem__Group__0
            {
            pushFollow(FOLLOW_rule__Mem__Group__0_in_ruleMem934);
            rule__Mem__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMem"


    // $ANTLR start "entryRuleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:480:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:481:1: ( ruleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:482:1: ruleOffset EOF
            {
             before(grammarAccess.getOffsetRule()); 
            pushFollow(FOLLOW_ruleOffset_in_entryRuleOffset961);
            ruleOffset();

            state._fsp--;

             after(grammarAccess.getOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOffset968); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:489:1: ruleOffset : ( ( rule__Offset__Group__0 ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:493:2: ( ( ( rule__Offset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:494:1: ( ( rule__Offset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:494:1: ( ( rule__Offset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:495:1: ( rule__Offset__Group__0 )
            {
             before(grammarAccess.getOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:496:1: ( rule__Offset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:496:2: rule__Offset__Group__0
            {
            pushFollow(FOLLOW_rule__Offset__Group__0_in_ruleOffset994);
            rule__Offset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleComment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:508:1: entryRuleComment : ruleComment EOF ;
    public final void entryRuleComment() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:509:1: ( ruleComment EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:510:1: ruleComment EOF
            {
             before(grammarAccess.getCommentRule()); 
            pushFollow(FOLLOW_ruleComment_in_entryRuleComment1021);
            ruleComment();

            state._fsp--;

             after(grammarAccess.getCommentRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleComment1028); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:517:1: ruleComment : ( ( rule__Comment__RemarkAssignment ) ) ;
    public final void ruleComment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:521:2: ( ( ( rule__Comment__RemarkAssignment ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:522:1: ( ( rule__Comment__RemarkAssignment ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:522:1: ( ( rule__Comment__RemarkAssignment ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:523:1: ( rule__Comment__RemarkAssignment )
            {
             before(grammarAccess.getCommentAccess().getRemarkAssignment()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:524:1: ( rule__Comment__RemarkAssignment )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:524:2: rule__Comment__RemarkAssignment
            {
            pushFollow(FOLLOW_rule__Comment__RemarkAssignment_in_ruleComment1054);
            rule__Comment__RemarkAssignment();

            state._fsp--;


            }

             after(grammarAccess.getCommentAccess().getRemarkAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRuleLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:536:1: entryRuleLabel : ruleLabel EOF ;
    public final void entryRuleLabel() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:537:1: ( ruleLabel EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:538:1: ruleLabel EOF
            {
             before(grammarAccess.getLabelRule()); 
            pushFollow(FOLLOW_ruleLabel_in_entryRuleLabel1081);
            ruleLabel();

            state._fsp--;

             after(grammarAccess.getLabelRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabel1088); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:545:1: ruleLabel : ( ( rule__Label__Group__0 ) ) ;
    public final void ruleLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:549:2: ( ( ( rule__Label__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:550:1: ( ( rule__Label__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:550:1: ( ( rule__Label__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:551:1: ( rule__Label__Group__0 )
            {
             before(grammarAccess.getLabelAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:552:1: ( rule__Label__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:552:2: rule__Label__Group__0
            {
            pushFollow(FOLLOW_rule__Label__Group__0_in_ruleLabel1114);
            rule__Label__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleMacro"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:564:1: entryRuleMacro : ruleMacro EOF ;
    public final void entryRuleMacro() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:565:1: ( ruleMacro EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:566:1: ruleMacro EOF
            {
             before(grammarAccess.getMacroRule()); 
            pushFollow(FOLLOW_ruleMacro_in_entryRuleMacro1141);
            ruleMacro();

            state._fsp--;

             after(grammarAccess.getMacroRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMacro1148); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMacro"


    // $ANTLR start "ruleMacro"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:573:1: ruleMacro : ( ( rule__Macro__Alternatives ) ) ;
    public final void ruleMacro() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:577:2: ( ( ( rule__Macro__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:578:1: ( ( rule__Macro__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:578:1: ( ( rule__Macro__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:579:1: ( rule__Macro__Alternatives )
            {
             before(grammarAccess.getMacroAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:580:1: ( rule__Macro__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:580:2: rule__Macro__Alternatives
            {
            pushFollow(FOLLOW_rule__Macro__Alternatives_in_ruleMacro1174);
            rule__Macro__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getMacroAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMacro"


    // $ANTLR start "entryRuleIsPinConnected"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:592:1: entryRuleIsPinConnected : ruleIsPinConnected EOF ;
    public final void entryRuleIsPinConnected() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:593:1: ( ruleIsPinConnected EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:594:1: ruleIsPinConnected EOF
            {
             before(grammarAccess.getIsPinConnectedRule()); 
            pushFollow(FOLLOW_ruleIsPinConnected_in_entryRuleIsPinConnected1201);
            ruleIsPinConnected();

            state._fsp--;

             after(grammarAccess.getIsPinConnectedRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsPinConnected1208); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsPinConnected"


    // $ANTLR start "ruleIsPinConnected"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:601:1: ruleIsPinConnected : ( ( rule__IsPinConnected__Group__0 ) ) ;
    public final void ruleIsPinConnected() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:605:2: ( ( ( rule__IsPinConnected__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:606:1: ( ( rule__IsPinConnected__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:606:1: ( ( rule__IsPinConnected__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:607:1: ( rule__IsPinConnected__Group__0 )
            {
             before(grammarAccess.getIsPinConnectedAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:608:1: ( rule__IsPinConnected__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:608:2: rule__IsPinConnected__Group__0
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__0_in_ruleIsPinConnected1234);
            rule__IsPinConnected__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsPinConnectedAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsPinConnected"


    // $ANTLR start "entryRuleIsElse"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:620:1: entryRuleIsElse : ruleIsElse EOF ;
    public final void entryRuleIsElse() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:621:1: ( ruleIsElse EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:622:1: ruleIsElse EOF
            {
             before(grammarAccess.getIsElseRule()); 
            pushFollow(FOLLOW_ruleIsElse_in_entryRuleIsElse1261);
            ruleIsElse();

            state._fsp--;

             after(grammarAccess.getIsElseRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsElse1268); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsElse"


    // $ANTLR start "ruleIsElse"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:629:1: ruleIsElse : ( ( rule__IsElse__Group__0 ) ) ;
    public final void ruleIsElse() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:633:2: ( ( ( rule__IsElse__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:634:1: ( ( rule__IsElse__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:634:1: ( ( rule__IsElse__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:635:1: ( rule__IsElse__Group__0 )
            {
             before(grammarAccess.getIsElseAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:636:1: ( rule__IsElse__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:636:2: rule__IsElse__Group__0
            {
            pushFollow(FOLLOW_rule__IsElse__Group__0_in_ruleIsElse1294);
            rule__IsElse__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsElseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsElse"


    // $ANTLR start "entryRuleIsEndif"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:648:1: entryRuleIsEndif : ruleIsEndif EOF ;
    public final void entryRuleIsEndif() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:649:1: ( ruleIsEndif EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:650:1: ruleIsEndif EOF
            {
             before(grammarAccess.getIsEndifRule()); 
            pushFollow(FOLLOW_ruleIsEndif_in_entryRuleIsEndif1321);
            ruleIsEndif();

            state._fsp--;

             after(grammarAccess.getIsEndifRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIsEndif1328); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsEndif"


    // $ANTLR start "ruleIsEndif"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:657:1: ruleIsEndif : ( ( rule__IsEndif__Group__0 ) ) ;
    public final void ruleIsEndif() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:661:2: ( ( ( rule__IsEndif__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:662:1: ( ( rule__IsEndif__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:662:1: ( ( rule__IsEndif__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:663:1: ( rule__IsEndif__Group__0 )
            {
             before(grammarAccess.getIsEndifAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:664:1: ( rule__IsEndif__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:664:2: rule__IsEndif__Group__0
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__0_in_ruleIsEndif1354);
            rule__IsEndif__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsEndifAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsEndif"


    // $ANTLR start "entryRuleGetInputDefault"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:676:1: entryRuleGetInputDefault : ruleGetInputDefault EOF ;
    public final void entryRuleGetInputDefault() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:677:1: ( ruleGetInputDefault EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:678:1: ruleGetInputDefault EOF
            {
             before(grammarAccess.getGetInputDefaultRule()); 
            pushFollow(FOLLOW_ruleGetInputDefault_in_entryRuleGetInputDefault1381);
            ruleGetInputDefault();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetInputDefault1388); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetInputDefault"


    // $ANTLR start "ruleGetInputDefault"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:685:1: ruleGetInputDefault : ( ( rule__GetInputDefault__Group__0 ) ) ;
    public final void ruleGetInputDefault() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:689:2: ( ( ( rule__GetInputDefault__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:690:1: ( ( rule__GetInputDefault__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:690:1: ( ( rule__GetInputDefault__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:691:1: ( rule__GetInputDefault__Group__0 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:692:1: ( rule__GetInputDefault__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:692:2: rule__GetInputDefault__Group__0
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__0_in_ruleGetInputDefault1414);
            rule__GetInputDefault__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetInputDefault"


    // $ANTLR start "entryRuleGetDelayScale"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:704:1: entryRuleGetDelayScale : ruleGetDelayScale EOF ;
    public final void entryRuleGetDelayScale() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:705:1: ( ruleGetDelayScale EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:706:1: ruleGetDelayScale EOF
            {
             before(grammarAccess.getGetDelayScaleRule()); 
            pushFollow(FOLLOW_ruleGetDelayScale_in_entryRuleGetDelayScale1441);
            ruleGetDelayScale();

            state._fsp--;

             after(grammarAccess.getGetDelayScaleRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGetDelayScale1448); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGetDelayScale"


    // $ANTLR start "ruleGetDelayScale"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:713:1: ruleGetDelayScale : ( ( rule__GetDelayScale__Group__0 ) ) ;
    public final void ruleGetDelayScale() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:717:2: ( ( ( rule__GetDelayScale__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:718:1: ( ( rule__GetDelayScale__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:718:1: ( ( rule__GetDelayScale__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:719:1: ( rule__GetDelayScale__Group__0 )
            {
             before(grammarAccess.getGetDelayScaleAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:720:1: ( rule__GetDelayScale__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:720:2: rule__GetDelayScale__Group__0
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__0_in_ruleGetDelayScale1474);
            rule__GetDelayScale__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGetDelayScale"


    // $ANTLR start "entryRuleInstruction"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:732:1: entryRuleInstruction : ruleInstruction EOF ;
    public final void entryRuleInstruction() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:733:1: ( ruleInstruction EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:734:1: ruleInstruction EOF
            {
             before(grammarAccess.getInstructionRule()); 
            pushFollow(FOLLOW_ruleInstruction_in_entryRuleInstruction1501);
            ruleInstruction();

            state._fsp--;

             after(grammarAccess.getInstructionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInstruction1508); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInstruction"


    // $ANTLR start "ruleInstruction"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:741:1: ruleInstruction : ( ( rule__Instruction__Alternatives ) ) ;
    public final void ruleInstruction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:745:2: ( ( ( rule__Instruction__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:746:1: ( ( rule__Instruction__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:746:1: ( ( rule__Instruction__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:747:1: ( rule__Instruction__Alternatives )
            {
             before(grammarAccess.getInstructionAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:748:1: ( rule__Instruction__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:748:2: rule__Instruction__Alternatives
            {
            pushFollow(FOLLOW_rule__Instruction__Alternatives_in_ruleInstruction1534);
            rule__Instruction__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInstructionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInstruction"


    // $ANTLR start "entryRuleInst_B6_S1_14"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:760:1: entryRuleInst_B6_S1_14 : ruleInst_B6_S1_14 EOF ;
    public final void entryRuleInst_B6_S1_14() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:761:1: ( ruleInst_B6_S1_14 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:762:1: ruleInst_B6_S1_14 EOF
            {
             before(grammarAccess.getInst_B6_S1_14Rule()); 
            pushFollow(FOLLOW_ruleInst_B6_S1_14_in_entryRuleInst_B6_S1_141561);
            ruleInst_B6_S1_14();

            state._fsp--;

             after(grammarAccess.getInst_B6_S1_14Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B6_S1_141568); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B6_S1_14"


    // $ANTLR start "ruleInst_B6_S1_14"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:769:1: ruleInst_B6_S1_14 : ( ( rule__Inst_B6_S1_14__Alternatives ) ) ;
    public final void ruleInst_B6_S1_14() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:773:2: ( ( ( rule__Inst_B6_S1_14__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:774:1: ( ( rule__Inst_B6_S1_14__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:774:1: ( ( rule__Inst_B6_S1_14__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:775:1: ( rule__Inst_B6_S1_14__Alternatives )
            {
             before(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:776:1: ( rule__Inst_B6_S1_14__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:776:2: rule__Inst_B6_S1_14__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B6_S1_14__Alternatives_in_ruleInst_B6_S1_141594);
            rule__Inst_B6_S1_14__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B6_S1_14"


    // $ANTLR start "entryRuleInst_B15_S1_9"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:788:1: entryRuleInst_B15_S1_9 : ruleInst_B15_S1_9 EOF ;
    public final void entryRuleInst_B15_S1_9() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:789:1: ( ruleInst_B15_S1_9 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:790:1: ruleInst_B15_S1_9 EOF
            {
             before(grammarAccess.getInst_B15_S1_9Rule()); 
            pushFollow(FOLLOW_ruleInst_B15_S1_9_in_entryRuleInst_B15_S1_91621);
            ruleInst_B15_S1_9();

            state._fsp--;

             after(grammarAccess.getInst_B15_S1_9Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B15_S1_91628); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B15_S1_9"


    // $ANTLR start "ruleInst_B15_S1_9"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:797:1: ruleInst_B15_S1_9 : ( ( rule__Inst_B15_S1_9__Alternatives ) ) ;
    public final void ruleInst_B15_S1_9() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:801:2: ( ( ( rule__Inst_B15_S1_9__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:802:1: ( ( rule__Inst_B15_S1_9__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:802:1: ( ( rule__Inst_B15_S1_9__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:803:1: ( rule__Inst_B15_S1_9__Alternatives )
            {
             before(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:804:1: ( rule__Inst_B15_S1_9__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:804:2: rule__Inst_B15_S1_9__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B15_S1_9__Alternatives_in_ruleInst_B15_S1_91654);
            rule__Inst_B15_S1_9__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B15_S1_9"


    // $ANTLR start "entryRuleInst_B6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:816:1: entryRuleInst_B6 : ruleInst_B6 EOF ;
    public final void entryRuleInst_B6() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:817:1: ( ruleInst_B6 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:818:1: ruleInst_B6 EOF
            {
             before(grammarAccess.getInst_B6Rule()); 
            pushFollow(FOLLOW_ruleInst_B6_in_entryRuleInst_B61681);
            ruleInst_B6();

            state._fsp--;

             after(grammarAccess.getInst_B6Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B61688); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B6"


    // $ANTLR start "ruleInst_B6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:825:1: ruleInst_B6 : ( ( rule__Inst_B6__Alternatives ) ) ;
    public final void ruleInst_B6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:829:2: ( ( ( rule__Inst_B6__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:830:1: ( ( rule__Inst_B6__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:830:1: ( ( rule__Inst_B6__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:831:1: ( rule__Inst_B6__Alternatives )
            {
             before(grammarAccess.getInst_B6Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:832:1: ( rule__Inst_B6__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:832:2: rule__Inst_B6__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B6__Alternatives_in_ruleInst_B61714);
            rule__Inst_B6__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B6Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B6"


    // $ANTLR start "entryRuleInst_B24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:844:1: entryRuleInst_B24 : ruleInst_B24 EOF ;
    public final void entryRuleInst_B24() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:845:1: ( ruleInst_B24 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:846:1: ruleInst_B24 EOF
            {
             before(grammarAccess.getInst_B24Rule()); 
            pushFollow(FOLLOW_ruleInst_B24_in_entryRuleInst_B241741);
            ruleInst_B24();

            state._fsp--;

             after(grammarAccess.getInst_B24Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_B241748); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_B24"


    // $ANTLR start "ruleInst_B24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:853:1: ruleInst_B24 : ( ( rule__Inst_B24__Alternatives ) ) ;
    public final void ruleInst_B24() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:857:2: ( ( ( rule__Inst_B24__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:858:1: ( ( rule__Inst_B24__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:858:1: ( ( rule__Inst_B24__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:859:1: ( rule__Inst_B24__Alternatives )
            {
             before(grammarAccess.getInst_B24Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:860:1: ( rule__Inst_B24__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:860:2: rule__Inst_B24__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_B24__Alternatives_in_ruleInst_B241774);
            rule__Inst_B24__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_B24Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_B24"


    // $ANTLR start "entryRuleInst_X0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:872:1: entryRuleInst_X0 : ruleInst_X0 EOF ;
    public final void entryRuleInst_X0() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:873:1: ( ruleInst_X0 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:874:1: ruleInst_X0 EOF
            {
             before(grammarAccess.getInst_X0Rule()); 
            pushFollow(FOLLOW_ruleInst_X0_in_entryRuleInst_X01801);
            ruleInst_X0();

            state._fsp--;

             after(grammarAccess.getInst_X0Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_X01808); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_X0"


    // $ANTLR start "ruleInst_X0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:881:1: ruleInst_X0 : ( ( rule__Inst_X0__Alternatives ) ) ;
    public final void ruleInst_X0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:885:2: ( ( ( rule__Inst_X0__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:886:1: ( ( rule__Inst_X0__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:886:1: ( ( rule__Inst_X0__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:887:1: ( rule__Inst_X0__Alternatives )
            {
             before(grammarAccess.getInst_X0Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:888:1: ( rule__Inst_X0__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:888:2: rule__Inst_X0__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_X0__Alternatives_in_ruleInst_X01834);
            rule__Inst_X0__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_X0Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_X0"


    // $ANTLR start "entryRuleInst_S1_14_S1_10"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:900:1: entryRuleInst_S1_14_S1_10 : ruleInst_S1_14_S1_10 EOF ;
    public final void entryRuleInst_S1_14_S1_10() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:901:1: ( ruleInst_S1_14_S1_10 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:902:1: ruleInst_S1_14_S1_10 EOF
            {
             before(grammarAccess.getInst_S1_14_S1_10Rule()); 
            pushFollow(FOLLOW_ruleInst_S1_14_S1_10_in_entryRuleInst_S1_14_S1_101861);
            ruleInst_S1_14_S1_10();

            state._fsp--;

             after(grammarAccess.getInst_S1_14_S1_10Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInst_S1_14_S1_101868); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInst_S1_14_S1_10"


    // $ANTLR start "ruleInst_S1_14_S1_10"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:909:1: ruleInst_S1_14_S1_10 : ( ( rule__Inst_S1_14_S1_10__Alternatives ) ) ;
    public final void ruleInst_S1_14_S1_10() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:913:2: ( ( ( rule__Inst_S1_14_S1_10__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:914:1: ( ( rule__Inst_S1_14_S1_10__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:914:1: ( ( rule__Inst_S1_14_S1_10__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:915:1: ( rule__Inst_S1_14_S1_10__Alternatives )
            {
             before(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:916:1: ( rule__Inst_S1_14_S1_10__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:916:2: rule__Inst_S1_14_S1_10__Alternatives
            {
            pushFollow(FOLLOW_rule__Inst_S1_14_S1_10__Alternatives_in_ruleInst_S1_14_S1_101894);
            rule__Inst_S1_14_S1_10__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInst_S1_14_S1_10"


    // $ANTLR start "entryRuleReadRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:928:1: entryRuleReadRegister : ruleReadRegister EOF ;
    public final void entryRuleReadRegister() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:929:1: ( ruleReadRegister EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:930:1: ruleReadRegister EOF
            {
             before(grammarAccess.getReadRegisterRule()); 
            pushFollow(FOLLOW_ruleReadRegister_in_entryRuleReadRegister1921);
            ruleReadRegister();

            state._fsp--;

             after(grammarAccess.getReadRegisterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadRegister1928); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadRegister"


    // $ANTLR start "ruleReadRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:937:1: ruleReadRegister : ( ( rule__ReadRegister__Group__0 ) ) ;
    public final void ruleReadRegister() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:941:2: ( ( ( rule__ReadRegister__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:942:1: ( ( rule__ReadRegister__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:942:1: ( ( rule__ReadRegister__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:943:1: ( rule__ReadRegister__Group__0 )
            {
             before(grammarAccess.getReadRegisterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:944:1: ( rule__ReadRegister__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:944:2: rule__ReadRegister__Group__0
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__0_in_ruleReadRegister1954);
            rule__ReadRegister__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadRegister"


    // $ANTLR start "entryRuleWriteRegisterLowshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:956:1: entryRuleWriteRegisterLowshelf : ruleWriteRegisterLowshelf EOF ;
    public final void entryRuleWriteRegisterLowshelf() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:957:1: ( ruleWriteRegisterLowshelf EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:958:1: ruleWriteRegisterLowshelf EOF
            {
             before(grammarAccess.getWriteRegisterLowshelfRule()); 
            pushFollow(FOLLOW_ruleWriteRegisterLowshelf_in_entryRuleWriteRegisterLowshelf1981);
            ruleWriteRegisterLowshelf();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegisterLowshelf1988); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegisterLowshelf"


    // $ANTLR start "ruleWriteRegisterLowshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:965:1: ruleWriteRegisterLowshelf : ( ( rule__WriteRegisterLowshelf__Group__0 ) ) ;
    public final void ruleWriteRegisterLowshelf() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:969:2: ( ( ( rule__WriteRegisterLowshelf__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:970:1: ( ( rule__WriteRegisterLowshelf__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:970:1: ( ( rule__WriteRegisterLowshelf__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:971:1: ( rule__WriteRegisterLowshelf__Group__0 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:972:1: ( rule__WriteRegisterLowshelf__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:972:2: rule__WriteRegisterLowshelf__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__0_in_ruleWriteRegisterLowshelf2014);
            rule__WriteRegisterLowshelf__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegisterLowshelf"


    // $ANTLR start "entryRuleWriteRegisterHighshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:984:1: entryRuleWriteRegisterHighshelf : ruleWriteRegisterHighshelf EOF ;
    public final void entryRuleWriteRegisterHighshelf() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:985:1: ( ruleWriteRegisterHighshelf EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:986:1: ruleWriteRegisterHighshelf EOF
            {
             before(grammarAccess.getWriteRegisterHighshelfRule()); 
            pushFollow(FOLLOW_ruleWriteRegisterHighshelf_in_entryRuleWriteRegisterHighshelf2041);
            ruleWriteRegisterHighshelf();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegisterHighshelf2048); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegisterHighshelf"


    // $ANTLR start "ruleWriteRegisterHighshelf"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:993:1: ruleWriteRegisterHighshelf : ( ( rule__WriteRegisterHighshelf__Group__0 ) ) ;
    public final void ruleWriteRegisterHighshelf() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:997:2: ( ( ( rule__WriteRegisterHighshelf__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:998:1: ( ( rule__WriteRegisterHighshelf__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:998:1: ( ( rule__WriteRegisterHighshelf__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:999:1: ( rule__WriteRegisterHighshelf__Group__0 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1000:1: ( rule__WriteRegisterHighshelf__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1000:2: rule__WriteRegisterHighshelf__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__0_in_ruleWriteRegisterHighshelf2074);
            rule__WriteRegisterHighshelf__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegisterHighshelf"


    // $ANTLR start "entryRuleWriteRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1012:1: entryRuleWriteRegister : ruleWriteRegister EOF ;
    public final void entryRuleWriteRegister() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1013:1: ( ruleWriteRegister EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1014:1: ruleWriteRegister EOF
            {
             before(grammarAccess.getWriteRegisterRule()); 
            pushFollow(FOLLOW_ruleWriteRegister_in_entryRuleWriteRegister2101);
            ruleWriteRegister();

            state._fsp--;

             after(grammarAccess.getWriteRegisterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteRegister2108); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteRegister"


    // $ANTLR start "ruleWriteRegister"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1021:1: ruleWriteRegister : ( ( rule__WriteRegister__Group__0 ) ) ;
    public final void ruleWriteRegister() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1025:2: ( ( ( rule__WriteRegister__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1026:1: ( ( rule__WriteRegister__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1026:1: ( ( rule__WriteRegister__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1027:1: ( rule__WriteRegister__Group__0 )
            {
             before(grammarAccess.getWriteRegisterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1028:1: ( rule__WriteRegister__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1028:2: rule__WriteRegister__Group__0
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__0_in_ruleWriteRegister2134);
            rule__WriteRegister__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteRegister"


    // $ANTLR start "entryRuleMaxx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1040:1: entryRuleMaxx : ruleMaxx EOF ;
    public final void entryRuleMaxx() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1041:1: ( ruleMaxx EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1042:1: ruleMaxx EOF
            {
             before(grammarAccess.getMaxxRule()); 
            pushFollow(FOLLOW_ruleMaxx_in_entryRuleMaxx2161);
            ruleMaxx();

            state._fsp--;

             after(grammarAccess.getMaxxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMaxx2168); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMaxx"


    // $ANTLR start "ruleMaxx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1049:1: ruleMaxx : ( ( rule__Maxx__Group__0 ) ) ;
    public final void ruleMaxx() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1053:2: ( ( ( rule__Maxx__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1054:1: ( ( rule__Maxx__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1054:1: ( ( rule__Maxx__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1055:1: ( rule__Maxx__Group__0 )
            {
             before(grammarAccess.getMaxxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1056:1: ( rule__Maxx__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1056:2: rule__Maxx__Group__0
            {
            pushFollow(FOLLOW_rule__Maxx__Group__0_in_ruleMaxx2194);
            rule__Maxx__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMaxx"


    // $ANTLR start "entryRuleReadRegisterFilter"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1068:1: entryRuleReadRegisterFilter : ruleReadRegisterFilter EOF ;
    public final void entryRuleReadRegisterFilter() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1069:1: ( ruleReadRegisterFilter EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1070:1: ruleReadRegisterFilter EOF
            {
             before(grammarAccess.getReadRegisterFilterRule()); 
            pushFollow(FOLLOW_ruleReadRegisterFilter_in_entryRuleReadRegisterFilter2221);
            ruleReadRegisterFilter();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadRegisterFilter2228); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadRegisterFilter"


    // $ANTLR start "ruleReadRegisterFilter"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1077:1: ruleReadRegisterFilter : ( ( rule__ReadRegisterFilter__Group__0 ) ) ;
    public final void ruleReadRegisterFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1081:2: ( ( ( rule__ReadRegisterFilter__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1082:1: ( ( rule__ReadRegisterFilter__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1082:1: ( ( rule__ReadRegisterFilter__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1083:1: ( rule__ReadRegisterFilter__Group__0 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1084:1: ( rule__ReadRegisterFilter__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1084:2: rule__ReadRegisterFilter__Group__0
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__0_in_ruleReadRegisterFilter2254);
            rule__ReadRegisterFilter__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadRegisterFilter"


    // $ANTLR start "entryRuleMulx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1096:1: entryRuleMulx : ruleMulx EOF ;
    public final void entryRuleMulx() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1097:1: ( ruleMulx EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1098:1: ruleMulx EOF
            {
             before(grammarAccess.getMulxRule()); 
            pushFollow(FOLLOW_ruleMulx_in_entryRuleMulx2281);
            ruleMulx();

            state._fsp--;

             after(grammarAccess.getMulxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMulx2288); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMulx"


    // $ANTLR start "ruleMulx"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1105:1: ruleMulx : ( ( rule__Mulx__Group__0 ) ) ;
    public final void ruleMulx() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1109:2: ( ( ( rule__Mulx__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1110:1: ( ( rule__Mulx__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1110:1: ( ( rule__Mulx__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1111:1: ( rule__Mulx__Group__0 )
            {
             before(grammarAccess.getMulxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1112:1: ( rule__Mulx__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1112:2: rule__Mulx__Group__0
            {
            pushFollow(FOLLOW_rule__Mulx__Group__0_in_ruleMulx2314);
            rule__Mulx__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMulxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulx"


    // $ANTLR start "entryRuleLdax"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1124:1: entryRuleLdax : ruleLdax EOF ;
    public final void entryRuleLdax() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1125:1: ( ruleLdax EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1126:1: ruleLdax EOF
            {
             before(grammarAccess.getLdaxRule()); 
            pushFollow(FOLLOW_ruleLdax_in_entryRuleLdax2341);
            ruleLdax();

            state._fsp--;

             after(grammarAccess.getLdaxRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLdax2348); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLdax"


    // $ANTLR start "ruleLdax"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1133:1: ruleLdax : ( ( rule__Ldax__Group__0 ) ) ;
    public final void ruleLdax() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1137:2: ( ( ( rule__Ldax__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1138:1: ( ( rule__Ldax__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1138:1: ( ( rule__Ldax__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1139:1: ( rule__Ldax__Group__0 )
            {
             before(grammarAccess.getLdaxAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1140:1: ( rule__Ldax__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1140:2: rule__Ldax__Group__0
            {
            pushFollow(FOLLOW_rule__Ldax__Group__0_in_ruleLdax2374);
            rule__Ldax__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLdaxAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLdax"


    // $ANTLR start "entryRuleExp"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1152:1: entryRuleExp : ruleExp EOF ;
    public final void entryRuleExp() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1153:1: ( ruleExp EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1154:1: ruleExp EOF
            {
             before(grammarAccess.getExpRule()); 
            pushFollow(FOLLOW_ruleExp_in_entryRuleExp2401);
            ruleExp();

            state._fsp--;

             after(grammarAccess.getExpRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExp2408); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExp"


    // $ANTLR start "ruleExp"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1161:1: ruleExp : ( ( rule__Exp__Group__0 ) ) ;
    public final void ruleExp() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1165:2: ( ( ( rule__Exp__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1166:1: ( ( rule__Exp__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1166:1: ( ( rule__Exp__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1167:1: ( rule__Exp__Group__0 )
            {
             before(grammarAccess.getExpAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1168:1: ( rule__Exp__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1168:2: rule__Exp__Group__0
            {
            pushFollow(FOLLOW_rule__Exp__Group__0_in_ruleExp2434);
            rule__Exp__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExp"


    // $ANTLR start "entryRuleLog"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1180:1: entryRuleLog : ruleLog EOF ;
    public final void entryRuleLog() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1181:1: ( ruleLog EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1182:1: ruleLog EOF
            {
             before(grammarAccess.getLogRule()); 
            pushFollow(FOLLOW_ruleLog_in_entryRuleLog2461);
            ruleLog();

            state._fsp--;

             after(grammarAccess.getLogRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLog2468); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLog"


    // $ANTLR start "ruleLog"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1189:1: ruleLog : ( ( rule__Log__Group__0 ) ) ;
    public final void ruleLog() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1193:2: ( ( ( rule__Log__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1194:1: ( ( rule__Log__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1194:1: ( ( rule__Log__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1195:1: ( rule__Log__Group__0 )
            {
             before(grammarAccess.getLogAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1196:1: ( rule__Log__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1196:2: rule__Log__Group__0
            {
            pushFollow(FOLLOW_rule__Log__Group__0_in_ruleLog2494);
            rule__Log__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLog"


    // $ANTLR start "entryRuleScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1208:1: entryRuleScaleOffset : ruleScaleOffset EOF ;
    public final void entryRuleScaleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1209:1: ( ruleScaleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1210:1: ruleScaleOffset EOF
            {
             before(grammarAccess.getScaleOffsetRule()); 
            pushFollow(FOLLOW_ruleScaleOffset_in_entryRuleScaleOffset2521);
            ruleScaleOffset();

            state._fsp--;

             after(grammarAccess.getScaleOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleScaleOffset2528); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScaleOffset"


    // $ANTLR start "ruleScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1217:1: ruleScaleOffset : ( ( rule__ScaleOffset__Group__0 ) ) ;
    public final void ruleScaleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1221:2: ( ( ( rule__ScaleOffset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1222:1: ( ( rule__ScaleOffset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1222:1: ( ( rule__ScaleOffset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1223:1: ( rule__ScaleOffset__Group__0 )
            {
             before(grammarAccess.getScaleOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1224:1: ( rule__ScaleOffset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1224:2: rule__ScaleOffset__Group__0
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__0_in_ruleScaleOffset2554);
            rule__ScaleOffset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScaleOffset"


    // $ANTLR start "entryRuleWriteDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1236:1: entryRuleWriteDelay : ruleWriteDelay EOF ;
    public final void entryRuleWriteDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1237:1: ( ruleWriteDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1238:1: ruleWriteDelay EOF
            {
             before(grammarAccess.getWriteDelayRule()); 
            pushFollow(FOLLOW_ruleWriteDelay_in_entryRuleWriteDelay2581);
            ruleWriteDelay();

            state._fsp--;

             after(grammarAccess.getWriteDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteDelay2588); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteDelay"


    // $ANTLR start "ruleWriteDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1245:1: ruleWriteDelay : ( ( rule__WriteDelay__Group__0 ) ) ;
    public final void ruleWriteDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1249:2: ( ( ( rule__WriteDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1250:1: ( ( rule__WriteDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1250:1: ( ( rule__WriteDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1251:1: ( rule__WriteDelay__Group__0 )
            {
             before(grammarAccess.getWriteDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1252:1: ( rule__WriteDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1252:2: rule__WriteDelay__Group__0
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__0_in_ruleWriteDelay2614);
            rule__WriteDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteDelay"


    // $ANTLR start "entryRuleWriteAllpass"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1264:1: entryRuleWriteAllpass : ruleWriteAllpass EOF ;
    public final void entryRuleWriteAllpass() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1265:1: ( ruleWriteAllpass EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1266:1: ruleWriteAllpass EOF
            {
             before(grammarAccess.getWriteAllpassRule()); 
            pushFollow(FOLLOW_ruleWriteAllpass_in_entryRuleWriteAllpass2641);
            ruleWriteAllpass();

            state._fsp--;

             after(grammarAccess.getWriteAllpassRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWriteAllpass2648); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWriteAllpass"


    // $ANTLR start "ruleWriteAllpass"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1273:1: ruleWriteAllpass : ( ( rule__WriteAllpass__Group__0 ) ) ;
    public final void ruleWriteAllpass() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1277:2: ( ( ( rule__WriteAllpass__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1278:1: ( ( rule__WriteAllpass__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1278:1: ( ( rule__WriteAllpass__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1279:1: ( rule__WriteAllpass__Group__0 )
            {
             before(grammarAccess.getWriteAllpassAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1280:1: ( rule__WriteAllpass__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1280:2: rule__WriteAllpass__Group__0
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__0_in_ruleWriteAllpass2674);
            rule__WriteAllpass__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWriteAllpass"


    // $ANTLR start "entryRuleReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1292:1: entryRuleReadDelay : ruleReadDelay EOF ;
    public final void entryRuleReadDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1293:1: ( ruleReadDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1294:1: ruleReadDelay EOF
            {
             before(grammarAccess.getReadDelayRule()); 
            pushFollow(FOLLOW_ruleReadDelay_in_entryRuleReadDelay2701);
            ruleReadDelay();

            state._fsp--;

             after(grammarAccess.getReadDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadDelay2708); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadDelay"


    // $ANTLR start "ruleReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1301:1: ruleReadDelay : ( ( rule__ReadDelay__Group__0 ) ) ;
    public final void ruleReadDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1305:2: ( ( ( rule__ReadDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1306:1: ( ( rule__ReadDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1306:1: ( ( rule__ReadDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1307:1: ( rule__ReadDelay__Group__0 )
            {
             before(grammarAccess.getReadDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1308:1: ( rule__ReadDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1308:2: rule__ReadDelay__Group__0
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__0_in_ruleReadDelay2734);
            rule__ReadDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadDelay"


    // $ANTLR start "entryRuleLoadSinLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1320:1: entryRuleLoadSinLFO : ruleLoadSinLFO EOF ;
    public final void entryRuleLoadSinLFO() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1321:1: ( ruleLoadSinLFO EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1322:1: ruleLoadSinLFO EOF
            {
             before(grammarAccess.getLoadSinLFORule()); 
            pushFollow(FOLLOW_ruleLoadSinLFO_in_entryRuleLoadSinLFO2761);
            ruleLoadSinLFO();

            state._fsp--;

             after(grammarAccess.getLoadSinLFORule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLoadSinLFO2768); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLoadSinLFO"


    // $ANTLR start "ruleLoadSinLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1329:1: ruleLoadSinLFO : ( ( rule__LoadSinLFO__Group__0 ) ) ;
    public final void ruleLoadSinLFO() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1333:2: ( ( ( rule__LoadSinLFO__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1334:1: ( ( rule__LoadSinLFO__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1334:1: ( ( rule__LoadSinLFO__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1335:1: ( rule__LoadSinLFO__Group__0 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1336:1: ( rule__LoadSinLFO__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1336:2: rule__LoadSinLFO__Group__0
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__0_in_ruleLoadSinLFO2794);
            rule__LoadSinLFO__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLoadSinLFO"


    // $ANTLR start "entryRuleLoadRampLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1348:1: entryRuleLoadRampLFO : ruleLoadRampLFO EOF ;
    public final void entryRuleLoadRampLFO() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1349:1: ( ruleLoadRampLFO EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1350:1: ruleLoadRampLFO EOF
            {
             before(grammarAccess.getLoadRampLFORule()); 
            pushFollow(FOLLOW_ruleLoadRampLFO_in_entryRuleLoadRampLFO2821);
            ruleLoadRampLFO();

            state._fsp--;

             after(grammarAccess.getLoadRampLFORule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLoadRampLFO2828); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLoadRampLFO"


    // $ANTLR start "ruleLoadRampLFO"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1357:1: ruleLoadRampLFO : ( ( rule__LoadRampLFO__Group__0 ) ) ;
    public final void ruleLoadRampLFO() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1361:2: ( ( ( rule__LoadRampLFO__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1362:1: ( ( rule__LoadRampLFO__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1362:1: ( ( rule__LoadRampLFO__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1363:1: ( rule__LoadRampLFO__Group__0 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1364:1: ( rule__LoadRampLFO__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1364:2: rule__LoadRampLFO__Group__0
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__0_in_ruleLoadRampLFO2854);
            rule__LoadRampLFO__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLoadRampLFO"


    // $ANTLR start "entryRuleChorusReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1376:1: entryRuleChorusReadDelay : ruleChorusReadDelay EOF ;
    public final void entryRuleChorusReadDelay() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1377:1: ( ruleChorusReadDelay EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1378:1: ruleChorusReadDelay EOF
            {
             before(grammarAccess.getChorusReadDelayRule()); 
            pushFollow(FOLLOW_ruleChorusReadDelay_in_entryRuleChorusReadDelay2881);
            ruleChorusReadDelay();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusReadDelay2888); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusReadDelay"


    // $ANTLR start "ruleChorusReadDelay"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1385:1: ruleChorusReadDelay : ( ( rule__ChorusReadDelay__Group__0 ) ) ;
    public final void ruleChorusReadDelay() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1389:2: ( ( ( rule__ChorusReadDelay__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1390:1: ( ( rule__ChorusReadDelay__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1390:1: ( ( rule__ChorusReadDelay__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1391:1: ( rule__ChorusReadDelay__Group__0 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1392:1: ( rule__ChorusReadDelay__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1392:2: rule__ChorusReadDelay__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__0_in_ruleChorusReadDelay2914);
            rule__ChorusReadDelay__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusReadDelay"


    // $ANTLR start "entryRuleChorusReadValue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1404:1: entryRuleChorusReadValue : ruleChorusReadValue EOF ;
    public final void entryRuleChorusReadValue() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1405:1: ( ruleChorusReadValue EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1406:1: ruleChorusReadValue EOF
            {
             before(grammarAccess.getChorusReadValueRule()); 
            pushFollow(FOLLOW_ruleChorusReadValue_in_entryRuleChorusReadValue2941);
            ruleChorusReadValue();

            state._fsp--;

             after(grammarAccess.getChorusReadValueRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusReadValue2948); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusReadValue"


    // $ANTLR start "ruleChorusReadValue"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1413:1: ruleChorusReadValue : ( ( rule__ChorusReadValue__Group__0 ) ) ;
    public final void ruleChorusReadValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1417:2: ( ( ( rule__ChorusReadValue__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1418:1: ( ( rule__ChorusReadValue__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1418:1: ( ( rule__ChorusReadValue__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1419:1: ( rule__ChorusReadValue__Group__0 )
            {
             before(grammarAccess.getChorusReadValueAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1420:1: ( rule__ChorusReadValue__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1420:2: rule__ChorusReadValue__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__0_in_ruleChorusReadValue2974);
            rule__ChorusReadValue__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadValueAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusReadValue"


    // $ANTLR start "entryRuleChorusScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1432:1: entryRuleChorusScaleOffset : ruleChorusScaleOffset EOF ;
    public final void entryRuleChorusScaleOffset() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1433:1: ( ruleChorusScaleOffset EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1434:1: ruleChorusScaleOffset EOF
            {
             before(grammarAccess.getChorusScaleOffsetRule()); 
            pushFollow(FOLLOW_ruleChorusScaleOffset_in_entryRuleChorusScaleOffset3001);
            ruleChorusScaleOffset();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChorusScaleOffset3008); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChorusScaleOffset"


    // $ANTLR start "ruleChorusScaleOffset"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1441:1: ruleChorusScaleOffset : ( ( rule__ChorusScaleOffset__Group__0 ) ) ;
    public final void ruleChorusScaleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1445:2: ( ( ( rule__ChorusScaleOffset__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1446:1: ( ( rule__ChorusScaleOffset__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1446:1: ( ( rule__ChorusScaleOffset__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1447:1: ( rule__ChorusScaleOffset__Group__0 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1448:1: ( rule__ChorusScaleOffset__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1448:2: rule__ChorusScaleOffset__Group__0
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__0_in_ruleChorusScaleOffset3034);
            rule__ChorusScaleOffset__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChorusScaleOffset"


    // $ANTLR start "entryRuleReadDelayPointer"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1460:1: entryRuleReadDelayPointer : ruleReadDelayPointer EOF ;
    public final void entryRuleReadDelayPointer() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1461:1: ( ruleReadDelayPointer EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1462:1: ruleReadDelayPointer EOF
            {
             before(grammarAccess.getReadDelayPointerRule()); 
            pushFollow(FOLLOW_ruleReadDelayPointer_in_entryRuleReadDelayPointer3061);
            ruleReadDelayPointer();

            state._fsp--;

             after(grammarAccess.getReadDelayPointerRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReadDelayPointer3068); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReadDelayPointer"


    // $ANTLR start "ruleReadDelayPointer"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1469:1: ruleReadDelayPointer : ( ( rule__ReadDelayPointer__Group__0 ) ) ;
    public final void ruleReadDelayPointer() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1473:2: ( ( ( rule__ReadDelayPointer__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1474:1: ( ( rule__ReadDelayPointer__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1474:1: ( ( rule__ReadDelayPointer__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1475:1: ( rule__ReadDelayPointer__Group__0 )
            {
             before(grammarAccess.getReadDelayPointerAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1476:1: ( rule__ReadDelayPointer__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1476:2: rule__ReadDelayPointer__Group__0
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__0_in_ruleReadDelayPointer3094);
            rule__ReadDelayPointer__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayPointerAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReadDelayPointer"


    // $ANTLR start "entryRuleAnd"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1488:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1489:1: ( ruleAnd EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1490:1: ruleAnd EOF
            {
             before(grammarAccess.getAndRule()); 
            pushFollow(FOLLOW_ruleAnd_in_entryRuleAnd3121);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getAndRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAnd3128); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1497:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1501:2: ( ( ( rule__And__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1502:1: ( ( rule__And__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1502:1: ( ( rule__And__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1503:1: ( rule__And__Group__0 )
            {
             before(grammarAccess.getAndAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1504:1: ( rule__And__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1504:2: rule__And__Group__0
            {
            pushFollow(FOLLOW_rule__And__Group__0_in_ruleAnd3154);
            rule__And__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleOr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1516:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1517:1: ( ruleOr EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1518:1: ruleOr EOF
            {
             before(grammarAccess.getOrRule()); 
            pushFollow(FOLLOW_ruleOr_in_entryRuleOr3181);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getOrRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleOr3188); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1525:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1529:2: ( ( ( rule__Or__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1530:1: ( ( rule__Or__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1530:1: ( ( rule__Or__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1531:1: ( rule__Or__Group__0 )
            {
             before(grammarAccess.getOrAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1532:1: ( rule__Or__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1532:2: rule__Or__Group__0
            {
            pushFollow(FOLLOW_rule__Or__Group__0_in_ruleOr3214);
            rule__Or__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleXor"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1544:1: entryRuleXor : ruleXor EOF ;
    public final void entryRuleXor() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1545:1: ( ruleXor EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1546:1: ruleXor EOF
            {
             before(grammarAccess.getXorRule()); 
            pushFollow(FOLLOW_ruleXor_in_entryRuleXor3241);
            ruleXor();

            state._fsp--;

             after(grammarAccess.getXorRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleXor3248); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXor"


    // $ANTLR start "ruleXor"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1553:1: ruleXor : ( ( rule__Xor__Group__0 ) ) ;
    public final void ruleXor() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1557:2: ( ( ( rule__Xor__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1558:1: ( ( rule__Xor__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1558:1: ( ( rule__Xor__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1559:1: ( rule__Xor__Group__0 )
            {
             before(grammarAccess.getXorAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1560:1: ( rule__Xor__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1560:2: rule__Xor__Group__0
            {
            pushFollow(FOLLOW_rule__Xor__Group__0_in_ruleXor3274);
            rule__Xor__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXor"


    // $ANTLR start "entryRuleJam"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1572:1: entryRuleJam : ruleJam EOF ;
    public final void entryRuleJam() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1573:1: ( ruleJam EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1574:1: ruleJam EOF
            {
             before(grammarAccess.getJamRule()); 
            pushFollow(FOLLOW_ruleJam_in_entryRuleJam3301);
            ruleJam();

            state._fsp--;

             after(grammarAccess.getJamRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleJam3308); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJam"


    // $ANTLR start "ruleJam"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1581:1: ruleJam : ( ( rule__Jam__Group__0 ) ) ;
    public final void ruleJam() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1585:2: ( ( ( rule__Jam__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1586:1: ( ( rule__Jam__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1586:1: ( ( rule__Jam__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1587:1: ( rule__Jam__Group__0 )
            {
             before(grammarAccess.getJamAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1588:1: ( rule__Jam__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1588:2: rule__Jam__Group__0
            {
            pushFollow(FOLLOW_rule__Jam__Group__0_in_ruleJam3334);
            rule__Jam__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getJamAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJam"


    // $ANTLR start "entryRuleClr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1600:1: entryRuleClr : ruleClr EOF ;
    public final void entryRuleClr() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1601:1: ( ruleClr EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1602:1: ruleClr EOF
            {
             before(grammarAccess.getClrRule()); 
            pushFollow(FOLLOW_ruleClr_in_entryRuleClr3361);
            ruleClr();

            state._fsp--;

             after(grammarAccess.getClrRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleClr3368); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleClr"


    // $ANTLR start "ruleClr"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1609:1: ruleClr : ( ( rule__Clr__Group__0 ) ) ;
    public final void ruleClr() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1613:2: ( ( ( rule__Clr__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1614:1: ( ( rule__Clr__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1614:1: ( ( rule__Clr__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1615:1: ( rule__Clr__Group__0 )
            {
             before(grammarAccess.getClrAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1616:1: ( rule__Clr__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1616:2: rule__Clr__Group__0
            {
            pushFollow(FOLLOW_rule__Clr__Group__0_in_ruleClr3394);
            rule__Clr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getClrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClr"


    // $ANTLR start "entryRuleNot"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1628:1: entryRuleNot : ruleNot EOF ;
    public final void entryRuleNot() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1629:1: ( ruleNot EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1630:1: ruleNot EOF
            {
             before(grammarAccess.getNotRule()); 
            pushFollow(FOLLOW_ruleNot_in_entryRuleNot3421);
            ruleNot();

            state._fsp--;

             after(grammarAccess.getNotRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNot3428); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNot"


    // $ANTLR start "ruleNot"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1637:1: ruleNot : ( ( rule__Not__Group__0 ) ) ;
    public final void ruleNot() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1641:2: ( ( ( rule__Not__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1642:1: ( ( rule__Not__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1642:1: ( ( rule__Not__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1643:1: ( rule__Not__Group__0 )
            {
             before(grammarAccess.getNotAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1644:1: ( rule__Not__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1644:2: rule__Not__Group__0
            {
            pushFollow(FOLLOW_rule__Not__Group__0_in_ruleNot3454);
            rule__Not__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNotAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNot"


    // $ANTLR start "entryRuleAbsa"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1656:1: entryRuleAbsa : ruleAbsa EOF ;
    public final void entryRuleAbsa() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1657:1: ( ruleAbsa EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1658:1: ruleAbsa EOF
            {
             before(grammarAccess.getAbsaRule()); 
            pushFollow(FOLLOW_ruleAbsa_in_entryRuleAbsa3481);
            ruleAbsa();

            state._fsp--;

             after(grammarAccess.getAbsaRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbsa3488); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAbsa"


    // $ANTLR start "ruleAbsa"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1665:1: ruleAbsa : ( ( rule__Absa__Group__0 ) ) ;
    public final void ruleAbsa() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1669:2: ( ( ( rule__Absa__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1670:1: ( ( rule__Absa__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1670:1: ( ( rule__Absa__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1671:1: ( rule__Absa__Group__0 )
            {
             before(grammarAccess.getAbsaAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1672:1: ( rule__Absa__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1672:2: rule__Absa__Group__0
            {
            pushFollow(FOLLOW_rule__Absa__Group__0_in_ruleAbsa3514);
            rule__Absa__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAbsaAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAbsa"


    // $ANTLR start "entryRuleSkip"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1684:1: entryRuleSkip : ruleSkip EOF ;
    public final void entryRuleSkip() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1685:1: ( ruleSkip EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1686:1: ruleSkip EOF
            {
             before(grammarAccess.getSkipRule()); 
            pushFollow(FOLLOW_ruleSkip_in_entryRuleSkip3541);
            ruleSkip();

            state._fsp--;

             after(grammarAccess.getSkipRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSkip3548); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSkip"


    // $ANTLR start "ruleSkip"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1693:1: ruleSkip : ( ( rule__Skip__Group__0 ) ) ;
    public final void ruleSkip() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1697:2: ( ( ( rule__Skip__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1698:1: ( ( rule__Skip__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1698:1: ( ( rule__Skip__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1699:1: ( rule__Skip__Group__0 )
            {
             before(grammarAccess.getSkipAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1700:1: ( rule__Skip__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1700:2: rule__Skip__Group__0
            {
            pushFollow(FOLLOW_rule__Skip__Group__0_in_ruleSkip3574);
            rule__Skip__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSkip"


    // $ANTLR start "entryRuleSPINDOUBLE"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1712:1: entryRuleSPINDOUBLE : ruleSPINDOUBLE EOF ;
    public final void entryRuleSPINDOUBLE() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1713:1: ( ruleSPINDOUBLE EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1714:1: ruleSPINDOUBLE EOF
            {
             before(grammarAccess.getSPINDOUBLERule()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_entryRuleSPINDOUBLE3601);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getSPINDOUBLERule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINDOUBLE3608); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINDOUBLE"


    // $ANTLR start "ruleSPINDOUBLE"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1721:1: ruleSPINDOUBLE : ( ( rule__SPINDOUBLE__Group__0 ) ) ;
    public final void ruleSPINDOUBLE() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1725:2: ( ( ( rule__SPINDOUBLE__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1726:1: ( ( rule__SPINDOUBLE__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1726:1: ( ( rule__SPINDOUBLE__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1727:1: ( rule__SPINDOUBLE__Group__0 )
            {
             before(grammarAccess.getSPINDOUBLEAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1728:1: ( rule__SPINDOUBLE__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1728:2: rule__SPINDOUBLE__Group__0
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__0_in_ruleSPINDOUBLE3634);
            rule__SPINDOUBLE__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINDOUBLEAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINDOUBLE"


    // $ANTLR start "entryRuleSPINREGISTER"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1740:1: entryRuleSPINREGISTER : ruleSPINREGISTER EOF ;
    public final void entryRuleSPINREGISTER() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1741:1: ( ruleSPINREGISTER EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1742:1: ruleSPINREGISTER EOF
            {
             before(grammarAccess.getSPINREGISTERRule()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_entryRuleSPINREGISTER3661);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getSPINREGISTERRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINREGISTER3668); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINREGISTER"


    // $ANTLR start "ruleSPINREGISTER"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1749:1: ruleSPINREGISTER : ( ( rule__SPINREGISTER__Alternatives ) ) ;
    public final void ruleSPINREGISTER() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1753:2: ( ( ( rule__SPINREGISTER__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1754:1: ( ( rule__SPINREGISTER__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1754:1: ( ( rule__SPINREGISTER__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1755:1: ( rule__SPINREGISTER__Alternatives )
            {
             before(grammarAccess.getSPINREGISTERAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1756:1: ( rule__SPINREGISTER__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1756:2: rule__SPINREGISTER__Alternatives
            {
            pushFollow(FOLLOW_rule__SPINREGISTER__Alternatives_in_ruleSPINREGISTER3694);
            rule__SPINREGISTER__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSPINREGISTERAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINREGISTER"


    // $ANTLR start "entryRuleSPINCHOREGFLAGS"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1768:1: entryRuleSPINCHOREGFLAGS : ruleSPINCHOREGFLAGS EOF ;
    public final void entryRuleSPINCHOREGFLAGS() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1769:1: ( ruleSPINCHOREGFLAGS EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1770:1: ruleSPINCHOREGFLAGS EOF
            {
             before(grammarAccess.getSPINCHOREGFLAGSRule()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_entryRuleSPINCHOREGFLAGS3721);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getSPINCHOREGFLAGSRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINCHOREGFLAGS3728); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINCHOREGFLAGS"


    // $ANTLR start "ruleSPINCHOREGFLAGS"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1777:1: ruleSPINCHOREGFLAGS : ( ( rule__SPINCHOREGFLAGS__Alternatives ) ) ;
    public final void ruleSPINCHOREGFLAGS() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1781:2: ( ( ( rule__SPINCHOREGFLAGS__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1782:1: ( ( rule__SPINCHOREGFLAGS__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1782:1: ( ( rule__SPINCHOREGFLAGS__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1783:1: ( rule__SPINCHOREGFLAGS__Alternatives )
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1784:1: ( rule__SPINCHOREGFLAGS__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1784:2: rule__SPINCHOREGFLAGS__Alternatives
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Alternatives_in_ruleSPINCHOREGFLAGS3754);
            rule__SPINCHOREGFLAGS__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINCHOREGFLAGS"


    // $ANTLR start "entryRuleSPINMEM"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1796:1: entryRuleSPINMEM : ruleSPINMEM EOF ;
    public final void entryRuleSPINMEM() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1797:1: ( ruleSPINMEM EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1798:1: ruleSPINMEM EOF
            {
             before(grammarAccess.getSPINMEMRule()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_entryRuleSPINMEM3781);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getSPINMEMRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINMEM3788); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINMEM"


    // $ANTLR start "ruleSPINMEM"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1805:1: ruleSPINMEM : ( ( rule__SPINMEM__Group__0 ) ) ;
    public final void ruleSPINMEM() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1809:2: ( ( ( rule__SPINMEM__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1810:1: ( ( rule__SPINMEM__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1810:1: ( ( rule__SPINMEM__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1811:1: ( rule__SPINMEM__Group__0 )
            {
             before(grammarAccess.getSPINMEMAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1812:1: ( rule__SPINMEM__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1812:2: rule__SPINMEM__Group__0
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__0_in_ruleSPINMEM3814);
            rule__SPINMEM__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINMEMAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINMEM"


    // $ANTLR start "entryRuleSPINBUF"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1824:1: entryRuleSPINBUF : ruleSPINBUF EOF ;
    public final void entryRuleSPINBUF() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1825:1: ( ruleSPINBUF EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1826:1: ruleSPINBUF EOF
            {
             before(grammarAccess.getSPINBUFRule()); 
            pushFollow(FOLLOW_ruleSPINBUF_in_entryRuleSPINBUF3841);
            ruleSPINBUF();

            state._fsp--;

             after(grammarAccess.getSPINBUFRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSPINBUF3848); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSPINBUF"


    // $ANTLR start "ruleSPINBUF"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1833:1: ruleSPINBUF : ( ( rule__SPINBUF__Group__0 ) ) ;
    public final void ruleSPINBUF() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1837:2: ( ( ( rule__SPINBUF__Group__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1838:1: ( ( rule__SPINBUF__Group__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1838:1: ( ( rule__SPINBUF__Group__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1839:1: ( rule__SPINBUF__Group__0 )
            {
             before(grammarAccess.getSPINBUFAccess().getGroup()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1840:1: ( rule__SPINBUF__Group__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1840:2: rule__SPINBUF__Group__0
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__0_in_ruleSPINBUF3874);
            rule__SPINBUF__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSPINBUFAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSPINBUF"


    // $ANTLR start "entryRuleBINARY24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1852:1: entryRuleBINARY24 : ruleBINARY24 EOF ;
    public final void entryRuleBINARY24() throws RecognitionException {
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1853:1: ( ruleBINARY24 EOF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1854:1: ruleBINARY24 EOF
            {
             before(grammarAccess.getBINARY24Rule()); 
            pushFollow(FOLLOW_ruleBINARY24_in_entryRuleBINARY243901);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getBINARY24Rule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBINARY243908); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBINARY24"


    // $ANTLR start "ruleBINARY24"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1861:1: ruleBINARY24 : ( ( rule__BINARY24__Alternatives ) ) ;
    public final void ruleBINARY24() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1865:2: ( ( ( rule__BINARY24__Alternatives ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1866:1: ( ( rule__BINARY24__Alternatives ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1866:1: ( ( rule__BINARY24__Alternatives ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1867:1: ( rule__BINARY24__Alternatives )
            {
             before(grammarAccess.getBINARY24Access().getAlternatives()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1868:1: ( rule__BINARY24__Alternatives )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1868:2: rule__BINARY24__Alternatives
            {
            pushFollow(FOLLOW_rule__BINARY24__Alternatives_in_ruleBINARY243934);
            rule__BINARY24__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBINARY24Access().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBINARY24"


    // $ANTLR start "rule__Pin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1880:1: rule__Pin__Alternatives : ( ( ruleInputPin ) | ( ruleOutputPin ) );
    public final void rule__Pin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1884:1: ( ( ruleInputPin ) | ( ruleOutputPin ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==17||LA1_0==19) ) {
                alt1=1;
            }
            else if ( (LA1_0==18||LA1_0==20) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1885:1: ( ruleInputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1885:1: ( ruleInputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1886:1: ruleInputPin
                    {
                     before(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleInputPin_in_rule__Pin__Alternatives3970);
                    ruleInputPin();

                    state._fsp--;

                     after(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1891:6: ( ruleOutputPin )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1891:6: ( ruleOutputPin )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1892:1: ruleOutputPin
                    {
                     before(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleOutputPin_in_rule__Pin__Alternatives3987);
                    ruleOutputPin();

                    state._fsp--;

                     after(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pin__Alternatives"


    // $ANTLR start "rule__InputPin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1902:1: rule__InputPin__Alternatives : ( ( ruleAudioInput ) | ( ruleControlInput ) );
    public final void rule__InputPin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1906:1: ( ( ruleAudioInput ) | ( ruleControlInput ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==17) ) {
                alt2=1;
            }
            else if ( (LA2_0==19) ) {
                alt2=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1907:1: ( ruleAudioInput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1907:1: ( ruleAudioInput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1908:1: ruleAudioInput
                    {
                     before(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAudioInput_in_rule__InputPin__Alternatives4019);
                    ruleAudioInput();

                    state._fsp--;

                     after(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1913:6: ( ruleControlInput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1913:6: ( ruleControlInput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1914:1: ruleControlInput
                    {
                     before(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleControlInput_in_rule__InputPin__Alternatives4036);
                    ruleControlInput();

                    state._fsp--;

                     after(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InputPin__Alternatives"


    // $ANTLR start "rule__OutputPin__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1924:1: rule__OutputPin__Alternatives : ( ( ruleAudioOutput ) | ( ruleControlOutput ) );
    public final void rule__OutputPin__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1928:1: ( ( ruleAudioOutput ) | ( ruleControlOutput ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==18) ) {
                alt3=1;
            }
            else if ( (LA3_0==20) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1929:1: ( ruleAudioOutput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1929:1: ( ruleAudioOutput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1930:1: ruleAudioOutput
                    {
                     before(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAudioOutput_in_rule__OutputPin__Alternatives4068);
                    ruleAudioOutput();

                    state._fsp--;

                     after(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1935:6: ( ruleControlOutput )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1935:6: ( ruleControlOutput )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1936:1: ruleControlOutput
                    {
                     before(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleControlOutput_in_rule__OutputPin__Alternatives4085);
                    ruleControlOutput();

                    state._fsp--;

                     after(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OutputPin__Alternatives"


    // $ANTLR start "rule__Control__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1946:1: rule__Control__Alternatives : ( ( ruleSlider ) | ( ruleCheckBox ) | ( rulecontrolLabel ) );
    public final void rule__Control__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1950:1: ( ( ruleSlider ) | ( ruleCheckBox ) | ( rulecontrolLabel ) )
            int alt4=3;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt4=1;
                }
                break;
            case 22:
                {
                alt4=2;
                }
                break;
            case 23:
                {
                alt4=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1951:1: ( ruleSlider )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1951:1: ( ruleSlider )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1952:1: ruleSlider
                    {
                     before(grammarAccess.getControlAccess().getSliderParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleSlider_in_rule__Control__Alternatives4117);
                    ruleSlider();

                    state._fsp--;

                     after(grammarAccess.getControlAccess().getSliderParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1957:6: ( ruleCheckBox )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1957:6: ( ruleCheckBox )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1958:1: ruleCheckBox
                    {
                     before(grammarAccess.getControlAccess().getCheckBoxParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleCheckBox_in_rule__Control__Alternatives4134);
                    ruleCheckBox();

                    state._fsp--;

                     after(grammarAccess.getControlAccess().getCheckBoxParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1963:6: ( rulecontrolLabel )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1963:6: ( rulecontrolLabel )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1964:1: rulecontrolLabel
                    {
                     before(grammarAccess.getControlAccess().getControlLabelParserRuleCall_2()); 
                    pushFollow(FOLLOW_rulecontrolLabel_in_rule__Control__Alternatives4151);
                    rulecontrolLabel();

                    state._fsp--;

                     after(grammarAccess.getControlAccess().getControlLabelParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Control__Alternatives"


    // $ANTLR start "rule__SpinElement__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1974:1: rule__SpinElement__Alternatives : ( ( ruleEquate ) | ( ruleMem ) | ( ruleInstruction ) | ( ruleLabel ) | ( ruleComment ) | ( ruleMacro ) | ( ruleOffset ) );
    public final void rule__SpinElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1978:1: ( ( ruleEquate ) | ( ruleMem ) | ( ruleInstruction ) | ( ruleLabel ) | ( ruleComment ) | ( ruleMacro ) | ( ruleOffset ) )
            int alt5=7;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt5=1;
                }
                break;
            case 25:
                {
                alt5=2;
                }
                break;
            case 33:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
                {
                alt5=3;
                }
                break;
            case RULE_ID:
                {
                alt5=4;
                }
                break;
            case RULE_SC_COMMENT:
                {
                alt5=5;
                }
                break;
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
                {
                alt5=6;
                }
                break;
            case 26:
                {
                alt5=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1979:1: ( ruleEquate )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1979:1: ( ruleEquate )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1980:1: ruleEquate
                    {
                     before(grammarAccess.getSpinElementAccess().getEquateParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleEquate_in_rule__SpinElement__Alternatives4183);
                    ruleEquate();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getEquateParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1985:6: ( ruleMem )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1985:6: ( ruleMem )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1986:1: ruleMem
                    {
                     before(grammarAccess.getSpinElementAccess().getMemParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleMem_in_rule__SpinElement__Alternatives4200);
                    ruleMem();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getMemParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1991:6: ( ruleInstruction )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1991:6: ( ruleInstruction )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1992:1: ruleInstruction
                    {
                     before(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleInstruction_in_rule__SpinElement__Alternatives4217);
                    ruleInstruction();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1997:6: ( ruleLabel )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1997:6: ( ruleLabel )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:1998:1: ruleLabel
                    {
                     before(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleLabel_in_rule__SpinElement__Alternatives4234);
                    ruleLabel();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2003:6: ( ruleComment )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2003:6: ( ruleComment )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2004:1: ruleComment
                    {
                     before(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleComment_in_rule__SpinElement__Alternatives4251);
                    ruleComment();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2009:6: ( ruleMacro )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2009:6: ( ruleMacro )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2010:1: ruleMacro
                    {
                     before(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleMacro_in_rule__SpinElement__Alternatives4268);
                    ruleMacro();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2015:6: ( ruleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2015:6: ( ruleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2016:1: ruleOffset
                    {
                     before(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleOffset_in_rule__SpinElement__Alternatives4285);
                    ruleOffset();

                    state._fsp--;

                     after(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_6()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpinElement__Alternatives"


    // $ANTLR start "rule__Macro__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2026:1: rule__Macro__Alternatives : ( ( ruleIsPinConnected ) | ( ruleIsElse ) | ( ruleIsEndif ) | ( ruleGetInputDefault ) | ( ruleGetDelayScale ) );
    public final void rule__Macro__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2030:1: ( ( ruleIsPinConnected ) | ( ruleIsElse ) | ( ruleIsEndif ) | ( ruleGetInputDefault ) | ( ruleGetDelayScale ) )
            int alt6=5;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt6=1;
                }
                break;
            case 29:
                {
                alt6=2;
                }
                break;
            case 30:
                {
                alt6=3;
                }
                break;
            case 31:
                {
                alt6=4;
                }
                break;
            case 32:
                {
                alt6=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2031:1: ( ruleIsPinConnected )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2031:1: ( ruleIsPinConnected )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2032:1: ruleIsPinConnected
                    {
                     before(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleIsPinConnected_in_rule__Macro__Alternatives4317);
                    ruleIsPinConnected();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2037:6: ( ruleIsElse )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2037:6: ( ruleIsElse )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2038:1: ruleIsElse
                    {
                     before(grammarAccess.getMacroAccess().getIsElseParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleIsElse_in_rule__Macro__Alternatives4334);
                    ruleIsElse();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsElseParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2043:6: ( ruleIsEndif )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2043:6: ( ruleIsEndif )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2044:1: ruleIsEndif
                    {
                     before(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleIsEndif_in_rule__Macro__Alternatives4351);
                    ruleIsEndif();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2049:6: ( ruleGetInputDefault )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2049:6: ( ruleGetInputDefault )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2050:1: ruleGetInputDefault
                    {
                     before(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleGetInputDefault_in_rule__Macro__Alternatives4368);
                    ruleGetInputDefault();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2055:6: ( ruleGetDelayScale )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2055:6: ( ruleGetDelayScale )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2056:1: ruleGetDelayScale
                    {
                     before(grammarAccess.getMacroAccess().getGetDelayScaleParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleGetDelayScale_in_rule__Macro__Alternatives4385);
                    ruleGetDelayScale();

                    state._fsp--;

                     after(grammarAccess.getMacroAccess().getGetDelayScaleParserRuleCall_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Macro__Alternatives"


    // $ANTLR start "rule__Instruction__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2066:1: rule__Instruction__Alternatives : ( ( ruleInst_B15_S1_9 ) | ( ruleInst_B6_S1_14 ) | ( ruleInst_S1_14_S1_10 ) | ( ruleInst_B6 ) | ( ruleInst_B24 ) | ( ruleSkip ) | ( ruleJam ) | ( ruleInst_X0 ) | ( ruleLoadSinLFO ) | ( ruleLoadRampLFO ) | ( ruleChorusReadDelay ) | ( ruleChorusReadValue ) | ( ruleChorusScaleOffset ) | ( ruleLog ) | ( ruleReadDelayPointer ) );
    public final void rule__Instruction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2070:1: ( ( ruleInst_B15_S1_9 ) | ( ruleInst_B6_S1_14 ) | ( ruleInst_S1_14_S1_10 ) | ( ruleInst_B6 ) | ( ruleInst_B24 ) | ( ruleSkip ) | ( ruleJam ) | ( ruleInst_X0 ) | ( ruleLoadSinLFO ) | ( ruleLoadRampLFO ) | ( ruleChorusReadDelay ) | ( ruleChorusReadValue ) | ( ruleChorusScaleOffset ) | ( ruleLog ) | ( ruleReadDelayPointer ) )
            int alt7=15;
            switch ( input.LA(1) ) {
            case 45:
            case 46:
            case 47:
                {
                alt7=1;
                }
                break;
            case 33:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
                {
                alt7=2;
                }
                break;
            case 42:
            case 44:
                {
                alt7=3;
                }
                break;
            case 40:
            case 41:
                {
                alt7=4;
                }
                break;
            case 54:
            case 55:
            case 56:
                {
                alt7=5;
                }
                break;
            case 61:
                {
                alt7=6;
                }
                break;
            case 57:
                {
                alt7=7;
                }
                break;
            case 58:
            case 59:
            case 60:
                {
                alt7=8;
                }
                break;
            case 48:
                {
                alt7=9;
                }
                break;
            case 49:
                {
                alt7=10;
                }
                break;
            case 50:
                {
                alt7=11;
                }
                break;
            case 51:
                {
                alt7=12;
                }
                break;
            case 52:
                {
                alt7=13;
                }
                break;
            case 43:
                {
                alt7=14;
                }
                break;
            case 53:
                {
                alt7=15;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2071:1: ( ruleInst_B15_S1_9 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2071:1: ( ruleInst_B15_S1_9 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2072:1: ruleInst_B15_S1_9
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleInst_B15_S1_9_in_rule__Instruction__Alternatives4417);
                    ruleInst_B15_S1_9();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2077:6: ( ruleInst_B6_S1_14 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2077:6: ( ruleInst_B6_S1_14 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2078:1: ruleInst_B6_S1_14
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleInst_B6_S1_14_in_rule__Instruction__Alternatives4434);
                    ruleInst_B6_S1_14();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2083:6: ( ruleInst_S1_14_S1_10 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2083:6: ( ruleInst_S1_14_S1_10 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2084:1: ruleInst_S1_14_S1_10
                    {
                     before(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleInst_S1_14_S1_10_in_rule__Instruction__Alternatives4451);
                    ruleInst_S1_14_S1_10();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2089:6: ( ruleInst_B6 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2089:6: ( ruleInst_B6 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2090:1: ruleInst_B6
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleInst_B6_in_rule__Instruction__Alternatives4468);
                    ruleInst_B6();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2095:6: ( ruleInst_B24 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2095:6: ( ruleInst_B24 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2096:1: ruleInst_B24
                    {
                     before(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleInst_B24_in_rule__Instruction__Alternatives4485);
                    ruleInst_B24();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2101:6: ( ruleSkip )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2101:6: ( ruleSkip )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2102:1: ruleSkip
                    {
                     before(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleSkip_in_rule__Instruction__Alternatives4502);
                    ruleSkip();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2107:6: ( ruleJam )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2107:6: ( ruleJam )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2108:1: ruleJam
                    {
                     before(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleJam_in_rule__Instruction__Alternatives4519);
                    ruleJam();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); 

                    }


                    }
                    break;
                case 8 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2113:6: ( ruleInst_X0 )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2113:6: ( ruleInst_X0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2114:1: ruleInst_X0
                    {
                     before(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); 
                    pushFollow(FOLLOW_ruleInst_X0_in_rule__Instruction__Alternatives4536);
                    ruleInst_X0();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); 

                    }


                    }
                    break;
                case 9 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2119:6: ( ruleLoadSinLFO )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2119:6: ( ruleLoadSinLFO )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2120:1: ruleLoadSinLFO
                    {
                     before(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); 
                    pushFollow(FOLLOW_ruleLoadSinLFO_in_rule__Instruction__Alternatives4553);
                    ruleLoadSinLFO();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); 

                    }


                    }
                    break;
                case 10 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2125:6: ( ruleLoadRampLFO )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2125:6: ( ruleLoadRampLFO )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2126:1: ruleLoadRampLFO
                    {
                     before(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); 
                    pushFollow(FOLLOW_ruleLoadRampLFO_in_rule__Instruction__Alternatives4570);
                    ruleLoadRampLFO();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); 

                    }


                    }
                    break;
                case 11 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2131:6: ( ruleChorusReadDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2131:6: ( ruleChorusReadDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2132:1: ruleChorusReadDelay
                    {
                     before(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); 
                    pushFollow(FOLLOW_ruleChorusReadDelay_in_rule__Instruction__Alternatives4587);
                    ruleChorusReadDelay();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); 

                    }


                    }
                    break;
                case 12 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2137:6: ( ruleChorusReadValue )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2137:6: ( ruleChorusReadValue )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2138:1: ruleChorusReadValue
                    {
                     before(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); 
                    pushFollow(FOLLOW_ruleChorusReadValue_in_rule__Instruction__Alternatives4604);
                    ruleChorusReadValue();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); 

                    }


                    }
                    break;
                case 13 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2143:6: ( ruleChorusScaleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2143:6: ( ruleChorusScaleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2144:1: ruleChorusScaleOffset
                    {
                     before(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); 
                    pushFollow(FOLLOW_ruleChorusScaleOffset_in_rule__Instruction__Alternatives4621);
                    ruleChorusScaleOffset();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); 

                    }


                    }
                    break;
                case 14 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2149:6: ( ruleLog )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2149:6: ( ruleLog )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2150:1: ruleLog
                    {
                     before(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); 
                    pushFollow(FOLLOW_ruleLog_in_rule__Instruction__Alternatives4638);
                    ruleLog();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); 

                    }


                    }
                    break;
                case 15 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2155:6: ( ruleReadDelayPointer )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2155:6: ( ruleReadDelayPointer )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2156:1: ruleReadDelayPointer
                    {
                     before(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); 
                    pushFollow(FOLLOW_ruleReadDelayPointer_in_rule__Instruction__Alternatives4655);
                    ruleReadDelayPointer();

                    state._fsp--;

                     after(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Instruction__Alternatives"


    // $ANTLR start "rule__Inst_B6_S1_14__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2166:1: rule__Inst_B6_S1_14__Alternatives : ( ( ruleReadRegister ) | ( ruleWriteRegister ) | ( ruleReadRegisterFilter ) | ( ruleMaxx ) | ( ruleWriteRegisterHighshelf ) | ( ruleWriteRegisterLowshelf ) );
    public final void rule__Inst_B6_S1_14__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2170:1: ( ( ruleReadRegister ) | ( ruleWriteRegister ) | ( ruleReadRegisterFilter ) | ( ruleMaxx ) | ( ruleWriteRegisterHighshelf ) | ( ruleWriteRegisterLowshelf ) )
            int alt8=6;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt8=1;
                }
                break;
            case 37:
                {
                alt8=2;
                }
                break;
            case 39:
                {
                alt8=3;
                }
                break;
            case 38:
                {
                alt8=4;
                }
                break;
            case 36:
                {
                alt8=5;
                }
                break;
            case 35:
                {
                alt8=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2171:1: ( ruleReadRegister )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2171:1: ( ruleReadRegister )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2172:1: ruleReadRegister
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleReadRegister_in_rule__Inst_B6_S1_14__Alternatives4687);
                    ruleReadRegister();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2177:6: ( ruleWriteRegister )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2177:6: ( ruleWriteRegister )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2178:1: ruleWriteRegister
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleWriteRegister_in_rule__Inst_B6_S1_14__Alternatives4704);
                    ruleWriteRegister();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2183:6: ( ruleReadRegisterFilter )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2183:6: ( ruleReadRegisterFilter )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2184:1: ruleReadRegisterFilter
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleReadRegisterFilter_in_rule__Inst_B6_S1_14__Alternatives4721);
                    ruleReadRegisterFilter();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2189:6: ( ruleMaxx )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2189:6: ( ruleMaxx )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2190:1: ruleMaxx
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleMaxx_in_rule__Inst_B6_S1_14__Alternatives4738);
                    ruleMaxx();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2195:6: ( ruleWriteRegisterHighshelf )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2195:6: ( ruleWriteRegisterHighshelf )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2196:1: ruleWriteRegisterHighshelf
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleWriteRegisterHighshelf_in_rule__Inst_B6_S1_14__Alternatives4755);
                    ruleWriteRegisterHighshelf();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2201:6: ( ruleWriteRegisterLowshelf )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2201:6: ( ruleWriteRegisterLowshelf )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2202:1: ruleWriteRegisterLowshelf
                    {
                     before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleWriteRegisterLowshelf_in_rule__Inst_B6_S1_14__Alternatives4772);
                    ruleWriteRegisterLowshelf();

                    state._fsp--;

                     after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B6_S1_14__Alternatives"


    // $ANTLR start "rule__Inst_B15_S1_9__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2212:1: rule__Inst_B15_S1_9__Alternatives : ( ( ruleReadDelay ) | ( ruleWriteDelay ) | ( ruleWriteAllpass ) );
    public final void rule__Inst_B15_S1_9__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2216:1: ( ( ruleReadDelay ) | ( ruleWriteDelay ) | ( ruleWriteAllpass ) )
            int alt9=3;
            switch ( input.LA(1) ) {
            case 47:
                {
                alt9=1;
                }
                break;
            case 45:
                {
                alt9=2;
                }
                break;
            case 46:
                {
                alt9=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2217:1: ( ruleReadDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2217:1: ( ruleReadDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2218:1: ruleReadDelay
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleReadDelay_in_rule__Inst_B15_S1_9__Alternatives4804);
                    ruleReadDelay();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2223:6: ( ruleWriteDelay )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2223:6: ( ruleWriteDelay )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2224:1: ruleWriteDelay
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleWriteDelay_in_rule__Inst_B15_S1_9__Alternatives4821);
                    ruleWriteDelay();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2229:6: ( ruleWriteAllpass )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2229:6: ( ruleWriteAllpass )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2230:1: ruleWriteAllpass
                    {
                     before(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleWriteAllpass_in_rule__Inst_B15_S1_9__Alternatives4838);
                    ruleWriteAllpass();

                    state._fsp--;

                     after(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B15_S1_9__Alternatives"


    // $ANTLR start "rule__Inst_B6__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2240:1: rule__Inst_B6__Alternatives : ( ( ruleMulx ) | ( ruleLdax ) );
    public final void rule__Inst_B6__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2244:1: ( ( ruleMulx ) | ( ruleLdax ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==40) ) {
                alt10=1;
            }
            else if ( (LA10_0==41) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2245:1: ( ruleMulx )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2245:1: ( ruleMulx )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2246:1: ruleMulx
                    {
                     before(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleMulx_in_rule__Inst_B6__Alternatives4870);
                    ruleMulx();

                    state._fsp--;

                     after(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2251:6: ( ruleLdax )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2251:6: ( ruleLdax )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2252:1: ruleLdax
                    {
                     before(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleLdax_in_rule__Inst_B6__Alternatives4887);
                    ruleLdax();

                    state._fsp--;

                     after(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B6__Alternatives"


    // $ANTLR start "rule__Inst_B24__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2262:1: rule__Inst_B24__Alternatives : ( ( ruleAnd ) | ( ruleOr ) | ( ruleXor ) );
    public final void rule__Inst_B24__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2266:1: ( ( ruleAnd ) | ( ruleOr ) | ( ruleXor ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case 54:
                {
                alt11=1;
                }
                break;
            case 55:
                {
                alt11=2;
                }
                break;
            case 56:
                {
                alt11=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2267:1: ( ruleAnd )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2267:1: ( ruleAnd )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2268:1: ruleAnd
                    {
                     before(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleAnd_in_rule__Inst_B24__Alternatives4919);
                    ruleAnd();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2273:6: ( ruleOr )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2273:6: ( ruleOr )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2274:1: ruleOr
                    {
                     before(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleOr_in_rule__Inst_B24__Alternatives4936);
                    ruleOr();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2279:6: ( ruleXor )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2279:6: ( ruleXor )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2280:1: ruleXor
                    {
                     before(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleXor_in_rule__Inst_B24__Alternatives4953);
                    ruleXor();

                    state._fsp--;

                     after(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_B24__Alternatives"


    // $ANTLR start "rule__Inst_X0__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2290:1: rule__Inst_X0__Alternatives : ( ( ruleClr ) | ( ruleNot ) | ( ruleAbsa ) );
    public final void rule__Inst_X0__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2294:1: ( ( ruleClr ) | ( ruleNot ) | ( ruleAbsa ) )
            int alt12=3;
            switch ( input.LA(1) ) {
            case 58:
                {
                alt12=1;
                }
                break;
            case 59:
                {
                alt12=2;
                }
                break;
            case 60:
                {
                alt12=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2295:1: ( ruleClr )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2295:1: ( ruleClr )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2296:1: ruleClr
                    {
                     before(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleClr_in_rule__Inst_X0__Alternatives4985);
                    ruleClr();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2301:6: ( ruleNot )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2301:6: ( ruleNot )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2302:1: ruleNot
                    {
                     before(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleNot_in_rule__Inst_X0__Alternatives5002);
                    ruleNot();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2307:6: ( ruleAbsa )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2307:6: ( ruleAbsa )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2308:1: ruleAbsa
                    {
                     before(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleAbsa_in_rule__Inst_X0__Alternatives5019);
                    ruleAbsa();

                    state._fsp--;

                     after(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_X0__Alternatives"


    // $ANTLR start "rule__Inst_S1_14_S1_10__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2318:1: rule__Inst_S1_14_S1_10__Alternatives : ( ( ruleExp ) | ( ruleScaleOffset ) );
    public final void rule__Inst_S1_14_S1_10__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2322:1: ( ( ruleExp ) | ( ruleScaleOffset ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==42) ) {
                alt13=1;
            }
            else if ( (LA13_0==44) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2323:1: ( ruleExp )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2323:1: ( ruleExp )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2324:1: ruleExp
                    {
                     before(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleExp_in_rule__Inst_S1_14_S1_10__Alternatives5051);
                    ruleExp();

                    state._fsp--;

                     after(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2329:6: ( ruleScaleOffset )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2329:6: ( ruleScaleOffset )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2330:1: ruleScaleOffset
                    {
                     before(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleScaleOffset_in_rule__Inst_S1_14_S1_10__Alternatives5068);
                    ruleScaleOffset();

                    state._fsp--;

                     after(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Inst_S1_14_S1_10__Alternatives"


    // $ANTLR start "rule__SPINDOUBLE__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2340:1: rule__SPINDOUBLE__Alternatives_1 : ( ( RULE_ID ) | ( ( rule__SPINDOUBLE__Group_1_1__0 ) ) );
    public final void rule__SPINDOUBLE__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2344:1: ( ( RULE_ID ) | ( ( rule__SPINDOUBLE__Group_1_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_ID) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_INT) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2345:1: ( RULE_ID )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2345:1: ( RULE_ID )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2346:1: RULE_ID
                    {
                     before(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); 
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINDOUBLE__Alternatives_15100); 
                     after(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2351:6: ( ( rule__SPINDOUBLE__Group_1_1__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2351:6: ( ( rule__SPINDOUBLE__Group_1_1__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2352:1: ( rule__SPINDOUBLE__Group_1_1__0 )
                    {
                     before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2353:1: ( rule__SPINDOUBLE__Group_1_1__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2353:2: rule__SPINDOUBLE__Group_1_1__0
                    {
                    pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__0_in_rule__SPINDOUBLE__Alternatives_15117);
                    rule__SPINDOUBLE__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Alternatives_1"


    // $ANTLR start "rule__SPINREGISTER__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2362:1: rule__SPINREGISTER__Alternatives : ( ( RULE_ID ) | ( RULE_INT ) );
    public final void rule__SPINREGISTER__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2366:1: ( ( RULE_ID ) | ( RULE_INT ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_ID) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_INT) ) {
                alt15=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2367:1: ( RULE_ID )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2367:1: ( RULE_ID )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2368:1: RULE_ID
                    {
                     before(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); 
                    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINREGISTER__Alternatives5150); 
                     after(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2373:6: ( RULE_INT )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2373:6: ( RULE_INT )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2374:1: RULE_INT
                    {
                     before(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); 
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINREGISTER__Alternatives5167); 
                     after(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINREGISTER__Alternatives"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2384:1: rule__SPINCHOREGFLAGS__Alternatives : ( ( RULE_INT ) | ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? ) );
    public final void rule__SPINCHOREGFLAGS__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2388:1: ( ( RULE_INT ) | ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_INT) ) {
                alt17=1;
            }
            else if ( (LA17_0==EOF||LA17_0==RULE_ID||LA17_0==34) ) {
                alt17=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2389:1: ( RULE_INT )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2389:1: ( RULE_INT )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2390:1: RULE_INT
                    {
                     before(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); 
                    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINCHOREGFLAGS__Alternatives5199); 
                     after(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2395:6: ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2395:6: ( ( rule__SPINCHOREGFLAGS__Group_1__0 )? )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2396:1: ( rule__SPINCHOREGFLAGS__Group_1__0 )?
                    {
                     before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2397:1: ( rule__SPINCHOREGFLAGS__Group_1__0 )?
                    int alt16=2;
                    int LA16_0 = input.LA(1);

                    if ( (LA16_0==RULE_ID) ) {
                        alt16=1;
                    }
                    switch (alt16) {
                        case 1 :
                            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2397:2: rule__SPINCHOREGFLAGS__Group_1__0
                            {
                            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0_in_rule__SPINCHOREGFLAGS__Alternatives5216);
                            rule__SPINCHOREGFLAGS__Group_1__0();

                            state._fsp--;


                            }
                            break;

                    }

                     after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Alternatives"


    // $ANTLR start "rule__SPINMEM__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2406:1: rule__SPINMEM__Alternatives_1 : ( ( ( rule__SPINMEM__ValueAssignment_1_0 ) ) | ( ( rule__SPINMEM__OffsetAssignment_1_1 ) ) );
    public final void rule__SPINMEM__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2410:1: ( ( ( rule__SPINMEM__ValueAssignment_1_0 ) ) | ( ( rule__SPINMEM__OffsetAssignment_1_1 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_INT) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_ID) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2411:1: ( ( rule__SPINMEM__ValueAssignment_1_0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2411:1: ( ( rule__SPINMEM__ValueAssignment_1_0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2412:1: ( rule__SPINMEM__ValueAssignment_1_0 )
                    {
                     before(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2413:1: ( rule__SPINMEM__ValueAssignment_1_0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2413:2: rule__SPINMEM__ValueAssignment_1_0
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__ValueAssignment_1_0_in_rule__SPINMEM__Alternatives_15250);
                    rule__SPINMEM__ValueAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2417:6: ( ( rule__SPINMEM__OffsetAssignment_1_1 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2417:6: ( ( rule__SPINMEM__OffsetAssignment_1_1 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2418:1: ( rule__SPINMEM__OffsetAssignment_1_1 )
                    {
                     before(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2419:1: ( rule__SPINMEM__OffsetAssignment_1_1 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2419:2: rule__SPINMEM__OffsetAssignment_1_1
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__OffsetAssignment_1_1_in_rule__SPINMEM__Alternatives_15268);
                    rule__SPINMEM__OffsetAssignment_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Alternatives_1"


    // $ANTLR start "rule__SPINBUF__Alternatives_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2428:1: rule__SPINBUF__Alternatives_1 : ( ( '#' ) | ( '^' ) );
    public final void rule__SPINBUF__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2432:1: ( ( '#' ) | ( '^' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==12) ) {
                alt19=1;
            }
            else if ( (LA19_0==13) ) {
                alt19=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2433:1: ( '#' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2433:1: ( '#' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2434:1: '#'
                    {
                     before(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); 
                    match(input,12,FOLLOW_12_in_rule__SPINBUF__Alternatives_15302); 
                     after(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2441:6: ( '^' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2441:6: ( '^' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2442:1: '^'
                    {
                     before(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); 
                    match(input,13,FOLLOW_13_in_rule__SPINBUF__Alternatives_15322); 
                     after(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Alternatives_1"


    // $ANTLR start "rule__SPINBUF__Alternatives_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2454:1: rule__SPINBUF__Alternatives_2 : ( ( '+' ) | ( '-' ) );
    public final void rule__SPINBUF__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2458:1: ( ( '+' ) | ( '-' ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==14) ) {
                alt20=1;
            }
            else if ( (LA20_0==15) ) {
                alt20=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2459:1: ( '+' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2459:1: ( '+' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2460:1: '+'
                    {
                     before(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); 
                    match(input,14,FOLLOW_14_in_rule__SPINBUF__Alternatives_25357); 
                     after(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2467:6: ( '-' )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2467:6: ( '-' )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2468:1: '-'
                    {
                     before(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); 
                    match(input,15,FOLLOW_15_in_rule__SPINBUF__Alternatives_25377); 
                     after(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Alternatives_2"


    // $ANTLR start "rule__BINARY24__Alternatives"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2480:1: rule__BINARY24__Alternatives : ( ( ( rule__BINARY24__Group_0__0 ) ) | ( ( rule__BINARY24__Group_1__0 ) ) );
    public final void rule__BINARY24__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2484:1: ( ( ( rule__BINARY24__Group_0__0 ) ) | ( ( rule__BINARY24__Group_1__0 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==64) ) {
                alt21=1;
            }
            else if ( (LA21_0==65) ) {
                alt21=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2485:1: ( ( rule__BINARY24__Group_0__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2485:1: ( ( rule__BINARY24__Group_0__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2486:1: ( rule__BINARY24__Group_0__0 )
                    {
                     before(grammarAccess.getBINARY24Access().getGroup_0()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2487:1: ( rule__BINARY24__Group_0__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2487:2: rule__BINARY24__Group_0__0
                    {
                    pushFollow(FOLLOW_rule__BINARY24__Group_0__0_in_rule__BINARY24__Alternatives5411);
                    rule__BINARY24__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBINARY24Access().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2491:6: ( ( rule__BINARY24__Group_1__0 ) )
                    {
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2491:6: ( ( rule__BINARY24__Group_1__0 ) )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2492:1: ( rule__BINARY24__Group_1__0 )
                    {
                     before(grammarAccess.getBINARY24Access().getGroup_1()); 
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2493:1: ( rule__BINARY24__Group_1__0 )
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2493:2: rule__BINARY24__Group_1__0
                    {
                    pushFollow(FOLLOW_rule__BINARY24__Group_1__0_in_rule__BINARY24__Alternatives5429);
                    rule__BINARY24__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBINARY24Access().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Alternatives"


    // $ANTLR start "rule__Program__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2504:1: rule__Program__Group__0 : rule__Program__Group__0__Impl rule__Program__Group__1 ;
    public final void rule__Program__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2508:1: ( rule__Program__Group__0__Impl rule__Program__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2509:2: rule__Program__Group__0__Impl rule__Program__Group__1
            {
            pushFollow(FOLLOW_rule__Program__Group__0__Impl_in_rule__Program__Group__05460);
            rule__Program__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__1_in_rule__Program__Group__05463);
            rule__Program__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0"


    // $ANTLR start "rule__Program__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2516:1: rule__Program__Group__0__Impl : ( '@name' ) ;
    public final void rule__Program__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2520:1: ( ( '@name' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2521:1: ( '@name' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2521:1: ( '@name' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2522:1: '@name'
            {
             before(grammarAccess.getProgramAccess().getNameKeyword_0()); 
            match(input,16,FOLLOW_16_in_rule__Program__Group__0__Impl5491); 
             after(grammarAccess.getProgramAccess().getNameKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0__Impl"


    // $ANTLR start "rule__Program__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2535:1: rule__Program__Group__1 : rule__Program__Group__1__Impl rule__Program__Group__2 ;
    public final void rule__Program__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2539:1: ( rule__Program__Group__1__Impl rule__Program__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2540:2: rule__Program__Group__1__Impl rule__Program__Group__2
            {
            pushFollow(FOLLOW_rule__Program__Group__1__Impl_in_rule__Program__Group__15522);
            rule__Program__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__2_in_rule__Program__Group__15525);
            rule__Program__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1"


    // $ANTLR start "rule__Program__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2547:1: rule__Program__Group__1__Impl : ( ( rule__Program__NameAssignment_1 ) ) ;
    public final void rule__Program__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2551:1: ( ( ( rule__Program__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2552:1: ( ( rule__Program__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2552:1: ( ( rule__Program__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2553:1: ( rule__Program__NameAssignment_1 )
            {
             before(grammarAccess.getProgramAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2554:1: ( rule__Program__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2554:2: rule__Program__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__Program__NameAssignment_1_in_rule__Program__Group__1__Impl5552);
            rule__Program__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1__Impl"


    // $ANTLR start "rule__Program__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2564:1: rule__Program__Group__2 : rule__Program__Group__2__Impl rule__Program__Group__3 ;
    public final void rule__Program__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2568:1: ( rule__Program__Group__2__Impl rule__Program__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2569:2: rule__Program__Group__2__Impl rule__Program__Group__3
            {
            pushFollow(FOLLOW_rule__Program__Group__2__Impl_in_rule__Program__Group__25582);
            rule__Program__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__3_in_rule__Program__Group__25585);
            rule__Program__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2"


    // $ANTLR start "rule__Program__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2576:1: rule__Program__Group__2__Impl : ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) ) ;
    public final void rule__Program__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2580:1: ( ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2581:1: ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2581:1: ( ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2582:1: ( ( rule__Program__PinsAssignment_2 ) ) ( ( rule__Program__PinsAssignment_2 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2582:1: ( ( rule__Program__PinsAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2583:1: ( rule__Program__PinsAssignment_2 )
            {
             before(grammarAccess.getProgramAccess().getPinsAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2584:1: ( rule__Program__PinsAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2584:2: rule__Program__PinsAssignment_2
            {
            pushFollow(FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5614);
            rule__Program__PinsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getPinsAssignment_2()); 

            }

            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2587:1: ( ( rule__Program__PinsAssignment_2 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2588:1: ( rule__Program__PinsAssignment_2 )*
            {
             before(grammarAccess.getProgramAccess().getPinsAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2589:1: ( rule__Program__PinsAssignment_2 )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( ((LA22_0>=17 && LA22_0<=20)) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2589:2: rule__Program__PinsAssignment_2
            	    {
            	    pushFollow(FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5626);
            	    rule__Program__PinsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getPinsAssignment_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2__Impl"


    // $ANTLR start "rule__Program__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2600:1: rule__Program__Group__3 : rule__Program__Group__3__Impl rule__Program__Group__4 ;
    public final void rule__Program__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2604:1: ( rule__Program__Group__3__Impl rule__Program__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2605:2: rule__Program__Group__3__Impl rule__Program__Group__4
            {
            pushFollow(FOLLOW_rule__Program__Group__3__Impl_in_rule__Program__Group__35659);
            rule__Program__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Program__Group__4_in_rule__Program__Group__35662);
            rule__Program__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3"


    // $ANTLR start "rule__Program__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2612:1: rule__Program__Group__3__Impl : ( ( rule__Program__ControlsAssignment_3 )* ) ;
    public final void rule__Program__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2616:1: ( ( ( rule__Program__ControlsAssignment_3 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2617:1: ( ( rule__Program__ControlsAssignment_3 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2617:1: ( ( rule__Program__ControlsAssignment_3 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2618:1: ( rule__Program__ControlsAssignment_3 )*
            {
             before(grammarAccess.getProgramAccess().getControlsAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2619:1: ( rule__Program__ControlsAssignment_3 )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( ((LA23_0>=21 && LA23_0<=23)) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2619:2: rule__Program__ControlsAssignment_3
            	    {
            	    pushFollow(FOLLOW_rule__Program__ControlsAssignment_3_in_rule__Program__Group__3__Impl5689);
            	    rule__Program__ControlsAssignment_3();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getControlsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3__Impl"


    // $ANTLR start "rule__Program__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2629:1: rule__Program__Group__4 : rule__Program__Group__4__Impl ;
    public final void rule__Program__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2633:1: ( rule__Program__Group__4__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2634:2: rule__Program__Group__4__Impl
            {
            pushFollow(FOLLOW_rule__Program__Group__4__Impl_in_rule__Program__Group__45720);
            rule__Program__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4"


    // $ANTLR start "rule__Program__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2640:1: rule__Program__Group__4__Impl : ( ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* ) ) ;
    public final void rule__Program__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2644:1: ( ( ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2645:1: ( ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2645:1: ( ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2646:1: ( ( rule__Program__ElementsAssignment_4 ) ) ( ( rule__Program__ElementsAssignment_4 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2646:1: ( ( rule__Program__ElementsAssignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2647:1: ( rule__Program__ElementsAssignment_4 )
            {
             before(grammarAccess.getProgramAccess().getElementsAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2648:1: ( rule__Program__ElementsAssignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2648:2: rule__Program__ElementsAssignment_4
            {
            pushFollow(FOLLOW_rule__Program__ElementsAssignment_4_in_rule__Program__Group__4__Impl5749);
            rule__Program__ElementsAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getProgramAccess().getElementsAssignment_4()); 

            }

            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2651:1: ( ( rule__Program__ElementsAssignment_4 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2652:1: ( rule__Program__ElementsAssignment_4 )*
            {
             before(grammarAccess.getProgramAccess().getElementsAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2653:1: ( rule__Program__ElementsAssignment_4 )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==RULE_ID||LA24_0==RULE_SC_COMMENT||(LA24_0>=24 && LA24_0<=26)||(LA24_0>=28 && LA24_0<=33)||(LA24_0>=35 && LA24_0<=61)) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2653:2: rule__Program__ElementsAssignment_4
            	    {
            	    pushFollow(FOLLOW_rule__Program__ElementsAssignment_4_in_rule__Program__Group__4__Impl5761);
            	    rule__Program__ElementsAssignment_4();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

             after(grammarAccess.getProgramAccess().getElementsAssignment_4()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4__Impl"


    // $ANTLR start "rule__AudioInput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2674:1: rule__AudioInput__Group__0 : rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1 ;
    public final void rule__AudioInput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2678:1: ( rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2679:2: rule__AudioInput__Group__0__Impl rule__AudioInput__Group__1
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__0__Impl_in_rule__AudioInput__Group__05804);
            rule__AudioInput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioInput__Group__1_in_rule__AudioInput__Group__05807);
            rule__AudioInput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__0"


    // $ANTLR start "rule__AudioInput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2686:1: rule__AudioInput__Group__0__Impl : ( '@audioInput' ) ;
    public final void rule__AudioInput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2690:1: ( ( '@audioInput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2691:1: ( '@audioInput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2691:1: ( '@audioInput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2692:1: '@audioInput'
            {
             before(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); 
            match(input,17,FOLLOW_17_in_rule__AudioInput__Group__0__Impl5835); 
             after(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__0__Impl"


    // $ANTLR start "rule__AudioInput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2705:1: rule__AudioInput__Group__1 : rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2 ;
    public final void rule__AudioInput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2709:1: ( rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2710:2: rule__AudioInput__Group__1__Impl rule__AudioInput__Group__2
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__1__Impl_in_rule__AudioInput__Group__15866);
            rule__AudioInput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioInput__Group__2_in_rule__AudioInput__Group__15869);
            rule__AudioInput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__1"


    // $ANTLR start "rule__AudioInput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2717:1: rule__AudioInput__Group__1__Impl : ( ( rule__AudioInput__VarNameAssignment_1 ) ) ;
    public final void rule__AudioInput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2721:1: ( ( ( rule__AudioInput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2722:1: ( ( rule__AudioInput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2722:1: ( ( rule__AudioInput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2723:1: ( rule__AudioInput__VarNameAssignment_1 )
            {
             before(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2724:1: ( rule__AudioInput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2724:2: rule__AudioInput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__AudioInput__VarNameAssignment_1_in_rule__AudioInput__Group__1__Impl5896);
            rule__AudioInput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__1__Impl"


    // $ANTLR start "rule__AudioInput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2734:1: rule__AudioInput__Group__2 : rule__AudioInput__Group__2__Impl ;
    public final void rule__AudioInput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2738:1: ( rule__AudioInput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2739:2: rule__AudioInput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__AudioInput__Group__2__Impl_in_rule__AudioInput__Group__25926);
            rule__AudioInput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__2"


    // $ANTLR start "rule__AudioInput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2745:1: rule__AudioInput__Group__2__Impl : ( ( rule__AudioInput__NameAssignment_2 ) ) ;
    public final void rule__AudioInput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2749:1: ( ( ( rule__AudioInput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2750:1: ( ( rule__AudioInput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2750:1: ( ( rule__AudioInput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2751:1: ( rule__AudioInput__NameAssignment_2 )
            {
             before(grammarAccess.getAudioInputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2752:1: ( rule__AudioInput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2752:2: rule__AudioInput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__AudioInput__NameAssignment_2_in_rule__AudioInput__Group__2__Impl5953);
            rule__AudioInput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getAudioInputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__Group__2__Impl"


    // $ANTLR start "rule__AudioOutput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2768:1: rule__AudioOutput__Group__0 : rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1 ;
    public final void rule__AudioOutput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2772:1: ( rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2773:2: rule__AudioOutput__Group__0__Impl rule__AudioOutput__Group__1
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__0__Impl_in_rule__AudioOutput__Group__05989);
            rule__AudioOutput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioOutput__Group__1_in_rule__AudioOutput__Group__05992);
            rule__AudioOutput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__0"


    // $ANTLR start "rule__AudioOutput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2780:1: rule__AudioOutput__Group__0__Impl : ( '@audioOutput' ) ;
    public final void rule__AudioOutput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2784:1: ( ( '@audioOutput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2785:1: ( '@audioOutput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2785:1: ( '@audioOutput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2786:1: '@audioOutput'
            {
             before(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); 
            match(input,18,FOLLOW_18_in_rule__AudioOutput__Group__0__Impl6020); 
             after(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__0__Impl"


    // $ANTLR start "rule__AudioOutput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2799:1: rule__AudioOutput__Group__1 : rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2 ;
    public final void rule__AudioOutput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2803:1: ( rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2804:2: rule__AudioOutput__Group__1__Impl rule__AudioOutput__Group__2
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__1__Impl_in_rule__AudioOutput__Group__16051);
            rule__AudioOutput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AudioOutput__Group__2_in_rule__AudioOutput__Group__16054);
            rule__AudioOutput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__1"


    // $ANTLR start "rule__AudioOutput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2811:1: rule__AudioOutput__Group__1__Impl : ( ( rule__AudioOutput__VarNameAssignment_1 ) ) ;
    public final void rule__AudioOutput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2815:1: ( ( ( rule__AudioOutput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2816:1: ( ( rule__AudioOutput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2816:1: ( ( rule__AudioOutput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2817:1: ( rule__AudioOutput__VarNameAssignment_1 )
            {
             before(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2818:1: ( rule__AudioOutput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2818:2: rule__AudioOutput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__AudioOutput__VarNameAssignment_1_in_rule__AudioOutput__Group__1__Impl6081);
            rule__AudioOutput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__1__Impl"


    // $ANTLR start "rule__AudioOutput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2828:1: rule__AudioOutput__Group__2 : rule__AudioOutput__Group__2__Impl ;
    public final void rule__AudioOutput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2832:1: ( rule__AudioOutput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2833:2: rule__AudioOutput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__AudioOutput__Group__2__Impl_in_rule__AudioOutput__Group__26111);
            rule__AudioOutput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__2"


    // $ANTLR start "rule__AudioOutput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2839:1: rule__AudioOutput__Group__2__Impl : ( ( rule__AudioOutput__NameAssignment_2 ) ) ;
    public final void rule__AudioOutput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2843:1: ( ( ( rule__AudioOutput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2844:1: ( ( rule__AudioOutput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2844:1: ( ( rule__AudioOutput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2845:1: ( rule__AudioOutput__NameAssignment_2 )
            {
             before(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2846:1: ( rule__AudioOutput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2846:2: rule__AudioOutput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__AudioOutput__NameAssignment_2_in_rule__AudioOutput__Group__2__Impl6138);
            rule__AudioOutput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__Group__2__Impl"


    // $ANTLR start "rule__ControlInput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2862:1: rule__ControlInput__Group__0 : rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1 ;
    public final void rule__ControlInput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2866:1: ( rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2867:2: rule__ControlInput__Group__0__Impl rule__ControlInput__Group__1
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__0__Impl_in_rule__ControlInput__Group__06174);
            rule__ControlInput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlInput__Group__1_in_rule__ControlInput__Group__06177);
            rule__ControlInput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__0"


    // $ANTLR start "rule__ControlInput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2874:1: rule__ControlInput__Group__0__Impl : ( '@controlInput' ) ;
    public final void rule__ControlInput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2878:1: ( ( '@controlInput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2879:1: ( '@controlInput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2879:1: ( '@controlInput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2880:1: '@controlInput'
            {
             before(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); 
            match(input,19,FOLLOW_19_in_rule__ControlInput__Group__0__Impl6205); 
             after(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__0__Impl"


    // $ANTLR start "rule__ControlInput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2893:1: rule__ControlInput__Group__1 : rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2 ;
    public final void rule__ControlInput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2897:1: ( rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2898:2: rule__ControlInput__Group__1__Impl rule__ControlInput__Group__2
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__1__Impl_in_rule__ControlInput__Group__16236);
            rule__ControlInput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlInput__Group__2_in_rule__ControlInput__Group__16239);
            rule__ControlInput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__1"


    // $ANTLR start "rule__ControlInput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2905:1: rule__ControlInput__Group__1__Impl : ( ( rule__ControlInput__VarNameAssignment_1 ) ) ;
    public final void rule__ControlInput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2909:1: ( ( ( rule__ControlInput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2910:1: ( ( rule__ControlInput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2910:1: ( ( rule__ControlInput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2911:1: ( rule__ControlInput__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2912:1: ( rule__ControlInput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2912:2: rule__ControlInput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlInput__VarNameAssignment_1_in_rule__ControlInput__Group__1__Impl6266);
            rule__ControlInput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__1__Impl"


    // $ANTLR start "rule__ControlInput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2922:1: rule__ControlInput__Group__2 : rule__ControlInput__Group__2__Impl ;
    public final void rule__ControlInput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2926:1: ( rule__ControlInput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2927:2: rule__ControlInput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlInput__Group__2__Impl_in_rule__ControlInput__Group__26296);
            rule__ControlInput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__2"


    // $ANTLR start "rule__ControlInput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2933:1: rule__ControlInput__Group__2__Impl : ( ( rule__ControlInput__NameAssignment_2 ) ) ;
    public final void rule__ControlInput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2937:1: ( ( ( rule__ControlInput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2938:1: ( ( rule__ControlInput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2938:1: ( ( rule__ControlInput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2939:1: ( rule__ControlInput__NameAssignment_2 )
            {
             before(grammarAccess.getControlInputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2940:1: ( rule__ControlInput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2940:2: rule__ControlInput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlInput__NameAssignment_2_in_rule__ControlInput__Group__2__Impl6323);
            rule__ControlInput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlInputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__Group__2__Impl"


    // $ANTLR start "rule__ControlOutput__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2956:1: rule__ControlOutput__Group__0 : rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1 ;
    public final void rule__ControlOutput__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2960:1: ( rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2961:2: rule__ControlOutput__Group__0__Impl rule__ControlOutput__Group__1
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__0__Impl_in_rule__ControlOutput__Group__06359);
            rule__ControlOutput__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlOutput__Group__1_in_rule__ControlOutput__Group__06362);
            rule__ControlOutput__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__0"


    // $ANTLR start "rule__ControlOutput__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2968:1: rule__ControlOutput__Group__0__Impl : ( '@controlOutput' ) ;
    public final void rule__ControlOutput__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2972:1: ( ( '@controlOutput' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2973:1: ( '@controlOutput' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2973:1: ( '@controlOutput' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2974:1: '@controlOutput'
            {
             before(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); 
            match(input,20,FOLLOW_20_in_rule__ControlOutput__Group__0__Impl6390); 
             after(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__0__Impl"


    // $ANTLR start "rule__ControlOutput__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2987:1: rule__ControlOutput__Group__1 : rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2 ;
    public final void rule__ControlOutput__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2991:1: ( rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2992:2: rule__ControlOutput__Group__1__Impl rule__ControlOutput__Group__2
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__1__Impl_in_rule__ControlOutput__Group__16421);
            rule__ControlOutput__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlOutput__Group__2_in_rule__ControlOutput__Group__16424);
            rule__ControlOutput__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__1"


    // $ANTLR start "rule__ControlOutput__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:2999:1: rule__ControlOutput__Group__1__Impl : ( ( rule__ControlOutput__VarNameAssignment_1 ) ) ;
    public final void rule__ControlOutput__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3003:1: ( ( ( rule__ControlOutput__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3004:1: ( ( rule__ControlOutput__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3004:1: ( ( rule__ControlOutput__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3005:1: ( rule__ControlOutput__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3006:1: ( rule__ControlOutput__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3006:2: rule__ControlOutput__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlOutput__VarNameAssignment_1_in_rule__ControlOutput__Group__1__Impl6451);
            rule__ControlOutput__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__1__Impl"


    // $ANTLR start "rule__ControlOutput__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3016:1: rule__ControlOutput__Group__2 : rule__ControlOutput__Group__2__Impl ;
    public final void rule__ControlOutput__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3020:1: ( rule__ControlOutput__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3021:2: rule__ControlOutput__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlOutput__Group__2__Impl_in_rule__ControlOutput__Group__26481);
            rule__ControlOutput__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__2"


    // $ANTLR start "rule__ControlOutput__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3027:1: rule__ControlOutput__Group__2__Impl : ( ( rule__ControlOutput__NameAssignment_2 ) ) ;
    public final void rule__ControlOutput__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3031:1: ( ( ( rule__ControlOutput__NameAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3032:1: ( ( rule__ControlOutput__NameAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3032:1: ( ( rule__ControlOutput__NameAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3033:1: ( rule__ControlOutput__NameAssignment_2 )
            {
             before(grammarAccess.getControlOutputAccess().getNameAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3034:1: ( rule__ControlOutput__NameAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3034:2: rule__ControlOutput__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlOutput__NameAssignment_2_in_rule__ControlOutput__Group__2__Impl6508);
            rule__ControlOutput__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlOutputAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__Group__2__Impl"


    // $ANTLR start "rule__Slider__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3050:1: rule__Slider__Group__0 : rule__Slider__Group__0__Impl rule__Slider__Group__1 ;
    public final void rule__Slider__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3054:1: ( rule__Slider__Group__0__Impl rule__Slider__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3055:2: rule__Slider__Group__0__Impl rule__Slider__Group__1
            {
            pushFollow(FOLLOW_rule__Slider__Group__0__Impl_in_rule__Slider__Group__06544);
            rule__Slider__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Slider__Group__1_in_rule__Slider__Group__06547);
            rule__Slider__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__0"


    // $ANTLR start "rule__Slider__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3062:1: rule__Slider__Group__0__Impl : ( '@slider' ) ;
    public final void rule__Slider__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3066:1: ( ( '@slider' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3067:1: ( '@slider' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3067:1: ( '@slider' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3068:1: '@slider'
            {
             before(grammarAccess.getSliderAccess().getSliderKeyword_0()); 
            match(input,21,FOLLOW_21_in_rule__Slider__Group__0__Impl6575); 
             after(grammarAccess.getSliderAccess().getSliderKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__0__Impl"


    // $ANTLR start "rule__Slider__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3081:1: rule__Slider__Group__1 : rule__Slider__Group__1__Impl rule__Slider__Group__2 ;
    public final void rule__Slider__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3085:1: ( rule__Slider__Group__1__Impl rule__Slider__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3086:2: rule__Slider__Group__1__Impl rule__Slider__Group__2
            {
            pushFollow(FOLLOW_rule__Slider__Group__1__Impl_in_rule__Slider__Group__16606);
            rule__Slider__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Slider__Group__2_in_rule__Slider__Group__16609);
            rule__Slider__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__1"


    // $ANTLR start "rule__Slider__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3093:1: rule__Slider__Group__1__Impl : ( ( rule__Slider__VarNameAssignment_1 ) ) ;
    public final void rule__Slider__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3097:1: ( ( ( rule__Slider__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3098:1: ( ( rule__Slider__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3098:1: ( ( rule__Slider__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3099:1: ( rule__Slider__VarNameAssignment_1 )
            {
             before(grammarAccess.getSliderAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3100:1: ( rule__Slider__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3100:2: rule__Slider__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__Slider__VarNameAssignment_1_in_rule__Slider__Group__1__Impl6636);
            rule__Slider__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSliderAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__1__Impl"


    // $ANTLR start "rule__Slider__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3110:1: rule__Slider__Group__2 : rule__Slider__Group__2__Impl ;
    public final void rule__Slider__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3114:1: ( rule__Slider__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3115:2: rule__Slider__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Slider__Group__2__Impl_in_rule__Slider__Group__26666);
            rule__Slider__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__2"


    // $ANTLR start "rule__Slider__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3121:1: rule__Slider__Group__2__Impl : ( ( rule__Slider__LabelAssignment_2 ) ) ;
    public final void rule__Slider__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3125:1: ( ( ( rule__Slider__LabelAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3126:1: ( ( rule__Slider__LabelAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3126:1: ( ( rule__Slider__LabelAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3127:1: ( rule__Slider__LabelAssignment_2 )
            {
             before(grammarAccess.getSliderAccess().getLabelAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3128:1: ( rule__Slider__LabelAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3128:2: rule__Slider__LabelAssignment_2
            {
            pushFollow(FOLLOW_rule__Slider__LabelAssignment_2_in_rule__Slider__Group__2__Impl6693);
            rule__Slider__LabelAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSliderAccess().getLabelAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__Group__2__Impl"


    // $ANTLR start "rule__CheckBox__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3144:1: rule__CheckBox__Group__0 : rule__CheckBox__Group__0__Impl rule__CheckBox__Group__1 ;
    public final void rule__CheckBox__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3148:1: ( rule__CheckBox__Group__0__Impl rule__CheckBox__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3149:2: rule__CheckBox__Group__0__Impl rule__CheckBox__Group__1
            {
            pushFollow(FOLLOW_rule__CheckBox__Group__0__Impl_in_rule__CheckBox__Group__06729);
            rule__CheckBox__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__CheckBox__Group__1_in_rule__CheckBox__Group__06732);
            rule__CheckBox__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__0"


    // $ANTLR start "rule__CheckBox__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3156:1: rule__CheckBox__Group__0__Impl : ( '@checkbox' ) ;
    public final void rule__CheckBox__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3160:1: ( ( '@checkbox' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3161:1: ( '@checkbox' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3161:1: ( '@checkbox' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3162:1: '@checkbox'
            {
             before(grammarAccess.getCheckBoxAccess().getCheckboxKeyword_0()); 
            match(input,22,FOLLOW_22_in_rule__CheckBox__Group__0__Impl6760); 
             after(grammarAccess.getCheckBoxAccess().getCheckboxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__0__Impl"


    // $ANTLR start "rule__CheckBox__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3175:1: rule__CheckBox__Group__1 : rule__CheckBox__Group__1__Impl rule__CheckBox__Group__2 ;
    public final void rule__CheckBox__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3179:1: ( rule__CheckBox__Group__1__Impl rule__CheckBox__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3180:2: rule__CheckBox__Group__1__Impl rule__CheckBox__Group__2
            {
            pushFollow(FOLLOW_rule__CheckBox__Group__1__Impl_in_rule__CheckBox__Group__16791);
            rule__CheckBox__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__CheckBox__Group__2_in_rule__CheckBox__Group__16794);
            rule__CheckBox__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__1"


    // $ANTLR start "rule__CheckBox__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3187:1: rule__CheckBox__Group__1__Impl : ( ( rule__CheckBox__VarNameAssignment_1 ) ) ;
    public final void rule__CheckBox__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3191:1: ( ( ( rule__CheckBox__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3192:1: ( ( rule__CheckBox__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3192:1: ( ( rule__CheckBox__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3193:1: ( rule__CheckBox__VarNameAssignment_1 )
            {
             before(grammarAccess.getCheckBoxAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3194:1: ( rule__CheckBox__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3194:2: rule__CheckBox__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__CheckBox__VarNameAssignment_1_in_rule__CheckBox__Group__1__Impl6821);
            rule__CheckBox__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getCheckBoxAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__1__Impl"


    // $ANTLR start "rule__CheckBox__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3204:1: rule__CheckBox__Group__2 : rule__CheckBox__Group__2__Impl ;
    public final void rule__CheckBox__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3208:1: ( rule__CheckBox__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3209:2: rule__CheckBox__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__CheckBox__Group__2__Impl_in_rule__CheckBox__Group__26851);
            rule__CheckBox__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__2"


    // $ANTLR start "rule__CheckBox__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3215:1: rule__CheckBox__Group__2__Impl : ( ( rule__CheckBox__LabelAssignment_2 ) ) ;
    public final void rule__CheckBox__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3219:1: ( ( ( rule__CheckBox__LabelAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3220:1: ( ( rule__CheckBox__LabelAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3220:1: ( ( rule__CheckBox__LabelAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3221:1: ( rule__CheckBox__LabelAssignment_2 )
            {
             before(grammarAccess.getCheckBoxAccess().getLabelAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3222:1: ( rule__CheckBox__LabelAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3222:2: rule__CheckBox__LabelAssignment_2
            {
            pushFollow(FOLLOW_rule__CheckBox__LabelAssignment_2_in_rule__CheckBox__Group__2__Impl6878);
            rule__CheckBox__LabelAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getCheckBoxAccess().getLabelAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__Group__2__Impl"


    // $ANTLR start "rule__ControlLabel__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3238:1: rule__ControlLabel__Group__0 : rule__ControlLabel__Group__0__Impl rule__ControlLabel__Group__1 ;
    public final void rule__ControlLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3242:1: ( rule__ControlLabel__Group__0__Impl rule__ControlLabel__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3243:2: rule__ControlLabel__Group__0__Impl rule__ControlLabel__Group__1
            {
            pushFollow(FOLLOW_rule__ControlLabel__Group__0__Impl_in_rule__ControlLabel__Group__06914);
            rule__ControlLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlLabel__Group__1_in_rule__ControlLabel__Group__06917);
            rule__ControlLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__0"


    // $ANTLR start "rule__ControlLabel__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3250:1: rule__ControlLabel__Group__0__Impl : ( '@controlLabel' ) ;
    public final void rule__ControlLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3254:1: ( ( '@controlLabel' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3255:1: ( '@controlLabel' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3255:1: ( '@controlLabel' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3256:1: '@controlLabel'
            {
             before(grammarAccess.getControlLabelAccess().getControlLabelKeyword_0()); 
            match(input,23,FOLLOW_23_in_rule__ControlLabel__Group__0__Impl6945); 
             after(grammarAccess.getControlLabelAccess().getControlLabelKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__0__Impl"


    // $ANTLR start "rule__ControlLabel__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3269:1: rule__ControlLabel__Group__1 : rule__ControlLabel__Group__1__Impl rule__ControlLabel__Group__2 ;
    public final void rule__ControlLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3273:1: ( rule__ControlLabel__Group__1__Impl rule__ControlLabel__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3274:2: rule__ControlLabel__Group__1__Impl rule__ControlLabel__Group__2
            {
            pushFollow(FOLLOW_rule__ControlLabel__Group__1__Impl_in_rule__ControlLabel__Group__16976);
            rule__ControlLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ControlLabel__Group__2_in_rule__ControlLabel__Group__16979);
            rule__ControlLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__1"


    // $ANTLR start "rule__ControlLabel__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3281:1: rule__ControlLabel__Group__1__Impl : ( ( rule__ControlLabel__VarNameAssignment_1 ) ) ;
    public final void rule__ControlLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3285:1: ( ( ( rule__ControlLabel__VarNameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3286:1: ( ( rule__ControlLabel__VarNameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3286:1: ( ( rule__ControlLabel__VarNameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3287:1: ( rule__ControlLabel__VarNameAssignment_1 )
            {
             before(grammarAccess.getControlLabelAccess().getVarNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3288:1: ( rule__ControlLabel__VarNameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3288:2: rule__ControlLabel__VarNameAssignment_1
            {
            pushFollow(FOLLOW_rule__ControlLabel__VarNameAssignment_1_in_rule__ControlLabel__Group__1__Impl7006);
            rule__ControlLabel__VarNameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getControlLabelAccess().getVarNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__1__Impl"


    // $ANTLR start "rule__ControlLabel__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3298:1: rule__ControlLabel__Group__2 : rule__ControlLabel__Group__2__Impl ;
    public final void rule__ControlLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3302:1: ( rule__ControlLabel__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3303:2: rule__ControlLabel__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ControlLabel__Group__2__Impl_in_rule__ControlLabel__Group__27036);
            rule__ControlLabel__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__2"


    // $ANTLR start "rule__ControlLabel__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3309:1: rule__ControlLabel__Group__2__Impl : ( ( rule__ControlLabel__LabelAssignment_2 ) ) ;
    public final void rule__ControlLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3313:1: ( ( ( rule__ControlLabel__LabelAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3314:1: ( ( rule__ControlLabel__LabelAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3314:1: ( ( rule__ControlLabel__LabelAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3315:1: ( rule__ControlLabel__LabelAssignment_2 )
            {
             before(grammarAccess.getControlLabelAccess().getLabelAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3316:1: ( rule__ControlLabel__LabelAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3316:2: rule__ControlLabel__LabelAssignment_2
            {
            pushFollow(FOLLOW_rule__ControlLabel__LabelAssignment_2_in_rule__ControlLabel__Group__2__Impl7063);
            rule__ControlLabel__LabelAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getControlLabelAccess().getLabelAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__Group__2__Impl"


    // $ANTLR start "rule__Equate__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3332:1: rule__Equate__Group__0 : rule__Equate__Group__0__Impl rule__Equate__Group__1 ;
    public final void rule__Equate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3336:1: ( rule__Equate__Group__0__Impl rule__Equate__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3337:2: rule__Equate__Group__0__Impl rule__Equate__Group__1
            {
            pushFollow(FOLLOW_rule__Equate__Group__0__Impl_in_rule__Equate__Group__07099);
            rule__Equate__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group__1_in_rule__Equate__Group__07102);
            rule__Equate__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__0"


    // $ANTLR start "rule__Equate__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3344:1: rule__Equate__Group__0__Impl : ( 'equ' ) ;
    public final void rule__Equate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3348:1: ( ( 'equ' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3349:1: ( 'equ' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3349:1: ( 'equ' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3350:1: 'equ'
            {
             before(grammarAccess.getEquateAccess().getEquKeyword_0()); 
            match(input,24,FOLLOW_24_in_rule__Equate__Group__0__Impl7130); 
             after(grammarAccess.getEquateAccess().getEquKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__0__Impl"


    // $ANTLR start "rule__Equate__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3363:1: rule__Equate__Group__1 : rule__Equate__Group__1__Impl rule__Equate__Group__2 ;
    public final void rule__Equate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3367:1: ( rule__Equate__Group__1__Impl rule__Equate__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3368:2: rule__Equate__Group__1__Impl rule__Equate__Group__2
            {
            pushFollow(FOLLOW_rule__Equate__Group__1__Impl_in_rule__Equate__Group__17161);
            rule__Equate__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equate__Group__2_in_rule__Equate__Group__17164);
            rule__Equate__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__1"


    // $ANTLR start "rule__Equate__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3375:1: rule__Equate__Group__1__Impl : ( ( rule__Equate__EnameAssignment_1 ) ) ;
    public final void rule__Equate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3379:1: ( ( ( rule__Equate__EnameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3380:1: ( ( rule__Equate__EnameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3380:1: ( ( rule__Equate__EnameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3381:1: ( rule__Equate__EnameAssignment_1 )
            {
             before(grammarAccess.getEquateAccess().getEnameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3382:1: ( rule__Equate__EnameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3382:2: rule__Equate__EnameAssignment_1
            {
            pushFollow(FOLLOW_rule__Equate__EnameAssignment_1_in_rule__Equate__Group__1__Impl7191);
            rule__Equate__EnameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getEnameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__1__Impl"


    // $ANTLR start "rule__Equate__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3392:1: rule__Equate__Group__2 : rule__Equate__Group__2__Impl ;
    public final void rule__Equate__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3396:1: ( rule__Equate__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3397:2: rule__Equate__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Equate__Group__2__Impl_in_rule__Equate__Group__27221);
            rule__Equate__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__2"


    // $ANTLR start "rule__Equate__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3403:1: rule__Equate__Group__2__Impl : ( ( rule__Equate__ValueAssignment_2 ) ) ;
    public final void rule__Equate__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3407:1: ( ( ( rule__Equate__ValueAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3408:1: ( ( rule__Equate__ValueAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3408:1: ( ( rule__Equate__ValueAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3409:1: ( rule__Equate__ValueAssignment_2 )
            {
             before(grammarAccess.getEquateAccess().getValueAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3410:1: ( rule__Equate__ValueAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3410:2: rule__Equate__ValueAssignment_2
            {
            pushFollow(FOLLOW_rule__Equate__ValueAssignment_2_in_rule__Equate__Group__2__Impl7248);
            rule__Equate__ValueAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getEquateAccess().getValueAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__Group__2__Impl"


    // $ANTLR start "rule__Mem__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3426:1: rule__Mem__Group__0 : rule__Mem__Group__0__Impl rule__Mem__Group__1 ;
    public final void rule__Mem__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3430:1: ( rule__Mem__Group__0__Impl rule__Mem__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3431:2: rule__Mem__Group__0__Impl rule__Mem__Group__1
            {
            pushFollow(FOLLOW_rule__Mem__Group__0__Impl_in_rule__Mem__Group__07284);
            rule__Mem__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mem__Group__1_in_rule__Mem__Group__07287);
            rule__Mem__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__0"


    // $ANTLR start "rule__Mem__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3438:1: rule__Mem__Group__0__Impl : ( 'mem' ) ;
    public final void rule__Mem__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3442:1: ( ( 'mem' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3443:1: ( 'mem' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3443:1: ( 'mem' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3444:1: 'mem'
            {
             before(grammarAccess.getMemAccess().getMemKeyword_0()); 
            match(input,25,FOLLOW_25_in_rule__Mem__Group__0__Impl7315); 
             after(grammarAccess.getMemAccess().getMemKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__0__Impl"


    // $ANTLR start "rule__Mem__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3457:1: rule__Mem__Group__1 : rule__Mem__Group__1__Impl rule__Mem__Group__2 ;
    public final void rule__Mem__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3461:1: ( rule__Mem__Group__1__Impl rule__Mem__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3462:2: rule__Mem__Group__1__Impl rule__Mem__Group__2
            {
            pushFollow(FOLLOW_rule__Mem__Group__1__Impl_in_rule__Mem__Group__17346);
            rule__Mem__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mem__Group__2_in_rule__Mem__Group__17349);
            rule__Mem__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__1"


    // $ANTLR start "rule__Mem__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3469:1: rule__Mem__Group__1__Impl : ( ( rule__Mem__BufferAssignment_1 ) ) ;
    public final void rule__Mem__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3473:1: ( ( ( rule__Mem__BufferAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3474:1: ( ( rule__Mem__BufferAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3474:1: ( ( rule__Mem__BufferAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3475:1: ( rule__Mem__BufferAssignment_1 )
            {
             before(grammarAccess.getMemAccess().getBufferAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3476:1: ( rule__Mem__BufferAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3476:2: rule__Mem__BufferAssignment_1
            {
            pushFollow(FOLLOW_rule__Mem__BufferAssignment_1_in_rule__Mem__Group__1__Impl7376);
            rule__Mem__BufferAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getBufferAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__1__Impl"


    // $ANTLR start "rule__Mem__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3486:1: rule__Mem__Group__2 : rule__Mem__Group__2__Impl ;
    public final void rule__Mem__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3490:1: ( rule__Mem__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3491:2: rule__Mem__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Mem__Group__2__Impl_in_rule__Mem__Group__27406);
            rule__Mem__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__2"


    // $ANTLR start "rule__Mem__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3497:1: rule__Mem__Group__2__Impl : ( ( rule__Mem__LengthAssignment_2 ) ) ;
    public final void rule__Mem__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3501:1: ( ( ( rule__Mem__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3502:1: ( ( rule__Mem__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3502:1: ( ( rule__Mem__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3503:1: ( rule__Mem__LengthAssignment_2 )
            {
             before(grammarAccess.getMemAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3504:1: ( rule__Mem__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3504:2: rule__Mem__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__Mem__LengthAssignment_2_in_rule__Mem__Group__2__Impl7433);
            rule__Mem__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getMemAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__Group__2__Impl"


    // $ANTLR start "rule__Offset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3520:1: rule__Offset__Group__0 : rule__Offset__Group__0__Impl rule__Offset__Group__1 ;
    public final void rule__Offset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3524:1: ( rule__Offset__Group__0__Impl rule__Offset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3525:2: rule__Offset__Group__0__Impl rule__Offset__Group__1
            {
            pushFollow(FOLLOW_rule__Offset__Group__0__Impl_in_rule__Offset__Group__07469);
            rule__Offset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Offset__Group__1_in_rule__Offset__Group__07472);
            rule__Offset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__0"


    // $ANTLR start "rule__Offset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3532:1: rule__Offset__Group__0__Impl : ( 'offset' ) ;
    public final void rule__Offset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3536:1: ( ( 'offset' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3537:1: ( 'offset' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3537:1: ( 'offset' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3538:1: 'offset'
            {
             before(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); 
            match(input,26,FOLLOW_26_in_rule__Offset__Group__0__Impl7500); 
             after(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__0__Impl"


    // $ANTLR start "rule__Offset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3551:1: rule__Offset__Group__1 : rule__Offset__Group__1__Impl rule__Offset__Group__2 ;
    public final void rule__Offset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3555:1: ( rule__Offset__Group__1__Impl rule__Offset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3556:2: rule__Offset__Group__1__Impl rule__Offset__Group__2
            {
            pushFollow(FOLLOW_rule__Offset__Group__1__Impl_in_rule__Offset__Group__17531);
            rule__Offset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Offset__Group__2_in_rule__Offset__Group__17534);
            rule__Offset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__1"


    // $ANTLR start "rule__Offset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3563:1: rule__Offset__Group__1__Impl : ( ( rule__Offset__NameAssignment_1 ) ) ;
    public final void rule__Offset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3567:1: ( ( ( rule__Offset__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3568:1: ( ( rule__Offset__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3568:1: ( ( rule__Offset__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3569:1: ( rule__Offset__NameAssignment_1 )
            {
             before(grammarAccess.getOffsetAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3570:1: ( rule__Offset__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3570:2: rule__Offset__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__Offset__NameAssignment_1_in_rule__Offset__Group__1__Impl7561);
            rule__Offset__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__1__Impl"


    // $ANTLR start "rule__Offset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3580:1: rule__Offset__Group__2 : rule__Offset__Group__2__Impl ;
    public final void rule__Offset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3584:1: ( rule__Offset__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3585:2: rule__Offset__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Offset__Group__2__Impl_in_rule__Offset__Group__27591);
            rule__Offset__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__2"


    // $ANTLR start "rule__Offset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3591:1: rule__Offset__Group__2__Impl : ( ( rule__Offset__LengthAssignment_2 ) ) ;
    public final void rule__Offset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3595:1: ( ( ( rule__Offset__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3596:1: ( ( rule__Offset__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3596:1: ( ( rule__Offset__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3597:1: ( rule__Offset__LengthAssignment_2 )
            {
             before(grammarAccess.getOffsetAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3598:1: ( rule__Offset__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3598:2: rule__Offset__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__Offset__LengthAssignment_2_in_rule__Offset__Group__2__Impl7618);
            rule__Offset__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__Group__2__Impl"


    // $ANTLR start "rule__Label__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3614:1: rule__Label__Group__0 : rule__Label__Group__0__Impl rule__Label__Group__1 ;
    public final void rule__Label__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3618:1: ( rule__Label__Group__0__Impl rule__Label__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3619:2: rule__Label__Group__0__Impl rule__Label__Group__1
            {
            pushFollow(FOLLOW_rule__Label__Group__0__Impl_in_rule__Label__Group__07654);
            rule__Label__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Label__Group__1_in_rule__Label__Group__07657);
            rule__Label__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__0"


    // $ANTLR start "rule__Label__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3626:1: rule__Label__Group__0__Impl : ( ( rule__Label__NameAssignment_0 ) ) ;
    public final void rule__Label__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3630:1: ( ( ( rule__Label__NameAssignment_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3631:1: ( ( rule__Label__NameAssignment_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3631:1: ( ( rule__Label__NameAssignment_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3632:1: ( rule__Label__NameAssignment_0 )
            {
             before(grammarAccess.getLabelAccess().getNameAssignment_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3633:1: ( rule__Label__NameAssignment_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3633:2: rule__Label__NameAssignment_0
            {
            pushFollow(FOLLOW_rule__Label__NameAssignment_0_in_rule__Label__Group__0__Impl7684);
            rule__Label__NameAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getLabelAccess().getNameAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__0__Impl"


    // $ANTLR start "rule__Label__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3643:1: rule__Label__Group__1 : rule__Label__Group__1__Impl ;
    public final void rule__Label__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3647:1: ( rule__Label__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3648:2: rule__Label__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Label__Group__1__Impl_in_rule__Label__Group__17714);
            rule__Label__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__1"


    // $ANTLR start "rule__Label__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3654:1: rule__Label__Group__1__Impl : ( ':' ) ;
    public final void rule__Label__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3658:1: ( ( ':' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3659:1: ( ':' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3659:1: ( ':' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3660:1: ':'
            {
             before(grammarAccess.getLabelAccess().getColonKeyword_1()); 
            match(input,27,FOLLOW_27_in_rule__Label__Group__1__Impl7742); 
             after(grammarAccess.getLabelAccess().getColonKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__Group__1__Impl"


    // $ANTLR start "rule__IsPinConnected__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3677:1: rule__IsPinConnected__Group__0 : rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1 ;
    public final void rule__IsPinConnected__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3681:1: ( rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3682:2: rule__IsPinConnected__Group__0__Impl rule__IsPinConnected__Group__1
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__0__Impl_in_rule__IsPinConnected__Group__07777);
            rule__IsPinConnected__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsPinConnected__Group__1_in_rule__IsPinConnected__Group__07780);
            rule__IsPinConnected__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__0"


    // $ANTLR start "rule__IsPinConnected__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3689:1: rule__IsPinConnected__Group__0__Impl : ( '@isPinConnected' ) ;
    public final void rule__IsPinConnected__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3693:1: ( ( '@isPinConnected' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3694:1: ( '@isPinConnected' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3694:1: ( '@isPinConnected' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3695:1: '@isPinConnected'
            {
             before(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); 
            match(input,28,FOLLOW_28_in_rule__IsPinConnected__Group__0__Impl7808); 
             after(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__0__Impl"


    // $ANTLR start "rule__IsPinConnected__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3708:1: rule__IsPinConnected__Group__1 : rule__IsPinConnected__Group__1__Impl ;
    public final void rule__IsPinConnected__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3712:1: ( rule__IsPinConnected__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3713:2: rule__IsPinConnected__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Group__1__Impl_in_rule__IsPinConnected__Group__17839);
            rule__IsPinConnected__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__1"


    // $ANTLR start "rule__IsPinConnected__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3719:1: rule__IsPinConnected__Group__1__Impl : ( ( rule__IsPinConnected__Arg1Assignment_1 ) ) ;
    public final void rule__IsPinConnected__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3723:1: ( ( ( rule__IsPinConnected__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3724:1: ( ( rule__IsPinConnected__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3724:1: ( ( rule__IsPinConnected__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3725:1: ( rule__IsPinConnected__Arg1Assignment_1 )
            {
             before(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3726:1: ( rule__IsPinConnected__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3726:2: rule__IsPinConnected__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__IsPinConnected__Arg1Assignment_1_in_rule__IsPinConnected__Group__1__Impl7866);
            rule__IsPinConnected__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Group__1__Impl"


    // $ANTLR start "rule__IsElse__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3740:1: rule__IsElse__Group__0 : rule__IsElse__Group__0__Impl rule__IsElse__Group__1 ;
    public final void rule__IsElse__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3744:1: ( rule__IsElse__Group__0__Impl rule__IsElse__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3745:2: rule__IsElse__Group__0__Impl rule__IsElse__Group__1
            {
            pushFollow(FOLLOW_rule__IsElse__Group__0__Impl_in_rule__IsElse__Group__07900);
            rule__IsElse__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsElse__Group__1_in_rule__IsElse__Group__07903);
            rule__IsElse__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__0"


    // $ANTLR start "rule__IsElse__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3752:1: rule__IsElse__Group__0__Impl : ( () ) ;
    public final void rule__IsElse__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3756:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3757:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3757:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3758:1: ()
            {
             before(grammarAccess.getIsElseAccess().getIsElseAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3759:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3761:1: 
            {
            }

             after(grammarAccess.getIsElseAccess().getIsElseAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__0__Impl"


    // $ANTLR start "rule__IsElse__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3771:1: rule__IsElse__Group__1 : rule__IsElse__Group__1__Impl ;
    public final void rule__IsElse__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3775:1: ( rule__IsElse__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3776:2: rule__IsElse__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsElse__Group__1__Impl_in_rule__IsElse__Group__17961);
            rule__IsElse__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__1"


    // $ANTLR start "rule__IsElse__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3782:1: rule__IsElse__Group__1__Impl : ( '@else' ) ;
    public final void rule__IsElse__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3786:1: ( ( '@else' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3787:1: ( '@else' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3787:1: ( '@else' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3788:1: '@else'
            {
             before(grammarAccess.getIsElseAccess().getElseKeyword_1()); 
            match(input,29,FOLLOW_29_in_rule__IsElse__Group__1__Impl7989); 
             after(grammarAccess.getIsElseAccess().getElseKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsElse__Group__1__Impl"


    // $ANTLR start "rule__IsEndif__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3805:1: rule__IsEndif__Group__0 : rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1 ;
    public final void rule__IsEndif__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3809:1: ( rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3810:2: rule__IsEndif__Group__0__Impl rule__IsEndif__Group__1
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__0__Impl_in_rule__IsEndif__Group__08024);
            rule__IsEndif__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IsEndif__Group__1_in_rule__IsEndif__Group__08027);
            rule__IsEndif__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__0"


    // $ANTLR start "rule__IsEndif__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3817:1: rule__IsEndif__Group__0__Impl : ( () ) ;
    public final void rule__IsEndif__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3821:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3822:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3822:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3823:1: ()
            {
             before(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3824:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3826:1: 
            {
            }

             after(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__0__Impl"


    // $ANTLR start "rule__IsEndif__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3836:1: rule__IsEndif__Group__1 : rule__IsEndif__Group__1__Impl ;
    public final void rule__IsEndif__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3840:1: ( rule__IsEndif__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3841:2: rule__IsEndif__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IsEndif__Group__1__Impl_in_rule__IsEndif__Group__18085);
            rule__IsEndif__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__1"


    // $ANTLR start "rule__IsEndif__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3847:1: rule__IsEndif__Group__1__Impl : ( '@endif' ) ;
    public final void rule__IsEndif__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3851:1: ( ( '@endif' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3852:1: ( '@endif' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3852:1: ( '@endif' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3853:1: '@endif'
            {
             before(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); 
            match(input,30,FOLLOW_30_in_rule__IsEndif__Group__1__Impl8113); 
             after(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsEndif__Group__1__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3870:1: rule__GetInputDefault__Group__0 : rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1 ;
    public final void rule__GetInputDefault__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3874:1: ( rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3875:2: rule__GetInputDefault__Group__0__Impl rule__GetInputDefault__Group__1
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__0__Impl_in_rule__GetInputDefault__Group__08148);
            rule__GetInputDefault__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__1_in_rule__GetInputDefault__Group__08151);
            rule__GetInputDefault__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__0"


    // $ANTLR start "rule__GetInputDefault__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3882:1: rule__GetInputDefault__Group__0__Impl : ( '@getInputDefault' ) ;
    public final void rule__GetInputDefault__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3886:1: ( ( '@getInputDefault' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3887:1: ( '@getInputDefault' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3887:1: ( '@getInputDefault' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3888:1: '@getInputDefault'
            {
             before(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); 
            match(input,31,FOLLOW_31_in_rule__GetInputDefault__Group__0__Impl8179); 
             after(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__0__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3901:1: rule__GetInputDefault__Group__1 : rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2 ;
    public final void rule__GetInputDefault__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3905:1: ( rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3906:2: rule__GetInputDefault__Group__1__Impl rule__GetInputDefault__Group__2
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__1__Impl_in_rule__GetInputDefault__Group__18210);
            rule__GetInputDefault__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__2_in_rule__GetInputDefault__Group__18213);
            rule__GetInputDefault__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__1"


    // $ANTLR start "rule__GetInputDefault__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3913:1: rule__GetInputDefault__Group__1__Impl : ( ( rule__GetInputDefault__NameAssignment_1 ) ) ;
    public final void rule__GetInputDefault__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3917:1: ( ( ( rule__GetInputDefault__NameAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3918:1: ( ( rule__GetInputDefault__NameAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3918:1: ( ( rule__GetInputDefault__NameAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3919:1: ( rule__GetInputDefault__NameAssignment_1 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3920:1: ( rule__GetInputDefault__NameAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3920:2: rule__GetInputDefault__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__GetInputDefault__NameAssignment_1_in_rule__GetInputDefault__Group__1__Impl8240);
            rule__GetInputDefault__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__1__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3930:1: rule__GetInputDefault__Group__2 : rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3 ;
    public final void rule__GetInputDefault__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3934:1: ( rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3935:2: rule__GetInputDefault__Group__2__Impl rule__GetInputDefault__Group__3
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__2__Impl_in_rule__GetInputDefault__Group__28270);
            rule__GetInputDefault__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__3_in_rule__GetInputDefault__Group__28273);
            rule__GetInputDefault__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__2"


    // $ANTLR start "rule__GetInputDefault__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3942:1: rule__GetInputDefault__Group__2__Impl : ( ( rule__GetInputDefault__VariableAssignment_2 ) ) ;
    public final void rule__GetInputDefault__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3946:1: ( ( ( rule__GetInputDefault__VariableAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3947:1: ( ( rule__GetInputDefault__VariableAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3947:1: ( ( rule__GetInputDefault__VariableAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3948:1: ( rule__GetInputDefault__VariableAssignment_2 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3949:1: ( rule__GetInputDefault__VariableAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3949:2: rule__GetInputDefault__VariableAssignment_2
            {
            pushFollow(FOLLOW_rule__GetInputDefault__VariableAssignment_2_in_rule__GetInputDefault__Group__2__Impl8300);
            rule__GetInputDefault__VariableAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__2__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3959:1: rule__GetInputDefault__Group__3 : rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4 ;
    public final void rule__GetInputDefault__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3963:1: ( rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3964:2: rule__GetInputDefault__Group__3__Impl rule__GetInputDefault__Group__4
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__3__Impl_in_rule__GetInputDefault__Group__38330);
            rule__GetInputDefault__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetInputDefault__Group__4_in_rule__GetInputDefault__Group__38333);
            rule__GetInputDefault__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__3"


    // $ANTLR start "rule__GetInputDefault__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3971:1: rule__GetInputDefault__Group__3__Impl : ( ( rule__GetInputDefault__ScaleAssignment_3 ) ) ;
    public final void rule__GetInputDefault__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3975:1: ( ( ( rule__GetInputDefault__ScaleAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3976:1: ( ( rule__GetInputDefault__ScaleAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3976:1: ( ( rule__GetInputDefault__ScaleAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3977:1: ( rule__GetInputDefault__ScaleAssignment_3 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3978:1: ( rule__GetInputDefault__ScaleAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3978:2: rule__GetInputDefault__ScaleAssignment_3
            {
            pushFollow(FOLLOW_rule__GetInputDefault__ScaleAssignment_3_in_rule__GetInputDefault__Group__3__Impl8360);
            rule__GetInputDefault__ScaleAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__3__Impl"


    // $ANTLR start "rule__GetInputDefault__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3988:1: rule__GetInputDefault__Group__4 : rule__GetInputDefault__Group__4__Impl ;
    public final void rule__GetInputDefault__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3992:1: ( rule__GetInputDefault__Group__4__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3993:2: rule__GetInputDefault__Group__4__Impl
            {
            pushFollow(FOLLOW_rule__GetInputDefault__Group__4__Impl_in_rule__GetInputDefault__Group__48390);
            rule__GetInputDefault__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__4"


    // $ANTLR start "rule__GetInputDefault__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:3999:1: rule__GetInputDefault__Group__4__Impl : ( ( rule__GetInputDefault__DefaultValAssignment_4 ) ) ;
    public final void rule__GetInputDefault__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4003:1: ( ( ( rule__GetInputDefault__DefaultValAssignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4004:1: ( ( rule__GetInputDefault__DefaultValAssignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4004:1: ( ( rule__GetInputDefault__DefaultValAssignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4005:1: ( rule__GetInputDefault__DefaultValAssignment_4 )
            {
             before(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4006:1: ( rule__GetInputDefault__DefaultValAssignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4006:2: rule__GetInputDefault__DefaultValAssignment_4
            {
            pushFollow(FOLLOW_rule__GetInputDefault__DefaultValAssignment_4_in_rule__GetInputDefault__Group__4__Impl8417);
            rule__GetInputDefault__DefaultValAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__Group__4__Impl"


    // $ANTLR start "rule__GetDelayScale__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4026:1: rule__GetDelayScale__Group__0 : rule__GetDelayScale__Group__0__Impl rule__GetDelayScale__Group__1 ;
    public final void rule__GetDelayScale__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4030:1: ( rule__GetDelayScale__Group__0__Impl rule__GetDelayScale__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4031:2: rule__GetDelayScale__Group__0__Impl rule__GetDelayScale__Group__1
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__0__Impl_in_rule__GetDelayScale__Group__08457);
            rule__GetDelayScale__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScale__Group__1_in_rule__GetDelayScale__Group__08460);
            rule__GetDelayScale__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__0"


    // $ANTLR start "rule__GetDelayScale__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4038:1: rule__GetDelayScale__Group__0__Impl : ( '@getDelayScale' ) ;
    public final void rule__GetDelayScale__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4042:1: ( ( '@getDelayScale' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4043:1: ( '@getDelayScale' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4043:1: ( '@getDelayScale' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4044:1: '@getDelayScale'
            {
             before(grammarAccess.getGetDelayScaleAccess().getGetDelayScaleKeyword_0()); 
            match(input,32,FOLLOW_32_in_rule__GetDelayScale__Group__0__Impl8488); 
             after(grammarAccess.getGetDelayScaleAccess().getGetDelayScaleKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__0__Impl"


    // $ANTLR start "rule__GetDelayScale__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4057:1: rule__GetDelayScale__Group__1 : rule__GetDelayScale__Group__1__Impl rule__GetDelayScale__Group__2 ;
    public final void rule__GetDelayScale__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4061:1: ( rule__GetDelayScale__Group__1__Impl rule__GetDelayScale__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4062:2: rule__GetDelayScale__Group__1__Impl rule__GetDelayScale__Group__2
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__1__Impl_in_rule__GetDelayScale__Group__18519);
            rule__GetDelayScale__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScale__Group__2_in_rule__GetDelayScale__Group__18522);
            rule__GetDelayScale__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__1"


    // $ANTLR start "rule__GetDelayScale__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4069:1: rule__GetDelayScale__Group__1__Impl : ( ( rule__GetDelayScale__BufferAssignment_1 ) ) ;
    public final void rule__GetDelayScale__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4073:1: ( ( ( rule__GetDelayScale__BufferAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4074:1: ( ( rule__GetDelayScale__BufferAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4074:1: ( ( rule__GetDelayScale__BufferAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4075:1: ( rule__GetDelayScale__BufferAssignment_1 )
            {
             before(grammarAccess.getGetDelayScaleAccess().getBufferAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4076:1: ( rule__GetDelayScale__BufferAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4076:2: rule__GetDelayScale__BufferAssignment_1
            {
            pushFollow(FOLLOW_rule__GetDelayScale__BufferAssignment_1_in_rule__GetDelayScale__Group__1__Impl8549);
            rule__GetDelayScale__BufferAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleAccess().getBufferAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__1__Impl"


    // $ANTLR start "rule__GetDelayScale__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4086:1: rule__GetDelayScale__Group__2 : rule__GetDelayScale__Group__2__Impl rule__GetDelayScale__Group__3 ;
    public final void rule__GetDelayScale__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4090:1: ( rule__GetDelayScale__Group__2__Impl rule__GetDelayScale__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4091:2: rule__GetDelayScale__Group__2__Impl rule__GetDelayScale__Group__3
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__2__Impl_in_rule__GetDelayScale__Group__28579);
            rule__GetDelayScale__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__GetDelayScale__Group__3_in_rule__GetDelayScale__Group__28582);
            rule__GetDelayScale__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__2"


    // $ANTLR start "rule__GetDelayScale__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4098:1: rule__GetDelayScale__Group__2__Impl : ( ( rule__GetDelayScale__LengthAssignment_2 ) ) ;
    public final void rule__GetDelayScale__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4102:1: ( ( ( rule__GetDelayScale__LengthAssignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4103:1: ( ( rule__GetDelayScale__LengthAssignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4103:1: ( ( rule__GetDelayScale__LengthAssignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4104:1: ( rule__GetDelayScale__LengthAssignment_2 )
            {
             before(grammarAccess.getGetDelayScaleAccess().getLengthAssignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4105:1: ( rule__GetDelayScale__LengthAssignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4105:2: rule__GetDelayScale__LengthAssignment_2
            {
            pushFollow(FOLLOW_rule__GetDelayScale__LengthAssignment_2_in_rule__GetDelayScale__Group__2__Impl8609);
            rule__GetDelayScale__LengthAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleAccess().getLengthAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__2__Impl"


    // $ANTLR start "rule__GetDelayScale__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4115:1: rule__GetDelayScale__Group__3 : rule__GetDelayScale__Group__3__Impl ;
    public final void rule__GetDelayScale__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4119:1: ( rule__GetDelayScale__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4120:2: rule__GetDelayScale__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__GetDelayScale__Group__3__Impl_in_rule__GetDelayScale__Group__38639);
            rule__GetDelayScale__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__3"


    // $ANTLR start "rule__GetDelayScale__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4126:1: rule__GetDelayScale__Group__3__Impl : ( ( rule__GetDelayScale__ControlAssignment_3 ) ) ;
    public final void rule__GetDelayScale__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4130:1: ( ( ( rule__GetDelayScale__ControlAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4131:1: ( ( rule__GetDelayScale__ControlAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4131:1: ( ( rule__GetDelayScale__ControlAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4132:1: ( rule__GetDelayScale__ControlAssignment_3 )
            {
             before(grammarAccess.getGetDelayScaleAccess().getControlAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4133:1: ( rule__GetDelayScale__ControlAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4133:2: rule__GetDelayScale__ControlAssignment_3
            {
            pushFollow(FOLLOW_rule__GetDelayScale__ControlAssignment_3_in_rule__GetDelayScale__Group__3__Impl8666);
            rule__GetDelayScale__ControlAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getGetDelayScaleAccess().getControlAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__Group__3__Impl"


    // $ANTLR start "rule__ReadRegister__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4151:1: rule__ReadRegister__Group__0 : rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1 ;
    public final void rule__ReadRegister__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4155:1: ( rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4156:2: rule__ReadRegister__Group__0__Impl rule__ReadRegister__Group__1
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__0__Impl_in_rule__ReadRegister__Group__08704);
            rule__ReadRegister__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__1_in_rule__ReadRegister__Group__08707);
            rule__ReadRegister__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__0"


    // $ANTLR start "rule__ReadRegister__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4163:1: rule__ReadRegister__Group__0__Impl : ( 'rdax' ) ;
    public final void rule__ReadRegister__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4167:1: ( ( 'rdax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4168:1: ( 'rdax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4168:1: ( 'rdax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4169:1: 'rdax'
            {
             before(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); 
            match(input,33,FOLLOW_33_in_rule__ReadRegister__Group__0__Impl8735); 
             after(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__0__Impl"


    // $ANTLR start "rule__ReadRegister__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4182:1: rule__ReadRegister__Group__1 : rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2 ;
    public final void rule__ReadRegister__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4186:1: ( rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4187:2: rule__ReadRegister__Group__1__Impl rule__ReadRegister__Group__2
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__1__Impl_in_rule__ReadRegister__Group__18766);
            rule__ReadRegister__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__2_in_rule__ReadRegister__Group__18769);
            rule__ReadRegister__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__1"


    // $ANTLR start "rule__ReadRegister__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4194:1: rule__ReadRegister__Group__1__Impl : ( ( rule__ReadRegister__Arg1Assignment_1 ) ) ;
    public final void rule__ReadRegister__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4198:1: ( ( ( rule__ReadRegister__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4199:1: ( ( rule__ReadRegister__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4199:1: ( ( rule__ReadRegister__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4200:1: ( rule__ReadRegister__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4201:1: ( rule__ReadRegister__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4201:2: rule__ReadRegister__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadRegister__Arg1Assignment_1_in_rule__ReadRegister__Group__1__Impl8796);
            rule__ReadRegister__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__1__Impl"


    // $ANTLR start "rule__ReadRegister__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4211:1: rule__ReadRegister__Group__2 : rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3 ;
    public final void rule__ReadRegister__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4215:1: ( rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4216:2: rule__ReadRegister__Group__2__Impl rule__ReadRegister__Group__3
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__2__Impl_in_rule__ReadRegister__Group__28826);
            rule__ReadRegister__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegister__Group__3_in_rule__ReadRegister__Group__28829);
            rule__ReadRegister__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__2"


    // $ANTLR start "rule__ReadRegister__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4223:1: rule__ReadRegister__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadRegister__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4227:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4228:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4228:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4229:1: ','
            {
             before(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__ReadRegister__Group__2__Impl8857); 
             after(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__2__Impl"


    // $ANTLR start "rule__ReadRegister__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4242:1: rule__ReadRegister__Group__3 : rule__ReadRegister__Group__3__Impl ;
    public final void rule__ReadRegister__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4246:1: ( rule__ReadRegister__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4247:2: rule__ReadRegister__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadRegister__Group__3__Impl_in_rule__ReadRegister__Group__38888);
            rule__ReadRegister__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__3"


    // $ANTLR start "rule__ReadRegister__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4253:1: rule__ReadRegister__Group__3__Impl : ( ( rule__ReadRegister__Arg2Assignment_3 ) ) ;
    public final void rule__ReadRegister__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4257:1: ( ( ( rule__ReadRegister__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4258:1: ( ( rule__ReadRegister__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4258:1: ( ( rule__ReadRegister__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4259:1: ( rule__ReadRegister__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4260:1: ( rule__ReadRegister__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4260:2: rule__ReadRegister__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadRegister__Arg2Assignment_3_in_rule__ReadRegister__Group__3__Impl8915);
            rule__ReadRegister__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Group__3__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4278:1: rule__WriteRegisterLowshelf__Group__0 : rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1 ;
    public final void rule__WriteRegisterLowshelf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4282:1: ( rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4283:2: rule__WriteRegisterLowshelf__Group__0__Impl rule__WriteRegisterLowshelf__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__0__Impl_in_rule__WriteRegisterLowshelf__Group__08953);
            rule__WriteRegisterLowshelf__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__1_in_rule__WriteRegisterLowshelf__Group__08956);
            rule__WriteRegisterLowshelf__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__0"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4290:1: rule__WriteRegisterLowshelf__Group__0__Impl : ( 'wrlx' ) ;
    public final void rule__WriteRegisterLowshelf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4294:1: ( ( 'wrlx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4295:1: ( 'wrlx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4295:1: ( 'wrlx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4296:1: 'wrlx'
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); 
            match(input,35,FOLLOW_35_in_rule__WriteRegisterLowshelf__Group__0__Impl8984); 
             after(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__0__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4309:1: rule__WriteRegisterLowshelf__Group__1 : rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2 ;
    public final void rule__WriteRegisterLowshelf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4313:1: ( rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4314:2: rule__WriteRegisterLowshelf__Group__1__Impl rule__WriteRegisterLowshelf__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__1__Impl_in_rule__WriteRegisterLowshelf__Group__19015);
            rule__WriteRegisterLowshelf__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__2_in_rule__WriteRegisterLowshelf__Group__19018);
            rule__WriteRegisterLowshelf__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__1"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4321:1: rule__WriteRegisterLowshelf__Group__1__Impl : ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegisterLowshelf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4325:1: ( ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4326:1: ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4326:1: ( ( rule__WriteRegisterLowshelf__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4327:1: ( rule__WriteRegisterLowshelf__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4328:1: ( rule__WriteRegisterLowshelf__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4328:2: rule__WriteRegisterLowshelf__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Arg1Assignment_1_in_rule__WriteRegisterLowshelf__Group__1__Impl9045);
            rule__WriteRegisterLowshelf__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__1__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4338:1: rule__WriteRegisterLowshelf__Group__2 : rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3 ;
    public final void rule__WriteRegisterLowshelf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4342:1: ( rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4343:2: rule__WriteRegisterLowshelf__Group__2__Impl rule__WriteRegisterLowshelf__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__2__Impl_in_rule__WriteRegisterLowshelf__Group__29075);
            rule__WriteRegisterLowshelf__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__3_in_rule__WriteRegisterLowshelf__Group__29078);
            rule__WriteRegisterLowshelf__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__2"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4350:1: rule__WriteRegisterLowshelf__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegisterLowshelf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4354:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4355:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4355:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4356:1: ','
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__WriteRegisterLowshelf__Group__2__Impl9106); 
             after(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__2__Impl"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4369:1: rule__WriteRegisterLowshelf__Group__3 : rule__WriteRegisterLowshelf__Group__3__Impl ;
    public final void rule__WriteRegisterLowshelf__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4373:1: ( rule__WriteRegisterLowshelf__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4374:2: rule__WriteRegisterLowshelf__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Group__3__Impl_in_rule__WriteRegisterLowshelf__Group__39137);
            rule__WriteRegisterLowshelf__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__3"


    // $ANTLR start "rule__WriteRegisterLowshelf__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4380:1: rule__WriteRegisterLowshelf__Group__3__Impl : ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegisterLowshelf__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4384:1: ( ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4385:1: ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4385:1: ( ( rule__WriteRegisterLowshelf__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4386:1: ( rule__WriteRegisterLowshelf__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4387:1: ( rule__WriteRegisterLowshelf__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4387:2: rule__WriteRegisterLowshelf__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegisterLowshelf__Arg2Assignment_3_in_rule__WriteRegisterLowshelf__Group__3__Impl9164);
            rule__WriteRegisterLowshelf__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Group__3__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4405:1: rule__WriteRegisterHighshelf__Group__0 : rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1 ;
    public final void rule__WriteRegisterHighshelf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4409:1: ( rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4410:2: rule__WriteRegisterHighshelf__Group__0__Impl rule__WriteRegisterHighshelf__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__0__Impl_in_rule__WriteRegisterHighshelf__Group__09202);
            rule__WriteRegisterHighshelf__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__1_in_rule__WriteRegisterHighshelf__Group__09205);
            rule__WriteRegisterHighshelf__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__0"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4417:1: rule__WriteRegisterHighshelf__Group__0__Impl : ( 'wrhx' ) ;
    public final void rule__WriteRegisterHighshelf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4421:1: ( ( 'wrhx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4422:1: ( 'wrhx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4422:1: ( 'wrhx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4423:1: 'wrhx'
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); 
            match(input,36,FOLLOW_36_in_rule__WriteRegisterHighshelf__Group__0__Impl9233); 
             after(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__0__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4436:1: rule__WriteRegisterHighshelf__Group__1 : rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2 ;
    public final void rule__WriteRegisterHighshelf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4440:1: ( rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4441:2: rule__WriteRegisterHighshelf__Group__1__Impl rule__WriteRegisterHighshelf__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__1__Impl_in_rule__WriteRegisterHighshelf__Group__19264);
            rule__WriteRegisterHighshelf__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__2_in_rule__WriteRegisterHighshelf__Group__19267);
            rule__WriteRegisterHighshelf__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__1"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4448:1: rule__WriteRegisterHighshelf__Group__1__Impl : ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegisterHighshelf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4452:1: ( ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4453:1: ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4453:1: ( ( rule__WriteRegisterHighshelf__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4454:1: ( rule__WriteRegisterHighshelf__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4455:1: ( rule__WriteRegisterHighshelf__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4455:2: rule__WriteRegisterHighshelf__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Arg1Assignment_1_in_rule__WriteRegisterHighshelf__Group__1__Impl9294);
            rule__WriteRegisterHighshelf__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__1__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4465:1: rule__WriteRegisterHighshelf__Group__2 : rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3 ;
    public final void rule__WriteRegisterHighshelf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4469:1: ( rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4470:2: rule__WriteRegisterHighshelf__Group__2__Impl rule__WriteRegisterHighshelf__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__2__Impl_in_rule__WriteRegisterHighshelf__Group__29324);
            rule__WriteRegisterHighshelf__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__3_in_rule__WriteRegisterHighshelf__Group__29327);
            rule__WriteRegisterHighshelf__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__2"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4477:1: rule__WriteRegisterHighshelf__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegisterHighshelf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4481:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4482:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4482:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4483:1: ','
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__WriteRegisterHighshelf__Group__2__Impl9355); 
             after(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__2__Impl"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4496:1: rule__WriteRegisterHighshelf__Group__3 : rule__WriteRegisterHighshelf__Group__3__Impl ;
    public final void rule__WriteRegisterHighshelf__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4500:1: ( rule__WriteRegisterHighshelf__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4501:2: rule__WriteRegisterHighshelf__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Group__3__Impl_in_rule__WriteRegisterHighshelf__Group__39386);
            rule__WriteRegisterHighshelf__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__3"


    // $ANTLR start "rule__WriteRegisterHighshelf__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4507:1: rule__WriteRegisterHighshelf__Group__3__Impl : ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegisterHighshelf__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4511:1: ( ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4512:1: ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4512:1: ( ( rule__WriteRegisterHighshelf__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4513:1: ( rule__WriteRegisterHighshelf__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4514:1: ( rule__WriteRegisterHighshelf__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4514:2: rule__WriteRegisterHighshelf__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegisterHighshelf__Arg2Assignment_3_in_rule__WriteRegisterHighshelf__Group__3__Impl9413);
            rule__WriteRegisterHighshelf__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Group__3__Impl"


    // $ANTLR start "rule__WriteRegister__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4532:1: rule__WriteRegister__Group__0 : rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1 ;
    public final void rule__WriteRegister__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4536:1: ( rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4537:2: rule__WriteRegister__Group__0__Impl rule__WriteRegister__Group__1
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__0__Impl_in_rule__WriteRegister__Group__09451);
            rule__WriteRegister__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__1_in_rule__WriteRegister__Group__09454);
            rule__WriteRegister__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__0"


    // $ANTLR start "rule__WriteRegister__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4544:1: rule__WriteRegister__Group__0__Impl : ( 'wrax' ) ;
    public final void rule__WriteRegister__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4548:1: ( ( 'wrax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4549:1: ( 'wrax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4549:1: ( 'wrax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4550:1: 'wrax'
            {
             before(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); 
            match(input,37,FOLLOW_37_in_rule__WriteRegister__Group__0__Impl9482); 
             after(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__0__Impl"


    // $ANTLR start "rule__WriteRegister__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4563:1: rule__WriteRegister__Group__1 : rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2 ;
    public final void rule__WriteRegister__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4567:1: ( rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4568:2: rule__WriteRegister__Group__1__Impl rule__WriteRegister__Group__2
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__1__Impl_in_rule__WriteRegister__Group__19513);
            rule__WriteRegister__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__2_in_rule__WriteRegister__Group__19516);
            rule__WriteRegister__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__1"


    // $ANTLR start "rule__WriteRegister__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4575:1: rule__WriteRegister__Group__1__Impl : ( ( rule__WriteRegister__Arg1Assignment_1 ) ) ;
    public final void rule__WriteRegister__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4579:1: ( ( ( rule__WriteRegister__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4580:1: ( ( rule__WriteRegister__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4580:1: ( ( rule__WriteRegister__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4581:1: ( rule__WriteRegister__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4582:1: ( rule__WriteRegister__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4582:2: rule__WriteRegister__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteRegister__Arg1Assignment_1_in_rule__WriteRegister__Group__1__Impl9543);
            rule__WriteRegister__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__1__Impl"


    // $ANTLR start "rule__WriteRegister__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4592:1: rule__WriteRegister__Group__2 : rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3 ;
    public final void rule__WriteRegister__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4596:1: ( rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4597:2: rule__WriteRegister__Group__2__Impl rule__WriteRegister__Group__3
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__2__Impl_in_rule__WriteRegister__Group__29573);
            rule__WriteRegister__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteRegister__Group__3_in_rule__WriteRegister__Group__29576);
            rule__WriteRegister__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__2"


    // $ANTLR start "rule__WriteRegister__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4604:1: rule__WriteRegister__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteRegister__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4608:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4609:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4609:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4610:1: ','
            {
             before(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__WriteRegister__Group__2__Impl9604); 
             after(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__2__Impl"


    // $ANTLR start "rule__WriteRegister__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4623:1: rule__WriteRegister__Group__3 : rule__WriteRegister__Group__3__Impl ;
    public final void rule__WriteRegister__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4627:1: ( rule__WriteRegister__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4628:2: rule__WriteRegister__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteRegister__Group__3__Impl_in_rule__WriteRegister__Group__39635);
            rule__WriteRegister__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__3"


    // $ANTLR start "rule__WriteRegister__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4634:1: rule__WriteRegister__Group__3__Impl : ( ( rule__WriteRegister__Arg2Assignment_3 ) ) ;
    public final void rule__WriteRegister__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4638:1: ( ( ( rule__WriteRegister__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4639:1: ( ( rule__WriteRegister__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4639:1: ( ( rule__WriteRegister__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4640:1: ( rule__WriteRegister__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4641:1: ( rule__WriteRegister__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4641:2: rule__WriteRegister__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteRegister__Arg2Assignment_3_in_rule__WriteRegister__Group__3__Impl9662);
            rule__WriteRegister__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Group__3__Impl"


    // $ANTLR start "rule__Maxx__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4659:1: rule__Maxx__Group__0 : rule__Maxx__Group__0__Impl rule__Maxx__Group__1 ;
    public final void rule__Maxx__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4663:1: ( rule__Maxx__Group__0__Impl rule__Maxx__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4664:2: rule__Maxx__Group__0__Impl rule__Maxx__Group__1
            {
            pushFollow(FOLLOW_rule__Maxx__Group__0__Impl_in_rule__Maxx__Group__09700);
            rule__Maxx__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__1_in_rule__Maxx__Group__09703);
            rule__Maxx__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__0"


    // $ANTLR start "rule__Maxx__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4671:1: rule__Maxx__Group__0__Impl : ( 'maxx' ) ;
    public final void rule__Maxx__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4675:1: ( ( 'maxx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4676:1: ( 'maxx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4676:1: ( 'maxx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4677:1: 'maxx'
            {
             before(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); 
            match(input,38,FOLLOW_38_in_rule__Maxx__Group__0__Impl9731); 
             after(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__0__Impl"


    // $ANTLR start "rule__Maxx__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4690:1: rule__Maxx__Group__1 : rule__Maxx__Group__1__Impl rule__Maxx__Group__2 ;
    public final void rule__Maxx__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4694:1: ( rule__Maxx__Group__1__Impl rule__Maxx__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4695:2: rule__Maxx__Group__1__Impl rule__Maxx__Group__2
            {
            pushFollow(FOLLOW_rule__Maxx__Group__1__Impl_in_rule__Maxx__Group__19762);
            rule__Maxx__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__2_in_rule__Maxx__Group__19765);
            rule__Maxx__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__1"


    // $ANTLR start "rule__Maxx__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4702:1: rule__Maxx__Group__1__Impl : ( ( rule__Maxx__Arg1Assignment_1 ) ) ;
    public final void rule__Maxx__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4706:1: ( ( ( rule__Maxx__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4707:1: ( ( rule__Maxx__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4707:1: ( ( rule__Maxx__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4708:1: ( rule__Maxx__Arg1Assignment_1 )
            {
             before(grammarAccess.getMaxxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4709:1: ( rule__Maxx__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4709:2: rule__Maxx__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Maxx__Arg1Assignment_1_in_rule__Maxx__Group__1__Impl9792);
            rule__Maxx__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__1__Impl"


    // $ANTLR start "rule__Maxx__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4719:1: rule__Maxx__Group__2 : rule__Maxx__Group__2__Impl rule__Maxx__Group__3 ;
    public final void rule__Maxx__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4723:1: ( rule__Maxx__Group__2__Impl rule__Maxx__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4724:2: rule__Maxx__Group__2__Impl rule__Maxx__Group__3
            {
            pushFollow(FOLLOW_rule__Maxx__Group__2__Impl_in_rule__Maxx__Group__29822);
            rule__Maxx__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Maxx__Group__3_in_rule__Maxx__Group__29825);
            rule__Maxx__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__2"


    // $ANTLR start "rule__Maxx__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4731:1: rule__Maxx__Group__2__Impl : ( ',' ) ;
    public final void rule__Maxx__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4735:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4736:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4736:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4737:1: ','
            {
             before(grammarAccess.getMaxxAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__Maxx__Group__2__Impl9853); 
             after(grammarAccess.getMaxxAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__2__Impl"


    // $ANTLR start "rule__Maxx__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4750:1: rule__Maxx__Group__3 : rule__Maxx__Group__3__Impl ;
    public final void rule__Maxx__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4754:1: ( rule__Maxx__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4755:2: rule__Maxx__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Maxx__Group__3__Impl_in_rule__Maxx__Group__39884);
            rule__Maxx__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__3"


    // $ANTLR start "rule__Maxx__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4761:1: rule__Maxx__Group__3__Impl : ( ( rule__Maxx__Arg2Assignment_3 ) ) ;
    public final void rule__Maxx__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4765:1: ( ( ( rule__Maxx__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4766:1: ( ( rule__Maxx__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4766:1: ( ( rule__Maxx__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4767:1: ( rule__Maxx__Arg2Assignment_3 )
            {
             before(grammarAccess.getMaxxAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4768:1: ( rule__Maxx__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4768:2: rule__Maxx__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Maxx__Arg2Assignment_3_in_rule__Maxx__Group__3__Impl9911);
            rule__Maxx__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getMaxxAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Group__3__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4786:1: rule__ReadRegisterFilter__Group__0 : rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1 ;
    public final void rule__ReadRegisterFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4790:1: ( rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4791:2: rule__ReadRegisterFilter__Group__0__Impl rule__ReadRegisterFilter__Group__1
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__0__Impl_in_rule__ReadRegisterFilter__Group__09949);
            rule__ReadRegisterFilter__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__1_in_rule__ReadRegisterFilter__Group__09952);
            rule__ReadRegisterFilter__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__0"


    // $ANTLR start "rule__ReadRegisterFilter__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4798:1: rule__ReadRegisterFilter__Group__0__Impl : ( 'rdfx' ) ;
    public final void rule__ReadRegisterFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4802:1: ( ( 'rdfx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4803:1: ( 'rdfx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4803:1: ( 'rdfx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4804:1: 'rdfx'
            {
             before(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); 
            match(input,39,FOLLOW_39_in_rule__ReadRegisterFilter__Group__0__Impl9980); 
             after(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__0__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4817:1: rule__ReadRegisterFilter__Group__1 : rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2 ;
    public final void rule__ReadRegisterFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4821:1: ( rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4822:2: rule__ReadRegisterFilter__Group__1__Impl rule__ReadRegisterFilter__Group__2
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__1__Impl_in_rule__ReadRegisterFilter__Group__110011);
            rule__ReadRegisterFilter__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__2_in_rule__ReadRegisterFilter__Group__110014);
            rule__ReadRegisterFilter__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__1"


    // $ANTLR start "rule__ReadRegisterFilter__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4829:1: rule__ReadRegisterFilter__Group__1__Impl : ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) ) ;
    public final void rule__ReadRegisterFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4833:1: ( ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4834:1: ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4834:1: ( ( rule__ReadRegisterFilter__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4835:1: ( rule__ReadRegisterFilter__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4836:1: ( rule__ReadRegisterFilter__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4836:2: rule__ReadRegisterFilter__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Arg1Assignment_1_in_rule__ReadRegisterFilter__Group__1__Impl10041);
            rule__ReadRegisterFilter__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__1__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4846:1: rule__ReadRegisterFilter__Group__2 : rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3 ;
    public final void rule__ReadRegisterFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4850:1: ( rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4851:2: rule__ReadRegisterFilter__Group__2__Impl rule__ReadRegisterFilter__Group__3
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__2__Impl_in_rule__ReadRegisterFilter__Group__210071);
            rule__ReadRegisterFilter__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__3_in_rule__ReadRegisterFilter__Group__210074);
            rule__ReadRegisterFilter__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__2"


    // $ANTLR start "rule__ReadRegisterFilter__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4858:1: rule__ReadRegisterFilter__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadRegisterFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4862:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4863:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4863:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4864:1: ','
            {
             before(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__ReadRegisterFilter__Group__2__Impl10102); 
             after(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__2__Impl"


    // $ANTLR start "rule__ReadRegisterFilter__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4877:1: rule__ReadRegisterFilter__Group__3 : rule__ReadRegisterFilter__Group__3__Impl ;
    public final void rule__ReadRegisterFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4881:1: ( rule__ReadRegisterFilter__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4882:2: rule__ReadRegisterFilter__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Group__3__Impl_in_rule__ReadRegisterFilter__Group__310133);
            rule__ReadRegisterFilter__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__3"


    // $ANTLR start "rule__ReadRegisterFilter__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4888:1: rule__ReadRegisterFilter__Group__3__Impl : ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) ) ;
    public final void rule__ReadRegisterFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4892:1: ( ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4893:1: ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4893:1: ( ( rule__ReadRegisterFilter__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4894:1: ( rule__ReadRegisterFilter__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4895:1: ( rule__ReadRegisterFilter__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4895:2: rule__ReadRegisterFilter__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadRegisterFilter__Arg2Assignment_3_in_rule__ReadRegisterFilter__Group__3__Impl10160);
            rule__ReadRegisterFilter__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Group__3__Impl"


    // $ANTLR start "rule__Mulx__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4913:1: rule__Mulx__Group__0 : rule__Mulx__Group__0__Impl rule__Mulx__Group__1 ;
    public final void rule__Mulx__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4917:1: ( rule__Mulx__Group__0__Impl rule__Mulx__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4918:2: rule__Mulx__Group__0__Impl rule__Mulx__Group__1
            {
            pushFollow(FOLLOW_rule__Mulx__Group__0__Impl_in_rule__Mulx__Group__010198);
            rule__Mulx__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mulx__Group__1_in_rule__Mulx__Group__010201);
            rule__Mulx__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__0"


    // $ANTLR start "rule__Mulx__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4925:1: rule__Mulx__Group__0__Impl : ( 'mulx' ) ;
    public final void rule__Mulx__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4929:1: ( ( 'mulx' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4930:1: ( 'mulx' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4930:1: ( 'mulx' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4931:1: 'mulx'
            {
             before(grammarAccess.getMulxAccess().getMulxKeyword_0()); 
            match(input,40,FOLLOW_40_in_rule__Mulx__Group__0__Impl10229); 
             after(grammarAccess.getMulxAccess().getMulxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__0__Impl"


    // $ANTLR start "rule__Mulx__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4944:1: rule__Mulx__Group__1 : rule__Mulx__Group__1__Impl ;
    public final void rule__Mulx__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4948:1: ( rule__Mulx__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4949:2: rule__Mulx__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Mulx__Group__1__Impl_in_rule__Mulx__Group__110260);
            rule__Mulx__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__1"


    // $ANTLR start "rule__Mulx__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4955:1: rule__Mulx__Group__1__Impl : ( ( rule__Mulx__Arg1Assignment_1 ) ) ;
    public final void rule__Mulx__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4959:1: ( ( ( rule__Mulx__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4960:1: ( ( rule__Mulx__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4960:1: ( ( rule__Mulx__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4961:1: ( rule__Mulx__Arg1Assignment_1 )
            {
             before(grammarAccess.getMulxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4962:1: ( rule__Mulx__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4962:2: rule__Mulx__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Mulx__Arg1Assignment_1_in_rule__Mulx__Group__1__Impl10287);
            rule__Mulx__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getMulxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Group__1__Impl"


    // $ANTLR start "rule__Ldax__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4976:1: rule__Ldax__Group__0 : rule__Ldax__Group__0__Impl rule__Ldax__Group__1 ;
    public final void rule__Ldax__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4980:1: ( rule__Ldax__Group__0__Impl rule__Ldax__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4981:2: rule__Ldax__Group__0__Impl rule__Ldax__Group__1
            {
            pushFollow(FOLLOW_rule__Ldax__Group__0__Impl_in_rule__Ldax__Group__010321);
            rule__Ldax__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Ldax__Group__1_in_rule__Ldax__Group__010324);
            rule__Ldax__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__0"


    // $ANTLR start "rule__Ldax__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4988:1: rule__Ldax__Group__0__Impl : ( 'ldax' ) ;
    public final void rule__Ldax__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4992:1: ( ( 'ldax' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4993:1: ( 'ldax' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4993:1: ( 'ldax' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:4994:1: 'ldax'
            {
             before(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); 
            match(input,41,FOLLOW_41_in_rule__Ldax__Group__0__Impl10352); 
             after(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__0__Impl"


    // $ANTLR start "rule__Ldax__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5007:1: rule__Ldax__Group__1 : rule__Ldax__Group__1__Impl ;
    public final void rule__Ldax__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5011:1: ( rule__Ldax__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5012:2: rule__Ldax__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Ldax__Group__1__Impl_in_rule__Ldax__Group__110383);
            rule__Ldax__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__1"


    // $ANTLR start "rule__Ldax__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5018:1: rule__Ldax__Group__1__Impl : ( ( rule__Ldax__Arg1Assignment_1 ) ) ;
    public final void rule__Ldax__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5022:1: ( ( ( rule__Ldax__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5023:1: ( ( rule__Ldax__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5023:1: ( ( rule__Ldax__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5024:1: ( rule__Ldax__Arg1Assignment_1 )
            {
             before(grammarAccess.getLdaxAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5025:1: ( rule__Ldax__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5025:2: rule__Ldax__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Ldax__Arg1Assignment_1_in_rule__Ldax__Group__1__Impl10410);
            rule__Ldax__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLdaxAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Group__1__Impl"


    // $ANTLR start "rule__Exp__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5039:1: rule__Exp__Group__0 : rule__Exp__Group__0__Impl rule__Exp__Group__1 ;
    public final void rule__Exp__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5043:1: ( rule__Exp__Group__0__Impl rule__Exp__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5044:2: rule__Exp__Group__0__Impl rule__Exp__Group__1
            {
            pushFollow(FOLLOW_rule__Exp__Group__0__Impl_in_rule__Exp__Group__010444);
            rule__Exp__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__1_in_rule__Exp__Group__010447);
            rule__Exp__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__0"


    // $ANTLR start "rule__Exp__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5051:1: rule__Exp__Group__0__Impl : ( 'exp' ) ;
    public final void rule__Exp__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5055:1: ( ( 'exp' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5056:1: ( 'exp' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5056:1: ( 'exp' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5057:1: 'exp'
            {
             before(grammarAccess.getExpAccess().getExpKeyword_0()); 
            match(input,42,FOLLOW_42_in_rule__Exp__Group__0__Impl10475); 
             after(grammarAccess.getExpAccess().getExpKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__0__Impl"


    // $ANTLR start "rule__Exp__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5070:1: rule__Exp__Group__1 : rule__Exp__Group__1__Impl rule__Exp__Group__2 ;
    public final void rule__Exp__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5074:1: ( rule__Exp__Group__1__Impl rule__Exp__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5075:2: rule__Exp__Group__1__Impl rule__Exp__Group__2
            {
            pushFollow(FOLLOW_rule__Exp__Group__1__Impl_in_rule__Exp__Group__110506);
            rule__Exp__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__2_in_rule__Exp__Group__110509);
            rule__Exp__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__1"


    // $ANTLR start "rule__Exp__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5082:1: rule__Exp__Group__1__Impl : ( ( rule__Exp__Arg1Assignment_1 ) ) ;
    public final void rule__Exp__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5086:1: ( ( ( rule__Exp__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5087:1: ( ( rule__Exp__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5087:1: ( ( rule__Exp__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5088:1: ( rule__Exp__Arg1Assignment_1 )
            {
             before(grammarAccess.getExpAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5089:1: ( rule__Exp__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5089:2: rule__Exp__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Exp__Arg1Assignment_1_in_rule__Exp__Group__1__Impl10536);
            rule__Exp__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__1__Impl"


    // $ANTLR start "rule__Exp__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5099:1: rule__Exp__Group__2 : rule__Exp__Group__2__Impl rule__Exp__Group__3 ;
    public final void rule__Exp__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5103:1: ( rule__Exp__Group__2__Impl rule__Exp__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5104:2: rule__Exp__Group__2__Impl rule__Exp__Group__3
            {
            pushFollow(FOLLOW_rule__Exp__Group__2__Impl_in_rule__Exp__Group__210566);
            rule__Exp__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Exp__Group__3_in_rule__Exp__Group__210569);
            rule__Exp__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__2"


    // $ANTLR start "rule__Exp__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5111:1: rule__Exp__Group__2__Impl : ( ',' ) ;
    public final void rule__Exp__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5115:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5116:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5116:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5117:1: ','
            {
             before(grammarAccess.getExpAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__Exp__Group__2__Impl10597); 
             after(grammarAccess.getExpAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__2__Impl"


    // $ANTLR start "rule__Exp__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5130:1: rule__Exp__Group__3 : rule__Exp__Group__3__Impl ;
    public final void rule__Exp__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5134:1: ( rule__Exp__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5135:2: rule__Exp__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Exp__Group__3__Impl_in_rule__Exp__Group__310628);
            rule__Exp__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__3"


    // $ANTLR start "rule__Exp__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5141:1: rule__Exp__Group__3__Impl : ( ( rule__Exp__Arg2Assignment_3 ) ) ;
    public final void rule__Exp__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5145:1: ( ( ( rule__Exp__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5146:1: ( ( rule__Exp__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5146:1: ( ( rule__Exp__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5147:1: ( rule__Exp__Arg2Assignment_3 )
            {
             before(grammarAccess.getExpAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5148:1: ( rule__Exp__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5148:2: rule__Exp__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Exp__Arg2Assignment_3_in_rule__Exp__Group__3__Impl10655);
            rule__Exp__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getExpAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Group__3__Impl"


    // $ANTLR start "rule__Log__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5166:1: rule__Log__Group__0 : rule__Log__Group__0__Impl rule__Log__Group__1 ;
    public final void rule__Log__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5170:1: ( rule__Log__Group__0__Impl rule__Log__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5171:2: rule__Log__Group__0__Impl rule__Log__Group__1
            {
            pushFollow(FOLLOW_rule__Log__Group__0__Impl_in_rule__Log__Group__010693);
            rule__Log__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__1_in_rule__Log__Group__010696);
            rule__Log__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__0"


    // $ANTLR start "rule__Log__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5178:1: rule__Log__Group__0__Impl : ( 'log' ) ;
    public final void rule__Log__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5182:1: ( ( 'log' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5183:1: ( 'log' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5183:1: ( 'log' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5184:1: 'log'
            {
             before(grammarAccess.getLogAccess().getLogKeyword_0()); 
            match(input,43,FOLLOW_43_in_rule__Log__Group__0__Impl10724); 
             after(grammarAccess.getLogAccess().getLogKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__0__Impl"


    // $ANTLR start "rule__Log__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5197:1: rule__Log__Group__1 : rule__Log__Group__1__Impl rule__Log__Group__2 ;
    public final void rule__Log__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5201:1: ( rule__Log__Group__1__Impl rule__Log__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5202:2: rule__Log__Group__1__Impl rule__Log__Group__2
            {
            pushFollow(FOLLOW_rule__Log__Group__1__Impl_in_rule__Log__Group__110755);
            rule__Log__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__2_in_rule__Log__Group__110758);
            rule__Log__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__1"


    // $ANTLR start "rule__Log__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5209:1: rule__Log__Group__1__Impl : ( ( rule__Log__Arg1Assignment_1 ) ) ;
    public final void rule__Log__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5213:1: ( ( ( rule__Log__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5214:1: ( ( rule__Log__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5214:1: ( ( rule__Log__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5215:1: ( rule__Log__Arg1Assignment_1 )
            {
             before(grammarAccess.getLogAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5216:1: ( rule__Log__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5216:2: rule__Log__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Log__Arg1Assignment_1_in_rule__Log__Group__1__Impl10785);
            rule__Log__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__1__Impl"


    // $ANTLR start "rule__Log__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5226:1: rule__Log__Group__2 : rule__Log__Group__2__Impl rule__Log__Group__3 ;
    public final void rule__Log__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5230:1: ( rule__Log__Group__2__Impl rule__Log__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5231:2: rule__Log__Group__2__Impl rule__Log__Group__3
            {
            pushFollow(FOLLOW_rule__Log__Group__2__Impl_in_rule__Log__Group__210815);
            rule__Log__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Log__Group__3_in_rule__Log__Group__210818);
            rule__Log__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__2"


    // $ANTLR start "rule__Log__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5238:1: rule__Log__Group__2__Impl : ( ',' ) ;
    public final void rule__Log__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5242:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5243:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5243:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5244:1: ','
            {
             before(grammarAccess.getLogAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__Log__Group__2__Impl10846); 
             after(grammarAccess.getLogAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__2__Impl"


    // $ANTLR start "rule__Log__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5257:1: rule__Log__Group__3 : rule__Log__Group__3__Impl ;
    public final void rule__Log__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5261:1: ( rule__Log__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5262:2: rule__Log__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Log__Group__3__Impl_in_rule__Log__Group__310877);
            rule__Log__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__3"


    // $ANTLR start "rule__Log__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5268:1: rule__Log__Group__3__Impl : ( ( rule__Log__Arg2Assignment_3 ) ) ;
    public final void rule__Log__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5272:1: ( ( ( rule__Log__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5273:1: ( ( rule__Log__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5273:1: ( ( rule__Log__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5274:1: ( rule__Log__Arg2Assignment_3 )
            {
             before(grammarAccess.getLogAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5275:1: ( rule__Log__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5275:2: rule__Log__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__Log__Arg2Assignment_3_in_rule__Log__Group__3__Impl10904);
            rule__Log__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLogAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Group__3__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5293:1: rule__ScaleOffset__Group__0 : rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1 ;
    public final void rule__ScaleOffset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5297:1: ( rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5298:2: rule__ScaleOffset__Group__0__Impl rule__ScaleOffset__Group__1
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__0__Impl_in_rule__ScaleOffset__Group__010942);
            rule__ScaleOffset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__1_in_rule__ScaleOffset__Group__010945);
            rule__ScaleOffset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__0"


    // $ANTLR start "rule__ScaleOffset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5305:1: rule__ScaleOffset__Group__0__Impl : ( 'sof' ) ;
    public final void rule__ScaleOffset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5309:1: ( ( 'sof' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5310:1: ( 'sof' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5310:1: ( 'sof' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5311:1: 'sof'
            {
             before(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); 
            match(input,44,FOLLOW_44_in_rule__ScaleOffset__Group__0__Impl10973); 
             after(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__0__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5324:1: rule__ScaleOffset__Group__1 : rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2 ;
    public final void rule__ScaleOffset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5328:1: ( rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5329:2: rule__ScaleOffset__Group__1__Impl rule__ScaleOffset__Group__2
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__1__Impl_in_rule__ScaleOffset__Group__111004);
            rule__ScaleOffset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__2_in_rule__ScaleOffset__Group__111007);
            rule__ScaleOffset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__1"


    // $ANTLR start "rule__ScaleOffset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5336:1: rule__ScaleOffset__Group__1__Impl : ( ( rule__ScaleOffset__Arg1Assignment_1 ) ) ;
    public final void rule__ScaleOffset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5340:1: ( ( ( rule__ScaleOffset__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5341:1: ( ( rule__ScaleOffset__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5341:1: ( ( rule__ScaleOffset__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5342:1: ( rule__ScaleOffset__Arg1Assignment_1 )
            {
             before(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5343:1: ( rule__ScaleOffset__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5343:2: rule__ScaleOffset__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Arg1Assignment_1_in_rule__ScaleOffset__Group__1__Impl11034);
            rule__ScaleOffset__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__1__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5353:1: rule__ScaleOffset__Group__2 : rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3 ;
    public final void rule__ScaleOffset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5357:1: ( rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5358:2: rule__ScaleOffset__Group__2__Impl rule__ScaleOffset__Group__3
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__2__Impl_in_rule__ScaleOffset__Group__211064);
            rule__ScaleOffset__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ScaleOffset__Group__3_in_rule__ScaleOffset__Group__211067);
            rule__ScaleOffset__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__2"


    // $ANTLR start "rule__ScaleOffset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5365:1: rule__ScaleOffset__Group__2__Impl : ( ',' ) ;
    public final void rule__ScaleOffset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5369:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5370:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5370:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5371:1: ','
            {
             before(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__ScaleOffset__Group__2__Impl11095); 
             after(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__2__Impl"


    // $ANTLR start "rule__ScaleOffset__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5384:1: rule__ScaleOffset__Group__3 : rule__ScaleOffset__Group__3__Impl ;
    public final void rule__ScaleOffset__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5388:1: ( rule__ScaleOffset__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5389:2: rule__ScaleOffset__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Group__3__Impl_in_rule__ScaleOffset__Group__311126);
            rule__ScaleOffset__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__3"


    // $ANTLR start "rule__ScaleOffset__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5395:1: rule__ScaleOffset__Group__3__Impl : ( ( rule__ScaleOffset__Arg2Assignment_3 ) ) ;
    public final void rule__ScaleOffset__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5399:1: ( ( ( rule__ScaleOffset__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5400:1: ( ( rule__ScaleOffset__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5400:1: ( ( rule__ScaleOffset__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5401:1: ( rule__ScaleOffset__Arg2Assignment_3 )
            {
             before(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5402:1: ( rule__ScaleOffset__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5402:2: rule__ScaleOffset__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ScaleOffset__Arg2Assignment_3_in_rule__ScaleOffset__Group__3__Impl11153);
            rule__ScaleOffset__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Group__3__Impl"


    // $ANTLR start "rule__WriteDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5420:1: rule__WriteDelay__Group__0 : rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1 ;
    public final void rule__WriteDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5424:1: ( rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5425:2: rule__WriteDelay__Group__0__Impl rule__WriteDelay__Group__1
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__0__Impl_in_rule__WriteDelay__Group__011191);
            rule__WriteDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__1_in_rule__WriteDelay__Group__011194);
            rule__WriteDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__0"


    // $ANTLR start "rule__WriteDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5432:1: rule__WriteDelay__Group__0__Impl : ( 'wra' ) ;
    public final void rule__WriteDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5436:1: ( ( 'wra' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5437:1: ( 'wra' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5437:1: ( 'wra' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5438:1: 'wra'
            {
             before(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); 
            match(input,45,FOLLOW_45_in_rule__WriteDelay__Group__0__Impl11222); 
             after(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__0__Impl"


    // $ANTLR start "rule__WriteDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5451:1: rule__WriteDelay__Group__1 : rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2 ;
    public final void rule__WriteDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5455:1: ( rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5456:2: rule__WriteDelay__Group__1__Impl rule__WriteDelay__Group__2
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__1__Impl_in_rule__WriteDelay__Group__111253);
            rule__WriteDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__2_in_rule__WriteDelay__Group__111256);
            rule__WriteDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__1"


    // $ANTLR start "rule__WriteDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5463:1: rule__WriteDelay__Group__1__Impl : ( ( rule__WriteDelay__Arg1Assignment_1 ) ) ;
    public final void rule__WriteDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5467:1: ( ( ( rule__WriteDelay__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5468:1: ( ( rule__WriteDelay__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5468:1: ( ( rule__WriteDelay__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5469:1: ( rule__WriteDelay__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5470:1: ( rule__WriteDelay__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5470:2: rule__WriteDelay__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteDelay__Arg1Assignment_1_in_rule__WriteDelay__Group__1__Impl11283);
            rule__WriteDelay__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__1__Impl"


    // $ANTLR start "rule__WriteDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5480:1: rule__WriteDelay__Group__2 : rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3 ;
    public final void rule__WriteDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5484:1: ( rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5485:2: rule__WriteDelay__Group__2__Impl rule__WriteDelay__Group__3
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__2__Impl_in_rule__WriteDelay__Group__211313);
            rule__WriteDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteDelay__Group__3_in_rule__WriteDelay__Group__211316);
            rule__WriteDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__2"


    // $ANTLR start "rule__WriteDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5492:1: rule__WriteDelay__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5496:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5497:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5497:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5498:1: ','
            {
             before(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__WriteDelay__Group__2__Impl11344); 
             after(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__2__Impl"


    // $ANTLR start "rule__WriteDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5511:1: rule__WriteDelay__Group__3 : rule__WriteDelay__Group__3__Impl ;
    public final void rule__WriteDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5515:1: ( rule__WriteDelay__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5516:2: rule__WriteDelay__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteDelay__Group__3__Impl_in_rule__WriteDelay__Group__311375);
            rule__WriteDelay__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__3"


    // $ANTLR start "rule__WriteDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5522:1: rule__WriteDelay__Group__3__Impl : ( ( rule__WriteDelay__Arg2Assignment_3 ) ) ;
    public final void rule__WriteDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5526:1: ( ( ( rule__WriteDelay__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5527:1: ( ( rule__WriteDelay__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5527:1: ( ( rule__WriteDelay__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5528:1: ( rule__WriteDelay__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5529:1: ( rule__WriteDelay__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5529:2: rule__WriteDelay__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteDelay__Arg2Assignment_3_in_rule__WriteDelay__Group__3__Impl11402);
            rule__WriteDelay__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Group__3__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5547:1: rule__WriteAllpass__Group__0 : rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1 ;
    public final void rule__WriteAllpass__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5551:1: ( rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5552:2: rule__WriteAllpass__Group__0__Impl rule__WriteAllpass__Group__1
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__0__Impl_in_rule__WriteAllpass__Group__011440);
            rule__WriteAllpass__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__1_in_rule__WriteAllpass__Group__011443);
            rule__WriteAllpass__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__0"


    // $ANTLR start "rule__WriteAllpass__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5559:1: rule__WriteAllpass__Group__0__Impl : ( 'wrap' ) ;
    public final void rule__WriteAllpass__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5563:1: ( ( 'wrap' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5564:1: ( 'wrap' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5564:1: ( 'wrap' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5565:1: 'wrap'
            {
             before(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); 
            match(input,46,FOLLOW_46_in_rule__WriteAllpass__Group__0__Impl11471); 
             after(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__0__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5578:1: rule__WriteAllpass__Group__1 : rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2 ;
    public final void rule__WriteAllpass__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5582:1: ( rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5583:2: rule__WriteAllpass__Group__1__Impl rule__WriteAllpass__Group__2
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__1__Impl_in_rule__WriteAllpass__Group__111502);
            rule__WriteAllpass__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__2_in_rule__WriteAllpass__Group__111505);
            rule__WriteAllpass__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__1"


    // $ANTLR start "rule__WriteAllpass__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5590:1: rule__WriteAllpass__Group__1__Impl : ( ( rule__WriteAllpass__Arg1Assignment_1 ) ) ;
    public final void rule__WriteAllpass__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5594:1: ( ( ( rule__WriteAllpass__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5595:1: ( ( rule__WriteAllpass__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5595:1: ( ( rule__WriteAllpass__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5596:1: ( rule__WriteAllpass__Arg1Assignment_1 )
            {
             before(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5597:1: ( rule__WriteAllpass__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5597:2: rule__WriteAllpass__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Arg1Assignment_1_in_rule__WriteAllpass__Group__1__Impl11532);
            rule__WriteAllpass__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__1__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5607:1: rule__WriteAllpass__Group__2 : rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3 ;
    public final void rule__WriteAllpass__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5611:1: ( rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5612:2: rule__WriteAllpass__Group__2__Impl rule__WriteAllpass__Group__3
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__2__Impl_in_rule__WriteAllpass__Group__211562);
            rule__WriteAllpass__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WriteAllpass__Group__3_in_rule__WriteAllpass__Group__211565);
            rule__WriteAllpass__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__2"


    // $ANTLR start "rule__WriteAllpass__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5619:1: rule__WriteAllpass__Group__2__Impl : ( ',' ) ;
    public final void rule__WriteAllpass__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5623:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5624:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5624:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5625:1: ','
            {
             before(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__WriteAllpass__Group__2__Impl11593); 
             after(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__2__Impl"


    // $ANTLR start "rule__WriteAllpass__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5638:1: rule__WriteAllpass__Group__3 : rule__WriteAllpass__Group__3__Impl ;
    public final void rule__WriteAllpass__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5642:1: ( rule__WriteAllpass__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5643:2: rule__WriteAllpass__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Group__3__Impl_in_rule__WriteAllpass__Group__311624);
            rule__WriteAllpass__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__3"


    // $ANTLR start "rule__WriteAllpass__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5649:1: rule__WriteAllpass__Group__3__Impl : ( ( rule__WriteAllpass__Arg2Assignment_3 ) ) ;
    public final void rule__WriteAllpass__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5653:1: ( ( ( rule__WriteAllpass__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5654:1: ( ( rule__WriteAllpass__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5654:1: ( ( rule__WriteAllpass__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5655:1: ( rule__WriteAllpass__Arg2Assignment_3 )
            {
             before(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5656:1: ( rule__WriteAllpass__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5656:2: rule__WriteAllpass__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__WriteAllpass__Arg2Assignment_3_in_rule__WriteAllpass__Group__3__Impl11651);
            rule__WriteAllpass__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Group__3__Impl"


    // $ANTLR start "rule__ReadDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5674:1: rule__ReadDelay__Group__0 : rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1 ;
    public final void rule__ReadDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5678:1: ( rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5679:2: rule__ReadDelay__Group__0__Impl rule__ReadDelay__Group__1
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__0__Impl_in_rule__ReadDelay__Group__011689);
            rule__ReadDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__1_in_rule__ReadDelay__Group__011692);
            rule__ReadDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__0"


    // $ANTLR start "rule__ReadDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5686:1: rule__ReadDelay__Group__0__Impl : ( 'rda' ) ;
    public final void rule__ReadDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5690:1: ( ( 'rda' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5691:1: ( 'rda' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5691:1: ( 'rda' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5692:1: 'rda'
            {
             before(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); 
            match(input,47,FOLLOW_47_in_rule__ReadDelay__Group__0__Impl11720); 
             after(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__0__Impl"


    // $ANTLR start "rule__ReadDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5705:1: rule__ReadDelay__Group__1 : rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2 ;
    public final void rule__ReadDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5709:1: ( rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5710:2: rule__ReadDelay__Group__1__Impl rule__ReadDelay__Group__2
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__1__Impl_in_rule__ReadDelay__Group__111751);
            rule__ReadDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__2_in_rule__ReadDelay__Group__111754);
            rule__ReadDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__1"


    // $ANTLR start "rule__ReadDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5717:1: rule__ReadDelay__Group__1__Impl : ( ( rule__ReadDelay__Arg1Assignment_1 ) ) ;
    public final void rule__ReadDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5721:1: ( ( ( rule__ReadDelay__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5722:1: ( ( rule__ReadDelay__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5722:1: ( ( rule__ReadDelay__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5723:1: ( rule__ReadDelay__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5724:1: ( rule__ReadDelay__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5724:2: rule__ReadDelay__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadDelay__Arg1Assignment_1_in_rule__ReadDelay__Group__1__Impl11781);
            rule__ReadDelay__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__1__Impl"


    // $ANTLR start "rule__ReadDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5734:1: rule__ReadDelay__Group__2 : rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3 ;
    public final void rule__ReadDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5738:1: ( rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5739:2: rule__ReadDelay__Group__2__Impl rule__ReadDelay__Group__3
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__2__Impl_in_rule__ReadDelay__Group__211811);
            rule__ReadDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelay__Group__3_in_rule__ReadDelay__Group__211814);
            rule__ReadDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__2"


    // $ANTLR start "rule__ReadDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5746:1: rule__ReadDelay__Group__2__Impl : ( ',' ) ;
    public final void rule__ReadDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5750:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5751:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5751:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5752:1: ','
            {
             before(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__ReadDelay__Group__2__Impl11842); 
             after(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__2__Impl"


    // $ANTLR start "rule__ReadDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5765:1: rule__ReadDelay__Group__3 : rule__ReadDelay__Group__3__Impl ;
    public final void rule__ReadDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5769:1: ( rule__ReadDelay__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5770:2: rule__ReadDelay__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReadDelay__Group__3__Impl_in_rule__ReadDelay__Group__311873);
            rule__ReadDelay__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__3"


    // $ANTLR start "rule__ReadDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5776:1: rule__ReadDelay__Group__3__Impl : ( ( rule__ReadDelay__Arg2Assignment_3 ) ) ;
    public final void rule__ReadDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5780:1: ( ( ( rule__ReadDelay__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5781:1: ( ( rule__ReadDelay__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5781:1: ( ( rule__ReadDelay__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5782:1: ( rule__ReadDelay__Arg2Assignment_3 )
            {
             before(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5783:1: ( rule__ReadDelay__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5783:2: rule__ReadDelay__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__ReadDelay__Arg2Assignment_3_in_rule__ReadDelay__Group__3__Impl11900);
            rule__ReadDelay__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Group__3__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5801:1: rule__LoadSinLFO__Group__0 : rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1 ;
    public final void rule__LoadSinLFO__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5805:1: ( rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5806:2: rule__LoadSinLFO__Group__0__Impl rule__LoadSinLFO__Group__1
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__0__Impl_in_rule__LoadSinLFO__Group__011938);
            rule__LoadSinLFO__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__1_in_rule__LoadSinLFO__Group__011941);
            rule__LoadSinLFO__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__0"


    // $ANTLR start "rule__LoadSinLFO__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5813:1: rule__LoadSinLFO__Group__0__Impl : ( 'wlds' ) ;
    public final void rule__LoadSinLFO__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5817:1: ( ( 'wlds' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5818:1: ( 'wlds' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5818:1: ( 'wlds' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5819:1: 'wlds'
            {
             before(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); 
            match(input,48,FOLLOW_48_in_rule__LoadSinLFO__Group__0__Impl11969); 
             after(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__0__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5832:1: rule__LoadSinLFO__Group__1 : rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2 ;
    public final void rule__LoadSinLFO__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5836:1: ( rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5837:2: rule__LoadSinLFO__Group__1__Impl rule__LoadSinLFO__Group__2
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__1__Impl_in_rule__LoadSinLFO__Group__112000);
            rule__LoadSinLFO__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__2_in_rule__LoadSinLFO__Group__112003);
            rule__LoadSinLFO__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__1"


    // $ANTLR start "rule__LoadSinLFO__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5844:1: rule__LoadSinLFO__Group__1__Impl : ( ( rule__LoadSinLFO__Arg1Assignment_1 ) ) ;
    public final void rule__LoadSinLFO__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5848:1: ( ( ( rule__LoadSinLFO__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5849:1: ( ( rule__LoadSinLFO__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5849:1: ( ( rule__LoadSinLFO__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5850:1: ( rule__LoadSinLFO__Arg1Assignment_1 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5851:1: ( rule__LoadSinLFO__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5851:2: rule__LoadSinLFO__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg1Assignment_1_in_rule__LoadSinLFO__Group__1__Impl12030);
            rule__LoadSinLFO__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__1__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5861:1: rule__LoadSinLFO__Group__2 : rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3 ;
    public final void rule__LoadSinLFO__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5865:1: ( rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5866:2: rule__LoadSinLFO__Group__2__Impl rule__LoadSinLFO__Group__3
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__2__Impl_in_rule__LoadSinLFO__Group__212060);
            rule__LoadSinLFO__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__3_in_rule__LoadSinLFO__Group__212063);
            rule__LoadSinLFO__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__2"


    // $ANTLR start "rule__LoadSinLFO__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5873:1: rule__LoadSinLFO__Group__2__Impl : ( ',' ) ;
    public final void rule__LoadSinLFO__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5877:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5878:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5878:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5879:1: ','
            {
             before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__LoadSinLFO__Group__2__Impl12091); 
             after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__2__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5892:1: rule__LoadSinLFO__Group__3 : rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4 ;
    public final void rule__LoadSinLFO__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5896:1: ( rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5897:2: rule__LoadSinLFO__Group__3__Impl rule__LoadSinLFO__Group__4
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__3__Impl_in_rule__LoadSinLFO__Group__312122);
            rule__LoadSinLFO__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__4_in_rule__LoadSinLFO__Group__312125);
            rule__LoadSinLFO__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__3"


    // $ANTLR start "rule__LoadSinLFO__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5904:1: rule__LoadSinLFO__Group__3__Impl : ( ( rule__LoadSinLFO__Arg2Assignment_3 ) ) ;
    public final void rule__LoadSinLFO__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5908:1: ( ( ( rule__LoadSinLFO__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5909:1: ( ( rule__LoadSinLFO__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5909:1: ( ( rule__LoadSinLFO__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5910:1: ( rule__LoadSinLFO__Arg2Assignment_3 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5911:1: ( rule__LoadSinLFO__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5911:2: rule__LoadSinLFO__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg2Assignment_3_in_rule__LoadSinLFO__Group__3__Impl12152);
            rule__LoadSinLFO__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__3__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5921:1: rule__LoadSinLFO__Group__4 : rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5 ;
    public final void rule__LoadSinLFO__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5925:1: ( rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5926:2: rule__LoadSinLFO__Group__4__Impl rule__LoadSinLFO__Group__5
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__4__Impl_in_rule__LoadSinLFO__Group__412182);
            rule__LoadSinLFO__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadSinLFO__Group__5_in_rule__LoadSinLFO__Group__412185);
            rule__LoadSinLFO__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__4"


    // $ANTLR start "rule__LoadSinLFO__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5933:1: rule__LoadSinLFO__Group__4__Impl : ( ',' ) ;
    public final void rule__LoadSinLFO__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5937:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5938:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5938:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5939:1: ','
            {
             before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); 
            match(input,34,FOLLOW_34_in_rule__LoadSinLFO__Group__4__Impl12213); 
             after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__4__Impl"


    // $ANTLR start "rule__LoadSinLFO__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5952:1: rule__LoadSinLFO__Group__5 : rule__LoadSinLFO__Group__5__Impl ;
    public final void rule__LoadSinLFO__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5956:1: ( rule__LoadSinLFO__Group__5__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5957:2: rule__LoadSinLFO__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Group__5__Impl_in_rule__LoadSinLFO__Group__512244);
            rule__LoadSinLFO__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__5"


    // $ANTLR start "rule__LoadSinLFO__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5963:1: rule__LoadSinLFO__Group__5__Impl : ( ( rule__LoadSinLFO__Arg3Assignment_5 ) ) ;
    public final void rule__LoadSinLFO__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5967:1: ( ( ( rule__LoadSinLFO__Arg3Assignment_5 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5968:1: ( ( rule__LoadSinLFO__Arg3Assignment_5 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5968:1: ( ( rule__LoadSinLFO__Arg3Assignment_5 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5969:1: ( rule__LoadSinLFO__Arg3Assignment_5 )
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5970:1: ( rule__LoadSinLFO__Arg3Assignment_5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5970:2: rule__LoadSinLFO__Arg3Assignment_5
            {
            pushFollow(FOLLOW_rule__LoadSinLFO__Arg3Assignment_5_in_rule__LoadSinLFO__Group__5__Impl12271);
            rule__LoadSinLFO__Arg3Assignment_5();

            state._fsp--;


            }

             after(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Group__5__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5992:1: rule__LoadRampLFO__Group__0 : rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1 ;
    public final void rule__LoadRampLFO__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5996:1: ( rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:5997:2: rule__LoadRampLFO__Group__0__Impl rule__LoadRampLFO__Group__1
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__0__Impl_in_rule__LoadRampLFO__Group__012313);
            rule__LoadRampLFO__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__1_in_rule__LoadRampLFO__Group__012316);
            rule__LoadRampLFO__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__0"


    // $ANTLR start "rule__LoadRampLFO__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6004:1: rule__LoadRampLFO__Group__0__Impl : ( 'wldr' ) ;
    public final void rule__LoadRampLFO__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6008:1: ( ( 'wldr' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6009:1: ( 'wldr' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6009:1: ( 'wldr' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6010:1: 'wldr'
            {
             before(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); 
            match(input,49,FOLLOW_49_in_rule__LoadRampLFO__Group__0__Impl12344); 
             after(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__0__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6023:1: rule__LoadRampLFO__Group__1 : rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2 ;
    public final void rule__LoadRampLFO__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6027:1: ( rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6028:2: rule__LoadRampLFO__Group__1__Impl rule__LoadRampLFO__Group__2
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__1__Impl_in_rule__LoadRampLFO__Group__112375);
            rule__LoadRampLFO__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__2_in_rule__LoadRampLFO__Group__112378);
            rule__LoadRampLFO__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__1"


    // $ANTLR start "rule__LoadRampLFO__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6035:1: rule__LoadRampLFO__Group__1__Impl : ( ( rule__LoadRampLFO__Arg1Assignment_1 ) ) ;
    public final void rule__LoadRampLFO__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6039:1: ( ( ( rule__LoadRampLFO__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6040:1: ( ( rule__LoadRampLFO__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6040:1: ( ( rule__LoadRampLFO__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6041:1: ( rule__LoadRampLFO__Arg1Assignment_1 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6042:1: ( rule__LoadRampLFO__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6042:2: rule__LoadRampLFO__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg1Assignment_1_in_rule__LoadRampLFO__Group__1__Impl12405);
            rule__LoadRampLFO__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__1__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6052:1: rule__LoadRampLFO__Group__2 : rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3 ;
    public final void rule__LoadRampLFO__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6056:1: ( rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6057:2: rule__LoadRampLFO__Group__2__Impl rule__LoadRampLFO__Group__3
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__2__Impl_in_rule__LoadRampLFO__Group__212435);
            rule__LoadRampLFO__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__3_in_rule__LoadRampLFO__Group__212438);
            rule__LoadRampLFO__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__2"


    // $ANTLR start "rule__LoadRampLFO__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6064:1: rule__LoadRampLFO__Group__2__Impl : ( ',' ) ;
    public final void rule__LoadRampLFO__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6068:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6069:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6069:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6070:1: ','
            {
             before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__LoadRampLFO__Group__2__Impl12466); 
             after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__2__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6083:1: rule__LoadRampLFO__Group__3 : rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4 ;
    public final void rule__LoadRampLFO__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6087:1: ( rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6088:2: rule__LoadRampLFO__Group__3__Impl rule__LoadRampLFO__Group__4
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__3__Impl_in_rule__LoadRampLFO__Group__312497);
            rule__LoadRampLFO__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__4_in_rule__LoadRampLFO__Group__312500);
            rule__LoadRampLFO__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__3"


    // $ANTLR start "rule__LoadRampLFO__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6095:1: rule__LoadRampLFO__Group__3__Impl : ( ( rule__LoadRampLFO__Arg2Assignment_3 ) ) ;
    public final void rule__LoadRampLFO__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6099:1: ( ( ( rule__LoadRampLFO__Arg2Assignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6100:1: ( ( rule__LoadRampLFO__Arg2Assignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6100:1: ( ( rule__LoadRampLFO__Arg2Assignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6101:1: ( rule__LoadRampLFO__Arg2Assignment_3 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6102:1: ( rule__LoadRampLFO__Arg2Assignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6102:2: rule__LoadRampLFO__Arg2Assignment_3
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg2Assignment_3_in_rule__LoadRampLFO__Group__3__Impl12527);
            rule__LoadRampLFO__Arg2Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__3__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6112:1: rule__LoadRampLFO__Group__4 : rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5 ;
    public final void rule__LoadRampLFO__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6116:1: ( rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6117:2: rule__LoadRampLFO__Group__4__Impl rule__LoadRampLFO__Group__5
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__4__Impl_in_rule__LoadRampLFO__Group__412557);
            rule__LoadRampLFO__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LoadRampLFO__Group__5_in_rule__LoadRampLFO__Group__412560);
            rule__LoadRampLFO__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__4"


    // $ANTLR start "rule__LoadRampLFO__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6124:1: rule__LoadRampLFO__Group__4__Impl : ( ',' ) ;
    public final void rule__LoadRampLFO__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6128:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6129:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6129:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6130:1: ','
            {
             before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); 
            match(input,34,FOLLOW_34_in_rule__LoadRampLFO__Group__4__Impl12588); 
             after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__4__Impl"


    // $ANTLR start "rule__LoadRampLFO__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6143:1: rule__LoadRampLFO__Group__5 : rule__LoadRampLFO__Group__5__Impl ;
    public final void rule__LoadRampLFO__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6147:1: ( rule__LoadRampLFO__Group__5__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6148:2: rule__LoadRampLFO__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Group__5__Impl_in_rule__LoadRampLFO__Group__512619);
            rule__LoadRampLFO__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__5"


    // $ANTLR start "rule__LoadRampLFO__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6154:1: rule__LoadRampLFO__Group__5__Impl : ( ( rule__LoadRampLFO__Arg3Assignment_5 ) ) ;
    public final void rule__LoadRampLFO__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6158:1: ( ( ( rule__LoadRampLFO__Arg3Assignment_5 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6159:1: ( ( rule__LoadRampLFO__Arg3Assignment_5 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6159:1: ( ( rule__LoadRampLFO__Arg3Assignment_5 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6160:1: ( rule__LoadRampLFO__Arg3Assignment_5 )
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6161:1: ( rule__LoadRampLFO__Arg3Assignment_5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6161:2: rule__LoadRampLFO__Arg3Assignment_5
            {
            pushFollow(FOLLOW_rule__LoadRampLFO__Arg3Assignment_5_in_rule__LoadRampLFO__Group__5__Impl12646);
            rule__LoadRampLFO__Arg3Assignment_5();

            state._fsp--;


            }

             after(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Group__5__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6183:1: rule__ChorusReadDelay__Group__0 : rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1 ;
    public final void rule__ChorusReadDelay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6187:1: ( rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6188:2: rule__ChorusReadDelay__Group__0__Impl rule__ChorusReadDelay__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__0__Impl_in_rule__ChorusReadDelay__Group__012688);
            rule__ChorusReadDelay__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__1_in_rule__ChorusReadDelay__Group__012691);
            rule__ChorusReadDelay__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__0"


    // $ANTLR start "rule__ChorusReadDelay__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6195:1: rule__ChorusReadDelay__Group__0__Impl : ( 'cho rda' ) ;
    public final void rule__ChorusReadDelay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6199:1: ( ( 'cho rda' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6200:1: ( 'cho rda' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6200:1: ( 'cho rda' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6201:1: 'cho rda'
            {
             before(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); 
            match(input,50,FOLLOW_50_in_rule__ChorusReadDelay__Group__0__Impl12719); 
             after(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__0__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6214:1: rule__ChorusReadDelay__Group__1 : rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2 ;
    public final void rule__ChorusReadDelay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6218:1: ( rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6219:2: rule__ChorusReadDelay__Group__1__Impl rule__ChorusReadDelay__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__1__Impl_in_rule__ChorusReadDelay__Group__112750);
            rule__ChorusReadDelay__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__2_in_rule__ChorusReadDelay__Group__112753);
            rule__ChorusReadDelay__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__1"


    // $ANTLR start "rule__ChorusReadDelay__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6226:1: rule__ChorusReadDelay__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6230:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6231:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6231:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6232:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); 
            match(input,34,FOLLOW_34_in_rule__ChorusReadDelay__Group__1__Impl12781); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__1__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6245:1: rule__ChorusReadDelay__Group__2 : rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3 ;
    public final void rule__ChorusReadDelay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6249:1: ( rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6250:2: rule__ChorusReadDelay__Group__2__Impl rule__ChorusReadDelay__Group__3
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__2__Impl_in_rule__ChorusReadDelay__Group__212812);
            rule__ChorusReadDelay__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__3_in_rule__ChorusReadDelay__Group__212815);
            rule__ChorusReadDelay__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__2"


    // $ANTLR start "rule__ChorusReadDelay__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6257:1: rule__ChorusReadDelay__Group__2__Impl : ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusReadDelay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6261:1: ( ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6262:1: ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6262:1: ( ( rule__ChorusReadDelay__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6263:1: ( rule__ChorusReadDelay__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6264:1: ( rule__ChorusReadDelay__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6264:2: rule__ChorusReadDelay__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg1Assignment_2_in_rule__ChorusReadDelay__Group__2__Impl12842);
            rule__ChorusReadDelay__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__2__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6274:1: rule__ChorusReadDelay__Group__3 : rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4 ;
    public final void rule__ChorusReadDelay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6278:1: ( rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6279:2: rule__ChorusReadDelay__Group__3__Impl rule__ChorusReadDelay__Group__4
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__3__Impl_in_rule__ChorusReadDelay__Group__312872);
            rule__ChorusReadDelay__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__4_in_rule__ChorusReadDelay__Group__312875);
            rule__ChorusReadDelay__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__3"


    // $ANTLR start "rule__ChorusReadDelay__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6286:1: rule__ChorusReadDelay__Group__3__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6290:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6291:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6291:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6292:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); 
            match(input,34,FOLLOW_34_in_rule__ChorusReadDelay__Group__3__Impl12903); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__3__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6305:1: rule__ChorusReadDelay__Group__4 : rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5 ;
    public final void rule__ChorusReadDelay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6309:1: ( rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6310:2: rule__ChorusReadDelay__Group__4__Impl rule__ChorusReadDelay__Group__5
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__4__Impl_in_rule__ChorusReadDelay__Group__412934);
            rule__ChorusReadDelay__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__5_in_rule__ChorusReadDelay__Group__412937);
            rule__ChorusReadDelay__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__4"


    // $ANTLR start "rule__ChorusReadDelay__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6317:1: rule__ChorusReadDelay__Group__4__Impl : ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) ) ;
    public final void rule__ChorusReadDelay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6321:1: ( ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6322:1: ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6322:1: ( ( rule__ChorusReadDelay__Arg2Assignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6323:1: ( rule__ChorusReadDelay__Arg2Assignment_4 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6324:1: ( rule__ChorusReadDelay__Arg2Assignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6324:2: rule__ChorusReadDelay__Arg2Assignment_4
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg2Assignment_4_in_rule__ChorusReadDelay__Group__4__Impl12964);
            rule__ChorusReadDelay__Arg2Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__4__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6334:1: rule__ChorusReadDelay__Group__5 : rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6 ;
    public final void rule__ChorusReadDelay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6338:1: ( rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6339:2: rule__ChorusReadDelay__Group__5__Impl rule__ChorusReadDelay__Group__6
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__5__Impl_in_rule__ChorusReadDelay__Group__512994);
            rule__ChorusReadDelay__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__6_in_rule__ChorusReadDelay__Group__512997);
            rule__ChorusReadDelay__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__5"


    // $ANTLR start "rule__ChorusReadDelay__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6346:1: rule__ChorusReadDelay__Group__5__Impl : ( ',' ) ;
    public final void rule__ChorusReadDelay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6350:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6351:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6351:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6352:1: ','
            {
             before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); 
            match(input,34,FOLLOW_34_in_rule__ChorusReadDelay__Group__5__Impl13025); 
             after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__5__Impl"


    // $ANTLR start "rule__ChorusReadDelay__Group__6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6365:1: rule__ChorusReadDelay__Group__6 : rule__ChorusReadDelay__Group__6__Impl ;
    public final void rule__ChorusReadDelay__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6369:1: ( rule__ChorusReadDelay__Group__6__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6370:2: rule__ChorusReadDelay__Group__6__Impl
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Group__6__Impl_in_rule__ChorusReadDelay__Group__613056);
            rule__ChorusReadDelay__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__6"


    // $ANTLR start "rule__ChorusReadDelay__Group__6__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6376:1: rule__ChorusReadDelay__Group__6__Impl : ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) ) ;
    public final void rule__ChorusReadDelay__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6380:1: ( ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6381:1: ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6381:1: ( ( rule__ChorusReadDelay__Arg3Assignment_6 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6382:1: ( rule__ChorusReadDelay__Arg3Assignment_6 )
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6383:1: ( rule__ChorusReadDelay__Arg3Assignment_6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6383:2: rule__ChorusReadDelay__Arg3Assignment_6
            {
            pushFollow(FOLLOW_rule__ChorusReadDelay__Arg3Assignment_6_in_rule__ChorusReadDelay__Group__6__Impl13083);
            rule__ChorusReadDelay__Arg3Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Group__6__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6407:1: rule__ChorusReadValue__Group__0 : rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1 ;
    public final void rule__ChorusReadValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6411:1: ( rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6412:2: rule__ChorusReadValue__Group__0__Impl rule__ChorusReadValue__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__0__Impl_in_rule__ChorusReadValue__Group__013127);
            rule__ChorusReadValue__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadValue__Group__1_in_rule__ChorusReadValue__Group__013130);
            rule__ChorusReadValue__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__0"


    // $ANTLR start "rule__ChorusReadValue__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6419:1: rule__ChorusReadValue__Group__0__Impl : ( 'cho rdal' ) ;
    public final void rule__ChorusReadValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6423:1: ( ( 'cho rdal' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6424:1: ( 'cho rdal' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6424:1: ( 'cho rdal' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6425:1: 'cho rdal'
            {
             before(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); 
            match(input,51,FOLLOW_51_in_rule__ChorusReadValue__Group__0__Impl13158); 
             after(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__0__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6438:1: rule__ChorusReadValue__Group__1 : rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2 ;
    public final void rule__ChorusReadValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6442:1: ( rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6443:2: rule__ChorusReadValue__Group__1__Impl rule__ChorusReadValue__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__1__Impl_in_rule__ChorusReadValue__Group__113189);
            rule__ChorusReadValue__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusReadValue__Group__2_in_rule__ChorusReadValue__Group__113192);
            rule__ChorusReadValue__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__1"


    // $ANTLR start "rule__ChorusReadValue__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6450:1: rule__ChorusReadValue__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusReadValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6454:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6455:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6455:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6456:1: ','
            {
             before(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); 
            match(input,34,FOLLOW_34_in_rule__ChorusReadValue__Group__1__Impl13220); 
             after(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__1__Impl"


    // $ANTLR start "rule__ChorusReadValue__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6469:1: rule__ChorusReadValue__Group__2 : rule__ChorusReadValue__Group__2__Impl ;
    public final void rule__ChorusReadValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6473:1: ( rule__ChorusReadValue__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6474:2: rule__ChorusReadValue__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Group__2__Impl_in_rule__ChorusReadValue__Group__213251);
            rule__ChorusReadValue__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__2"


    // $ANTLR start "rule__ChorusReadValue__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6480:1: rule__ChorusReadValue__Group__2__Impl : ( ( rule__ChorusReadValue__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusReadValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6484:1: ( ( ( rule__ChorusReadValue__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6485:1: ( ( rule__ChorusReadValue__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6485:1: ( ( rule__ChorusReadValue__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6486:1: ( rule__ChorusReadValue__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6487:1: ( rule__ChorusReadValue__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6487:2: rule__ChorusReadValue__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusReadValue__Arg1Assignment_2_in_rule__ChorusReadValue__Group__2__Impl13278);
            rule__ChorusReadValue__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Group__2__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6503:1: rule__ChorusScaleOffset__Group__0 : rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1 ;
    public final void rule__ChorusScaleOffset__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6507:1: ( rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6508:2: rule__ChorusScaleOffset__Group__0__Impl rule__ChorusScaleOffset__Group__1
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__0__Impl_in_rule__ChorusScaleOffset__Group__013314);
            rule__ChorusScaleOffset__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__1_in_rule__ChorusScaleOffset__Group__013317);
            rule__ChorusScaleOffset__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__0"


    // $ANTLR start "rule__ChorusScaleOffset__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6515:1: rule__ChorusScaleOffset__Group__0__Impl : ( 'cho sof' ) ;
    public final void rule__ChorusScaleOffset__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6519:1: ( ( 'cho sof' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6520:1: ( 'cho sof' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6520:1: ( 'cho sof' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6521:1: 'cho sof'
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); 
            match(input,52,FOLLOW_52_in_rule__ChorusScaleOffset__Group__0__Impl13345); 
             after(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__0__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6534:1: rule__ChorusScaleOffset__Group__1 : rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2 ;
    public final void rule__ChorusScaleOffset__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6538:1: ( rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6539:2: rule__ChorusScaleOffset__Group__1__Impl rule__ChorusScaleOffset__Group__2
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__1__Impl_in_rule__ChorusScaleOffset__Group__113376);
            rule__ChorusScaleOffset__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__2_in_rule__ChorusScaleOffset__Group__113379);
            rule__ChorusScaleOffset__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__1"


    // $ANTLR start "rule__ChorusScaleOffset__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6546:1: rule__ChorusScaleOffset__Group__1__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6550:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6551:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6551:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6552:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); 
            match(input,34,FOLLOW_34_in_rule__ChorusScaleOffset__Group__1__Impl13407); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__1__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6565:1: rule__ChorusScaleOffset__Group__2 : rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3 ;
    public final void rule__ChorusScaleOffset__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6569:1: ( rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6570:2: rule__ChorusScaleOffset__Group__2__Impl rule__ChorusScaleOffset__Group__3
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__2__Impl_in_rule__ChorusScaleOffset__Group__213438);
            rule__ChorusScaleOffset__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__3_in_rule__ChorusScaleOffset__Group__213441);
            rule__ChorusScaleOffset__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__2"


    // $ANTLR start "rule__ChorusScaleOffset__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6577:1: rule__ChorusScaleOffset__Group__2__Impl : ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) ) ;
    public final void rule__ChorusScaleOffset__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6581:1: ( ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6582:1: ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6582:1: ( ( rule__ChorusScaleOffset__Arg1Assignment_2 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6583:1: ( rule__ChorusScaleOffset__Arg1Assignment_2 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6584:1: ( rule__ChorusScaleOffset__Arg1Assignment_2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6584:2: rule__ChorusScaleOffset__Arg1Assignment_2
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg1Assignment_2_in_rule__ChorusScaleOffset__Group__2__Impl13468);
            rule__ChorusScaleOffset__Arg1Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__2__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6594:1: rule__ChorusScaleOffset__Group__3 : rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4 ;
    public final void rule__ChorusScaleOffset__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6598:1: ( rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6599:2: rule__ChorusScaleOffset__Group__3__Impl rule__ChorusScaleOffset__Group__4
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__3__Impl_in_rule__ChorusScaleOffset__Group__313498);
            rule__ChorusScaleOffset__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__4_in_rule__ChorusScaleOffset__Group__313501);
            rule__ChorusScaleOffset__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__3"


    // $ANTLR start "rule__ChorusScaleOffset__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6606:1: rule__ChorusScaleOffset__Group__3__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6610:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6611:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6611:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6612:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); 
            match(input,34,FOLLOW_34_in_rule__ChorusScaleOffset__Group__3__Impl13529); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__3__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6625:1: rule__ChorusScaleOffset__Group__4 : rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5 ;
    public final void rule__ChorusScaleOffset__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6629:1: ( rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6630:2: rule__ChorusScaleOffset__Group__4__Impl rule__ChorusScaleOffset__Group__5
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__4__Impl_in_rule__ChorusScaleOffset__Group__413560);
            rule__ChorusScaleOffset__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__5_in_rule__ChorusScaleOffset__Group__413563);
            rule__ChorusScaleOffset__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__4"


    // $ANTLR start "rule__ChorusScaleOffset__Group__4__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6637:1: rule__ChorusScaleOffset__Group__4__Impl : ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) ) ;
    public final void rule__ChorusScaleOffset__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6641:1: ( ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6642:1: ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6642:1: ( ( rule__ChorusScaleOffset__Arg2Assignment_4 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6643:1: ( rule__ChorusScaleOffset__Arg2Assignment_4 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6644:1: ( rule__ChorusScaleOffset__Arg2Assignment_4 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6644:2: rule__ChorusScaleOffset__Arg2Assignment_4
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg2Assignment_4_in_rule__ChorusScaleOffset__Group__4__Impl13590);
            rule__ChorusScaleOffset__Arg2Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__4__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6654:1: rule__ChorusScaleOffset__Group__5 : rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6 ;
    public final void rule__ChorusScaleOffset__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6658:1: ( rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6659:2: rule__ChorusScaleOffset__Group__5__Impl rule__ChorusScaleOffset__Group__6
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__5__Impl_in_rule__ChorusScaleOffset__Group__513620);
            rule__ChorusScaleOffset__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__6_in_rule__ChorusScaleOffset__Group__513623);
            rule__ChorusScaleOffset__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__5"


    // $ANTLR start "rule__ChorusScaleOffset__Group__5__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6666:1: rule__ChorusScaleOffset__Group__5__Impl : ( ',' ) ;
    public final void rule__ChorusScaleOffset__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6670:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6671:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6671:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6672:1: ','
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); 
            match(input,34,FOLLOW_34_in_rule__ChorusScaleOffset__Group__5__Impl13651); 
             after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__5__Impl"


    // $ANTLR start "rule__ChorusScaleOffset__Group__6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6685:1: rule__ChorusScaleOffset__Group__6 : rule__ChorusScaleOffset__Group__6__Impl ;
    public final void rule__ChorusScaleOffset__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6689:1: ( rule__ChorusScaleOffset__Group__6__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6690:2: rule__ChorusScaleOffset__Group__6__Impl
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Group__6__Impl_in_rule__ChorusScaleOffset__Group__613682);
            rule__ChorusScaleOffset__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__6"


    // $ANTLR start "rule__ChorusScaleOffset__Group__6__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6696:1: rule__ChorusScaleOffset__Group__6__Impl : ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) ) ;
    public final void rule__ChorusScaleOffset__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6700:1: ( ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6701:1: ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6701:1: ( ( rule__ChorusScaleOffset__Arg3Assignment_6 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6702:1: ( rule__ChorusScaleOffset__Arg3Assignment_6 )
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6703:1: ( rule__ChorusScaleOffset__Arg3Assignment_6 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6703:2: rule__ChorusScaleOffset__Arg3Assignment_6
            {
            pushFollow(FOLLOW_rule__ChorusScaleOffset__Arg3Assignment_6_in_rule__ChorusScaleOffset__Group__6__Impl13709);
            rule__ChorusScaleOffset__Arg3Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Group__6__Impl"


    // $ANTLR start "rule__ReadDelayPointer__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6727:1: rule__ReadDelayPointer__Group__0 : rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1 ;
    public final void rule__ReadDelayPointer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6731:1: ( rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6732:2: rule__ReadDelayPointer__Group__0__Impl rule__ReadDelayPointer__Group__1
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__0__Impl_in_rule__ReadDelayPointer__Group__013753);
            rule__ReadDelayPointer__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__1_in_rule__ReadDelayPointer__Group__013756);
            rule__ReadDelayPointer__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__0"


    // $ANTLR start "rule__ReadDelayPointer__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6739:1: rule__ReadDelayPointer__Group__0__Impl : ( 'rmpa' ) ;
    public final void rule__ReadDelayPointer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6743:1: ( ( 'rmpa' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6744:1: ( 'rmpa' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6744:1: ( 'rmpa' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6745:1: 'rmpa'
            {
             before(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); 
            match(input,53,FOLLOW_53_in_rule__ReadDelayPointer__Group__0__Impl13784); 
             after(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__0__Impl"


    // $ANTLR start "rule__ReadDelayPointer__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6758:1: rule__ReadDelayPointer__Group__1 : rule__ReadDelayPointer__Group__1__Impl ;
    public final void rule__ReadDelayPointer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6762:1: ( rule__ReadDelayPointer__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6763:2: rule__ReadDelayPointer__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Group__1__Impl_in_rule__ReadDelayPointer__Group__113815);
            rule__ReadDelayPointer__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__1"


    // $ANTLR start "rule__ReadDelayPointer__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6769:1: rule__ReadDelayPointer__Group__1__Impl : ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) ) ;
    public final void rule__ReadDelayPointer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6773:1: ( ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6774:1: ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6774:1: ( ( rule__ReadDelayPointer__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6775:1: ( rule__ReadDelayPointer__Arg1Assignment_1 )
            {
             before(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6776:1: ( rule__ReadDelayPointer__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6776:2: rule__ReadDelayPointer__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__ReadDelayPointer__Arg1Assignment_1_in_rule__ReadDelayPointer__Group__1__Impl13842);
            rule__ReadDelayPointer__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Group__1__Impl"


    // $ANTLR start "rule__And__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6790:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6794:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6795:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_rule__And__Group__0__Impl_in_rule__And__Group__013876);
            rule__And__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__And__Group__1_in_rule__And__Group__013879);
            rule__And__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6802:1: rule__And__Group__0__Impl : ( 'and' ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6806:1: ( ( 'and' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6807:1: ( 'and' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6807:1: ( 'and' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6808:1: 'and'
            {
             before(grammarAccess.getAndAccess().getAndKeyword_0()); 
            match(input,54,FOLLOW_54_in_rule__And__Group__0__Impl13907); 
             after(grammarAccess.getAndAccess().getAndKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6821:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6825:1: ( rule__And__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6826:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__And__Group__1__Impl_in_rule__And__Group__113938);
            rule__And__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6832:1: rule__And__Group__1__Impl : ( ( rule__And__Arg1Assignment_1 ) ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6836:1: ( ( ( rule__And__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6837:1: ( ( rule__And__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6837:1: ( ( rule__And__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6838:1: ( rule__And__Arg1Assignment_1 )
            {
             before(grammarAccess.getAndAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6839:1: ( rule__And__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6839:2: rule__And__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__And__Arg1Assignment_1_in_rule__And__Group__1__Impl13965);
            rule__And__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6853:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6857:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6858:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_rule__Or__Group__0__Impl_in_rule__Or__Group__013999);
            rule__Or__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Or__Group__1_in_rule__Or__Group__014002);
            rule__Or__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6865:1: rule__Or__Group__0__Impl : ( 'or' ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6869:1: ( ( 'or' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6870:1: ( 'or' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6870:1: ( 'or' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6871:1: 'or'
            {
             before(grammarAccess.getOrAccess().getOrKeyword_0()); 
            match(input,55,FOLLOW_55_in_rule__Or__Group__0__Impl14030); 
             after(grammarAccess.getOrAccess().getOrKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6884:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6888:1: ( rule__Or__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6889:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Or__Group__1__Impl_in_rule__Or__Group__114061);
            rule__Or__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6895:1: rule__Or__Group__1__Impl : ( ( rule__Or__Arg1Assignment_1 ) ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6899:1: ( ( ( rule__Or__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6900:1: ( ( rule__Or__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6900:1: ( ( rule__Or__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6901:1: ( rule__Or__Arg1Assignment_1 )
            {
             before(grammarAccess.getOrAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6902:1: ( rule__Or__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6902:2: rule__Or__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Or__Arg1Assignment_1_in_rule__Or__Group__1__Impl14088);
            rule__Or__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Xor__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6916:1: rule__Xor__Group__0 : rule__Xor__Group__0__Impl rule__Xor__Group__1 ;
    public final void rule__Xor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6920:1: ( rule__Xor__Group__0__Impl rule__Xor__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6921:2: rule__Xor__Group__0__Impl rule__Xor__Group__1
            {
            pushFollow(FOLLOW_rule__Xor__Group__0__Impl_in_rule__Xor__Group__014122);
            rule__Xor__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Xor__Group__1_in_rule__Xor__Group__014125);
            rule__Xor__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__0"


    // $ANTLR start "rule__Xor__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6928:1: rule__Xor__Group__0__Impl : ( 'xor' ) ;
    public final void rule__Xor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6932:1: ( ( 'xor' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6933:1: ( 'xor' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6933:1: ( 'xor' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6934:1: 'xor'
            {
             before(grammarAccess.getXorAccess().getXorKeyword_0()); 
            match(input,56,FOLLOW_56_in_rule__Xor__Group__0__Impl14153); 
             after(grammarAccess.getXorAccess().getXorKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__0__Impl"


    // $ANTLR start "rule__Xor__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6947:1: rule__Xor__Group__1 : rule__Xor__Group__1__Impl ;
    public final void rule__Xor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6951:1: ( rule__Xor__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6952:2: rule__Xor__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Xor__Group__1__Impl_in_rule__Xor__Group__114184);
            rule__Xor__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__1"


    // $ANTLR start "rule__Xor__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6958:1: rule__Xor__Group__1__Impl : ( ( rule__Xor__Arg1Assignment_1 ) ) ;
    public final void rule__Xor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6962:1: ( ( ( rule__Xor__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6963:1: ( ( rule__Xor__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6963:1: ( ( rule__Xor__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6964:1: ( rule__Xor__Arg1Assignment_1 )
            {
             before(grammarAccess.getXorAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6965:1: ( rule__Xor__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6965:2: rule__Xor__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Xor__Arg1Assignment_1_in_rule__Xor__Group__1__Impl14211);
            rule__Xor__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getXorAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Group__1__Impl"


    // $ANTLR start "rule__Jam__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6979:1: rule__Jam__Group__0 : rule__Jam__Group__0__Impl rule__Jam__Group__1 ;
    public final void rule__Jam__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6983:1: ( rule__Jam__Group__0__Impl rule__Jam__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6984:2: rule__Jam__Group__0__Impl rule__Jam__Group__1
            {
            pushFollow(FOLLOW_rule__Jam__Group__0__Impl_in_rule__Jam__Group__014245);
            rule__Jam__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Jam__Group__1_in_rule__Jam__Group__014248);
            rule__Jam__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__0"


    // $ANTLR start "rule__Jam__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6991:1: rule__Jam__Group__0__Impl : ( 'jam' ) ;
    public final void rule__Jam__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6995:1: ( ( 'jam' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6996:1: ( 'jam' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6996:1: ( 'jam' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:6997:1: 'jam'
            {
             before(grammarAccess.getJamAccess().getJamKeyword_0()); 
            match(input,57,FOLLOW_57_in_rule__Jam__Group__0__Impl14276); 
             after(grammarAccess.getJamAccess().getJamKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__0__Impl"


    // $ANTLR start "rule__Jam__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7010:1: rule__Jam__Group__1 : rule__Jam__Group__1__Impl ;
    public final void rule__Jam__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7014:1: ( rule__Jam__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7015:2: rule__Jam__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Jam__Group__1__Impl_in_rule__Jam__Group__114307);
            rule__Jam__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__1"


    // $ANTLR start "rule__Jam__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7021:1: rule__Jam__Group__1__Impl : ( ( rule__Jam__Arg1Assignment_1 ) ) ;
    public final void rule__Jam__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7025:1: ( ( ( rule__Jam__Arg1Assignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7026:1: ( ( rule__Jam__Arg1Assignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7026:1: ( ( rule__Jam__Arg1Assignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7027:1: ( rule__Jam__Arg1Assignment_1 )
            {
             before(grammarAccess.getJamAccess().getArg1Assignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7028:1: ( rule__Jam__Arg1Assignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7028:2: rule__Jam__Arg1Assignment_1
            {
            pushFollow(FOLLOW_rule__Jam__Arg1Assignment_1_in_rule__Jam__Group__1__Impl14334);
            rule__Jam__Arg1Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getJamAccess().getArg1Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Group__1__Impl"


    // $ANTLR start "rule__Clr__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7042:1: rule__Clr__Group__0 : rule__Clr__Group__0__Impl rule__Clr__Group__1 ;
    public final void rule__Clr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7046:1: ( rule__Clr__Group__0__Impl rule__Clr__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7047:2: rule__Clr__Group__0__Impl rule__Clr__Group__1
            {
            pushFollow(FOLLOW_rule__Clr__Group__0__Impl_in_rule__Clr__Group__014368);
            rule__Clr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Clr__Group__1_in_rule__Clr__Group__014371);
            rule__Clr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__0"


    // $ANTLR start "rule__Clr__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7054:1: rule__Clr__Group__0__Impl : ( () ) ;
    public final void rule__Clr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7058:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7059:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7059:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7060:1: ()
            {
             before(grammarAccess.getClrAccess().getClrAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7061:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7063:1: 
            {
            }

             after(grammarAccess.getClrAccess().getClrAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__0__Impl"


    // $ANTLR start "rule__Clr__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7073:1: rule__Clr__Group__1 : rule__Clr__Group__1__Impl ;
    public final void rule__Clr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7077:1: ( rule__Clr__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7078:2: rule__Clr__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Clr__Group__1__Impl_in_rule__Clr__Group__114429);
            rule__Clr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__1"


    // $ANTLR start "rule__Clr__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7084:1: rule__Clr__Group__1__Impl : ( 'clr' ) ;
    public final void rule__Clr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7088:1: ( ( 'clr' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7089:1: ( 'clr' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7089:1: ( 'clr' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7090:1: 'clr'
            {
             before(grammarAccess.getClrAccess().getClrKeyword_1()); 
            match(input,58,FOLLOW_58_in_rule__Clr__Group__1__Impl14457); 
             after(grammarAccess.getClrAccess().getClrKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Clr__Group__1__Impl"


    // $ANTLR start "rule__Not__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7107:1: rule__Not__Group__0 : rule__Not__Group__0__Impl rule__Not__Group__1 ;
    public final void rule__Not__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7111:1: ( rule__Not__Group__0__Impl rule__Not__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7112:2: rule__Not__Group__0__Impl rule__Not__Group__1
            {
            pushFollow(FOLLOW_rule__Not__Group__0__Impl_in_rule__Not__Group__014492);
            rule__Not__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Not__Group__1_in_rule__Not__Group__014495);
            rule__Not__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__0"


    // $ANTLR start "rule__Not__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7119:1: rule__Not__Group__0__Impl : ( () ) ;
    public final void rule__Not__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7123:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7124:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7124:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7125:1: ()
            {
             before(grammarAccess.getNotAccess().getNotAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7126:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7128:1: 
            {
            }

             after(grammarAccess.getNotAccess().getNotAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__0__Impl"


    // $ANTLR start "rule__Not__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7138:1: rule__Not__Group__1 : rule__Not__Group__1__Impl ;
    public final void rule__Not__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7142:1: ( rule__Not__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7143:2: rule__Not__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Not__Group__1__Impl_in_rule__Not__Group__114553);
            rule__Not__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__1"


    // $ANTLR start "rule__Not__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7149:1: rule__Not__Group__1__Impl : ( 'not' ) ;
    public final void rule__Not__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7153:1: ( ( 'not' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7154:1: ( 'not' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7154:1: ( 'not' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7155:1: 'not'
            {
             before(grammarAccess.getNotAccess().getNotKeyword_1()); 
            match(input,59,FOLLOW_59_in_rule__Not__Group__1__Impl14581); 
             after(grammarAccess.getNotAccess().getNotKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Not__Group__1__Impl"


    // $ANTLR start "rule__Absa__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7172:1: rule__Absa__Group__0 : rule__Absa__Group__0__Impl rule__Absa__Group__1 ;
    public final void rule__Absa__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7176:1: ( rule__Absa__Group__0__Impl rule__Absa__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7177:2: rule__Absa__Group__0__Impl rule__Absa__Group__1
            {
            pushFollow(FOLLOW_rule__Absa__Group__0__Impl_in_rule__Absa__Group__014616);
            rule__Absa__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Absa__Group__1_in_rule__Absa__Group__014619);
            rule__Absa__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__0"


    // $ANTLR start "rule__Absa__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7184:1: rule__Absa__Group__0__Impl : ( () ) ;
    public final void rule__Absa__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7188:1: ( ( () ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7189:1: ( () )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7189:1: ( () )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7190:1: ()
            {
             before(grammarAccess.getAbsaAccess().getAbsaAction_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7191:1: ()
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7193:1: 
            {
            }

             after(grammarAccess.getAbsaAccess().getAbsaAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__0__Impl"


    // $ANTLR start "rule__Absa__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7203:1: rule__Absa__Group__1 : rule__Absa__Group__1__Impl ;
    public final void rule__Absa__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7207:1: ( rule__Absa__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7208:2: rule__Absa__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Absa__Group__1__Impl_in_rule__Absa__Group__114677);
            rule__Absa__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__1"


    // $ANTLR start "rule__Absa__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7214:1: rule__Absa__Group__1__Impl : ( 'absa' ) ;
    public final void rule__Absa__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7218:1: ( ( 'absa' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7219:1: ( 'absa' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7219:1: ( 'absa' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7220:1: 'absa'
            {
             before(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); 
            match(input,60,FOLLOW_60_in_rule__Absa__Group__1__Impl14705); 
             after(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Absa__Group__1__Impl"


    // $ANTLR start "rule__Skip__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7237:1: rule__Skip__Group__0 : rule__Skip__Group__0__Impl rule__Skip__Group__1 ;
    public final void rule__Skip__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7241:1: ( rule__Skip__Group__0__Impl rule__Skip__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7242:2: rule__Skip__Group__0__Impl rule__Skip__Group__1
            {
            pushFollow(FOLLOW_rule__Skip__Group__0__Impl_in_rule__Skip__Group__014740);
            rule__Skip__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__1_in_rule__Skip__Group__014743);
            rule__Skip__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__0"


    // $ANTLR start "rule__Skip__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7249:1: rule__Skip__Group__0__Impl : ( 'skp' ) ;
    public final void rule__Skip__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7253:1: ( ( 'skp' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7254:1: ( 'skp' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7254:1: ( 'skp' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7255:1: 'skp'
            {
             before(grammarAccess.getSkipAccess().getSkpKeyword_0()); 
            match(input,61,FOLLOW_61_in_rule__Skip__Group__0__Impl14771); 
             after(grammarAccess.getSkipAccess().getSkpKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__0__Impl"


    // $ANTLR start "rule__Skip__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7268:1: rule__Skip__Group__1 : rule__Skip__Group__1__Impl rule__Skip__Group__2 ;
    public final void rule__Skip__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7272:1: ( rule__Skip__Group__1__Impl rule__Skip__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7273:2: rule__Skip__Group__1__Impl rule__Skip__Group__2
            {
            pushFollow(FOLLOW_rule__Skip__Group__1__Impl_in_rule__Skip__Group__114802);
            rule__Skip__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__2_in_rule__Skip__Group__114805);
            rule__Skip__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__1"


    // $ANTLR start "rule__Skip__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7280:1: rule__Skip__Group__1__Impl : ( ( rule__Skip__FlagsAssignment_1 ) ) ;
    public final void rule__Skip__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7284:1: ( ( ( rule__Skip__FlagsAssignment_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7285:1: ( ( rule__Skip__FlagsAssignment_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7285:1: ( ( rule__Skip__FlagsAssignment_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7286:1: ( rule__Skip__FlagsAssignment_1 )
            {
             before(grammarAccess.getSkipAccess().getFlagsAssignment_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7287:1: ( rule__Skip__FlagsAssignment_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7287:2: rule__Skip__FlagsAssignment_1
            {
            pushFollow(FOLLOW_rule__Skip__FlagsAssignment_1_in_rule__Skip__Group__1__Impl14832);
            rule__Skip__FlagsAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getFlagsAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__1__Impl"


    // $ANTLR start "rule__Skip__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7297:1: rule__Skip__Group__2 : rule__Skip__Group__2__Impl rule__Skip__Group__3 ;
    public final void rule__Skip__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7301:1: ( rule__Skip__Group__2__Impl rule__Skip__Group__3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7302:2: rule__Skip__Group__2__Impl rule__Skip__Group__3
            {
            pushFollow(FOLLOW_rule__Skip__Group__2__Impl_in_rule__Skip__Group__214862);
            rule__Skip__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Skip__Group__3_in_rule__Skip__Group__214865);
            rule__Skip__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__2"


    // $ANTLR start "rule__Skip__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7309:1: rule__Skip__Group__2__Impl : ( ',' ) ;
    public final void rule__Skip__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7313:1: ( ( ',' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7314:1: ( ',' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7314:1: ( ',' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7315:1: ','
            {
             before(grammarAccess.getSkipAccess().getCommaKeyword_2()); 
            match(input,34,FOLLOW_34_in_rule__Skip__Group__2__Impl14893); 
             after(grammarAccess.getSkipAccess().getCommaKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__2__Impl"


    // $ANTLR start "rule__Skip__Group__3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7328:1: rule__Skip__Group__3 : rule__Skip__Group__3__Impl ;
    public final void rule__Skip__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7332:1: ( rule__Skip__Group__3__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7333:2: rule__Skip__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Skip__Group__3__Impl_in_rule__Skip__Group__314924);
            rule__Skip__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__3"


    // $ANTLR start "rule__Skip__Group__3__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7339:1: rule__Skip__Group__3__Impl : ( ( rule__Skip__LabelAssignment_3 ) ) ;
    public final void rule__Skip__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7343:1: ( ( ( rule__Skip__LabelAssignment_3 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7344:1: ( ( rule__Skip__LabelAssignment_3 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7344:1: ( ( rule__Skip__LabelAssignment_3 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7345:1: ( rule__Skip__LabelAssignment_3 )
            {
             before(grammarAccess.getSkipAccess().getLabelAssignment_3()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7346:1: ( rule__Skip__LabelAssignment_3 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7346:2: rule__Skip__LabelAssignment_3
            {
            pushFollow(FOLLOW_rule__Skip__LabelAssignment_3_in_rule__Skip__Group__3__Impl14951);
            rule__Skip__LabelAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getSkipAccess().getLabelAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__Group__3__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7364:1: rule__SPINDOUBLE__Group__0 : rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1 ;
    public final void rule__SPINDOUBLE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7368:1: ( rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7369:2: rule__SPINDOUBLE__Group__0__Impl rule__SPINDOUBLE__Group__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__0__Impl_in_rule__SPINDOUBLE__Group__014989);
            rule__SPINDOUBLE__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__1_in_rule__SPINDOUBLE__Group__014992);
            rule__SPINDOUBLE__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__0"


    // $ANTLR start "rule__SPINDOUBLE__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7376:1: rule__SPINDOUBLE__Group__0__Impl : ( ( '-' )? ) ;
    public final void rule__SPINDOUBLE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7380:1: ( ( ( '-' )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7381:1: ( ( '-' )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7381:1: ( ( '-' )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7382:1: ( '-' )?
            {
             before(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7383:1: ( '-' )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==15) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7384:2: '-'
                    {
                    match(input,15,FOLLOW_15_in_rule__SPINDOUBLE__Group__0__Impl15021); 

                    }
                    break;

            }

             after(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7395:1: rule__SPINDOUBLE__Group__1 : rule__SPINDOUBLE__Group__1__Impl ;
    public final void rule__SPINDOUBLE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7399:1: ( rule__SPINDOUBLE__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7400:2: rule__SPINDOUBLE__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group__1__Impl_in_rule__SPINDOUBLE__Group__115054);
            rule__SPINDOUBLE__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__1"


    // $ANTLR start "rule__SPINDOUBLE__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7406:1: rule__SPINDOUBLE__Group__1__Impl : ( ( rule__SPINDOUBLE__Alternatives_1 ) ) ;
    public final void rule__SPINDOUBLE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7410:1: ( ( ( rule__SPINDOUBLE__Alternatives_1 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7411:1: ( ( rule__SPINDOUBLE__Alternatives_1 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7411:1: ( ( rule__SPINDOUBLE__Alternatives_1 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7412:1: ( rule__SPINDOUBLE__Alternatives_1 )
            {
             before(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7413:1: ( rule__SPINDOUBLE__Alternatives_1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7413:2: rule__SPINDOUBLE__Alternatives_1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Alternatives_1_in_rule__SPINDOUBLE__Group__1__Impl15081);
            rule__SPINDOUBLE__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group__1__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7427:1: rule__SPINDOUBLE__Group_1_1__0 : rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1 ;
    public final void rule__SPINDOUBLE__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7431:1: ( rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7432:2: rule__SPINDOUBLE__Group_1_1__0__Impl rule__SPINDOUBLE__Group_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1__015115);
            rule__SPINDOUBLE__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__1_in_rule__SPINDOUBLE__Group_1_1__015118);
            rule__SPINDOUBLE__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__0"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7439:1: rule__SPINDOUBLE__Group_1_1__0__Impl : ( RULE_INT ) ;
    public final void rule__SPINDOUBLE__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7443:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7444:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7444:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7445:1: RULE_INT
            {
             before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1__0__Impl15145); 
             after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7456:1: rule__SPINDOUBLE__Group_1_1__1 : rule__SPINDOUBLE__Group_1_1__1__Impl ;
    public final void rule__SPINDOUBLE__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7460:1: ( rule__SPINDOUBLE__Group_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7461:2: rule__SPINDOUBLE__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1__115174);
            rule__SPINDOUBLE__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__1"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7467:1: rule__SPINDOUBLE__Group_1_1__1__Impl : ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? ) ;
    public final void rule__SPINDOUBLE__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7471:1: ( ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7472:1: ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7472:1: ( ( rule__SPINDOUBLE__Group_1_1_1__0 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7473:1: ( rule__SPINDOUBLE__Group_1_1_1__0 )?
            {
             before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7474:1: ( rule__SPINDOUBLE__Group_1_1_1__0 )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==62) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7474:2: rule__SPINDOUBLE__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0_in_rule__SPINDOUBLE__Group_1_1__1__Impl15201);
                    rule__SPINDOUBLE__Group_1_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1__1__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7488:1: rule__SPINDOUBLE__Group_1_1_1__0 : rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1 ;
    public final void rule__SPINDOUBLE__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7492:1: ( rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7493:2: rule__SPINDOUBLE__Group_1_1_1__0__Impl rule__SPINDOUBLE__Group_1_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1_1__015236);
            rule__SPINDOUBLE__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1_in_rule__SPINDOUBLE__Group_1_1_1__015239);
            rule__SPINDOUBLE__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__0"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7500:1: rule__SPINDOUBLE__Group_1_1_1__0__Impl : ( '.' ) ;
    public final void rule__SPINDOUBLE__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7504:1: ( ( '.' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7505:1: ( '.' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7505:1: ( '.' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7506:1: '.'
            {
             before(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); 
            match(input,62,FOLLOW_62_in_rule__SPINDOUBLE__Group_1_1_1__0__Impl15267); 
             after(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7519:1: rule__SPINDOUBLE__Group_1_1_1__1 : rule__SPINDOUBLE__Group_1_1_1__1__Impl ;
    public final void rule__SPINDOUBLE__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7523:1: ( rule__SPINDOUBLE__Group_1_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7524:2: rule__SPINDOUBLE__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1_1__115298);
            rule__SPINDOUBLE__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__1"


    // $ANTLR start "rule__SPINDOUBLE__Group_1_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7530:1: rule__SPINDOUBLE__Group_1_1_1__1__Impl : ( RULE_INT ) ;
    public final void rule__SPINDOUBLE__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7534:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7535:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7535:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7536:1: RULE_INT
            {
             before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1_1__1__Impl15325); 
             after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINDOUBLE__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7551:1: rule__SPINCHOREGFLAGS__Group_1__0 : rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1 ;
    public final void rule__SPINCHOREGFLAGS__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7555:1: ( rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7556:2: rule__SPINCHOREGFLAGS__Group_1__0__Impl rule__SPINCHOREGFLAGS__Group_1__1
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1__015358);
            rule__SPINCHOREGFLAGS__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1_in_rule__SPINCHOREGFLAGS__Group_1__015361);
            rule__SPINCHOREGFLAGS__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__0"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7563:1: rule__SPINCHOREGFLAGS__Group_1__0__Impl : ( RULE_ID ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7567:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7568:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7568:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7569:1: RULE_ID
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1__0__Impl15388); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__0__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7580:1: rule__SPINCHOREGFLAGS__Group_1__1 : rule__SPINCHOREGFLAGS__Group_1__1__Impl ;
    public final void rule__SPINCHOREGFLAGS__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7584:1: ( rule__SPINCHOREGFLAGS__Group_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7585:2: rule__SPINCHOREGFLAGS__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1__115417);
            rule__SPINCHOREGFLAGS__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__1"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7591:1: rule__SPINCHOREGFLAGS__Group_1__1__Impl : ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7595:1: ( ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7596:1: ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7596:1: ( ( rule__SPINCHOREGFLAGS__Group_1_1__0 )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7597:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0 )*
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7598:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0 )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==63) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7598:2: rule__SPINCHOREGFLAGS__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0_in_rule__SPINCHOREGFLAGS__Group_1__1__Impl15444);
            	    rule__SPINCHOREGFLAGS__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

             after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1__1__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7612:1: rule__SPINCHOREGFLAGS__Group_1_1__0 : rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1 ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7616:1: ( rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7617:2: rule__SPINCHOREGFLAGS__Group_1_1__0__Impl rule__SPINCHOREGFLAGS__Group_1_1__1
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__015479);
            rule__SPINCHOREGFLAGS__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1_in_rule__SPINCHOREGFLAGS__Group_1_1__015482);
            rule__SPINCHOREGFLAGS__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__0"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7624:1: rule__SPINCHOREGFLAGS__Group_1_1__0__Impl : ( '|' ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7628:1: ( ( '|' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7629:1: ( '|' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7629:1: ( '|' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7630:1: '|'
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); 
            match(input,63,FOLLOW_63_in_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl15510); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__0__Impl"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7643:1: rule__SPINCHOREGFLAGS__Group_1_1__1 : rule__SPINCHOREGFLAGS__Group_1_1__1__Impl ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7647:1: ( rule__SPINCHOREGFLAGS__Group_1_1__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7648:2: rule__SPINCHOREGFLAGS__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__115541);
            rule__SPINCHOREGFLAGS__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__1"


    // $ANTLR start "rule__SPINCHOREGFLAGS__Group_1_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7654:1: rule__SPINCHOREGFLAGS__Group_1_1__1__Impl : ( RULE_ID ) ;
    public final void rule__SPINCHOREGFLAGS__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7658:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7659:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7659:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7660:1: RULE_ID
            {
             before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl15568); 
             after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINCHOREGFLAGS__Group_1_1__1__Impl"


    // $ANTLR start "rule__SPINMEM__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7675:1: rule__SPINMEM__Group__0 : rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1 ;
    public final void rule__SPINMEM__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7679:1: ( rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7680:2: rule__SPINMEM__Group__0__Impl rule__SPINMEM__Group__1
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__0__Impl_in_rule__SPINMEM__Group__015601);
            rule__SPINMEM__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINMEM__Group__1_in_rule__SPINMEM__Group__015604);
            rule__SPINMEM__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__0"


    // $ANTLR start "rule__SPINMEM__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7687:1: rule__SPINMEM__Group__0__Impl : ( ( rule__SPINMEM__BufferAssignment_0 ) ) ;
    public final void rule__SPINMEM__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7691:1: ( ( ( rule__SPINMEM__BufferAssignment_0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7692:1: ( ( rule__SPINMEM__BufferAssignment_0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7692:1: ( ( rule__SPINMEM__BufferAssignment_0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7693:1: ( rule__SPINMEM__BufferAssignment_0 )
            {
             before(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7694:1: ( rule__SPINMEM__BufferAssignment_0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7694:2: rule__SPINMEM__BufferAssignment_0
            {
            pushFollow(FOLLOW_rule__SPINMEM__BufferAssignment_0_in_rule__SPINMEM__Group__0__Impl15631);
            rule__SPINMEM__BufferAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__0__Impl"


    // $ANTLR start "rule__SPINMEM__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7704:1: rule__SPINMEM__Group__1 : rule__SPINMEM__Group__1__Impl ;
    public final void rule__SPINMEM__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7708:1: ( rule__SPINMEM__Group__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7709:2: rule__SPINMEM__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__SPINMEM__Group__1__Impl_in_rule__SPINMEM__Group__115661);
            rule__SPINMEM__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__1"


    // $ANTLR start "rule__SPINMEM__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7715:1: rule__SPINMEM__Group__1__Impl : ( ( rule__SPINMEM__Alternatives_1 )? ) ;
    public final void rule__SPINMEM__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7719:1: ( ( ( rule__SPINMEM__Alternatives_1 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7720:1: ( ( rule__SPINMEM__Alternatives_1 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7720:1: ( ( rule__SPINMEM__Alternatives_1 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7721:1: ( rule__SPINMEM__Alternatives_1 )?
            {
             before(grammarAccess.getSPINMEMAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7722:1: ( rule__SPINMEM__Alternatives_1 )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_INT) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_ID) ) {
                int LA28_2 = input.LA(2);

                if ( (LA28_2==EOF||LA28_2==RULE_ID||LA28_2==RULE_SC_COMMENT||(LA28_2>=24 && LA28_2<=26)||(LA28_2>=28 && LA28_2<=61)) ) {
                    alt28=1;
                }
            }
            switch (alt28) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7722:2: rule__SPINMEM__Alternatives_1
                    {
                    pushFollow(FOLLOW_rule__SPINMEM__Alternatives_1_in_rule__SPINMEM__Group__1__Impl15688);
                    rule__SPINMEM__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINMEMAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__Group__1__Impl"


    // $ANTLR start "rule__SPINBUF__Group__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7736:1: rule__SPINBUF__Group__0 : rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1 ;
    public final void rule__SPINBUF__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7740:1: ( rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7741:2: rule__SPINBUF__Group__0__Impl rule__SPINBUF__Group__1
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__0__Impl_in_rule__SPINBUF__Group__015723);
            rule__SPINBUF__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINBUF__Group__1_in_rule__SPINBUF__Group__015726);
            rule__SPINBUF__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__0"


    // $ANTLR start "rule__SPINBUF__Group__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7748:1: rule__SPINBUF__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__SPINBUF__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7752:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7753:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7753:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7754:1: RULE_ID
            {
             before(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINBUF__Group__0__Impl15753); 
             after(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__0__Impl"


    // $ANTLR start "rule__SPINBUF__Group__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7765:1: rule__SPINBUF__Group__1 : rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2 ;
    public final void rule__SPINBUF__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7769:1: ( rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7770:2: rule__SPINBUF__Group__1__Impl rule__SPINBUF__Group__2
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__1__Impl_in_rule__SPINBUF__Group__115782);
            rule__SPINBUF__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__SPINBUF__Group__2_in_rule__SPINBUF__Group__115785);
            rule__SPINBUF__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__1"


    // $ANTLR start "rule__SPINBUF__Group__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7777:1: rule__SPINBUF__Group__1__Impl : ( ( rule__SPINBUF__Alternatives_1 )? ) ;
    public final void rule__SPINBUF__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7781:1: ( ( ( rule__SPINBUF__Alternatives_1 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7782:1: ( ( rule__SPINBUF__Alternatives_1 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7782:1: ( ( rule__SPINBUF__Alternatives_1 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7783:1: ( rule__SPINBUF__Alternatives_1 )?
            {
             before(grammarAccess.getSPINBUFAccess().getAlternatives_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7784:1: ( rule__SPINBUF__Alternatives_1 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=12 && LA29_0<=13)) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7784:2: rule__SPINBUF__Alternatives_1
                    {
                    pushFollow(FOLLOW_rule__SPINBUF__Alternatives_1_in_rule__SPINBUF__Group__1__Impl15812);
                    rule__SPINBUF__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINBUFAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__1__Impl"


    // $ANTLR start "rule__SPINBUF__Group__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7794:1: rule__SPINBUF__Group__2 : rule__SPINBUF__Group__2__Impl ;
    public final void rule__SPINBUF__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7798:1: ( rule__SPINBUF__Group__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7799:2: rule__SPINBUF__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__SPINBUF__Group__2__Impl_in_rule__SPINBUF__Group__215843);
            rule__SPINBUF__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__2"


    // $ANTLR start "rule__SPINBUF__Group__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7805:1: rule__SPINBUF__Group__2__Impl : ( ( rule__SPINBUF__Alternatives_2 )? ) ;
    public final void rule__SPINBUF__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7809:1: ( ( ( rule__SPINBUF__Alternatives_2 )? ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7810:1: ( ( rule__SPINBUF__Alternatives_2 )? )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7810:1: ( ( rule__SPINBUF__Alternatives_2 )? )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7811:1: ( rule__SPINBUF__Alternatives_2 )?
            {
             before(grammarAccess.getSPINBUFAccess().getAlternatives_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7812:1: ( rule__SPINBUF__Alternatives_2 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=14 && LA30_0<=15)) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7812:2: rule__SPINBUF__Alternatives_2
                    {
                    pushFollow(FOLLOW_rule__SPINBUF__Alternatives_2_in_rule__SPINBUF__Group__2__Impl15870);
                    rule__SPINBUF__Alternatives_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSPINBUFAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINBUF__Group__2__Impl"


    // $ANTLR start "rule__BINARY24__Group_0__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7828:1: rule__BINARY24__Group_0__0 : rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1 ;
    public final void rule__BINARY24__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7832:1: ( rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7833:2: rule__BINARY24__Group_0__0__Impl rule__BINARY24__Group_0__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0__0__Impl_in_rule__BINARY24__Group_0__015907);
            rule__BINARY24__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_0__1_in_rule__BINARY24__Group_0__015910);
            rule__BINARY24__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__0"


    // $ANTLR start "rule__BINARY24__Group_0__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7840:1: rule__BINARY24__Group_0__0__Impl : ( ( rule__BINARY24__Group_0_0__0 ) ) ;
    public final void rule__BINARY24__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7844:1: ( ( ( rule__BINARY24__Group_0_0__0 ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7845:1: ( ( rule__BINARY24__Group_0_0__0 ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7845:1: ( ( rule__BINARY24__Group_0_0__0 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7846:1: ( rule__BINARY24__Group_0_0__0 )
            {
             before(grammarAccess.getBINARY24Access().getGroup_0_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7847:1: ( rule__BINARY24__Group_0_0__0 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7847:2: rule__BINARY24__Group_0_0__0
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__0_in_rule__BINARY24__Group_0__0__Impl15937);
            rule__BINARY24__Group_0_0__0();

            state._fsp--;


            }

             after(grammarAccess.getBINARY24Access().getGroup_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_0__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7857:1: rule__BINARY24__Group_0__1 : rule__BINARY24__Group_0__1__Impl ;
    public final void rule__BINARY24__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7861:1: ( rule__BINARY24__Group_0__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7862:2: rule__BINARY24__Group_0__1__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0__1__Impl_in_rule__BINARY24__Group_0__115967);
            rule__BINARY24__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__1"


    // $ANTLR start "rule__BINARY24__Group_0__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7868:1: rule__BINARY24__Group_0__1__Impl : ( ( RULE_ID )* ) ;
    public final void rule__BINARY24__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7872:1: ( ( ( RULE_ID )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7873:1: ( ( RULE_ID )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7873:1: ( ( RULE_ID )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7874:1: ( RULE_ID )*
            {
             before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7875:1: ( RULE_ID )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_ID) ) {
                    int LA31_2 = input.LA(2);

                    if ( (LA31_2==EOF||LA31_2==RULE_ID||LA31_2==RULE_SC_COMMENT||(LA31_2>=24 && LA31_2<=26)||(LA31_2>=28 && LA31_2<=33)||(LA31_2>=35 && LA31_2<=61)) ) {
                        alt31=1;
                    }


                }


                switch (alt31) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7875:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__BINARY24__Group_0__1__Impl15995); 

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_0_0__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7889:1: rule__BINARY24__Group_0_0__0 : rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1 ;
    public final void rule__BINARY24__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7893:1: ( rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7894:2: rule__BINARY24__Group_0_0__0__Impl rule__BINARY24__Group_0_0__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__0__Impl_in_rule__BINARY24__Group_0_0__016030);
            rule__BINARY24__Group_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__1_in_rule__BINARY24__Group_0_0__016033);
            rule__BINARY24__Group_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__0"


    // $ANTLR start "rule__BINARY24__Group_0_0__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7901:1: rule__BINARY24__Group_0_0__0__Impl : ( '%' ) ;
    public final void rule__BINARY24__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7905:1: ( ( '%' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7906:1: ( '%' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7906:1: ( '%' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7907:1: '%'
            {
             before(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); 
            match(input,64,FOLLOW_64_in_rule__BINARY24__Group_0_0__0__Impl16061); 
             after(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_0_0__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7920:1: rule__BINARY24__Group_0_0__1 : rule__BINARY24__Group_0_0__1__Impl ;
    public final void rule__BINARY24__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7924:1: ( rule__BINARY24__Group_0_0__1__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7925:2: rule__BINARY24__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_0_0__1__Impl_in_rule__BINARY24__Group_0_0__116092);
            rule__BINARY24__Group_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__1"


    // $ANTLR start "rule__BINARY24__Group_0_0__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7931:1: rule__BINARY24__Group_0_0__1__Impl : ( RULE_INT ) ;
    public final void rule__BINARY24__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7935:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7936:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7936:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7937:1: RULE_INT
            {
             before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__BINARY24__Group_0_0__1__Impl16119); 
             after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_0_0__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7952:1: rule__BINARY24__Group_1__0 : rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1 ;
    public final void rule__BINARY24__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7956:1: ( rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7957:2: rule__BINARY24__Group_1__0__Impl rule__BINARY24__Group_1__1
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__0__Impl_in_rule__BINARY24__Group_1__016152);
            rule__BINARY24__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_1__1_in_rule__BINARY24__Group_1__016155);
            rule__BINARY24__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__0"


    // $ANTLR start "rule__BINARY24__Group_1__0__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7964:1: rule__BINARY24__Group_1__0__Impl : ( '$' ) ;
    public final void rule__BINARY24__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7968:1: ( ( '$' ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7969:1: ( '$' )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7969:1: ( '$' )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7970:1: '$'
            {
             before(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); 
            match(input,65,FOLLOW_65_in_rule__BINARY24__Group_1__0__Impl16183); 
             after(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__0__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7983:1: rule__BINARY24__Group_1__1 : rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2 ;
    public final void rule__BINARY24__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7987:1: ( rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7988:2: rule__BINARY24__Group_1__1__Impl rule__BINARY24__Group_1__2
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__1__Impl_in_rule__BINARY24__Group_1__116214);
            rule__BINARY24__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__BINARY24__Group_1__2_in_rule__BINARY24__Group_1__116217);
            rule__BINARY24__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__1"


    // $ANTLR start "rule__BINARY24__Group_1__1__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7995:1: rule__BINARY24__Group_1__1__Impl : ( ( RULE_INT )* ) ;
    public final void rule__BINARY24__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:7999:1: ( ( ( RULE_INT )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8000:1: ( ( RULE_INT )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8000:1: ( ( RULE_INT )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8001:1: ( RULE_INT )*
            {
             before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8002:1: ( RULE_INT )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==RULE_INT) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8002:3: RULE_INT
            	    {
            	    match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__BINARY24__Group_1__1__Impl16245); 

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__1__Impl"


    // $ANTLR start "rule__BINARY24__Group_1__2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8012:1: rule__BINARY24__Group_1__2 : rule__BINARY24__Group_1__2__Impl ;
    public final void rule__BINARY24__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8016:1: ( rule__BINARY24__Group_1__2__Impl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8017:2: rule__BINARY24__Group_1__2__Impl
            {
            pushFollow(FOLLOW_rule__BINARY24__Group_1__2__Impl_in_rule__BINARY24__Group_1__216276);
            rule__BINARY24__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__2"


    // $ANTLR start "rule__BINARY24__Group_1__2__Impl"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8023:1: rule__BINARY24__Group_1__2__Impl : ( ( RULE_ID )* ) ;
    public final void rule__BINARY24__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8027:1: ( ( ( RULE_ID )* ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8028:1: ( ( RULE_ID )* )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8028:1: ( ( RULE_ID )* )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8029:1: ( RULE_ID )*
            {
             before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8030:1: ( RULE_ID )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==RULE_ID) ) {
                    int LA33_2 = input.LA(2);

                    if ( (LA33_2==EOF||LA33_2==RULE_ID||LA33_2==RULE_SC_COMMENT||(LA33_2>=24 && LA33_2<=26)||(LA33_2>=28 && LA33_2<=33)||(LA33_2>=35 && LA33_2<=61)) ) {
                        alt33=1;
                    }


                }


                switch (alt33) {
            	case 1 :
            	    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8030:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__BINARY24__Group_1__2__Impl16304); 

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BINARY24__Group_1__2__Impl"


    // $ANTLR start "rule__Program__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8047:1: rule__Program__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Program__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8051:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8052:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8052:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8053:1: RULE_ID
            {
             before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Program__NameAssignment_116346); 
             after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__NameAssignment_1"


    // $ANTLR start "rule__Program__PinsAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8062:1: rule__Program__PinsAssignment_2 : ( rulePin ) ;
    public final void rule__Program__PinsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8066:1: ( ( rulePin ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8067:1: ( rulePin )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8067:1: ( rulePin )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8068:1: rulePin
            {
             before(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); 
            pushFollow(FOLLOW_rulePin_in_rule__Program__PinsAssignment_216377);
            rulePin();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__PinsAssignment_2"


    // $ANTLR start "rule__Program__ControlsAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8077:1: rule__Program__ControlsAssignment_3 : ( ruleControl ) ;
    public final void rule__Program__ControlsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8081:1: ( ( ruleControl ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8082:1: ( ruleControl )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8082:1: ( ruleControl )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8083:1: ruleControl
            {
             before(grammarAccess.getProgramAccess().getControlsControlParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleControl_in_rule__Program__ControlsAssignment_316408);
            ruleControl();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getControlsControlParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__ControlsAssignment_3"


    // $ANTLR start "rule__Program__ElementsAssignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8092:1: rule__Program__ElementsAssignment_4 : ( ruleSpinElement ) ;
    public final void rule__Program__ElementsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8096:1: ( ( ruleSpinElement ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8097:1: ( ruleSpinElement )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8097:1: ( ruleSpinElement )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8098:1: ruleSpinElement
            {
             before(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSpinElement_in_rule__Program__ElementsAssignment_416439);
            ruleSpinElement();

            state._fsp--;

             after(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__ElementsAssignment_4"


    // $ANTLR start "rule__AudioInput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8107:1: rule__AudioInput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AudioInput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8111:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8112:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8112:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8113:1: RULE_ID
            {
             before(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioInput__VarNameAssignment_116470); 
             after(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__VarNameAssignment_1"


    // $ANTLR start "rule__AudioInput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8122:1: rule__AudioInput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__AudioInput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8126:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8127:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8127:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8128:1: RULE_ID
            {
             before(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioInput__NameAssignment_216501); 
             after(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioInput__NameAssignment_2"


    // $ANTLR start "rule__AudioOutput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8137:1: rule__AudioOutput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AudioOutput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8141:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8142:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8142:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8143:1: RULE_ID
            {
             before(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioOutput__VarNameAssignment_116532); 
             after(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__VarNameAssignment_1"


    // $ANTLR start "rule__AudioOutput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8152:1: rule__AudioOutput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__AudioOutput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8156:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8157:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8157:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8158:1: RULE_ID
            {
             before(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AudioOutput__NameAssignment_216563); 
             after(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AudioOutput__NameAssignment_2"


    // $ANTLR start "rule__ControlInput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8167:1: rule__ControlInput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlInput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8171:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8172:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8172:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8173:1: RULE_ID
            {
             before(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlInput__VarNameAssignment_116594); 
             after(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__VarNameAssignment_1"


    // $ANTLR start "rule__ControlInput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8182:1: rule__ControlInput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlInput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8186:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8187:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8187:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8188:1: RULE_ID
            {
             before(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlInput__NameAssignment_216625); 
             after(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlInput__NameAssignment_2"


    // $ANTLR start "rule__ControlOutput__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8197:1: rule__ControlOutput__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlOutput__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8201:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8202:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8202:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8203:1: RULE_ID
            {
             before(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlOutput__VarNameAssignment_116656); 
             after(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__VarNameAssignment_1"


    // $ANTLR start "rule__ControlOutput__NameAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8212:1: rule__ControlOutput__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlOutput__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8216:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8217:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8217:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8218:1: RULE_ID
            {
             before(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlOutput__NameAssignment_216687); 
             after(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlOutput__NameAssignment_2"


    // $ANTLR start "rule__Slider__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8227:1: rule__Slider__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Slider__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8231:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8232:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8232:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8233:1: RULE_ID
            {
             before(grammarAccess.getSliderAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Slider__VarNameAssignment_116718); 
             after(grammarAccess.getSliderAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__VarNameAssignment_1"


    // $ANTLR start "rule__Slider__LabelAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8242:1: rule__Slider__LabelAssignment_2 : ( RULE_ID ) ;
    public final void rule__Slider__LabelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8246:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8247:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8247:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8248:1: RULE_ID
            {
             before(grammarAccess.getSliderAccess().getLabelIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Slider__LabelAssignment_216749); 
             after(grammarAccess.getSliderAccess().getLabelIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slider__LabelAssignment_2"


    // $ANTLR start "rule__CheckBox__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8257:1: rule__CheckBox__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__CheckBox__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8261:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8262:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8262:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8263:1: RULE_ID
            {
             before(grammarAccess.getCheckBoxAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__CheckBox__VarNameAssignment_116780); 
             after(grammarAccess.getCheckBoxAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__VarNameAssignment_1"


    // $ANTLR start "rule__CheckBox__LabelAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8272:1: rule__CheckBox__LabelAssignment_2 : ( RULE_ID ) ;
    public final void rule__CheckBox__LabelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8276:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8277:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8277:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8278:1: RULE_ID
            {
             before(grammarAccess.getCheckBoxAccess().getLabelIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__CheckBox__LabelAssignment_216811); 
             after(grammarAccess.getCheckBoxAccess().getLabelIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CheckBox__LabelAssignment_2"


    // $ANTLR start "rule__ControlLabel__VarNameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8287:1: rule__ControlLabel__VarNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ControlLabel__VarNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8291:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8292:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8292:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8293:1: RULE_ID
            {
             before(grammarAccess.getControlLabelAccess().getVarNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlLabel__VarNameAssignment_116842); 
             after(grammarAccess.getControlLabelAccess().getVarNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__VarNameAssignment_1"


    // $ANTLR start "rule__ControlLabel__LabelAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8302:1: rule__ControlLabel__LabelAssignment_2 : ( RULE_ID ) ;
    public final void rule__ControlLabel__LabelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8306:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8307:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8307:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8308:1: RULE_ID
            {
             before(grammarAccess.getControlLabelAccess().getLabelIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ControlLabel__LabelAssignment_216873); 
             after(grammarAccess.getControlLabelAccess().getLabelIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ControlLabel__LabelAssignment_2"


    // $ANTLR start "rule__Equate__EnameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8317:1: rule__Equate__EnameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Equate__EnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8321:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8322:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8322:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8323:1: RULE_ID
            {
             before(grammarAccess.getEquateAccess().getEnameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Equate__EnameAssignment_116904); 
             after(grammarAccess.getEquateAccess().getEnameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__EnameAssignment_1"


    // $ANTLR start "rule__Equate__ValueAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8332:1: rule__Equate__ValueAssignment_2 : ( ruleSPINDOUBLE ) ;
    public final void rule__Equate__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8336:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8337:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8337:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8338:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Equate__ValueAssignment_216935);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equate__ValueAssignment_2"


    // $ANTLR start "rule__Mem__BufferAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8347:1: rule__Mem__BufferAssignment_1 : ( RULE_ID ) ;
    public final void rule__Mem__BufferAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8351:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8352:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8352:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8353:1: RULE_ID
            {
             before(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Mem__BufferAssignment_116966); 
             after(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__BufferAssignment_1"


    // $ANTLR start "rule__Mem__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8362:1: rule__Mem__LengthAssignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__Mem__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8366:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8367:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8367:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8368:1: ruleSPINREGISTER
            {
             before(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__Mem__LengthAssignment_216997);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mem__LengthAssignment_2"


    // $ANTLR start "rule__Offset__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8377:1: rule__Offset__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Offset__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8381:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8382:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8382:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8383:1: RULE_ID
            {
             before(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Offset__NameAssignment_117028); 
             after(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__NameAssignment_1"


    // $ANTLR start "rule__Offset__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8392:1: rule__Offset__LengthAssignment_2 : ( RULE_INT ) ;
    public final void rule__Offset__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8396:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8397:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8397:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8398:1: RULE_INT
            {
             before(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__Offset__LengthAssignment_217059); 
             after(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__LengthAssignment_2"


    // $ANTLR start "rule__Comment__RemarkAssignment"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8407:1: rule__Comment__RemarkAssignment : ( RULE_SC_COMMENT ) ;
    public final void rule__Comment__RemarkAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8411:1: ( ( RULE_SC_COMMENT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8412:1: ( RULE_SC_COMMENT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8412:1: ( RULE_SC_COMMENT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8413:1: RULE_SC_COMMENT
            {
             before(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); 
            match(input,RULE_SC_COMMENT,FOLLOW_RULE_SC_COMMENT_in_rule__Comment__RemarkAssignment17090); 
             after(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__RemarkAssignment"


    // $ANTLR start "rule__Label__NameAssignment_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8422:1: rule__Label__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__Label__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8426:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8427:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8427:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8428:1: RULE_ID
            {
             before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Label__NameAssignment_017121); 
             after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Label__NameAssignment_0"


    // $ANTLR start "rule__IsPinConnected__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8437:1: rule__IsPinConnected__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__IsPinConnected__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8441:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8442:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8442:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8443:1: RULE_ID
            {
             before(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__IsPinConnected__Arg1Assignment_117152); 
             after(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsPinConnected__Arg1Assignment_1"


    // $ANTLR start "rule__GetInputDefault__NameAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8452:1: rule__GetInputDefault__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__GetInputDefault__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8456:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8457:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8457:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8458:1: RULE_ID
            {
             before(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetInputDefault__NameAssignment_117183); 
             after(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__NameAssignment_1"


    // $ANTLR start "rule__GetInputDefault__VariableAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8467:1: rule__GetInputDefault__VariableAssignment_2 : ( RULE_ID ) ;
    public final void rule__GetInputDefault__VariableAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8471:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8472:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8472:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8473:1: RULE_ID
            {
             before(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetInputDefault__VariableAssignment_217214); 
             after(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__VariableAssignment_2"


    // $ANTLR start "rule__GetInputDefault__ScaleAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8482:1: rule__GetInputDefault__ScaleAssignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__GetInputDefault__ScaleAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8486:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8487:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8487:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8488:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__ScaleAssignment_317245);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__ScaleAssignment_3"


    // $ANTLR start "rule__GetInputDefault__DefaultValAssignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8497:1: rule__GetInputDefault__DefaultValAssignment_4 : ( ruleSPINDOUBLE ) ;
    public final void rule__GetInputDefault__DefaultValAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8501:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8502:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8502:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8503:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__DefaultValAssignment_417276);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetInputDefault__DefaultValAssignment_4"


    // $ANTLR start "rule__GetDelayScale__BufferAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8512:1: rule__GetDelayScale__BufferAssignment_1 : ( RULE_ID ) ;
    public final void rule__GetDelayScale__BufferAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8516:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8517:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8517:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8518:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleAccess().getBufferIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScale__BufferAssignment_117307); 
             after(grammarAccess.getGetDelayScaleAccess().getBufferIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__BufferAssignment_1"


    // $ANTLR start "rule__GetDelayScale__LengthAssignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8527:1: rule__GetDelayScale__LengthAssignment_2 : ( RULE_ID ) ;
    public final void rule__GetDelayScale__LengthAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8531:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8532:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8532:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8533:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleAccess().getLengthIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScale__LengthAssignment_217338); 
             after(grammarAccess.getGetDelayScaleAccess().getLengthIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__LengthAssignment_2"


    // $ANTLR start "rule__GetDelayScale__ControlAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8542:1: rule__GetDelayScale__ControlAssignment_3 : ( RULE_ID ) ;
    public final void rule__GetDelayScale__ControlAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8546:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8547:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8547:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8548:1: RULE_ID
            {
             before(grammarAccess.getGetDelayScaleAccess().getControlIDTerminalRuleCall_3_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__GetDelayScale__ControlAssignment_317369); 
             after(grammarAccess.getGetDelayScaleAccess().getControlIDTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GetDelayScale__ControlAssignment_3"


    // $ANTLR start "rule__ReadRegister__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8557:1: rule__ReadRegister__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__ReadRegister__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8561:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8562:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8562:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8563:1: ruleSPINREGISTER
            {
             before(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ReadRegister__Arg1Assignment_117400);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Arg1Assignment_1"


    // $ANTLR start "rule__ReadRegister__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8572:1: rule__ReadRegister__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadRegister__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8576:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8577:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8577:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8578:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegister__Arg2Assignment_317431);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegister__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegisterLowshelf__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8587:1: rule__WriteRegisterLowshelf__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegisterLowshelf__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8591:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8592:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8592:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8593:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterLowshelf__Arg1Assignment_117462);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegisterLowshelf__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8602:1: rule__WriteRegisterLowshelf__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegisterLowshelf__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8606:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8607:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8607:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8608:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterLowshelf__Arg2Assignment_317493);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterLowshelf__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegisterHighshelf__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8617:1: rule__WriteRegisterHighshelf__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegisterHighshelf__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8621:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8622:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8622:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8623:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterHighshelf__Arg1Assignment_117524);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegisterHighshelf__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8632:1: rule__WriteRegisterHighshelf__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegisterHighshelf__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8636:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8637:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8637:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8638:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterHighshelf__Arg2Assignment_317555);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegisterHighshelf__Arg2Assignment_3"


    // $ANTLR start "rule__WriteRegister__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8647:1: rule__WriteRegister__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__WriteRegister__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8651:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8652:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8652:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8653:1: ruleSPINREGISTER
            {
             before(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__WriteRegister__Arg1Assignment_117586);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Arg1Assignment_1"


    // $ANTLR start "rule__WriteRegister__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8662:1: rule__WriteRegister__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteRegister__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8666:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8667:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8667:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8668:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegister__Arg2Assignment_317617);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteRegister__Arg2Assignment_3"


    // $ANTLR start "rule__Maxx__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8677:1: rule__Maxx__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__Maxx__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8681:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8682:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8682:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8683:1: ruleSPINREGISTER
            {
             before(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__Maxx__Arg1Assignment_117648);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Arg1Assignment_1"


    // $ANTLR start "rule__Maxx__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8692:1: rule__Maxx__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Maxx__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8696:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8697:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8697:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8698:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Maxx__Arg2Assignment_317679);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Maxx__Arg2Assignment_3"


    // $ANTLR start "rule__ReadRegisterFilter__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8707:1: rule__ReadRegisterFilter__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__ReadRegisterFilter__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8711:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8712:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8712:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8713:1: ruleSPINREGISTER
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ReadRegisterFilter__Arg1Assignment_117710);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Arg1Assignment_1"


    // $ANTLR start "rule__ReadRegisterFilter__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8722:1: rule__ReadRegisterFilter__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadRegisterFilter__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8726:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8727:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8727:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8728:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegisterFilter__Arg2Assignment_317741);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadRegisterFilter__Arg2Assignment_3"


    // $ANTLR start "rule__Mulx__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8737:1: rule__Mulx__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Mulx__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8741:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8742:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8742:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8743:1: RULE_ID
            {
             before(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Mulx__Arg1Assignment_117772); 
             after(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mulx__Arg1Assignment_1"


    // $ANTLR start "rule__Ldax__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8752:1: rule__Ldax__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Ldax__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8756:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8757:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8757:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8758:1: RULE_ID
            {
             before(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Ldax__Arg1Assignment_117803); 
             after(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ldax__Arg1Assignment_1"


    // $ANTLR start "rule__Exp__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8767:1: rule__Exp__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__Exp__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8771:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8772:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8772:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8773:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg1Assignment_117834);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Arg1Assignment_1"


    // $ANTLR start "rule__Exp__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8782:1: rule__Exp__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Exp__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8786:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8787:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8787:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8788:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg2Assignment_317865);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Exp__Arg2Assignment_3"


    // $ANTLR start "rule__Log__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8797:1: rule__Log__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__Log__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8801:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8802:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8802:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8803:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg1Assignment_117896);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Arg1Assignment_1"


    // $ANTLR start "rule__Log__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8812:1: rule__Log__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__Log__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8816:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8817:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8817:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8818:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg2Assignment_317927);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Log__Arg2Assignment_3"


    // $ANTLR start "rule__ScaleOffset__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8827:1: rule__ScaleOffset__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__ScaleOffset__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8831:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8832:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8832:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8833:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg1Assignment_117958);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Arg1Assignment_1"


    // $ANTLR start "rule__ScaleOffset__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8842:1: rule__ScaleOffset__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ScaleOffset__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8846:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8847:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8847:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8848:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg2Assignment_317989);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScaleOffset__Arg2Assignment_3"


    // $ANTLR start "rule__WriteDelay__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8857:1: rule__WriteDelay__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__WriteDelay__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8861:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8862:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8862:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8863:1: ruleSPINMEM
            {
             before(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__WriteDelay__Arg1Assignment_118020);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Arg1Assignment_1"


    // $ANTLR start "rule__WriteDelay__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8872:1: rule__WriteDelay__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteDelay__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8876:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8877:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8877:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8878:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteDelay__Arg2Assignment_318051);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteDelay__Arg2Assignment_3"


    // $ANTLR start "rule__WriteAllpass__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8887:1: rule__WriteAllpass__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__WriteAllpass__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8891:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8892:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8892:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8893:1: ruleSPINMEM
            {
             before(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__WriteAllpass__Arg1Assignment_118082);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Arg1Assignment_1"


    // $ANTLR start "rule__WriteAllpass__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8902:1: rule__WriteAllpass__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__WriteAllpass__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8906:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8907:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8907:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8908:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__WriteAllpass__Arg2Assignment_318113);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WriteAllpass__Arg2Assignment_3"


    // $ANTLR start "rule__ReadDelay__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8917:1: rule__ReadDelay__Arg1Assignment_1 : ( ruleSPINMEM ) ;
    public final void rule__ReadDelay__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8921:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8922:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8922:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8923:1: ruleSPINMEM
            {
             before(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__ReadDelay__Arg1Assignment_118144);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Arg1Assignment_1"


    // $ANTLR start "rule__ReadDelay__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8932:1: rule__ReadDelay__Arg2Assignment_3 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadDelay__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8936:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8937:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8937:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8938:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelay__Arg2Assignment_318175);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelay__Arg2Assignment_3"


    // $ANTLR start "rule__LoadSinLFO__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8947:1: rule__LoadSinLFO__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__LoadSinLFO__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8951:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8952:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8952:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8953:1: ruleSPINREGISTER
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__LoadSinLFO__Arg1Assignment_118206);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg1Assignment_1"


    // $ANTLR start "rule__LoadSinLFO__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8962:1: rule__LoadSinLFO__Arg2Assignment_3 : ( RULE_INT ) ;
    public final void rule__LoadSinLFO__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8966:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8967:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8967:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8968:1: RULE_INT
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg2Assignment_318237); 
             after(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg2Assignment_3"


    // $ANTLR start "rule__LoadSinLFO__Arg3Assignment_5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8977:1: rule__LoadSinLFO__Arg3Assignment_5 : ( RULE_INT ) ;
    public final void rule__LoadSinLFO__Arg3Assignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8981:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8982:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8982:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8983:1: RULE_INT
            {
             before(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg3Assignment_518268); 
             after(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadSinLFO__Arg3Assignment_5"


    // $ANTLR start "rule__LoadRampLFO__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8992:1: rule__LoadRampLFO__Arg1Assignment_1 : ( ruleSPINREGISTER ) ;
    public final void rule__LoadRampLFO__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8996:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8997:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8997:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:8998:1: ruleSPINREGISTER
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__LoadRampLFO__Arg1Assignment_118299);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg1Assignment_1"


    // $ANTLR start "rule__LoadRampLFO__Arg2Assignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9007:1: rule__LoadRampLFO__Arg2Assignment_3 : ( RULE_INT ) ;
    public final void rule__LoadRampLFO__Arg2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9011:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9012:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9012:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9013:1: RULE_INT
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg2Assignment_318330); 
             after(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg2Assignment_3"


    // $ANTLR start "rule__LoadRampLFO__Arg3Assignment_5"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9022:1: rule__LoadRampLFO__Arg3Assignment_5 : ( RULE_INT ) ;
    public final void rule__LoadRampLFO__Arg3Assignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9026:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9027:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9027:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9028:1: RULE_INT
            {
             before(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg3Assignment_518361); 
             after(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LoadRampLFO__Arg3Assignment_5"


    // $ANTLR start "rule__ChorusReadDelay__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9037:1: rule__ChorusReadDelay__Arg1Assignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__ChorusReadDelay__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9041:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9042:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9042:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9043:1: ruleSPINREGISTER
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadDelay__Arg1Assignment_218392);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusReadDelay__Arg2Assignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9052:1: rule__ChorusReadDelay__Arg2Assignment_4 : ( ruleSPINCHOREGFLAGS ) ;
    public final void rule__ChorusReadDelay__Arg2Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9056:1: ( ( ruleSPINCHOREGFLAGS ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9057:1: ( ruleSPINCHOREGFLAGS )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9057:1: ( ruleSPINCHOREGFLAGS )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9058:1: ruleSPINCHOREGFLAGS
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusReadDelay__Arg2Assignment_418423);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg2Assignment_4"


    // $ANTLR start "rule__ChorusReadDelay__Arg3Assignment_6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9067:1: rule__ChorusReadDelay__Arg3Assignment_6 : ( ruleSPINMEM ) ;
    public final void rule__ChorusReadDelay__Arg3Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9071:1: ( ( ruleSPINMEM ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9072:1: ( ruleSPINMEM )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9072:1: ( ruleSPINMEM )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9073:1: ruleSPINMEM
            {
             before(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); 
            pushFollow(FOLLOW_ruleSPINMEM_in_rule__ChorusReadDelay__Arg3Assignment_618454);
            ruleSPINMEM();

            state._fsp--;

             after(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadDelay__Arg3Assignment_6"


    // $ANTLR start "rule__ChorusReadValue__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9082:1: rule__ChorusReadValue__Arg1Assignment_2 : ( ruleSPINREGISTER ) ;
    public final void rule__ChorusReadValue__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9086:1: ( ( ruleSPINREGISTER ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9087:1: ( ruleSPINREGISTER )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9087:1: ( ruleSPINREGISTER )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9088:1: ruleSPINREGISTER
            {
             before(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadValue__Arg1Assignment_218485);
            ruleSPINREGISTER();

            state._fsp--;

             after(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusReadValue__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusScaleOffset__Arg1Assignment_2"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9097:1: rule__ChorusScaleOffset__Arg1Assignment_2 : ( RULE_ID ) ;
    public final void rule__ChorusScaleOffset__Arg1Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9101:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9102:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9102:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9103:1: RULE_ID
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ChorusScaleOffset__Arg1Assignment_218516); 
             after(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg1Assignment_2"


    // $ANTLR start "rule__ChorusScaleOffset__Arg2Assignment_4"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9112:1: rule__ChorusScaleOffset__Arg2Assignment_4 : ( ruleSPINCHOREGFLAGS ) ;
    public final void rule__ChorusScaleOffset__Arg2Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9116:1: ( ( ruleSPINCHOREGFLAGS ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9117:1: ( ruleSPINCHOREGFLAGS )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9117:1: ( ruleSPINCHOREGFLAGS )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9118:1: ruleSPINCHOREGFLAGS
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 
            pushFollow(FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusScaleOffset__Arg2Assignment_418547);
            ruleSPINCHOREGFLAGS();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg2Assignment_4"


    // $ANTLR start "rule__ChorusScaleOffset__Arg3Assignment_6"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9127:1: rule__ChorusScaleOffset__Arg3Assignment_6 : ( ruleSPINDOUBLE ) ;
    public final void rule__ChorusScaleOffset__Arg3Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9131:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9132:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9132:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9133:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ChorusScaleOffset__Arg3Assignment_618578);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChorusScaleOffset__Arg3Assignment_6"


    // $ANTLR start "rule__ReadDelayPointer__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9142:1: rule__ReadDelayPointer__Arg1Assignment_1 : ( ruleSPINDOUBLE ) ;
    public final void rule__ReadDelayPointer__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9146:1: ( ( ruleSPINDOUBLE ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9147:1: ( ruleSPINDOUBLE )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9147:1: ( ruleSPINDOUBLE )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9148:1: ruleSPINDOUBLE
            {
             before(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelayPointer__Arg1Assignment_118609);
            ruleSPINDOUBLE();

            state._fsp--;

             after(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReadDelayPointer__Arg1Assignment_1"


    // $ANTLR start "rule__And__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9157:1: rule__And__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__And__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9161:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9162:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9162:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9163:1: ruleBINARY24
            {
             before(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__And__Arg1Assignment_118640);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Arg1Assignment_1"


    // $ANTLR start "rule__Or__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9172:1: rule__Or__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__Or__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9176:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9177:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9177:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9178:1: ruleBINARY24
            {
             before(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__Or__Arg1Assignment_118671);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Arg1Assignment_1"


    // $ANTLR start "rule__Xor__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9187:1: rule__Xor__Arg1Assignment_1 : ( ruleBINARY24 ) ;
    public final void rule__Xor__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9191:1: ( ( ruleBINARY24 ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9192:1: ( ruleBINARY24 )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9192:1: ( ruleBINARY24 )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9193:1: ruleBINARY24
            {
             before(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleBINARY24_in_rule__Xor__Arg1Assignment_118702);
            ruleBINARY24();

            state._fsp--;

             after(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Xor__Arg1Assignment_1"


    // $ANTLR start "rule__Jam__Arg1Assignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9202:1: rule__Jam__Arg1Assignment_1 : ( RULE_ID ) ;
    public final void rule__Jam__Arg1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9206:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9207:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9207:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9208:1: RULE_ID
            {
             before(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Jam__Arg1Assignment_118733); 
             after(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Jam__Arg1Assignment_1"


    // $ANTLR start "rule__Skip__FlagsAssignment_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9217:1: rule__Skip__FlagsAssignment_1 : ( RULE_ID ) ;
    public final void rule__Skip__FlagsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9221:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9222:1: ( RULE_ID )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9222:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9223:1: RULE_ID
            {
             before(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Skip__FlagsAssignment_118764); 
             after(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__FlagsAssignment_1"


    // $ANTLR start "rule__Skip__LabelAssignment_3"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9232:1: rule__Skip__LabelAssignment_3 : ( ( RULE_ID ) ) ;
    public final void rule__Skip__LabelAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9236:1: ( ( ( RULE_ID ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9237:1: ( ( RULE_ID ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9237:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9238:1: ( RULE_ID )
            {
             before(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9239:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9240:1: RULE_ID
            {
             before(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Skip__LabelAssignment_318799); 
             after(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); 

            }

             after(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skip__LabelAssignment_3"


    // $ANTLR start "rule__SPINMEM__BufferAssignment_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9251:1: rule__SPINMEM__BufferAssignment_0 : ( ruleSPINBUF ) ;
    public final void rule__SPINMEM__BufferAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9255:1: ( ( ruleSPINBUF ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9256:1: ( ruleSPINBUF )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9256:1: ( ruleSPINBUF )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9257:1: ruleSPINBUF
            {
             before(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); 
            pushFollow(FOLLOW_ruleSPINBUF_in_rule__SPINMEM__BufferAssignment_018834);
            ruleSPINBUF();

            state._fsp--;

             after(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__BufferAssignment_0"


    // $ANTLR start "rule__SPINMEM__ValueAssignment_1_0"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9266:1: rule__SPINMEM__ValueAssignment_1_0 : ( RULE_INT ) ;
    public final void rule__SPINMEM__ValueAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9270:1: ( ( RULE_INT ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9271:1: ( RULE_INT )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9271:1: ( RULE_INT )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9272:1: RULE_INT
            {
             before(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); 
            match(input,RULE_INT,FOLLOW_RULE_INT_in_rule__SPINMEM__ValueAssignment_1_018865); 
             after(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__ValueAssignment_1_0"


    // $ANTLR start "rule__SPINMEM__OffsetAssignment_1_1"
    // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9281:1: rule__SPINMEM__OffsetAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__SPINMEM__OffsetAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9285:1: ( ( ( RULE_ID ) ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9286:1: ( ( RULE_ID ) )
            {
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9286:1: ( ( RULE_ID ) )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9287:1: ( RULE_ID )
            {
             before(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); 
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9288:1: ( RULE_ID )
            // ../com.holycityaudio.spincad.ui/src-gen/com/holycityaudio/spincad/ui/contentassist/antlr/internal/InternalSpinCAD.g:9289:1: RULE_ID
            {
             before(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__SPINMEM__OffsetAssignment_1_118900); 
             after(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); 

            }

             after(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SPINMEM__OffsetAssignment_1_1"

    // Delegated rules


 

    public static final BitSet FOLLOW_ruleProgram_in_entryRuleProgram61 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProgram68 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__0_in_ruleProgram94 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePin_in_entryRulePin121 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePin128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Pin__Alternatives_in_rulePin154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInputPin_in_entryRuleInputPin181 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInputPin188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__InputPin__Alternatives_in_ruleInputPin214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutputPin_in_entryRuleOutputPin241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOutputPin248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__OutputPin__Alternatives_in_ruleOutputPin274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioInput_in_entryRuleAudioInput301 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAudioInput308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__0_in_ruleAudioInput334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioOutput_in_entryRuleAudioOutput361 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAudioOutput368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__0_in_ruleAudioOutput394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlInput_in_entryRuleControlInput421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControlInput428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__0_in_ruleControlInput454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlOutput_in_entryRuleControlOutput481 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControlOutput488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__0_in_ruleControlOutput514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControl_in_entryRuleControl541 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleControl548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Control__Alternatives_in_ruleControl574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSlider_in_entryRuleSlider601 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSlider608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__Group__0_in_ruleSlider634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCheckBox_in_entryRuleCheckBox661 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCheckBox668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__0_in_ruleCheckBox694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulecontrolLabel_in_entryRulecontrolLabel721 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulecontrolLabel728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__0_in_rulecontrolLabel754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinElement_in_entryRuleSpinElement781 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSpinElement788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SpinElement__Alternatives_in_ruleSpinElement814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEquate_in_entryRuleEquate841 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEquate848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__0_in_ruleEquate874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMem_in_entryRuleMem901 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMem908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__0_in_ruleMem934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOffset_in_entryRuleOffset961 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOffset968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__0_in_ruleOffset994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_entryRuleComment1021 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComment1028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comment__RemarkAssignment_in_ruleComment1054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_entryRuleLabel1081 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabel1088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__0_in_ruleLabel1114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMacro_in_entryRuleMacro1141 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMacro1148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Macro__Alternatives_in_ruleMacro1174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsPinConnected_in_entryRuleIsPinConnected1201 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsPinConnected1208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__0_in_ruleIsPinConnected1234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsElse_in_entryRuleIsElse1261 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsElse1268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__0_in_ruleIsElse1294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsEndif_in_entryRuleIsEndif1321 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIsEndif1328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__0_in_ruleIsEndif1354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetInputDefault_in_entryRuleGetInputDefault1381 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetInputDefault1388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__0_in_ruleGetInputDefault1414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetDelayScale_in_entryRuleGetDelayScale1441 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGetDelayScale1448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__0_in_ruleGetDelayScale1474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstruction_in_entryRuleInstruction1501 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInstruction1508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Instruction__Alternatives_in_ruleInstruction1534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_S1_14_in_entryRuleInst_B6_S1_141561 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B6_S1_141568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B6_S1_14__Alternatives_in_ruleInst_B6_S1_141594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B15_S1_9_in_entryRuleInst_B15_S1_91621 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B15_S1_91628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B15_S1_9__Alternatives_in_ruleInst_B15_S1_91654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_in_entryRuleInst_B61681 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B61688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B6__Alternatives_in_ruleInst_B61714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B24_in_entryRuleInst_B241741 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_B241748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_B24__Alternatives_in_ruleInst_B241774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_X0_in_entryRuleInst_X01801 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_X01808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_X0__Alternatives_in_ruleInst_X01834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_S1_14_S1_10_in_entryRuleInst_S1_14_S1_101861 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInst_S1_14_S1_101868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Inst_S1_14_S1_10__Alternatives_in_ruleInst_S1_14_S1_101894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegister_in_entryRuleReadRegister1921 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadRegister1928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__0_in_ruleReadRegister1954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterLowshelf_in_entryRuleWriteRegisterLowshelf1981 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegisterLowshelf1988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__0_in_ruleWriteRegisterLowshelf2014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterHighshelf_in_entryRuleWriteRegisterHighshelf2041 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegisterHighshelf2048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__0_in_ruleWriteRegisterHighshelf2074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegister_in_entryRuleWriteRegister2101 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteRegister2108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__0_in_ruleWriteRegister2134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMaxx_in_entryRuleMaxx2161 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMaxx2168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__0_in_ruleMaxx2194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegisterFilter_in_entryRuleReadRegisterFilter2221 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadRegisterFilter2228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__0_in_ruleReadRegisterFilter2254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulx_in_entryRuleMulx2281 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMulx2288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__0_in_ruleMulx2314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLdax_in_entryRuleLdax2341 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLdax2348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__0_in_ruleLdax2374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExp_in_entryRuleExp2401 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExp2408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__0_in_ruleExp2434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLog_in_entryRuleLog2461 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLog2468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__0_in_ruleLog2494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleScaleOffset_in_entryRuleScaleOffset2521 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleScaleOffset2528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__0_in_ruleScaleOffset2554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteDelay_in_entryRuleWriteDelay2581 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteDelay2588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__0_in_ruleWriteDelay2614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteAllpass_in_entryRuleWriteAllpass2641 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWriteAllpass2648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__0_in_ruleWriteAllpass2674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelay_in_entryRuleReadDelay2701 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadDelay2708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__0_in_ruleReadDelay2734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadSinLFO_in_entryRuleLoadSinLFO2761 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLoadSinLFO2768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__0_in_ruleLoadSinLFO2794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadRampLFO_in_entryRuleLoadRampLFO2821 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLoadRampLFO2828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__0_in_ruleLoadRampLFO2854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadDelay_in_entryRuleChorusReadDelay2881 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusReadDelay2888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__0_in_ruleChorusReadDelay2914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadValue_in_entryRuleChorusReadValue2941 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusReadValue2948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__0_in_ruleChorusReadValue2974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusScaleOffset_in_entryRuleChorusScaleOffset3001 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChorusScaleOffset3008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__0_in_ruleChorusScaleOffset3034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelayPointer_in_entryRuleReadDelayPointer3061 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReadDelayPointer3068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__0_in_ruleReadDelayPointer3094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnd_in_entryRuleAnd3121 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAnd3128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__0_in_ruleAnd3154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOr_in_entryRuleOr3181 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOr3188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__0_in_ruleOr3214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXor_in_entryRuleXor3241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXor3248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__0_in_ruleXor3274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJam_in_entryRuleJam3301 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJam3308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__0_in_ruleJam3334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClr_in_entryRuleClr3361 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleClr3368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__0_in_ruleClr3394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNot_in_entryRuleNot3421 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNot3428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__0_in_ruleNot3454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbsa_in_entryRuleAbsa3481 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbsa3488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__0_in_ruleAbsa3514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSkip_in_entryRuleSkip3541 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSkip3548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__0_in_ruleSkip3574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_entryRuleSPINDOUBLE3601 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINDOUBLE3608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__0_in_ruleSPINDOUBLE3634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_entryRuleSPINREGISTER3661 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINREGISTER3668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINREGISTER__Alternatives_in_ruleSPINREGISTER3694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_entryRuleSPINCHOREGFLAGS3721 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINCHOREGFLAGS3728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Alternatives_in_ruleSPINCHOREGFLAGS3754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_entryRuleSPINMEM3781 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINMEM3788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__0_in_ruleSPINMEM3814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINBUF_in_entryRuleSPINBUF3841 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSPINBUF3848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__0_in_ruleSPINBUF3874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_entryRuleBINARY243901 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBINARY243908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Alternatives_in_ruleBINARY243934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInputPin_in_rule__Pin__Alternatives3970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutputPin_in_rule__Pin__Alternatives3987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioInput_in_rule__InputPin__Alternatives4019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlInput_in_rule__InputPin__Alternatives4036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAudioOutput_in_rule__OutputPin__Alternatives4068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControlOutput_in_rule__OutputPin__Alternatives4085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSlider_in_rule__Control__Alternatives4117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCheckBox_in_rule__Control__Alternatives4134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulecontrolLabel_in_rule__Control__Alternatives4151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEquate_in_rule__SpinElement__Alternatives4183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMem_in_rule__SpinElement__Alternatives4200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstruction_in_rule__SpinElement__Alternatives4217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_rule__SpinElement__Alternatives4234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_rule__SpinElement__Alternatives4251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMacro_in_rule__SpinElement__Alternatives4268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOffset_in_rule__SpinElement__Alternatives4285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsPinConnected_in_rule__Macro__Alternatives4317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsElse_in_rule__Macro__Alternatives4334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIsEndif_in_rule__Macro__Alternatives4351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetInputDefault_in_rule__Macro__Alternatives4368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGetDelayScale_in_rule__Macro__Alternatives4385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B15_S1_9_in_rule__Instruction__Alternatives4417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_S1_14_in_rule__Instruction__Alternatives4434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_S1_14_S1_10_in_rule__Instruction__Alternatives4451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B6_in_rule__Instruction__Alternatives4468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_B24_in_rule__Instruction__Alternatives4485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSkip_in_rule__Instruction__Alternatives4502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJam_in_rule__Instruction__Alternatives4519 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInst_X0_in_rule__Instruction__Alternatives4536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadSinLFO_in_rule__Instruction__Alternatives4553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLoadRampLFO_in_rule__Instruction__Alternatives4570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadDelay_in_rule__Instruction__Alternatives4587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusReadValue_in_rule__Instruction__Alternatives4604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChorusScaleOffset_in_rule__Instruction__Alternatives4621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLog_in_rule__Instruction__Alternatives4638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelayPointer_in_rule__Instruction__Alternatives4655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegister_in_rule__Inst_B6_S1_14__Alternatives4687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegister_in_rule__Inst_B6_S1_14__Alternatives4704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadRegisterFilter_in_rule__Inst_B6_S1_14__Alternatives4721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMaxx_in_rule__Inst_B6_S1_14__Alternatives4738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterHighshelf_in_rule__Inst_B6_S1_14__Alternatives4755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteRegisterLowshelf_in_rule__Inst_B6_S1_14__Alternatives4772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReadDelay_in_rule__Inst_B15_S1_9__Alternatives4804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteDelay_in_rule__Inst_B15_S1_9__Alternatives4821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWriteAllpass_in_rule__Inst_B15_S1_9__Alternatives4838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulx_in_rule__Inst_B6__Alternatives4870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLdax_in_rule__Inst_B6__Alternatives4887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnd_in_rule__Inst_B24__Alternatives4919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOr_in_rule__Inst_B24__Alternatives4936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXor_in_rule__Inst_B24__Alternatives4953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClr_in_rule__Inst_X0__Alternatives4985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNot_in_rule__Inst_X0__Alternatives5002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbsa_in_rule__Inst_X0__Alternatives5019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExp_in_rule__Inst_S1_14_S1_10__Alternatives5051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleScaleOffset_in_rule__Inst_S1_14_S1_10__Alternatives5068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINDOUBLE__Alternatives_15100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__0_in_rule__SPINDOUBLE__Alternatives_15117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINREGISTER__Alternatives5150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINREGISTER__Alternatives5167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINCHOREGFLAGS__Alternatives5199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0_in_rule__SPINCHOREGFLAGS__Alternatives5216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__ValueAssignment_1_0_in_rule__SPINMEM__Alternatives_15250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__OffsetAssignment_1_1_in_rule__SPINMEM__Alternatives_15268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_rule__SPINBUF__Alternatives_15302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_rule__SPINBUF__Alternatives_15322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_rule__SPINBUF__Alternatives_25357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_rule__SPINBUF__Alternatives_25377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__0_in_rule__BINARY24__Alternatives5411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__0_in_rule__BINARY24__Alternatives5429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__0__Impl_in_rule__Program__Group__05460 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Program__Group__1_in_rule__Program__Group__05463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_rule__Program__Group__0__Impl5491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__1__Impl_in_rule__Program__Group__15522 = new BitSet(new long[]{0x00000000001E0000L});
    public static final BitSet FOLLOW_rule__Program__Group__2_in_rule__Program__Group__15525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__NameAssignment_1_in_rule__Program__Group__1__Impl5552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__Group__2__Impl_in_rule__Program__Group__25582 = new BitSet(new long[]{0x3FFFFFFBF7E00050L});
    public static final BitSet FOLLOW_rule__Program__Group__3_in_rule__Program__Group__25585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5614 = new BitSet(new long[]{0x00000000001E0002L});
    public static final BitSet FOLLOW_rule__Program__PinsAssignment_2_in_rule__Program__Group__2__Impl5626 = new BitSet(new long[]{0x00000000001E0002L});
    public static final BitSet FOLLOW_rule__Program__Group__3__Impl_in_rule__Program__Group__35659 = new BitSet(new long[]{0x3FFFFFFBF7E00050L});
    public static final BitSet FOLLOW_rule__Program__Group__4_in_rule__Program__Group__35662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__ControlsAssignment_3_in_rule__Program__Group__3__Impl5689 = new BitSet(new long[]{0x0000000000E00002L});
    public static final BitSet FOLLOW_rule__Program__Group__4__Impl_in_rule__Program__Group__45720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Program__ElementsAssignment_4_in_rule__Program__Group__4__Impl5749 = new BitSet(new long[]{0x3FFFFFFBF7E00052L});
    public static final BitSet FOLLOW_rule__Program__ElementsAssignment_4_in_rule__Program__Group__4__Impl5761 = new BitSet(new long[]{0x3FFFFFFBF7E00052L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__0__Impl_in_rule__AudioInput__Group__05804 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__1_in_rule__AudioInput__Group__05807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_rule__AudioInput__Group__0__Impl5835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__1__Impl_in_rule__AudioInput__Group__15866 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__2_in_rule__AudioInput__Group__15869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__VarNameAssignment_1_in_rule__AudioInput__Group__1__Impl5896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__Group__2__Impl_in_rule__AudioInput__Group__25926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioInput__NameAssignment_2_in_rule__AudioInput__Group__2__Impl5953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__0__Impl_in_rule__AudioOutput__Group__05989 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__1_in_rule__AudioOutput__Group__05992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_rule__AudioOutput__Group__0__Impl6020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__1__Impl_in_rule__AudioOutput__Group__16051 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__2_in_rule__AudioOutput__Group__16054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__VarNameAssignment_1_in_rule__AudioOutput__Group__1__Impl6081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__Group__2__Impl_in_rule__AudioOutput__Group__26111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AudioOutput__NameAssignment_2_in_rule__AudioOutput__Group__2__Impl6138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__0__Impl_in_rule__ControlInput__Group__06174 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__1_in_rule__ControlInput__Group__06177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_rule__ControlInput__Group__0__Impl6205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__1__Impl_in_rule__ControlInput__Group__16236 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__2_in_rule__ControlInput__Group__16239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__VarNameAssignment_1_in_rule__ControlInput__Group__1__Impl6266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__Group__2__Impl_in_rule__ControlInput__Group__26296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlInput__NameAssignment_2_in_rule__ControlInput__Group__2__Impl6323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__0__Impl_in_rule__ControlOutput__Group__06359 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__1_in_rule__ControlOutput__Group__06362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_rule__ControlOutput__Group__0__Impl6390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__1__Impl_in_rule__ControlOutput__Group__16421 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__2_in_rule__ControlOutput__Group__16424 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__VarNameAssignment_1_in_rule__ControlOutput__Group__1__Impl6451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__Group__2__Impl_in_rule__ControlOutput__Group__26481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlOutput__NameAssignment_2_in_rule__ControlOutput__Group__2__Impl6508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__Group__0__Impl_in_rule__Slider__Group__06544 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Slider__Group__1_in_rule__Slider__Group__06547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_rule__Slider__Group__0__Impl6575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__Group__1__Impl_in_rule__Slider__Group__16606 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Slider__Group__2_in_rule__Slider__Group__16609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__VarNameAssignment_1_in_rule__Slider__Group__1__Impl6636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__Group__2__Impl_in_rule__Slider__Group__26666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Slider__LabelAssignment_2_in_rule__Slider__Group__2__Impl6693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__0__Impl_in_rule__CheckBox__Group__06729 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__1_in_rule__CheckBox__Group__06732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_rule__CheckBox__Group__0__Impl6760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__1__Impl_in_rule__CheckBox__Group__16791 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__2_in_rule__CheckBox__Group__16794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__VarNameAssignment_1_in_rule__CheckBox__Group__1__Impl6821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__Group__2__Impl_in_rule__CheckBox__Group__26851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__CheckBox__LabelAssignment_2_in_rule__CheckBox__Group__2__Impl6878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__0__Impl_in_rule__ControlLabel__Group__06914 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__1_in_rule__ControlLabel__Group__06917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_rule__ControlLabel__Group__0__Impl6945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__1__Impl_in_rule__ControlLabel__Group__16976 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__2_in_rule__ControlLabel__Group__16979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__VarNameAssignment_1_in_rule__ControlLabel__Group__1__Impl7006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__Group__2__Impl_in_rule__ControlLabel__Group__27036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ControlLabel__LabelAssignment_2_in_rule__ControlLabel__Group__2__Impl7063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__0__Impl_in_rule__Equate__Group__07099 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Equate__Group__1_in_rule__Equate__Group__07102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_rule__Equate__Group__0__Impl7130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__1__Impl_in_rule__Equate__Group__17161 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Equate__Group__2_in_rule__Equate__Group__17164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__EnameAssignment_1_in_rule__Equate__Group__1__Impl7191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__Group__2__Impl_in_rule__Equate__Group__27221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equate__ValueAssignment_2_in_rule__Equate__Group__2__Impl7248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__0__Impl_in_rule__Mem__Group__07284 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Mem__Group__1_in_rule__Mem__Group__07287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_rule__Mem__Group__0__Impl7315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__1__Impl_in_rule__Mem__Group__17346 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__Mem__Group__2_in_rule__Mem__Group__17349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__BufferAssignment_1_in_rule__Mem__Group__1__Impl7376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__Group__2__Impl_in_rule__Mem__Group__27406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mem__LengthAssignment_2_in_rule__Mem__Group__2__Impl7433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__0__Impl_in_rule__Offset__Group__07469 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Offset__Group__1_in_rule__Offset__Group__07472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_rule__Offset__Group__0__Impl7500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__1__Impl_in_rule__Offset__Group__17531 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__Offset__Group__2_in_rule__Offset__Group__17534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__NameAssignment_1_in_rule__Offset__Group__1__Impl7561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__Group__2__Impl_in_rule__Offset__Group__27591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Offset__LengthAssignment_2_in_rule__Offset__Group__2__Impl7618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__0__Impl_in_rule__Label__Group__07654 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_rule__Label__Group__1_in_rule__Label__Group__07657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__NameAssignment_0_in_rule__Label__Group__0__Impl7684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Label__Group__1__Impl_in_rule__Label__Group__17714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_rule__Label__Group__1__Impl7742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__0__Impl_in_rule__IsPinConnected__Group__07777 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__1_in_rule__IsPinConnected__Group__07780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_rule__IsPinConnected__Group__0__Impl7808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Group__1__Impl_in_rule__IsPinConnected__Group__17839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsPinConnected__Arg1Assignment_1_in_rule__IsPinConnected__Group__1__Impl7866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__0__Impl_in_rule__IsElse__Group__07900 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_rule__IsElse__Group__1_in_rule__IsElse__Group__07903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsElse__Group__1__Impl_in_rule__IsElse__Group__17961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_rule__IsElse__Group__1__Impl7989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__0__Impl_in_rule__IsEndif__Group__08024 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__1_in_rule__IsEndif__Group__08027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IsEndif__Group__1__Impl_in_rule__IsEndif__Group__18085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_rule__IsEndif__Group__1__Impl8113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__0__Impl_in_rule__GetInputDefault__Group__08148 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__1_in_rule__GetInputDefault__Group__08151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_rule__GetInputDefault__Group__0__Impl8179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__1__Impl_in_rule__GetInputDefault__Group__18210 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__2_in_rule__GetInputDefault__Group__18213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__NameAssignment_1_in_rule__GetInputDefault__Group__1__Impl8240 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__2__Impl_in_rule__GetInputDefault__Group__28270 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__3_in_rule__GetInputDefault__Group__28273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__VariableAssignment_2_in_rule__GetInputDefault__Group__2__Impl8300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__3__Impl_in_rule__GetInputDefault__Group__38330 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__4_in_rule__GetInputDefault__Group__38333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__ScaleAssignment_3_in_rule__GetInputDefault__Group__3__Impl8360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__Group__4__Impl_in_rule__GetInputDefault__Group__48390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetInputDefault__DefaultValAssignment_4_in_rule__GetInputDefault__Group__4__Impl8417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__0__Impl_in_rule__GetDelayScale__Group__08457 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__1_in_rule__GetDelayScale__Group__08460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_rule__GetDelayScale__Group__0__Impl8488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__1__Impl_in_rule__GetDelayScale__Group__18519 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__2_in_rule__GetDelayScale__Group__18522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__BufferAssignment_1_in_rule__GetDelayScale__Group__1__Impl8549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__2__Impl_in_rule__GetDelayScale__Group__28579 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__3_in_rule__GetDelayScale__Group__28582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__LengthAssignment_2_in_rule__GetDelayScale__Group__2__Impl8609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__Group__3__Impl_in_rule__GetDelayScale__Group__38639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__GetDelayScale__ControlAssignment_3_in_rule__GetDelayScale__Group__3__Impl8666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__0__Impl_in_rule__ReadRegister__Group__08704 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__1_in_rule__ReadRegister__Group__08707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ReadRegister__Group__0__Impl8735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__1__Impl_in_rule__ReadRegister__Group__18766 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__2_in_rule__ReadRegister__Group__18769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Arg1Assignment_1_in_rule__ReadRegister__Group__1__Impl8796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__2__Impl_in_rule__ReadRegister__Group__28826 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__3_in_rule__ReadRegister__Group__28829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ReadRegister__Group__2__Impl8857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Group__3__Impl_in_rule__ReadRegister__Group__38888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegister__Arg2Assignment_3_in_rule__ReadRegister__Group__3__Impl8915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__0__Impl_in_rule__WriteRegisterLowshelf__Group__08953 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__1_in_rule__WriteRegisterLowshelf__Group__08956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__WriteRegisterLowshelf__Group__0__Impl8984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__1__Impl_in_rule__WriteRegisterLowshelf__Group__19015 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__2_in_rule__WriteRegisterLowshelf__Group__19018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Arg1Assignment_1_in_rule__WriteRegisterLowshelf__Group__1__Impl9045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__2__Impl_in_rule__WriteRegisterLowshelf__Group__29075 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__3_in_rule__WriteRegisterLowshelf__Group__29078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__WriteRegisterLowshelf__Group__2__Impl9106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Group__3__Impl_in_rule__WriteRegisterLowshelf__Group__39137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterLowshelf__Arg2Assignment_3_in_rule__WriteRegisterLowshelf__Group__3__Impl9164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__0__Impl_in_rule__WriteRegisterHighshelf__Group__09202 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__1_in_rule__WriteRegisterHighshelf__Group__09205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_rule__WriteRegisterHighshelf__Group__0__Impl9233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__1__Impl_in_rule__WriteRegisterHighshelf__Group__19264 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__2_in_rule__WriteRegisterHighshelf__Group__19267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Arg1Assignment_1_in_rule__WriteRegisterHighshelf__Group__1__Impl9294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__2__Impl_in_rule__WriteRegisterHighshelf__Group__29324 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__3_in_rule__WriteRegisterHighshelf__Group__29327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__WriteRegisterHighshelf__Group__2__Impl9355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Group__3__Impl_in_rule__WriteRegisterHighshelf__Group__39386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegisterHighshelf__Arg2Assignment_3_in_rule__WriteRegisterHighshelf__Group__3__Impl9413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__0__Impl_in_rule__WriteRegister__Group__09451 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__1_in_rule__WriteRegister__Group__09454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_rule__WriteRegister__Group__0__Impl9482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__1__Impl_in_rule__WriteRegister__Group__19513 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__2_in_rule__WriteRegister__Group__19516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Arg1Assignment_1_in_rule__WriteRegister__Group__1__Impl9543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__2__Impl_in_rule__WriteRegister__Group__29573 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__3_in_rule__WriteRegister__Group__29576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__WriteRegister__Group__2__Impl9604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Group__3__Impl_in_rule__WriteRegister__Group__39635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteRegister__Arg2Assignment_3_in_rule__WriteRegister__Group__3__Impl9662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__0__Impl_in_rule__Maxx__Group__09700 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__Maxx__Group__1_in_rule__Maxx__Group__09703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_rule__Maxx__Group__0__Impl9731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__1__Impl_in_rule__Maxx__Group__19762 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__Maxx__Group__2_in_rule__Maxx__Group__19765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Arg1Assignment_1_in_rule__Maxx__Group__1__Impl9792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__2__Impl_in_rule__Maxx__Group__29822 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Maxx__Group__3_in_rule__Maxx__Group__29825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__Maxx__Group__2__Impl9853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Group__3__Impl_in_rule__Maxx__Group__39884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Maxx__Arg2Assignment_3_in_rule__Maxx__Group__3__Impl9911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__0__Impl_in_rule__ReadRegisterFilter__Group__09949 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__1_in_rule__ReadRegisterFilter__Group__09952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ReadRegisterFilter__Group__0__Impl9980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__1__Impl_in_rule__ReadRegisterFilter__Group__110011 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__2_in_rule__ReadRegisterFilter__Group__110014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Arg1Assignment_1_in_rule__ReadRegisterFilter__Group__1__Impl10041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__2__Impl_in_rule__ReadRegisterFilter__Group__210071 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__3_in_rule__ReadRegisterFilter__Group__210074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ReadRegisterFilter__Group__2__Impl10102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Group__3__Impl_in_rule__ReadRegisterFilter__Group__310133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadRegisterFilter__Arg2Assignment_3_in_rule__ReadRegisterFilter__Group__3__Impl10160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__0__Impl_in_rule__Mulx__Group__010198 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Mulx__Group__1_in_rule__Mulx__Group__010201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_rule__Mulx__Group__0__Impl10229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Group__1__Impl_in_rule__Mulx__Group__110260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mulx__Arg1Assignment_1_in_rule__Mulx__Group__1__Impl10287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__0__Impl_in_rule__Ldax__Group__010321 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Ldax__Group__1_in_rule__Ldax__Group__010324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_rule__Ldax__Group__0__Impl10352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Group__1__Impl_in_rule__Ldax__Group__110383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Ldax__Arg1Assignment_1_in_rule__Ldax__Group__1__Impl10410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__0__Impl_in_rule__Exp__Group__010444 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Exp__Group__1_in_rule__Exp__Group__010447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_rule__Exp__Group__0__Impl10475 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__1__Impl_in_rule__Exp__Group__110506 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__Exp__Group__2_in_rule__Exp__Group__110509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Arg1Assignment_1_in_rule__Exp__Group__1__Impl10536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__2__Impl_in_rule__Exp__Group__210566 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Exp__Group__3_in_rule__Exp__Group__210569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__Exp__Group__2__Impl10597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Group__3__Impl_in_rule__Exp__Group__310628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Exp__Arg2Assignment_3_in_rule__Exp__Group__3__Impl10655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__0__Impl_in_rule__Log__Group__010693 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Log__Group__1_in_rule__Log__Group__010696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_rule__Log__Group__0__Impl10724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__1__Impl_in_rule__Log__Group__110755 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__Log__Group__2_in_rule__Log__Group__110758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Arg1Assignment_1_in_rule__Log__Group__1__Impl10785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__2__Impl_in_rule__Log__Group__210815 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__Log__Group__3_in_rule__Log__Group__210818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__Log__Group__2__Impl10846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Group__3__Impl_in_rule__Log__Group__310877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Log__Arg2Assignment_3_in_rule__Log__Group__3__Impl10904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__0__Impl_in_rule__ScaleOffset__Group__010942 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__1_in_rule__ScaleOffset__Group__010945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_rule__ScaleOffset__Group__0__Impl10973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__1__Impl_in_rule__ScaleOffset__Group__111004 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__2_in_rule__ScaleOffset__Group__111007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Arg1Assignment_1_in_rule__ScaleOffset__Group__1__Impl11034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__2__Impl_in_rule__ScaleOffset__Group__211064 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__3_in_rule__ScaleOffset__Group__211067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ScaleOffset__Group__2__Impl11095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Group__3__Impl_in_rule__ScaleOffset__Group__311126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ScaleOffset__Arg2Assignment_3_in_rule__ScaleOffset__Group__3__Impl11153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__0__Impl_in_rule__WriteDelay__Group__011191 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__1_in_rule__WriteDelay__Group__011194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_rule__WriteDelay__Group__0__Impl11222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__1__Impl_in_rule__WriteDelay__Group__111253 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__2_in_rule__WriteDelay__Group__111256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Arg1Assignment_1_in_rule__WriteDelay__Group__1__Impl11283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__2__Impl_in_rule__WriteDelay__Group__211313 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__3_in_rule__WriteDelay__Group__211316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__WriteDelay__Group__2__Impl11344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Group__3__Impl_in_rule__WriteDelay__Group__311375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteDelay__Arg2Assignment_3_in_rule__WriteDelay__Group__3__Impl11402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__0__Impl_in_rule__WriteAllpass__Group__011440 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__1_in_rule__WriteAllpass__Group__011443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_rule__WriteAllpass__Group__0__Impl11471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__1__Impl_in_rule__WriteAllpass__Group__111502 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__2_in_rule__WriteAllpass__Group__111505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Arg1Assignment_1_in_rule__WriteAllpass__Group__1__Impl11532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__2__Impl_in_rule__WriteAllpass__Group__211562 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__3_in_rule__WriteAllpass__Group__211565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__WriteAllpass__Group__2__Impl11593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Group__3__Impl_in_rule__WriteAllpass__Group__311624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WriteAllpass__Arg2Assignment_3_in_rule__WriteAllpass__Group__3__Impl11651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__0__Impl_in_rule__ReadDelay__Group__011689 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__1_in_rule__ReadDelay__Group__011692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_rule__ReadDelay__Group__0__Impl11720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__1__Impl_in_rule__ReadDelay__Group__111751 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__2_in_rule__ReadDelay__Group__111754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Arg1Assignment_1_in_rule__ReadDelay__Group__1__Impl11781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__2__Impl_in_rule__ReadDelay__Group__211811 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__3_in_rule__ReadDelay__Group__211814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ReadDelay__Group__2__Impl11842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Group__3__Impl_in_rule__ReadDelay__Group__311873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelay__Arg2Assignment_3_in_rule__ReadDelay__Group__3__Impl11900 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__0__Impl_in_rule__LoadSinLFO__Group__011938 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__1_in_rule__LoadSinLFO__Group__011941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_rule__LoadSinLFO__Group__0__Impl11969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__1__Impl_in_rule__LoadSinLFO__Group__112000 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__2_in_rule__LoadSinLFO__Group__112003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg1Assignment_1_in_rule__LoadSinLFO__Group__1__Impl12030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__2__Impl_in_rule__LoadSinLFO__Group__212060 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__3_in_rule__LoadSinLFO__Group__212063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__LoadSinLFO__Group__2__Impl12091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__3__Impl_in_rule__LoadSinLFO__Group__312122 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__4_in_rule__LoadSinLFO__Group__312125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg2Assignment_3_in_rule__LoadSinLFO__Group__3__Impl12152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__4__Impl_in_rule__LoadSinLFO__Group__412182 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__5_in_rule__LoadSinLFO__Group__412185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__LoadSinLFO__Group__4__Impl12213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Group__5__Impl_in_rule__LoadSinLFO__Group__512244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadSinLFO__Arg3Assignment_5_in_rule__LoadSinLFO__Group__5__Impl12271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__0__Impl_in_rule__LoadRampLFO__Group__012313 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__1_in_rule__LoadRampLFO__Group__012316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_rule__LoadRampLFO__Group__0__Impl12344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__1__Impl_in_rule__LoadRampLFO__Group__112375 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__2_in_rule__LoadRampLFO__Group__112378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg1Assignment_1_in_rule__LoadRampLFO__Group__1__Impl12405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__2__Impl_in_rule__LoadRampLFO__Group__212435 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__3_in_rule__LoadRampLFO__Group__212438 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__LoadRampLFO__Group__2__Impl12466 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__3__Impl_in_rule__LoadRampLFO__Group__312497 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__4_in_rule__LoadRampLFO__Group__312500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg2Assignment_3_in_rule__LoadRampLFO__Group__3__Impl12527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__4__Impl_in_rule__LoadRampLFO__Group__412557 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__5_in_rule__LoadRampLFO__Group__412560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__LoadRampLFO__Group__4__Impl12588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Group__5__Impl_in_rule__LoadRampLFO__Group__512619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LoadRampLFO__Arg3Assignment_5_in_rule__LoadRampLFO__Group__5__Impl12646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__0__Impl_in_rule__ChorusReadDelay__Group__012688 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__1_in_rule__ChorusReadDelay__Group__012691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_rule__ChorusReadDelay__Group__0__Impl12719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__1__Impl_in_rule__ChorusReadDelay__Group__112750 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__2_in_rule__ChorusReadDelay__Group__112753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ChorusReadDelay__Group__1__Impl12781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__2__Impl_in_rule__ChorusReadDelay__Group__212812 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__3_in_rule__ChorusReadDelay__Group__212815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg1Assignment_2_in_rule__ChorusReadDelay__Group__2__Impl12842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__3__Impl_in_rule__ChorusReadDelay__Group__312872 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__4_in_rule__ChorusReadDelay__Group__312875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ChorusReadDelay__Group__3__Impl12903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__4__Impl_in_rule__ChorusReadDelay__Group__412934 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__5_in_rule__ChorusReadDelay__Group__412937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg2Assignment_4_in_rule__ChorusReadDelay__Group__4__Impl12964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__5__Impl_in_rule__ChorusReadDelay__Group__512994 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__6_in_rule__ChorusReadDelay__Group__512997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ChorusReadDelay__Group__5__Impl13025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Group__6__Impl_in_rule__ChorusReadDelay__Group__613056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadDelay__Arg3Assignment_6_in_rule__ChorusReadDelay__Group__6__Impl13083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__0__Impl_in_rule__ChorusReadValue__Group__013127 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__1_in_rule__ChorusReadValue__Group__013130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_rule__ChorusReadValue__Group__0__Impl13158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__1__Impl_in_rule__ChorusReadValue__Group__113189 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__2_in_rule__ChorusReadValue__Group__113192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ChorusReadValue__Group__1__Impl13220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Group__2__Impl_in_rule__ChorusReadValue__Group__213251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusReadValue__Arg1Assignment_2_in_rule__ChorusReadValue__Group__2__Impl13278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__0__Impl_in_rule__ChorusScaleOffset__Group__013314 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__1_in_rule__ChorusScaleOffset__Group__013317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_rule__ChorusScaleOffset__Group__0__Impl13345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__1__Impl_in_rule__ChorusScaleOffset__Group__113376 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__2_in_rule__ChorusScaleOffset__Group__113379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ChorusScaleOffset__Group__1__Impl13407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__2__Impl_in_rule__ChorusScaleOffset__Group__213438 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__3_in_rule__ChorusScaleOffset__Group__213441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg1Assignment_2_in_rule__ChorusScaleOffset__Group__2__Impl13468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__3__Impl_in_rule__ChorusScaleOffset__Group__313498 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__4_in_rule__ChorusScaleOffset__Group__313501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ChorusScaleOffset__Group__3__Impl13529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__4__Impl_in_rule__ChorusScaleOffset__Group__413560 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__5_in_rule__ChorusScaleOffset__Group__413563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg2Assignment_4_in_rule__ChorusScaleOffset__Group__4__Impl13590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__5__Impl_in_rule__ChorusScaleOffset__Group__513620 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__6_in_rule__ChorusScaleOffset__Group__513623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ChorusScaleOffset__Group__5__Impl13651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Group__6__Impl_in_rule__ChorusScaleOffset__Group__613682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ChorusScaleOffset__Arg3Assignment_6_in_rule__ChorusScaleOffset__Group__6__Impl13709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__0__Impl_in_rule__ReadDelayPointer__Group__013753 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__1_in_rule__ReadDelayPointer__Group__013756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_rule__ReadDelayPointer__Group__0__Impl13784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Group__1__Impl_in_rule__ReadDelayPointer__Group__113815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReadDelayPointer__Arg1Assignment_1_in_rule__ReadDelayPointer__Group__1__Impl13842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__0__Impl_in_rule__And__Group__013876 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_rule__And__Group__1_in_rule__And__Group__013879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_rule__And__Group__0__Impl13907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Group__1__Impl_in_rule__And__Group__113938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__And__Arg1Assignment_1_in_rule__And__Group__1__Impl13965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__0__Impl_in_rule__Or__Group__013999 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_rule__Or__Group__1_in_rule__Or__Group__014002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_rule__Or__Group__0__Impl14030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Group__1__Impl_in_rule__Or__Group__114061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Or__Arg1Assignment_1_in_rule__Or__Group__1__Impl14088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__0__Impl_in_rule__Xor__Group__014122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_rule__Xor__Group__1_in_rule__Xor__Group__014125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_rule__Xor__Group__0__Impl14153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Group__1__Impl_in_rule__Xor__Group__114184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Xor__Arg1Assignment_1_in_rule__Xor__Group__1__Impl14211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__0__Impl_in_rule__Jam__Group__014245 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Jam__Group__1_in_rule__Jam__Group__014248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_rule__Jam__Group__0__Impl14276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Group__1__Impl_in_rule__Jam__Group__114307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Jam__Arg1Assignment_1_in_rule__Jam__Group__1__Impl14334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__0__Impl_in_rule__Clr__Group__014368 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_rule__Clr__Group__1_in_rule__Clr__Group__014371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Clr__Group__1__Impl_in_rule__Clr__Group__114429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_rule__Clr__Group__1__Impl14457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__0__Impl_in_rule__Not__Group__014492 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_rule__Not__Group__1_in_rule__Not__Group__014495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Not__Group__1__Impl_in_rule__Not__Group__114553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_rule__Not__Group__1__Impl14581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__0__Impl_in_rule__Absa__Group__014616 = new BitSet(new long[]{0x1C00000000000000L});
    public static final BitSet FOLLOW_rule__Absa__Group__1_in_rule__Absa__Group__014619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Absa__Group__1__Impl_in_rule__Absa__Group__114677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_rule__Absa__Group__1__Impl14705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__0__Impl_in_rule__Skip__Group__014740 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Skip__Group__1_in_rule__Skip__Group__014743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_rule__Skip__Group__0__Impl14771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__1__Impl_in_rule__Skip__Group__114802 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_rule__Skip__Group__2_in_rule__Skip__Group__114805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__FlagsAssignment_1_in_rule__Skip__Group__1__Impl14832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__2__Impl_in_rule__Skip__Group__214862 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Skip__Group__3_in_rule__Skip__Group__214865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__Skip__Group__2__Impl14893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__Group__3__Impl_in_rule__Skip__Group__314924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Skip__LabelAssignment_3_in_rule__Skip__Group__3__Impl14951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__0__Impl_in_rule__SPINDOUBLE__Group__014989 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__1_in_rule__SPINDOUBLE__Group__014992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_rule__SPINDOUBLE__Group__0__Impl15021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group__1__Impl_in_rule__SPINDOUBLE__Group__115054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Alternatives_1_in_rule__SPINDOUBLE__Group__1__Impl15081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1__015115 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__1_in_rule__SPINDOUBLE__Group_1_1__015118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1__0__Impl15145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1__115174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0_in_rule__SPINDOUBLE__Group_1_1__1__Impl15201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__0__Impl_in_rule__SPINDOUBLE__Group_1_1_1__015236 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1_in_rule__SPINDOUBLE__Group_1_1_1__015239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_rule__SPINDOUBLE__Group_1_1_1__0__Impl15267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINDOUBLE__Group_1_1_1__1__Impl_in_rule__SPINDOUBLE__Group_1_1_1__115298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINDOUBLE__Group_1_1_1__1__Impl15325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1__015358 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1_in_rule__SPINCHOREGFLAGS__Group_1__015361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1__0__Impl15388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1__115417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0_in_rule__SPINCHOREGFLAGS__Group_1__1__Impl15444 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__015479 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1_in_rule__SPINCHOREGFLAGS__Group_1_1__015482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_rule__SPINCHOREGFLAGS__Group_1_1__0__Impl15510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl_in_rule__SPINCHOREGFLAGS__Group_1_1__115541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINCHOREGFLAGS__Group_1_1__1__Impl15568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__0__Impl_in_rule__SPINMEM__Group__015601 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__1_in_rule__SPINMEM__Group__015604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__BufferAssignment_0_in_rule__SPINMEM__Group__0__Impl15631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Group__1__Impl_in_rule__SPINMEM__Group__115661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINMEM__Alternatives_1_in_rule__SPINMEM__Group__1__Impl15688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__0__Impl_in_rule__SPINBUF__Group__015723 = new BitSet(new long[]{0x000000000000F000L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__1_in_rule__SPINBUF__Group__015726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINBUF__Group__0__Impl15753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__1__Impl_in_rule__SPINBUF__Group__115782 = new BitSet(new long[]{0x000000000000F000L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__2_in_rule__SPINBUF__Group__115785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Alternatives_1_in_rule__SPINBUF__Group__1__Impl15812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Group__2__Impl_in_rule__SPINBUF__Group__215843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__SPINBUF__Alternatives_2_in_rule__SPINBUF__Group__2__Impl15870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__0__Impl_in_rule__BINARY24__Group_0__015907 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__1_in_rule__BINARY24__Group_0__015910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__0_in_rule__BINARY24__Group_0__0__Impl15937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0__1__Impl_in_rule__BINARY24__Group_0__115967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__BINARY24__Group_0__1__Impl15995 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__0__Impl_in_rule__BINARY24__Group_0_0__016030 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__1_in_rule__BINARY24__Group_0_0__016033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_rule__BINARY24__Group_0_0__0__Impl16061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_0_0__1__Impl_in_rule__BINARY24__Group_0_0__116092 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__BINARY24__Group_0_0__1__Impl16119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__0__Impl_in_rule__BINARY24__Group_1__016152 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__1_in_rule__BINARY24__Group_1__016155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_rule__BINARY24__Group_1__0__Impl16183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__1__Impl_in_rule__BINARY24__Group_1__116214 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__2_in_rule__BINARY24__Group_1__116217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__BINARY24__Group_1__1__Impl16245 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_rule__BINARY24__Group_1__2__Impl_in_rule__BINARY24__Group_1__216276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__BINARY24__Group_1__2__Impl16304 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Program__NameAssignment_116346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePin_in_rule__Program__PinsAssignment_216377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleControl_in_rule__Program__ControlsAssignment_316408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpinElement_in_rule__Program__ElementsAssignment_416439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioInput__VarNameAssignment_116470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioInput__NameAssignment_216501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioOutput__VarNameAssignment_116532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AudioOutput__NameAssignment_216563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlInput__VarNameAssignment_116594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlInput__NameAssignment_216625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlOutput__VarNameAssignment_116656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlOutput__NameAssignment_216687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Slider__VarNameAssignment_116718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Slider__LabelAssignment_216749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__CheckBox__VarNameAssignment_116780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__CheckBox__LabelAssignment_216811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlLabel__VarNameAssignment_116842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ControlLabel__LabelAssignment_216873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Equate__EnameAssignment_116904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Equate__ValueAssignment_216935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Mem__BufferAssignment_116966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__Mem__LengthAssignment_216997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Offset__NameAssignment_117028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__Offset__LengthAssignment_217059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_SC_COMMENT_in_rule__Comment__RemarkAssignment17090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Label__NameAssignment_017121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__IsPinConnected__Arg1Assignment_117152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetInputDefault__NameAssignment_117183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetInputDefault__VariableAssignment_217214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__ScaleAssignment_317245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__GetInputDefault__DefaultValAssignment_417276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScale__BufferAssignment_117307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScale__LengthAssignment_217338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__GetDelayScale__ControlAssignment_317369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ReadRegister__Arg1Assignment_117400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegister__Arg2Assignment_317431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterLowshelf__Arg1Assignment_117462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterLowshelf__Arg2Assignment_317493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegisterHighshelf__Arg1Assignment_117524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegisterHighshelf__Arg2Assignment_317555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__WriteRegister__Arg1Assignment_117586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteRegister__Arg2Assignment_317617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__Maxx__Arg1Assignment_117648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Maxx__Arg2Assignment_317679 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ReadRegisterFilter__Arg1Assignment_117710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadRegisterFilter__Arg2Assignment_317741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Mulx__Arg1Assignment_117772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Ldax__Arg1Assignment_117803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg1Assignment_117834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Exp__Arg2Assignment_317865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg1Assignment_117896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__Log__Arg2Assignment_317927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg1Assignment_117958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ScaleOffset__Arg2Assignment_317989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__WriteDelay__Arg1Assignment_118020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteDelay__Arg2Assignment_318051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__WriteAllpass__Arg1Assignment_118082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__WriteAllpass__Arg2Assignment_318113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__ReadDelay__Arg1Assignment_118144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelay__Arg2Assignment_318175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__LoadSinLFO__Arg1Assignment_118206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg2Assignment_318237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadSinLFO__Arg3Assignment_518268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__LoadRampLFO__Arg1Assignment_118299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg2Assignment_318330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__LoadRampLFO__Arg3Assignment_518361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadDelay__Arg1Assignment_218392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusReadDelay__Arg2Assignment_418423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINMEM_in_rule__ChorusReadDelay__Arg3Assignment_618454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINREGISTER_in_rule__ChorusReadValue__Arg1Assignment_218485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ChorusScaleOffset__Arg1Assignment_218516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINCHOREGFLAGS_in_rule__ChorusScaleOffset__Arg2Assignment_418547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ChorusScaleOffset__Arg3Assignment_618578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINDOUBLE_in_rule__ReadDelayPointer__Arg1Assignment_118609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__And__Arg1Assignment_118640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__Or__Arg1Assignment_118671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBINARY24_in_rule__Xor__Arg1Assignment_118702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Jam__Arg1Assignment_118733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Skip__FlagsAssignment_118764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Skip__LabelAssignment_318799 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSPINBUF_in_rule__SPINMEM__BufferAssignment_018834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_rule__SPINMEM__ValueAssignment_1_018865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__SPINMEM__OffsetAssignment_1_118900 = new BitSet(new long[]{0x0000000000000002L});

}