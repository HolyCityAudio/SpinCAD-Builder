/*
* generated by Xtext
*/
grammar InternalSpinCAD;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.holycityaudio.spincad.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.holycityaudio.spincad.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.holycityaudio.spincad.services.SpinCADGrammarAccess;

}

@parser::members {
 
 	private SpinCADGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SpinCADGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePin
entryRulePin 
:
{ before(grammarAccess.getPinRule()); }
	 rulePin
{ after(grammarAccess.getPinRule()); } 
	 EOF 
;

// Rule Pin
rulePin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPinAccess().getAlternatives()); }
(rule__Pin__Alternatives)
{ after(grammarAccess.getPinAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputPin
entryRuleInputPin 
:
{ before(grammarAccess.getInputPinRule()); }
	 ruleInputPin
{ after(grammarAccess.getInputPinRule()); } 
	 EOF 
;

// Rule InputPin
ruleInputPin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputPinAccess().getAlternatives()); }
(rule__InputPin__Alternatives)
{ after(grammarAccess.getInputPinAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputPin
entryRuleOutputPin 
:
{ before(grammarAccess.getOutputPinRule()); }
	 ruleOutputPin
{ after(grammarAccess.getOutputPinRule()); } 
	 EOF 
;

// Rule OutputPin
ruleOutputPin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputPinAccess().getAlternatives()); }
(rule__OutputPin__Alternatives)
{ after(grammarAccess.getOutputPinAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAudioInput
entryRuleAudioInput 
:
{ before(grammarAccess.getAudioInputRule()); }
	 ruleAudioInput
{ after(grammarAccess.getAudioInputRule()); } 
	 EOF 
;

// Rule AudioInput
ruleAudioInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAudioInputAccess().getGroup()); }
(rule__AudioInput__Group__0)
{ after(grammarAccess.getAudioInputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAudioOutput
entryRuleAudioOutput 
:
{ before(grammarAccess.getAudioOutputRule()); }
	 ruleAudioOutput
{ after(grammarAccess.getAudioOutputRule()); } 
	 EOF 
;

// Rule AudioOutput
ruleAudioOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAudioOutputAccess().getGroup()); }
(rule__AudioOutput__Group__0)
{ after(grammarAccess.getAudioOutputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleControlInput
entryRuleControlInput 
:
{ before(grammarAccess.getControlInputRule()); }
	 ruleControlInput
{ after(grammarAccess.getControlInputRule()); } 
	 EOF 
;

// Rule ControlInput
ruleControlInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControlInputAccess().getGroup()); }
(rule__ControlInput__Group__0)
{ after(grammarAccess.getControlInputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleControlOutput
entryRuleControlOutput 
:
{ before(grammarAccess.getControlOutputRule()); }
	 ruleControlOutput
{ after(grammarAccess.getControlOutputRule()); } 
	 EOF 
;

// Rule ControlOutput
ruleControlOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControlOutputAccess().getGroup()); }
(rule__ControlOutput__Group__0)
{ after(grammarAccess.getControlOutputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpinElement
entryRuleSpinElement 
:
{ before(grammarAccess.getSpinElementRule()); }
	 ruleSpinElement
{ after(grammarAccess.getSpinElementRule()); } 
	 EOF 
;

// Rule SpinElement
ruleSpinElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpinElementAccess().getAlternatives()); }
(rule__SpinElement__Alternatives)
{ after(grammarAccess.getSpinElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpinEquate
entryRuleSpinEquate 
:
{ before(grammarAccess.getSpinEquateRule()); }
	 ruleSpinEquate
{ after(grammarAccess.getSpinEquateRule()); } 
	 EOF 
;

// Rule SpinEquate
ruleSpinEquate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpinEquateAccess().getGroup()); }
(rule__SpinEquate__Group__0)
{ after(grammarAccess.getSpinEquateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpinInt
entryRuleSpinInt 
:
{ before(grammarAccess.getSpinIntRule()); }
	 ruleSpinInt
{ after(grammarAccess.getSpinIntRule()); } 
	 EOF 
;

// Rule SpinInt
ruleSpinInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpinIntAccess().getGroup()); }
(rule__SpinInt__Group__0)
{ after(grammarAccess.getSpinIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMem
entryRuleMem 
:
{ before(grammarAccess.getMemRule()); }
	 ruleMem
{ after(grammarAccess.getMemRule()); } 
	 EOF 
;

// Rule Mem
ruleMem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemAccess().getGroup()); }
(rule__Mem__Group__0)
{ after(grammarAccess.getMemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOffset
entryRuleOffset 
:
{ before(grammarAccess.getOffsetRule()); }
	 ruleOffset
{ after(grammarAccess.getOffsetRule()); } 
	 EOF 
;

// Rule Offset
ruleOffset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOffsetAccess().getGroup()); }
(rule__Offset__Group__0)
{ after(grammarAccess.getOffsetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpinBool
entryRuleSpinBool 
:
{ before(grammarAccess.getSpinBoolRule()); }
	 ruleSpinBool
{ after(grammarAccess.getSpinBoolRule()); } 
	 EOF 
;

// Rule SpinBool
ruleSpinBool
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpinBoolAccess().getGroup()); }
(rule__SpinBool__Group__0)
{ after(grammarAccess.getSpinBoolAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleControl
entryRuleControl 
:
{ before(grammarAccess.getControlRule()); }
	 ruleControl
{ after(grammarAccess.getControlRule()); } 
	 EOF 
;

// Rule Control
ruleControl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControlAccess().getAlternatives()); }
(rule__Control__Alternatives)
{ after(grammarAccess.getControlAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpinSliderLabel
entryRuleSpinSliderLabel 
:
{ before(grammarAccess.getSpinSliderLabelRule()); }
	 ruleSpinSliderLabel
{ after(grammarAccess.getSpinSliderLabelRule()); } 
	 EOF 
;

// Rule SpinSliderLabel
ruleSpinSliderLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getGroup()); }
(rule__SpinSliderLabel__Group__0)
{ after(grammarAccess.getSpinSliderLabelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpinCheckBox
entryRuleSpinCheckBox 
:
{ before(grammarAccess.getSpinCheckBoxRule()); }
	 ruleSpinCheckBox
{ after(grammarAccess.getSpinCheckBoxRule()); } 
	 EOF 
;

// Rule SpinCheckBox
ruleSpinCheckBox
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpinCheckBoxAccess().getGroup()); }
(rule__SpinCheckBox__Group__0)
{ after(grammarAccess.getSpinCheckBoxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment
entryRuleComment 
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getRemarkAssignment()); }
(rule__Comment__RemarkAssignment)
{ after(grammarAccess.getCommentAccess().getRemarkAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getGroup()); }
(rule__Label__Group__0)
{ after(grammarAccess.getLabelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacro
entryRuleMacro 
:
{ before(grammarAccess.getMacroRule()); }
	 ruleMacro
{ after(grammarAccess.getMacroRule()); } 
	 EOF 
;

// Rule Macro
ruleMacro
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroAccess().getAlternatives()); }
(rule__Macro__Alternatives)
{ after(grammarAccess.getMacroAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsPinConnected
entryRuleIsPinConnected 
:
{ before(grammarAccess.getIsPinConnectedRule()); }
	 ruleIsPinConnected
{ after(grammarAccess.getIsPinConnectedRule()); } 
	 EOF 
;

// Rule IsPinConnected
ruleIsPinConnected
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsPinConnectedAccess().getGroup()); }
(rule__IsPinConnected__Group__0)
{ after(grammarAccess.getIsPinConnectedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsTrue
entryRuleIsTrue 
:
{ before(grammarAccess.getIsTrueRule()); }
	 ruleIsTrue
{ after(grammarAccess.getIsTrueRule()); } 
	 EOF 
;

// Rule IsTrue
ruleIsTrue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsTrueAccess().getGroup()); }
(rule__IsTrue__Group__0)
{ after(grammarAccess.getIsTrueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsElse
entryRuleIsElse 
:
{ before(grammarAccess.getIsElseRule()); }
	 ruleIsElse
{ after(grammarAccess.getIsElseRule()); } 
	 EOF 
;

// Rule IsElse
ruleIsElse
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsElseAccess().getGroup()); }
(rule__IsElse__Group__0)
{ after(grammarAccess.getIsElseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsEndif
entryRuleIsEndif 
:
{ before(grammarAccess.getIsEndifRule()); }
	 ruleIsEndif
{ after(grammarAccess.getIsEndifRule()); } 
	 EOF 
;

// Rule IsEndif
ruleIsEndif
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsEndifAccess().getGroup()); }
(rule__IsEndif__Group__0)
{ after(grammarAccess.getIsEndifAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGetInputDefault
entryRuleGetInputDefault 
:
{ before(grammarAccess.getGetInputDefaultRule()); }
	 ruleGetInputDefault
{ after(grammarAccess.getGetInputDefaultRule()); } 
	 EOF 
;

// Rule GetInputDefault
ruleGetInputDefault
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGetInputDefaultAccess().getGroup()); }
(rule__GetInputDefault__Group__0)
{ after(grammarAccess.getGetInputDefaultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGetDelayScaleControl
entryRuleGetDelayScaleControl 
:
{ before(grammarAccess.getGetDelayScaleControlRule()); }
	 ruleGetDelayScaleControl
{ after(grammarAccess.getGetDelayScaleControlRule()); } 
	 EOF 
;

// Rule GetDelayScaleControl
ruleGetDelayScaleControl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getGroup()); }
(rule__GetDelayScaleControl__Group__0)
{ after(grammarAccess.getGetDelayScaleControlAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGetSamplesFromRatio
entryRuleGetSamplesFromRatio 
:
{ before(grammarAccess.getGetSamplesFromRatioRule()); }
	 ruleGetSamplesFromRatio
{ after(grammarAccess.getGetSamplesFromRatioRule()); } 
	 EOF 
;

// Rule GetSamplesFromRatio
ruleGetSamplesFromRatio
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGetSamplesFromRatioAccess().getGroup()); }
(rule__GetSamplesFromRatio__Group__0)
{ after(grammarAccess.getGetSamplesFromRatioAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGetBaseAddress
entryRuleGetBaseAddress 
:
{ before(grammarAccess.getGetBaseAddressRule()); }
	 ruleGetBaseAddress
{ after(grammarAccess.getGetBaseAddressRule()); } 
	 EOF 
;

// Rule GetBaseAddress
ruleGetBaseAddress
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGetBaseAddressAccess().getGroup()); }
(rule__GetBaseAddress__Group__0)
{ after(grammarAccess.getGetBaseAddressAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetOutputPin
entryRuleSetOutputPin 
:
{ before(grammarAccess.getSetOutputPinRule()); }
	 ruleSetOutputPin
{ after(grammarAccess.getSetOutputPinRule()); } 
	 EOF 
;

// Rule SetOutputPin
ruleSetOutputPin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetOutputPinAccess().getGroup()); }
(rule__SetOutputPin__Group__0)
{ after(grammarAccess.getSetOutputPinAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
(rule__Instruction__Alternatives)
{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInst_B6_S1_14
entryRuleInst_B6_S1_14 
:
{ before(grammarAccess.getInst_B6_S1_14Rule()); }
	 ruleInst_B6_S1_14
{ after(grammarAccess.getInst_B6_S1_14Rule()); } 
	 EOF 
;

// Rule Inst_B6_S1_14
ruleInst_B6_S1_14
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); }
(rule__Inst_B6_S1_14__Alternatives)
{ after(grammarAccess.getInst_B6_S1_14Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInst_B15_S1_9
entryRuleInst_B15_S1_9 
:
{ before(grammarAccess.getInst_B15_S1_9Rule()); }
	 ruleInst_B15_S1_9
{ after(grammarAccess.getInst_B15_S1_9Rule()); } 
	 EOF 
;

// Rule Inst_B15_S1_9
ruleInst_B15_S1_9
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); }
(rule__Inst_B15_S1_9__Alternatives)
{ after(grammarAccess.getInst_B15_S1_9Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInst_B6
entryRuleInst_B6 
:
{ before(grammarAccess.getInst_B6Rule()); }
	 ruleInst_B6
{ after(grammarAccess.getInst_B6Rule()); } 
	 EOF 
;

// Rule Inst_B6
ruleInst_B6
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInst_B6Access().getAlternatives()); }
(rule__Inst_B6__Alternatives)
{ after(grammarAccess.getInst_B6Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInst_B24
entryRuleInst_B24 
:
{ before(grammarAccess.getInst_B24Rule()); }
	 ruleInst_B24
{ after(grammarAccess.getInst_B24Rule()); } 
	 EOF 
;

// Rule Inst_B24
ruleInst_B24
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInst_B24Access().getAlternatives()); }
(rule__Inst_B24__Alternatives)
{ after(grammarAccess.getInst_B24Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInst_X0
entryRuleInst_X0 
:
{ before(grammarAccess.getInst_X0Rule()); }
	 ruleInst_X0
{ after(grammarAccess.getInst_X0Rule()); } 
	 EOF 
;

// Rule Inst_X0
ruleInst_X0
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInst_X0Access().getAlternatives()); }
(rule__Inst_X0__Alternatives)
{ after(grammarAccess.getInst_X0Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInst_S1_14_S1_10
entryRuleInst_S1_14_S1_10 
:
{ before(grammarAccess.getInst_S1_14_S1_10Rule()); }
	 ruleInst_S1_14_S1_10
{ after(grammarAccess.getInst_S1_14_S1_10Rule()); } 
	 EOF 
;

// Rule Inst_S1_14_S1_10
ruleInst_S1_14_S1_10
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); }
(rule__Inst_S1_14_S1_10__Alternatives)
{ after(grammarAccess.getInst_S1_14_S1_10Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReadRegister
entryRuleReadRegister 
:
{ before(grammarAccess.getReadRegisterRule()); }
	 ruleReadRegister
{ after(grammarAccess.getReadRegisterRule()); } 
	 EOF 
;

// Rule ReadRegister
ruleReadRegister
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReadRegisterAccess().getGroup()); }
(rule__ReadRegister__Group__0)
{ after(grammarAccess.getReadRegisterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWriteRegisterLowshelf
entryRuleWriteRegisterLowshelf 
:
{ before(grammarAccess.getWriteRegisterLowshelfRule()); }
	 ruleWriteRegisterLowshelf
{ after(grammarAccess.getWriteRegisterLowshelfRule()); } 
	 EOF 
;

// Rule WriteRegisterLowshelf
ruleWriteRegisterLowshelf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); }
(rule__WriteRegisterLowshelf__Group__0)
{ after(grammarAccess.getWriteRegisterLowshelfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWriteRegisterHighshelf
entryRuleWriteRegisterHighshelf 
:
{ before(grammarAccess.getWriteRegisterHighshelfRule()); }
	 ruleWriteRegisterHighshelf
{ after(grammarAccess.getWriteRegisterHighshelfRule()); } 
	 EOF 
;

// Rule WriteRegisterHighshelf
ruleWriteRegisterHighshelf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); }
(rule__WriteRegisterHighshelf__Group__0)
{ after(grammarAccess.getWriteRegisterHighshelfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWriteRegister
entryRuleWriteRegister 
:
{ before(grammarAccess.getWriteRegisterRule()); }
	 ruleWriteRegister
{ after(grammarAccess.getWriteRegisterRule()); } 
	 EOF 
;

// Rule WriteRegister
ruleWriteRegister
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWriteRegisterAccess().getGroup()); }
(rule__WriteRegister__Group__0)
{ after(grammarAccess.getWriteRegisterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMaxx
entryRuleMaxx 
:
{ before(grammarAccess.getMaxxRule()); }
	 ruleMaxx
{ after(grammarAccess.getMaxxRule()); } 
	 EOF 
;

// Rule Maxx
ruleMaxx
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMaxxAccess().getGroup()); }
(rule__Maxx__Group__0)
{ after(grammarAccess.getMaxxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReadRegisterFilter
entryRuleReadRegisterFilter 
:
{ before(grammarAccess.getReadRegisterFilterRule()); }
	 ruleReadRegisterFilter
{ after(grammarAccess.getReadRegisterFilterRule()); } 
	 EOF 
;

// Rule ReadRegisterFilter
ruleReadRegisterFilter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReadRegisterFilterAccess().getGroup()); }
(rule__ReadRegisterFilter__Group__0)
{ after(grammarAccess.getReadRegisterFilterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMulx
entryRuleMulx 
:
{ before(grammarAccess.getMulxRule()); }
	 ruleMulx
{ after(grammarAccess.getMulxRule()); } 
	 EOF 
;

// Rule Mulx
ruleMulx
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMulxAccess().getGroup()); }
(rule__Mulx__Group__0)
{ after(grammarAccess.getMulxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLdax
entryRuleLdax 
:
{ before(grammarAccess.getLdaxRule()); }
	 ruleLdax
{ after(grammarAccess.getLdaxRule()); } 
	 EOF 
;

// Rule Ldax
ruleLdax
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLdaxAccess().getGroup()); }
(rule__Ldax__Group__0)
{ after(grammarAccess.getLdaxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExp
entryRuleExp 
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpAccess().getGroup()); }
(rule__Exp__Group__0)
{ after(grammarAccess.getExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLog
entryRuleLog 
:
{ before(grammarAccess.getLogRule()); }
	 ruleLog
{ after(grammarAccess.getLogRule()); } 
	 EOF 
;

// Rule Log
ruleLog
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogAccess().getGroup()); }
(rule__Log__Group__0)
{ after(grammarAccess.getLogAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScaleOffset
entryRuleScaleOffset 
:
{ before(grammarAccess.getScaleOffsetRule()); }
	 ruleScaleOffset
{ after(grammarAccess.getScaleOffsetRule()); } 
	 EOF 
;

// Rule ScaleOffset
ruleScaleOffset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScaleOffsetAccess().getGroup()); }
(rule__ScaleOffset__Group__0)
{ after(grammarAccess.getScaleOffsetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWriteDelay
entryRuleWriteDelay 
:
{ before(grammarAccess.getWriteDelayRule()); }
	 ruleWriteDelay
{ after(grammarAccess.getWriteDelayRule()); } 
	 EOF 
;

// Rule WriteDelay
ruleWriteDelay
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWriteDelayAccess().getGroup()); }
(rule__WriteDelay__Group__0)
{ after(grammarAccess.getWriteDelayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWriteAllpass
entryRuleWriteAllpass 
:
{ before(grammarAccess.getWriteAllpassRule()); }
	 ruleWriteAllpass
{ after(grammarAccess.getWriteAllpassRule()); } 
	 EOF 
;

// Rule WriteAllpass
ruleWriteAllpass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWriteAllpassAccess().getGroup()); }
(rule__WriteAllpass__Group__0)
{ after(grammarAccess.getWriteAllpassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReadDelay
entryRuleReadDelay 
:
{ before(grammarAccess.getReadDelayRule()); }
	 ruleReadDelay
{ after(grammarAccess.getReadDelayRule()); } 
	 EOF 
;

// Rule ReadDelay
ruleReadDelay
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReadDelayAccess().getGroup()); }
(rule__ReadDelay__Group__0)
{ after(grammarAccess.getReadDelayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoadSinLFO
entryRuleLoadSinLFO 
:
{ before(grammarAccess.getLoadSinLFORule()); }
	 ruleLoadSinLFO
{ after(grammarAccess.getLoadSinLFORule()); } 
	 EOF 
;

// Rule LoadSinLFO
ruleLoadSinLFO
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoadSinLFOAccess().getGroup()); }
(rule__LoadSinLFO__Group__0)
{ after(grammarAccess.getLoadSinLFOAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoadRampLFO
entryRuleLoadRampLFO 
:
{ before(grammarAccess.getLoadRampLFORule()); }
	 ruleLoadRampLFO
{ after(grammarAccess.getLoadRampLFORule()); } 
	 EOF 
;

// Rule LoadRampLFO
ruleLoadRampLFO
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoadRampLFOAccess().getGroup()); }
(rule__LoadRampLFO__Group__0)
{ after(grammarAccess.getLoadRampLFOAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChorusReadDelay
entryRuleChorusReadDelay 
:
{ before(grammarAccess.getChorusReadDelayRule()); }
	 ruleChorusReadDelay
{ after(grammarAccess.getChorusReadDelayRule()); } 
	 EOF 
;

// Rule ChorusReadDelay
ruleChorusReadDelay
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChorusReadDelayAccess().getGroup()); }
(rule__ChorusReadDelay__Group__0)
{ after(grammarAccess.getChorusReadDelayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChorusReadValue
entryRuleChorusReadValue 
:
{ before(grammarAccess.getChorusReadValueRule()); }
	 ruleChorusReadValue
{ after(grammarAccess.getChorusReadValueRule()); } 
	 EOF 
;

// Rule ChorusReadValue
ruleChorusReadValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChorusReadValueAccess().getGroup()); }
(rule__ChorusReadValue__Group__0)
{ after(grammarAccess.getChorusReadValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChorusScaleOffset
entryRuleChorusScaleOffset 
:
{ before(grammarAccess.getChorusScaleOffsetRule()); }
	 ruleChorusScaleOffset
{ after(grammarAccess.getChorusScaleOffsetRule()); } 
	 EOF 
;

// Rule ChorusScaleOffset
ruleChorusScaleOffset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getGroup()); }
(rule__ChorusScaleOffset__Group__0)
{ after(grammarAccess.getChorusScaleOffsetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReadDelayPointer
entryRuleReadDelayPointer 
:
{ before(grammarAccess.getReadDelayPointerRule()); }
	 ruleReadDelayPointer
{ after(grammarAccess.getReadDelayPointerRule()); } 
	 EOF 
;

// Rule ReadDelayPointer
ruleReadDelayPointer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReadDelayPointerAccess().getGroup()); }
(rule__ReadDelayPointer__Group__0)
{ after(grammarAccess.getReadDelayPointerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXor
entryRuleXor 
:
{ before(grammarAccess.getXorRule()); }
	 ruleXor
{ after(grammarAccess.getXorRule()); } 
	 EOF 
;

// Rule Xor
ruleXor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXorAccess().getGroup()); }
(rule__Xor__Group__0)
{ after(grammarAccess.getXorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJam
entryRuleJam 
:
{ before(grammarAccess.getJamRule()); }
	 ruleJam
{ after(grammarAccess.getJamRule()); } 
	 EOF 
;

// Rule Jam
ruleJam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJamAccess().getGroup()); }
(rule__Jam__Group__0)
{ after(grammarAccess.getJamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClr
entryRuleClr 
:
{ before(grammarAccess.getClrRule()); }
	 ruleClr
{ after(grammarAccess.getClrRule()); } 
	 EOF 
;

// Rule Clr
ruleClr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClrAccess().getGroup()); }
(rule__Clr__Group__0)
{ after(grammarAccess.getClrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNot
entryRuleNot 
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotAccess().getGroup()); }
(rule__Not__Group__0)
{ after(grammarAccess.getNotAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbsa
entryRuleAbsa 
:
{ before(grammarAccess.getAbsaRule()); }
	 ruleAbsa
{ after(grammarAccess.getAbsaRule()); } 
	 EOF 
;

// Rule Absa
ruleAbsa
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbsaAccess().getGroup()); }
(rule__Absa__Group__0)
{ after(grammarAccess.getAbsaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSkip
entryRuleSkip 
:
{ before(grammarAccess.getSkipRule()); }
	 ruleSkip
{ after(grammarAccess.getSkipRule()); } 
	 EOF 
;

// Rule Skip
ruleSkip
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSkipAccess().getGroup()); }
(rule__Skip__Group__0)
{ after(grammarAccess.getSkipAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSPINDOUBLE
entryRuleSPINDOUBLE 
:
{ before(grammarAccess.getSPINDOUBLERule()); }
	 ruleSPINDOUBLE
{ after(grammarAccess.getSPINDOUBLERule()); } 
	 EOF 
;

// Rule SPINDOUBLE
ruleSPINDOUBLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSPINDOUBLEAccess().getGroup()); }
(rule__SPINDOUBLE__Group__0)
{ after(grammarAccess.getSPINDOUBLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSPINREGISTER
entryRuleSPINREGISTER 
:
{ before(grammarAccess.getSPINREGISTERRule()); }
	 ruleSPINREGISTER
{ after(grammarAccess.getSPINREGISTERRule()); } 
	 EOF 
;

// Rule SPINREGISTER
ruleSPINREGISTER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSPINREGISTERAccess().getAlternatives()); }
(rule__SPINREGISTER__Alternatives)
{ after(grammarAccess.getSPINREGISTERAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSPINCHOREGFLAGS
entryRuleSPINCHOREGFLAGS 
:
{ before(grammarAccess.getSPINCHOREGFLAGSRule()); }
	 ruleSPINCHOREGFLAGS
{ after(grammarAccess.getSPINCHOREGFLAGSRule()); } 
	 EOF 
;

// Rule SPINCHOREGFLAGS
ruleSPINCHOREGFLAGS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); }
(rule__SPINCHOREGFLAGS__Alternatives)
{ after(grammarAccess.getSPINCHOREGFLAGSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSPINMEM
entryRuleSPINMEM 
:
{ before(grammarAccess.getSPINMEMRule()); }
	 ruleSPINMEM
{ after(grammarAccess.getSPINMEMRule()); } 
	 EOF 
;

// Rule SPINMEM
ruleSPINMEM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSPINMEMAccess().getGroup()); }
(rule__SPINMEM__Group__0)
{ after(grammarAccess.getSPINMEMAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSPINBUF
entryRuleSPINBUF 
:
{ before(grammarAccess.getSPINBUFRule()); }
	 ruleSPINBUF
{ after(grammarAccess.getSPINBUFRule()); } 
	 EOF 
;

// Rule SPINBUF
ruleSPINBUF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSPINBUFAccess().getGroup()); }
(rule__SPINBUF__Group__0)
{ after(grammarAccess.getSPINBUFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBINARY24
entryRuleBINARY24 
:
{ before(grammarAccess.getBINARY24Rule()); }
	 ruleBINARY24
{ after(grammarAccess.getBINARY24Rule()); } 
	 EOF 
;

// Rule BINARY24
ruleBINARY24
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBINARY24Access().getAlternatives()); }
(rule__BINARY24__Alternatives)
{ after(grammarAccess.getBINARY24Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN 
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
(rule__BOOLEAN__Alternatives)
{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Pin__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); }
	ruleInputPin
{ after(grammarAccess.getPinAccess().getInputPinParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); }
	ruleOutputPin
{ after(grammarAccess.getPinAccess().getOutputPinParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputPin__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); }
	ruleAudioInput
{ after(grammarAccess.getInputPinAccess().getAudioInputParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); }
	ruleControlInput
{ after(grammarAccess.getInputPinAccess().getControlInputParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputPin__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); }
	ruleAudioOutput
{ after(grammarAccess.getOutputPinAccess().getAudioOutputParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); }
	ruleControlOutput
{ after(grammarAccess.getOutputPinAccess().getControlOutputParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinElementAccess().getSpinIntParserRuleCall_0()); }
	ruleSpinInt
{ after(grammarAccess.getSpinElementAccess().getSpinIntParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSpinElementAccess().getControlParserRuleCall_1()); }
	ruleControl
{ after(grammarAccess.getSpinElementAccess().getControlParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSpinElementAccess().getSpinEquateParserRuleCall_2()); }
	ruleSpinEquate
{ after(grammarAccess.getSpinElementAccess().getSpinEquateParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSpinElementAccess().getSpinBoolParserRuleCall_3()); }
	ruleSpinBool
{ after(grammarAccess.getSpinElementAccess().getSpinBoolParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSpinElementAccess().getMemParserRuleCall_4()); }
	ruleMem
{ after(grammarAccess.getSpinElementAccess().getMemParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_5()); }
	ruleInstruction
{ after(grammarAccess.getSpinElementAccess().getInstructionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_6()); }
	ruleLabel
{ after(grammarAccess.getSpinElementAccess().getLabelParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_7()); }
	ruleComment
{ after(grammarAccess.getSpinElementAccess().getCommentParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_8()); }
	ruleMacro
{ after(grammarAccess.getSpinElementAccess().getMacroParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_9()); }
	ruleOffset
{ after(grammarAccess.getSpinElementAccess().getOffsetParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Control__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlAccess().getSpinSliderLabelParserRuleCall_0()); }
	ruleSpinSliderLabel
{ after(grammarAccess.getControlAccess().getSpinSliderLabelParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getControlAccess().getSpinCheckBoxParserRuleCall_1()); }
	ruleSpinCheckBox
{ after(grammarAccess.getControlAccess().getSpinCheckBoxParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); }
	ruleIsPinConnected
{ after(grammarAccess.getMacroAccess().getIsPinConnectedParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getIsTrueParserRuleCall_1()); }
	ruleIsTrue
{ after(grammarAccess.getMacroAccess().getIsTrueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getIsElseParserRuleCall_2()); }
	ruleIsElse
{ after(grammarAccess.getMacroAccess().getIsElseParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_3()); }
	ruleIsEndif
{ after(grammarAccess.getMacroAccess().getIsEndifParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_4()); }
	ruleGetInputDefault
{ after(grammarAccess.getMacroAccess().getGetInputDefaultParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getGetDelayScaleControlParserRuleCall_5()); }
	ruleGetDelayScaleControl
{ after(grammarAccess.getMacroAccess().getGetDelayScaleControlParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getSetOutputPinParserRuleCall_6()); }
	ruleSetOutputPin
{ after(grammarAccess.getMacroAccess().getSetOutputPinParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getGetBaseAddressParserRuleCall_7()); }
	ruleGetBaseAddress
{ after(grammarAccess.getMacroAccess().getGetBaseAddressParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getGetSamplesFromRatioParserRuleCall_8()); }
	ruleGetSamplesFromRatio
{ after(grammarAccess.getMacroAccess().getGetSamplesFromRatioParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); }
	ruleInst_B15_S1_9
{ after(grammarAccess.getInstructionAccess().getInst_B15_S1_9ParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); }
	ruleInst_B6_S1_14
{ after(grammarAccess.getInstructionAccess().getInst_B6_S1_14ParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); }
	ruleInst_S1_14_S1_10
{ after(grammarAccess.getInstructionAccess().getInst_S1_14_S1_10ParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); }
	ruleInst_B6
{ after(grammarAccess.getInstructionAccess().getInst_B6ParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); }
	ruleInst_B24
{ after(grammarAccess.getInstructionAccess().getInst_B24ParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); }
	ruleSkip
{ after(grammarAccess.getInstructionAccess().getSkipParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); }
	ruleJam
{ after(grammarAccess.getInstructionAccess().getJamParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); }
	ruleInst_X0
{ after(grammarAccess.getInstructionAccess().getInst_X0ParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); }
	ruleLoadSinLFO
{ after(grammarAccess.getInstructionAccess().getLoadSinLFOParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); }
	ruleLoadRampLFO
{ after(grammarAccess.getInstructionAccess().getLoadRampLFOParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); }
	ruleChorusReadDelay
{ after(grammarAccess.getInstructionAccess().getChorusReadDelayParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); }
	ruleChorusReadValue
{ after(grammarAccess.getInstructionAccess().getChorusReadValueParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); }
	ruleChorusScaleOffset
{ after(grammarAccess.getInstructionAccess().getChorusScaleOffsetParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); }
	ruleLog
{ after(grammarAccess.getInstructionAccess().getLogParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); }
	ruleReadDelayPointer
{ after(grammarAccess.getInstructionAccess().getReadDelayPointerParserRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inst_B6_S1_14__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); }
	ruleReadRegister
{ after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); }
	ruleWriteRegister
{ after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); }
	ruleReadRegisterFilter
{ after(grammarAccess.getInst_B6_S1_14Access().getReadRegisterFilterParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); }
	ruleMaxx
{ after(grammarAccess.getInst_B6_S1_14Access().getMaxxParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); }
	ruleWriteRegisterHighshelf
{ after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterHighshelfParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); }
	ruleWriteRegisterLowshelf
{ after(grammarAccess.getInst_B6_S1_14Access().getWriteRegisterLowshelfParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inst_B15_S1_9__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); }
	ruleReadDelay
{ after(grammarAccess.getInst_B15_S1_9Access().getReadDelayParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); }
	ruleWriteDelay
{ after(grammarAccess.getInst_B15_S1_9Access().getWriteDelayParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); }
	ruleWriteAllpass
{ after(grammarAccess.getInst_B15_S1_9Access().getWriteAllpassParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inst_B6__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); }
	ruleMulx
{ after(grammarAccess.getInst_B6Access().getMulxParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); }
	ruleLdax
{ after(grammarAccess.getInst_B6Access().getLdaxParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inst_B24__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); }
	ruleAnd
{ after(grammarAccess.getInst_B24Access().getAndParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); }
	ruleOr
{ after(grammarAccess.getInst_B24Access().getOrParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); }
	ruleXor
{ after(grammarAccess.getInst_B24Access().getXorParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inst_X0__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); }
	ruleClr
{ after(grammarAccess.getInst_X0Access().getClrParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); }
	ruleNot
{ after(grammarAccess.getInst_X0Access().getNotParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); }
	ruleAbsa
{ after(grammarAccess.getInst_X0Access().getAbsaParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inst_S1_14_S1_10__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); }
	ruleExp
{ after(grammarAccess.getInst_S1_14_S1_10Access().getExpParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); }
	ruleScaleOffset
{ after(grammarAccess.getInst_S1_14_S1_10Access().getScaleOffsetParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SPINDOUBLE__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getSPINDOUBLEAccess().getIDTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); }
(rule__SPINDOUBLE__Group_1_1__0)
{ after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SPINREGISTER__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getSPINREGISTERAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getSPINREGISTERAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SPINCHOREGFLAGS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getSPINCHOREGFLAGSAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); }
(rule__SPINCHOREGFLAGS__Group_1__0)?
{ after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SPINMEM__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); }
(rule__SPINMEM__ValueAssignment_1_0)
{ after(grammarAccess.getSPINMEMAccess().getValueAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); }
(rule__SPINMEM__OffsetAssignment_1_1)
{ after(grammarAccess.getSPINMEMAccess().getOffsetAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SPINBUF__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); }

	'#' 

{ after(grammarAccess.getSPINBUFAccess().getNumberSignKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); }

	'^' 

{ after(grammarAccess.getSPINBUFAccess().getCircumflexAccentKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SPINBUF__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); }

	'+' 

{ after(grammarAccess.getSPINBUFAccess().getPlusSignKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); }

	'-' 

{ after(grammarAccess.getSPINBUFAccess().getHyphenMinusKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY24__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARY24Access().getGroup_0()); }
(rule__BINARY24__Group_0__0)
{ after(grammarAccess.getBINARY24Access().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBINARY24Access().getGroup_1()); }
(rule__BINARY24__Group_1__0)
{ after(grammarAccess.getBINARY24Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNameKeyword_0()); }

	'@name' 

{ after(grammarAccess.getProgramAccess().getNameKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNameAssignment_1()); }
(rule__Program__NameAssignment_1)
{ after(grammarAccess.getProgramAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getProgramAccess().getPinsAssignment_2()); }
(rule__Program__PinsAssignment_2)
{ after(grammarAccess.getProgramAccess().getPinsAssignment_2()); }
)
(
{ before(grammarAccess.getProgramAccess().getPinsAssignment_2()); }
(rule__Program__PinsAssignment_2)*
{ after(grammarAccess.getProgramAccess().getPinsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getProgramAccess().getElementsAssignment_3()); }
(rule__Program__ElementsAssignment_3)
{ after(grammarAccess.getProgramAccess().getElementsAssignment_3()); }
)
(
{ before(grammarAccess.getProgramAccess().getElementsAssignment_3()); }
(rule__Program__ElementsAssignment_3)*
{ after(grammarAccess.getProgramAccess().getElementsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AudioInput__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AudioInput__Group__0__Impl
	rule__AudioInput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioInput__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); }

	'@audioInput' 

{ after(grammarAccess.getAudioInputAccess().getAudioInputKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AudioInput__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AudioInput__Group__1__Impl
	rule__AudioInput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioInput__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); }
(rule__AudioInput__VarNameAssignment_1)
{ after(grammarAccess.getAudioInputAccess().getVarNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AudioInput__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AudioInput__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioInput__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioInputAccess().getNameAssignment_2()); }
(rule__AudioInput__NameAssignment_2)
{ after(grammarAccess.getAudioInputAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AudioOutput__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AudioOutput__Group__0__Impl
	rule__AudioOutput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioOutput__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); }

	'@audioOutput' 

{ after(grammarAccess.getAudioOutputAccess().getAudioOutputKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AudioOutput__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AudioOutput__Group__1__Impl
	rule__AudioOutput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioOutput__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); }
(rule__AudioOutput__VarNameAssignment_1)
{ after(grammarAccess.getAudioOutputAccess().getVarNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AudioOutput__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AudioOutput__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioOutput__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); }
(rule__AudioOutput__NameAssignment_2)
{ after(grammarAccess.getAudioOutputAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ControlInput__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlInput__Group__0__Impl
	rule__ControlInput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlInput__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); }

	'@controlInput' 

{ after(grammarAccess.getControlInputAccess().getControlInputKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlInput__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlInput__Group__1__Impl
	rule__ControlInput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlInput__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); }
(rule__ControlInput__VarNameAssignment_1)
{ after(grammarAccess.getControlInputAccess().getVarNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlInput__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlInput__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlInput__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlInputAccess().getNameAssignment_2()); }
(rule__ControlInput__NameAssignment_2)
{ after(grammarAccess.getControlInputAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ControlOutput__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlOutput__Group__0__Impl
	rule__ControlOutput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlOutput__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); }

	'@controlOutput' 

{ after(grammarAccess.getControlOutputAccess().getControlOutputKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlOutput__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlOutput__Group__1__Impl
	rule__ControlOutput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlOutput__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); }
(rule__ControlOutput__VarNameAssignment_1)
{ after(grammarAccess.getControlOutputAccess().getVarNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlOutput__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlOutput__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlOutput__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlOutputAccess().getNameAssignment_2()); }
(rule__ControlOutput__NameAssignment_2)
{ after(grammarAccess.getControlOutputAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpinEquate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinEquate__Group__0__Impl
	rule__SpinEquate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinEquate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinEquateAccess().getEquKeyword_0()); }

	'equ' 

{ after(grammarAccess.getSpinEquateAccess().getEquKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinEquate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinEquate__Group__1__Impl
	rule__SpinEquate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinEquate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinEquateAccess().getEnameAssignment_1()); }
(rule__SpinEquate__EnameAssignment_1)
{ after(grammarAccess.getSpinEquateAccess().getEnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinEquate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinEquate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinEquate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinEquateAccess().getValueAssignment_2()); }
(rule__SpinEquate__ValueAssignment_2)
{ after(grammarAccess.getSpinEquateAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpinInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinInt__Group__0__Impl
	rule__SpinInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinIntAccess().getIntKeyword_0()); }

	'int' 

{ after(grammarAccess.getSpinIntAccess().getIntKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinInt__Group__1__Impl
	rule__SpinInt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinIntAccess().getEnameAssignment_1()); }
(rule__SpinInt__EnameAssignment_1)
{ after(grammarAccess.getSpinIntAccess().getEnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinInt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinInt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinInt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinIntAccess().getValueAssignment_2()); }
(rule__SpinInt__ValueAssignment_2)
{ after(grammarAccess.getSpinIntAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Mem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mem__Group__0__Impl
	rule__Mem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemAccess().getMemKeyword_0()); }

	'mem' 

{ after(grammarAccess.getMemAccess().getMemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mem__Group__1__Impl
	rule__Mem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemAccess().getBufferAssignment_1()); }
(rule__Mem__BufferAssignment_1)
{ after(grammarAccess.getMemAccess().getBufferAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemAccess().getLengthAssignment_2()); }
(rule__Mem__LengthAssignment_2)
{ after(grammarAccess.getMemAccess().getLengthAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Offset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Offset__Group__0__Impl
	rule__Offset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Offset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); }

	'offset' 

{ after(grammarAccess.getOffsetAccess().getOffsetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Offset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Offset__Group__1__Impl
	rule__Offset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Offset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOffsetAccess().getNameAssignment_1()); }
(rule__Offset__NameAssignment_1)
{ after(grammarAccess.getOffsetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Offset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Offset__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Offset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOffsetAccess().getLengthAssignment_2()); }
(rule__Offset__LengthAssignment_2)
{ after(grammarAccess.getOffsetAccess().getLengthAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpinBool__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinBool__Group__0__Impl
	rule__SpinBool__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinBool__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinBoolAccess().getBoolKeyword_0()); }

	'bool' 

{ after(grammarAccess.getSpinBoolAccess().getBoolKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinBool__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinBool__Group__1__Impl
	rule__SpinBool__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinBool__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinBoolAccess().getNameAssignment_1()); }
(rule__SpinBool__NameAssignment_1)
{ after(grammarAccess.getSpinBoolAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinBool__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinBool__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinBool__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinBoolAccess().getValueAssignment_2()); }
(rule__SpinBool__ValueAssignment_2)
{ after(grammarAccess.getSpinBoolAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpinSliderLabel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group__0__Impl
	rule__SpinSliderLabel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getSliderLabelKeyword_0()); }

	'@sliderLabel' 

{ after(grammarAccess.getSpinSliderLabelAccess().getSliderLabelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinSliderLabel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group__1__Impl
	rule__SpinSliderLabel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getEnameAssignment_1()); }
(rule__SpinSliderLabel__EnameAssignment_1)
{ after(grammarAccess.getSpinSliderLabelAccess().getEnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinSliderLabel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group__2__Impl
	rule__SpinSliderLabel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getControlNameAssignment_2()); }
(rule__SpinSliderLabel__ControlNameAssignment_2)
{ after(grammarAccess.getSpinSliderLabelAccess().getControlNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinSliderLabel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getGroup_3()); }
(rule__SpinSliderLabel__Group_3__0)?
{ after(grammarAccess.getSpinSliderLabelAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SpinSliderLabel__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group_3__0__Impl
	rule__SpinSliderLabel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getMinValAssignment_3_0()); }
(rule__SpinSliderLabel__MinValAssignment_3_0)
{ after(grammarAccess.getSpinSliderLabelAccess().getMinValAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinSliderLabel__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group_3__1__Impl
	rule__SpinSliderLabel__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getMaxValAssignment_3_1()); }
(rule__SpinSliderLabel__MaxValAssignment_3_1)
{ after(grammarAccess.getSpinSliderLabelAccess().getMaxValAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinSliderLabel__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group_3__2__Impl
	rule__SpinSliderLabel__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getInitValAssignment_3_2()); }
(rule__SpinSliderLabel__InitValAssignment_3_2)
{ after(grammarAccess.getSpinSliderLabelAccess().getInitValAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinSliderLabel__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group_3__3__Impl
	rule__SpinSliderLabel__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getMultiplierAssignment_3_3()); }
(rule__SpinSliderLabel__MultiplierAssignment_3_3)
{ after(grammarAccess.getSpinSliderLabelAccess().getMultiplierAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinSliderLabel__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group_3__4__Impl
	rule__SpinSliderLabel__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getPrecisionAssignment_3_4()); }
(rule__SpinSliderLabel__PrecisionAssignment_3_4)
{ after(grammarAccess.getSpinSliderLabelAccess().getPrecisionAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinSliderLabel__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinSliderLabel__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getOptionAssignment_3_5()); }
(rule__SpinSliderLabel__OptionAssignment_3_5)?
{ after(grammarAccess.getSpinSliderLabelAccess().getOptionAssignment_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SpinCheckBox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinCheckBox__Group__0__Impl
	rule__SpinCheckBox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinCheckBox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinCheckBoxAccess().getCheckboxKeyword_0()); }

	'@checkbox' 

{ after(grammarAccess.getSpinCheckBoxAccess().getCheckboxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinCheckBox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinCheckBox__Group__1__Impl
	rule__SpinCheckBox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinCheckBox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinCheckBoxAccess().getEnameAssignment_1()); }
(rule__SpinCheckBox__EnameAssignment_1)
{ after(grammarAccess.getSpinCheckBoxAccess().getEnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpinCheckBox__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpinCheckBox__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpinCheckBox__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinCheckBoxAccess().getControlNameAssignment_2()); }
(rule__SpinCheckBox__ControlNameAssignment_2)
{ after(grammarAccess.getSpinCheckBoxAccess().getControlNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Label__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_0()); }
(rule__Label__NameAssignment_0)
{ after(grammarAccess.getLabelAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getLabelAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IsPinConnected__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsPinConnected__Group__0__Impl
	rule__IsPinConnected__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsPinConnected__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); }

	'@isPinConnected' 

{ after(grammarAccess.getIsPinConnectedAccess().getIsPinConnectedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsPinConnected__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsPinConnected__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsPinConnected__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); }
(rule__IsPinConnected__Arg1Assignment_1)
{ after(grammarAccess.getIsPinConnectedAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IsTrue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsTrue__Group__0__Impl
	rule__IsTrue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTrue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTrueAccess().getIsTrueKeyword_0()); }

	'@isTrue' 

{ after(grammarAccess.getIsTrueAccess().getIsTrueKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsTrue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsTrue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTrue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTrueAccess().getVariableAssignment_1()); }
(rule__IsTrue__VariableAssignment_1)
{ after(grammarAccess.getIsTrueAccess().getVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IsElse__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsElse__Group__0__Impl
	rule__IsElse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsElse__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsElseAccess().getIsElseAction_0()); }
(

)
{ after(grammarAccess.getIsElseAccess().getIsElseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsElse__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsElse__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsElse__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsElseAccess().getElseKeyword_1()); }

	'@else' 

{ after(grammarAccess.getIsElseAccess().getElseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IsEndif__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsEndif__Group__0__Impl
	rule__IsEndif__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsEndif__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); }
(

)
{ after(grammarAccess.getIsEndifAccess().getIsEndifAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsEndif__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsEndif__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsEndif__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); }

	'@endif' 

{ after(grammarAccess.getIsEndifAccess().getEndifKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GetInputDefault__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetInputDefault__Group__0__Impl
	rule__GetInputDefault__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetInputDefault__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); }

	'@getInputDefault' 

{ after(grammarAccess.getGetInputDefaultAccess().getGetInputDefaultKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetInputDefault__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetInputDefault__Group__1__Impl
	rule__GetInputDefault__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GetInputDefault__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); }
(rule__GetInputDefault__NameAssignment_1)
{ after(grammarAccess.getGetInputDefaultAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetInputDefault__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetInputDefault__Group__2__Impl
	rule__GetInputDefault__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GetInputDefault__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); }
(rule__GetInputDefault__VariableAssignment_2)
{ after(grammarAccess.getGetInputDefaultAccess().getVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetInputDefault__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetInputDefault__Group__3__Impl
	rule__GetInputDefault__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GetInputDefault__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); }
(rule__GetInputDefault__ScaleAssignment_3)
{ after(grammarAccess.getGetInputDefaultAccess().getScaleAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetInputDefault__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetInputDefault__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetInputDefault__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); }
(rule__GetInputDefault__DefaultValAssignment_4)
{ after(grammarAccess.getGetInputDefaultAccess().getDefaultValAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GetDelayScaleControl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetDelayScaleControl__Group__0__Impl
	rule__GetDelayScaleControl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetDelayScaleControl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getGetDelayScaleControlKeyword_0()); }

	'@getDelayScaleControl' 

{ after(grammarAccess.getGetDelayScaleControlAccess().getGetDelayScaleControlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetDelayScaleControl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetDelayScaleControl__Group__1__Impl
	rule__GetDelayScaleControl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GetDelayScaleControl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getRatioAssignment_1()); }
(rule__GetDelayScaleControl__RatioAssignment_1)
{ after(grammarAccess.getGetDelayScaleControlAccess().getRatioAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetDelayScaleControl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetDelayScaleControl__Group__2__Impl
	rule__GetDelayScaleControl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GetDelayScaleControl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getLengthAssignment_2()); }
(rule__GetDelayScaleControl__LengthAssignment_2)
{ after(grammarAccess.getGetDelayScaleControlAccess().getLengthAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetDelayScaleControl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetDelayScaleControl__Group__3__Impl
	rule__GetDelayScaleControl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GetDelayScaleControl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getOffsetAssignment_3()); }
(rule__GetDelayScaleControl__OffsetAssignment_3)
{ after(grammarAccess.getGetDelayScaleControlAccess().getOffsetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetDelayScaleControl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetDelayScaleControl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetDelayScaleControl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getControlAssignment_4()); }
(rule__GetDelayScaleControl__ControlAssignment_4)?
{ after(grammarAccess.getGetDelayScaleControlAccess().getControlAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GetSamplesFromRatio__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetSamplesFromRatio__Group__0__Impl
	rule__GetSamplesFromRatio__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetSamplesFromRatio__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetSamplesFromRatioAccess().getGetSamplesFromRatioKeyword_0()); }

	'@getSamplesFromRatio' 

{ after(grammarAccess.getGetSamplesFromRatioAccess().getGetSamplesFromRatioKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetSamplesFromRatio__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetSamplesFromRatio__Group__1__Impl
	rule__GetSamplesFromRatio__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GetSamplesFromRatio__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetSamplesFromRatioAccess().getVariableAssignment_1()); }
(rule__GetSamplesFromRatio__VariableAssignment_1)
{ after(grammarAccess.getGetSamplesFromRatioAccess().getVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetSamplesFromRatio__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetSamplesFromRatio__Group__2__Impl
	rule__GetSamplesFromRatio__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GetSamplesFromRatio__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetSamplesFromRatioAccess().getRatioAssignment_2()); }
(rule__GetSamplesFromRatio__RatioAssignment_2)
{ after(grammarAccess.getGetSamplesFromRatioAccess().getRatioAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetSamplesFromRatio__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetSamplesFromRatio__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetSamplesFromRatio__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetSamplesFromRatioAccess().getLengthAssignment_3()); }
(rule__GetSamplesFromRatio__LengthAssignment_3)
{ after(grammarAccess.getGetSamplesFromRatioAccess().getLengthAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GetBaseAddress__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetBaseAddress__Group__0__Impl
	rule__GetBaseAddress__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetBaseAddress__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressAction_0()); }
(

)
{ after(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetBaseAddress__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetBaseAddress__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetBaseAddress__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressKeyword_1()); }

	'@getBaseAddress' 

{ after(grammarAccess.getGetBaseAddressAccess().getGetBaseAddressKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetOutputPin__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetOutputPin__Group__0__Impl
	rule__SetOutputPin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOutputPin__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetOutputPinAccess().getSetOutputPinKeyword_0()); }

	'@setOutputPin' 

{ after(grammarAccess.getSetOutputPinAccess().getSetOutputPinKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetOutputPin__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetOutputPin__Group__1__Impl
	rule__SetOutputPin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOutputPin__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetOutputPinAccess().getPinNameAssignment_1()); }
(rule__SetOutputPin__PinNameAssignment_1)
{ after(grammarAccess.getSetOutputPinAccess().getPinNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetOutputPin__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetOutputPin__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetOutputPin__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetOutputPinAccess().getVarNameAssignment_2()); }
(rule__SetOutputPin__VarNameAssignment_2)
{ after(grammarAccess.getSetOutputPinAccess().getVarNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReadRegister__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadRegister__Group__0__Impl
	rule__ReadRegister__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegister__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); }

	'rdax' 

{ after(grammarAccess.getReadRegisterAccess().getRdaxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadRegister__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadRegister__Group__1__Impl
	rule__ReadRegister__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegister__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); }
(rule__ReadRegister__Arg1Assignment_1)
{ after(grammarAccess.getReadRegisterAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadRegister__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadRegister__Group__2__Impl
	rule__ReadRegister__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegister__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getReadRegisterAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadRegister__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadRegister__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegister__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); }
(rule__ReadRegister__Arg2Assignment_3)
{ after(grammarAccess.getReadRegisterAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WriteRegisterLowshelf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegisterLowshelf__Group__0__Impl
	rule__WriteRegisterLowshelf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterLowshelf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); }

	'wrlx' 

{ after(grammarAccess.getWriteRegisterLowshelfAccess().getWrlxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteRegisterLowshelf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegisterLowshelf__Group__1__Impl
	rule__WriteRegisterLowshelf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterLowshelf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); }
(rule__WriteRegisterLowshelf__Arg1Assignment_1)
{ after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteRegisterLowshelf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegisterLowshelf__Group__2__Impl
	rule__WriteRegisterLowshelf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterLowshelf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getWriteRegisterLowshelfAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteRegisterLowshelf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegisterLowshelf__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterLowshelf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); }
(rule__WriteRegisterLowshelf__Arg2Assignment_3)
{ after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WriteRegisterHighshelf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegisterHighshelf__Group__0__Impl
	rule__WriteRegisterHighshelf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterHighshelf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); }

	'wrhx' 

{ after(grammarAccess.getWriteRegisterHighshelfAccess().getWrhxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteRegisterHighshelf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegisterHighshelf__Group__1__Impl
	rule__WriteRegisterHighshelf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterHighshelf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); }
(rule__WriteRegisterHighshelf__Arg1Assignment_1)
{ after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteRegisterHighshelf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegisterHighshelf__Group__2__Impl
	rule__WriteRegisterHighshelf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterHighshelf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getWriteRegisterHighshelfAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteRegisterHighshelf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegisterHighshelf__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterHighshelf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); }
(rule__WriteRegisterHighshelf__Arg2Assignment_3)
{ after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WriteRegister__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegister__Group__0__Impl
	rule__WriteRegister__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegister__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); }

	'wrax' 

{ after(grammarAccess.getWriteRegisterAccess().getWraxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteRegister__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegister__Group__1__Impl
	rule__WriteRegister__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegister__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); }
(rule__WriteRegister__Arg1Assignment_1)
{ after(grammarAccess.getWriteRegisterAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteRegister__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegister__Group__2__Impl
	rule__WriteRegister__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegister__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getWriteRegisterAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteRegister__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteRegister__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegister__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); }
(rule__WriteRegister__Arg2Assignment_3)
{ after(grammarAccess.getWriteRegisterAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Maxx__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Maxx__Group__0__Impl
	rule__Maxx__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Maxx__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); }

	'maxx' 

{ after(grammarAccess.getMaxxAccess().getMaxxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Maxx__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Maxx__Group__1__Impl
	rule__Maxx__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Maxx__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxxAccess().getArg1Assignment_1()); }
(rule__Maxx__Arg1Assignment_1)
{ after(grammarAccess.getMaxxAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Maxx__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Maxx__Group__2__Impl
	rule__Maxx__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Maxx__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxxAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getMaxxAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Maxx__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Maxx__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Maxx__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxxAccess().getArg2Assignment_3()); }
(rule__Maxx__Arg2Assignment_3)
{ after(grammarAccess.getMaxxAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReadRegisterFilter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadRegisterFilter__Group__0__Impl
	rule__ReadRegisterFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegisterFilter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); }

	'rdfx' 

{ after(grammarAccess.getReadRegisterFilterAccess().getRdfxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadRegisterFilter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadRegisterFilter__Group__1__Impl
	rule__ReadRegisterFilter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegisterFilter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); }
(rule__ReadRegisterFilter__Arg1Assignment_1)
{ after(grammarAccess.getReadRegisterFilterAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadRegisterFilter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadRegisterFilter__Group__2__Impl
	rule__ReadRegisterFilter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegisterFilter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getReadRegisterFilterAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadRegisterFilter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadRegisterFilter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegisterFilter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); }
(rule__ReadRegisterFilter__Arg2Assignment_3)
{ after(grammarAccess.getReadRegisterFilterAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Mulx__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mulx__Group__0__Impl
	rule__Mulx__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mulx__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulxAccess().getMulxKeyword_0()); }

	'mulx' 

{ after(grammarAccess.getMulxAccess().getMulxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mulx__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mulx__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mulx__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulxAccess().getArg1Assignment_1()); }
(rule__Mulx__Arg1Assignment_1)
{ after(grammarAccess.getMulxAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ldax__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ldax__Group__0__Impl
	rule__Ldax__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ldax__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); }

	'ldax' 

{ after(grammarAccess.getLdaxAccess().getLdaxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ldax__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ldax__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ldax__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLdaxAccess().getArg1Assignment_1()); }
(rule__Ldax__Arg1Assignment_1)
{ after(grammarAccess.getLdaxAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group__0__Impl
	rule__Exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getExpKeyword_0()); }

	'exp' 

{ after(grammarAccess.getExpAccess().getExpKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group__1__Impl
	rule__Exp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getArg1Assignment_1()); }
(rule__Exp__Arg1Assignment_1)
{ after(grammarAccess.getExpAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group__2__Impl
	rule__Exp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getExpAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getArg2Assignment_3()); }
(rule__Exp__Arg2Assignment_3)
{ after(grammarAccess.getExpAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Log__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log__Group__0__Impl
	rule__Log__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogAccess().getLogKeyword_0()); }

	'log' 

{ after(grammarAccess.getLogAccess().getLogKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Log__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log__Group__1__Impl
	rule__Log__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogAccess().getArg1Assignment_1()); }
(rule__Log__Arg1Assignment_1)
{ after(grammarAccess.getLogAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Log__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log__Group__2__Impl
	rule__Log__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getLogAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Log__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogAccess().getArg2Assignment_3()); }
(rule__Log__Arg2Assignment_3)
{ after(grammarAccess.getLogAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ScaleOffset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScaleOffset__Group__0__Impl
	rule__ScaleOffset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleOffset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); }

	'sof' 

{ after(grammarAccess.getScaleOffsetAccess().getSofKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScaleOffset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScaleOffset__Group__1__Impl
	rule__ScaleOffset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleOffset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); }
(rule__ScaleOffset__Arg1Assignment_1)
{ after(grammarAccess.getScaleOffsetAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScaleOffset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScaleOffset__Group__2__Impl
	rule__ScaleOffset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleOffset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getScaleOffsetAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScaleOffset__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScaleOffset__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleOffset__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); }
(rule__ScaleOffset__Arg2Assignment_3)
{ after(grammarAccess.getScaleOffsetAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WriteDelay__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteDelay__Group__0__Impl
	rule__WriteDelay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteDelay__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); }

	'wra' 

{ after(grammarAccess.getWriteDelayAccess().getWraKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteDelay__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteDelay__Group__1__Impl
	rule__WriteDelay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteDelay__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); }
(rule__WriteDelay__Arg1Assignment_1)
{ after(grammarAccess.getWriteDelayAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteDelay__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteDelay__Group__2__Impl
	rule__WriteDelay__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteDelay__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getWriteDelayAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteDelay__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteDelay__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteDelay__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); }
(rule__WriteDelay__Arg2Assignment_3)
{ after(grammarAccess.getWriteDelayAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WriteAllpass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteAllpass__Group__0__Impl
	rule__WriteAllpass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteAllpass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); }

	'wrap' 

{ after(grammarAccess.getWriteAllpassAccess().getWrapKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteAllpass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteAllpass__Group__1__Impl
	rule__WriteAllpass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteAllpass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); }
(rule__WriteAllpass__Arg1Assignment_1)
{ after(grammarAccess.getWriteAllpassAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteAllpass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteAllpass__Group__2__Impl
	rule__WriteAllpass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteAllpass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getWriteAllpassAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WriteAllpass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WriteAllpass__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteAllpass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); }
(rule__WriteAllpass__Arg2Assignment_3)
{ after(grammarAccess.getWriteAllpassAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReadDelay__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadDelay__Group__0__Impl
	rule__ReadDelay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadDelay__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); }

	'rda' 

{ after(grammarAccess.getReadDelayAccess().getRdaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadDelay__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadDelay__Group__1__Impl
	rule__ReadDelay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadDelay__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); }
(rule__ReadDelay__Arg1Assignment_1)
{ after(grammarAccess.getReadDelayAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadDelay__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadDelay__Group__2__Impl
	rule__ReadDelay__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadDelay__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getReadDelayAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadDelay__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadDelay__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadDelay__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); }
(rule__ReadDelay__Arg2Assignment_3)
{ after(grammarAccess.getReadDelayAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LoadSinLFO__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadSinLFO__Group__0__Impl
	rule__LoadSinLFO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadSinLFO__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); }

	'wlds' 

{ after(grammarAccess.getLoadSinLFOAccess().getWldsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadSinLFO__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadSinLFO__Group__1__Impl
	rule__LoadSinLFO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadSinLFO__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); }
(rule__LoadSinLFO__Arg1Assignment_1)
{ after(grammarAccess.getLoadSinLFOAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadSinLFO__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadSinLFO__Group__2__Impl
	rule__LoadSinLFO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadSinLFO__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadSinLFO__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadSinLFO__Group__3__Impl
	rule__LoadSinLFO__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadSinLFO__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); }
(rule__LoadSinLFO__Arg2Assignment_3)
{ after(grammarAccess.getLoadSinLFOAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadSinLFO__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadSinLFO__Group__4__Impl
	rule__LoadSinLFO__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadSinLFO__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getLoadSinLFOAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadSinLFO__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadSinLFO__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadSinLFO__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); }
(rule__LoadSinLFO__Arg3Assignment_5)
{ after(grammarAccess.getLoadSinLFOAccess().getArg3Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LoadRampLFO__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadRampLFO__Group__0__Impl
	rule__LoadRampLFO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadRampLFO__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); }

	'wldr' 

{ after(grammarAccess.getLoadRampLFOAccess().getWldrKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadRampLFO__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadRampLFO__Group__1__Impl
	rule__LoadRampLFO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadRampLFO__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); }
(rule__LoadRampLFO__Arg1Assignment_1)
{ after(grammarAccess.getLoadRampLFOAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadRampLFO__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadRampLFO__Group__2__Impl
	rule__LoadRampLFO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadRampLFO__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadRampLFO__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadRampLFO__Group__3__Impl
	rule__LoadRampLFO__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadRampLFO__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); }
(rule__LoadRampLFO__Arg2Assignment_3)
{ after(grammarAccess.getLoadRampLFOAccess().getArg2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadRampLFO__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadRampLFO__Group__4__Impl
	rule__LoadRampLFO__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadRampLFO__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getLoadRampLFOAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadRampLFO__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadRampLFO__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadRampLFO__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); }
(rule__LoadRampLFO__Arg3Assignment_5)
{ after(grammarAccess.getLoadRampLFOAccess().getArg3Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ChorusReadDelay__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadDelay__Group__0__Impl
	rule__ChorusReadDelay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); }

	'cho rda' 

{ after(grammarAccess.getChorusReadDelayAccess().getChoRdaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusReadDelay__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadDelay__Group__1__Impl
	rule__ChorusReadDelay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusReadDelay__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadDelay__Group__2__Impl
	rule__ChorusReadDelay__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); }
(rule__ChorusReadDelay__Arg1Assignment_2)
{ after(grammarAccess.getChorusReadDelayAccess().getArg1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusReadDelay__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadDelay__Group__3__Impl
	rule__ChorusReadDelay__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusReadDelay__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadDelay__Group__4__Impl
	rule__ChorusReadDelay__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); }
(rule__ChorusReadDelay__Arg2Assignment_4)
{ after(grammarAccess.getChorusReadDelayAccess().getArg2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusReadDelay__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadDelay__Group__5__Impl
	rule__ChorusReadDelay__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getChorusReadDelayAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusReadDelay__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadDelay__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); }
(rule__ChorusReadDelay__Arg3Assignment_6)
{ after(grammarAccess.getChorusReadDelayAccess().getArg3Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ChorusReadValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadValue__Group__0__Impl
	rule__ChorusReadValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); }

	'cho rdal' 

{ after(grammarAccess.getChorusReadValueAccess().getChoRdalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusReadValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadValue__Group__1__Impl
	rule__ChorusReadValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getChorusReadValueAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusReadValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusReadValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); }
(rule__ChorusReadValue__Arg1Assignment_2)
{ after(grammarAccess.getChorusReadValueAccess().getArg1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ChorusScaleOffset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusScaleOffset__Group__0__Impl
	rule__ChorusScaleOffset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); }

	'cho sof' 

{ after(grammarAccess.getChorusScaleOffsetAccess().getChoSofKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusScaleOffset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusScaleOffset__Group__1__Impl
	rule__ChorusScaleOffset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusScaleOffset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusScaleOffset__Group__2__Impl
	rule__ChorusScaleOffset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); }
(rule__ChorusScaleOffset__Arg1Assignment_2)
{ after(grammarAccess.getChorusScaleOffsetAccess().getArg1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusScaleOffset__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusScaleOffset__Group__3__Impl
	rule__ChorusScaleOffset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusScaleOffset__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusScaleOffset__Group__4__Impl
	rule__ChorusScaleOffset__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); }
(rule__ChorusScaleOffset__Arg2Assignment_4)
{ after(grammarAccess.getChorusScaleOffsetAccess().getArg2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusScaleOffset__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusScaleOffset__Group__5__Impl
	rule__ChorusScaleOffset__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getChorusScaleOffsetAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChorusScaleOffset__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChorusScaleOffset__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); }
(rule__ChorusScaleOffset__Arg3Assignment_6)
{ after(grammarAccess.getChorusScaleOffsetAccess().getArg3Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ReadDelayPointer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadDelayPointer__Group__0__Impl
	rule__ReadDelayPointer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadDelayPointer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); }

	'rmpa' 

{ after(grammarAccess.getReadDelayPointerAccess().getRmpaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadDelayPointer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadDelayPointer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadDelayPointer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); }
(rule__ReadDelayPointer__Arg1Assignment_1)
{ after(grammarAccess.getReadDelayPointerAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAndKeyword_0()); }

	'and' 

{ after(grammarAccess.getAndAccess().getAndKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getArg1Assignment_1()); }
(rule__And__Arg1Assignment_1)
{ after(grammarAccess.getAndAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOrKeyword_0()); }

	'or' 

{ after(grammarAccess.getOrAccess().getOrKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getArg1Assignment_1()); }
(rule__Or__Arg1Assignment_1)
{ after(grammarAccess.getOrAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Xor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Xor__Group__0__Impl
	rule__Xor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorAccess().getXorKeyword_0()); }

	'xor' 

{ after(grammarAccess.getXorAccess().getXorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Xor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Xor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorAccess().getArg1Assignment_1()); }
(rule__Xor__Arg1Assignment_1)
{ after(grammarAccess.getXorAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jam__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jam__Group__0__Impl
	rule__Jam__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jam__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJamAccess().getJamKeyword_0()); }

	'jam' 

{ after(grammarAccess.getJamAccess().getJamKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jam__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jam__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jam__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJamAccess().getArg1Assignment_1()); }
(rule__Jam__Arg1Assignment_1)
{ after(grammarAccess.getJamAccess().getArg1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Clr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clr__Group__0__Impl
	rule__Clr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClrAccess().getClrAction_0()); }
(

)
{ after(grammarAccess.getClrAccess().getClrAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClrAccess().getClrKeyword_1()); }

	'clr' 

{ after(grammarAccess.getClrAccess().getClrKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Not__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group__0__Impl
	rule__Not__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getNotAction_0()); }
(

)
{ after(grammarAccess.getNotAccess().getNotAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getNotKeyword_1()); }

	'not' 

{ after(grammarAccess.getNotAccess().getNotKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Absa__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Absa__Group__0__Impl
	rule__Absa__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Absa__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbsaAccess().getAbsaAction_0()); }
(

)
{ after(grammarAccess.getAbsaAccess().getAbsaAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Absa__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Absa__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Absa__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); }

	'absa' 

{ after(grammarAccess.getAbsaAccess().getAbsaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Skip__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Skip__Group__0__Impl
	rule__Skip__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipAccess().getSkpKeyword_0()); }

	'skp' 

{ after(grammarAccess.getSkipAccess().getSkpKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Skip__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Skip__Group__1__Impl
	rule__Skip__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipAccess().getFlagsAssignment_1()); }
(rule__Skip__FlagsAssignment_1)
{ after(grammarAccess.getSkipAccess().getFlagsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Skip__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Skip__Group__2__Impl
	rule__Skip__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getSkipAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Skip__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Skip__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipAccess().getLabelAssignment_3()); }
(rule__Skip__LabelAssignment_3)
{ after(grammarAccess.getSkipAccess().getLabelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SPINDOUBLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINDOUBLE__Group__0__Impl
	rule__SPINDOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINDOUBLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getSPINDOUBLEAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SPINDOUBLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINDOUBLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINDOUBLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); }
(rule__SPINDOUBLE__Alternatives_1)
{ after(grammarAccess.getSPINDOUBLEAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SPINDOUBLE__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINDOUBLE__Group_1_1__0__Impl
	rule__SPINDOUBLE__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINDOUBLE__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); }
	RULE_INT
{ after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SPINDOUBLE__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINDOUBLE__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINDOUBLE__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); }
(rule__SPINDOUBLE__Group_1_1_1__0)?
{ after(grammarAccess.getSPINDOUBLEAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SPINDOUBLE__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINDOUBLE__Group_1_1_1__0__Impl
	rule__SPINDOUBLE__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINDOUBLE__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); }

	'.' 

{ after(grammarAccess.getSPINDOUBLEAccess().getFullStopKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SPINDOUBLE__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINDOUBLE__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINDOUBLE__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); }
	RULE_INT
{ after(grammarAccess.getSPINDOUBLEAccess().getINTTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SPINCHOREGFLAGS__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINCHOREGFLAGS__Group_1__0__Impl
	rule__SPINCHOREGFLAGS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINCHOREGFLAGS__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SPINCHOREGFLAGS__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINCHOREGFLAGS__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINCHOREGFLAGS__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); }
(rule__SPINCHOREGFLAGS__Group_1_1__0)*
{ after(grammarAccess.getSPINCHOREGFLAGSAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SPINCHOREGFLAGS__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINCHOREGFLAGS__Group_1_1__0__Impl
	rule__SPINCHOREGFLAGS__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINCHOREGFLAGS__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); }

	'|' 

{ after(grammarAccess.getSPINCHOREGFLAGSAccess().getVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SPINCHOREGFLAGS__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINCHOREGFLAGS__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINCHOREGFLAGS__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); }
	RULE_ID
{ after(grammarAccess.getSPINCHOREGFLAGSAccess().getIDTerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SPINMEM__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINMEM__Group__0__Impl
	rule__SPINMEM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINMEM__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); }
(rule__SPINMEM__BufferAssignment_0)
{ after(grammarAccess.getSPINMEMAccess().getBufferAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SPINMEM__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINMEM__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINMEM__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINMEMAccess().getAlternatives_1()); }
(rule__SPINMEM__Alternatives_1)?
{ after(grammarAccess.getSPINMEMAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SPINBUF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINBUF__Group__0__Impl
	rule__SPINBUF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINBUF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getSPINBUFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SPINBUF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINBUF__Group__1__Impl
	rule__SPINBUF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINBUF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINBUFAccess().getAlternatives_1()); }
(rule__SPINBUF__Alternatives_1)?
{ after(grammarAccess.getSPINBUFAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SPINBUF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SPINBUF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SPINBUF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINBUFAccess().getAlternatives_2()); }
(rule__SPINBUF__Alternatives_2)?
{ after(grammarAccess.getSPINBUFAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BINARY24__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BINARY24__Group_0__0__Impl
	rule__BINARY24__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY24__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARY24Access().getGroup_0_0()); }
(rule__BINARY24__Group_0_0__0)
{ after(grammarAccess.getBINARY24Access().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BINARY24__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BINARY24__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY24__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); }
(	RULE_ID)*
{ after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BINARY24__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BINARY24__Group_0_0__0__Impl
	rule__BINARY24__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY24__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); }

	'%' 

{ after(grammarAccess.getBINARY24Access().getPercentSignKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BINARY24__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BINARY24__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY24__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); }
	RULE_INT
{ after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BINARY24__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BINARY24__Group_1__0__Impl
	rule__BINARY24__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY24__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); }

	'$' 

{ after(grammarAccess.getBINARY24Access().getDollarSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BINARY24__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BINARY24__Group_1__1__Impl
	rule__BINARY24__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY24__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); }
(	RULE_INT)*
{ after(grammarAccess.getBINARY24Access().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BINARY24__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BINARY24__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY24__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); }
(	RULE_ID)*
{ after(grammarAccess.getBINARY24Access().getIDTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Program__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__PinsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); }
	rulePin{ after(grammarAccess.getProgramAccess().getPinsPinParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_3_0()); }
	ruleSpinElement{ after(grammarAccess.getProgramAccess().getElementsSpinElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AudioInput__VarNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAudioInputAccess().getVarNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AudioInput__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAudioInputAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AudioOutput__VarNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAudioOutputAccess().getVarNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AudioOutput__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAudioOutputAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlInput__VarNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getControlInputAccess().getVarNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlInput__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getControlInputAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlOutput__VarNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getControlOutputAccess().getVarNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlOutput__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getControlOutputAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinEquate__EnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinEquateAccess().getEnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSpinEquateAccess().getEnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinEquate__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getSpinEquateAccess().getValueSPINDOUBLEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinInt__EnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinIntAccess().getEnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSpinIntAccess().getEnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinInt__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinIntAccess().getValueINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getSpinIntAccess().getValueINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mem__BufferAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMemAccess().getBufferIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mem__LengthAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getMemAccess().getLengthSPINREGISTERParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Offset__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOffsetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Offset__LengthAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getOffsetAccess().getLengthINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinBool__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinBoolAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSpinBoolAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinBool__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinBoolAccess().getValueBOOLEANParserRuleCall_2_0()); }
	ruleBOOLEAN{ after(grammarAccess.getSpinBoolAccess().getValueBOOLEANParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__EnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getEnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSpinSliderLabelAccess().getEnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__ControlNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getControlNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSpinSliderLabelAccess().getControlNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__MinValAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getMinValSPINDOUBLEParserRuleCall_3_0_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getSpinSliderLabelAccess().getMinValSPINDOUBLEParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__MaxValAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getMaxValSPINDOUBLEParserRuleCall_3_1_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getSpinSliderLabelAccess().getMaxValSPINDOUBLEParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__InitValAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getInitValSPINDOUBLEParserRuleCall_3_2_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getSpinSliderLabelAccess().getInitValSPINDOUBLEParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__MultiplierAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getMultiplierSPINDOUBLEParserRuleCall_3_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getSpinSliderLabelAccess().getMultiplierSPINDOUBLEParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__PrecisionAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getPrecisionINTTerminalRuleCall_3_4_0()); }
	RULE_INT{ after(grammarAccess.getSpinSliderLabelAccess().getPrecisionINTTerminalRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinSliderLabel__OptionAssignment_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinSliderLabelAccess().getOptionIDTerminalRuleCall_3_5_0()); }
	RULE_ID{ after(grammarAccess.getSpinSliderLabelAccess().getOptionIDTerminalRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinCheckBox__EnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinCheckBoxAccess().getEnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSpinCheckBoxAccess().getEnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpinCheckBox__ControlNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpinCheckBoxAccess().getControlNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSpinCheckBoxAccess().getControlNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__RemarkAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); }
	RULE_SC_COMMENT{ after(grammarAccess.getCommentAccess().getRemarkSC_COMMENTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsPinConnected__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIsPinConnectedAccess().getArg1IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsTrue__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTrueAccess().getVariableIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIsTrueAccess().getVariableIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetInputDefault__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGetInputDefaultAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetInputDefault__VariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getGetInputDefaultAccess().getVariableIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetInputDefault__ScaleAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getGetInputDefaultAccess().getScaleSPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetInputDefault__DefaultValAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getGetInputDefaultAccess().getDefaultValSPINDOUBLEParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetDelayScaleControl__RatioAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getRatioIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGetDelayScaleControlAccess().getRatioIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetDelayScaleControl__LengthAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getLengthIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getGetDelayScaleControlAccess().getLengthIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetDelayScaleControl__OffsetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getOffsetIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getGetDelayScaleControlAccess().getOffsetIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetDelayScaleControl__ControlAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetDelayScaleControlAccess().getControlIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getGetDelayScaleControlAccess().getControlIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetSamplesFromRatio__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetSamplesFromRatioAccess().getVariableIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGetSamplesFromRatioAccess().getVariableIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetSamplesFromRatio__RatioAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetSamplesFromRatioAccess().getRatioSPINDOUBLEParserRuleCall_2_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getGetSamplesFromRatioAccess().getRatioSPINDOUBLEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetSamplesFromRatio__LengthAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetSamplesFromRatioAccess().getLengthSPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getGetSamplesFromRatioAccess().getLengthSPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetOutputPin__PinNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetOutputPinAccess().getPinNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSetOutputPinAccess().getPinNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetOutputPin__VarNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetOutputPinAccess().getVarNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSetOutputPinAccess().getVarNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegister__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getReadRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegister__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getReadRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterLowshelf__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getWriteRegisterLowshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterLowshelf__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getWriteRegisterLowshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterHighshelf__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getWriteRegisterHighshelfAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegisterHighshelf__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getWriteRegisterHighshelfAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegister__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getWriteRegisterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteRegister__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getWriteRegisterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Maxx__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getMaxxAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Maxx__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getMaxxAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegisterFilter__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getReadRegisterFilterAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadRegisterFilter__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getReadRegisterFilterAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mulx__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMulxAccess().getArg1IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ldax__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLdaxAccess().getArg1IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getExpAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getExpAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getLogAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getLogAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleOffset__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getScaleOffsetAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleOffset__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getScaleOffsetAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteDelay__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); }
	ruleSPINMEM{ after(grammarAccess.getWriteDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteDelay__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getWriteDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteAllpass__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); }
	ruleSPINMEM{ after(grammarAccess.getWriteAllpassAccess().getArg1SPINMEMParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WriteAllpass__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getWriteAllpassAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadDelay__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); }
	ruleSPINMEM{ after(grammarAccess.getReadDelayAccess().getArg1SPINMEMParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadDelay__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getReadDelayAccess().getArg2SPINDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadSinLFO__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getLoadSinLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadSinLFO__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getLoadSinLFOAccess().getArg2INTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadSinLFO__Arg3Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getLoadSinLFOAccess().getArg3INTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadRampLFO__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getLoadRampLFOAccess().getArg1SPINREGISTERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadRampLFO__Arg2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getLoadRampLFOAccess().getArg2INTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadRampLFO__Arg3Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getLoadRampLFOAccess().getArg3INTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Arg1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getChorusReadDelayAccess().getArg1SPINREGISTERParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Arg2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); }
	ruleSPINCHOREGFLAGS{ after(grammarAccess.getChorusReadDelayAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadDelay__Arg3Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); }
	ruleSPINMEM{ after(grammarAccess.getChorusReadDelayAccess().getArg3SPINMEMParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusReadValue__Arg1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); }
	ruleSPINREGISTER{ after(grammarAccess.getChorusReadValueAccess().getArg1SPINREGISTERParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Arg1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getChorusScaleOffsetAccess().getArg1IDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Arg2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); }
	ruleSPINCHOREGFLAGS{ after(grammarAccess.getChorusScaleOffsetAccess().getArg2SPINCHOREGFLAGSParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChorusScaleOffset__Arg3Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getChorusScaleOffsetAccess().getArg3SPINDOUBLEParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadDelayPointer__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); }
	ruleSPINDOUBLE{ after(grammarAccess.getReadDelayPointerAccess().getArg1SPINDOUBLEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); }
	ruleBINARY24{ after(grammarAccess.getAndAccess().getArg1BINARY24ParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); }
	ruleBINARY24{ after(grammarAccess.getOrAccess().getArg1BINARY24ParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); }
	ruleBINARY24{ after(grammarAccess.getXorAccess().getArg1BINARY24ParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jam__Arg1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getJamAccess().getArg1IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__FlagsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSkipAccess().getFlagsIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Skip__LabelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); }
(
{ before(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getSkipAccess().getLabelLabelIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getSkipAccess().getLabelLabelCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SPINMEM__BufferAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); }
	ruleSPINBUF{ after(grammarAccess.getSPINMEMAccess().getBufferSPINBUFParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SPINMEM__ValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); }
	RULE_INT{ after(grammarAccess.getSPINMEMAccess().getValueINTTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SPINMEM__OffsetAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); }
(
{ before(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSPINMEMAccess().getOffsetOffsetIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getSPINMEMAccess().getOffsetOffsetCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SC_COMMENT : ';' ~(('\n'|'\r'))* '\r'? '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


